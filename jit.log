<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='3352' time_ms='1600320483034'>
<vm_version>
<name>
Java HotSpot(TM) 64-Bit Server VM
</name>
<release>
25.152-b16
</release>
<info>
Java HotSpot(TM) 64-Bit Server VM (25.152-b16) for windows-amd64 JRE (1.8.0_152-b16), built on Sep 14 2017 02:29:36 by &quot;java_re&quot; with MS VC++ 10.0 (VS2010)
</info>
</vm_version>
<vm_arguments>
<args>
-XX:+UnlockDiagnosticVMOptions -XX:+PrintAssembly -XX:+LogCompilation -XX:LogFile=jit.log -javaagent:D:\idea2020\IntelliJ IDEA 2020.1\lib\idea_rt.jar=50745:D:\idea2020\IntelliJ IDEA 2020.1\bin -Dfile.encoding=UTF-8 
</args>
<command>
com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=25.152-b16
java.vm.name=Java HotSpot(TM) 64-Bit Server VM
java.vm.info=mixed mode, sharing
java.ext.dirs=D:\Java\jdk1.8.0_152\jre\lib\ext;C:\Windows\Sun\Java\lib\ext
java.endorsed.dirs=D:\Java\jdk1.8.0_152\jre\lib\endorsed
sun.boot.library.path=D:\Java\jdk1.8.0_152\jre\bin
java.library.path=D:\Java\jdk1.8.0_152\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\jdk1.8.0_152\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Python2.7.18;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\¿‰œ˛”Ó\AppData\Local\Microsoft\WindowsApps;;D:\idea2020\IntelliJ IDEA 2020.1\bin;;.
java.home=D:\Java\jdk1.8.0_152\jre
java.class.path=D:\Java\jdk1.8.0_152\jre\lib\charsets.jar;D:\Java\jdk1.8.0_152\jre\lib\deploy.jar;D:\Java\jdk1.8.0_152\jre\lib\ext\access-bridge-64.jar;D:\Java\jdk1.8.0_152\jre\lib\ext\cldrdata.jar;D:\Java\jdk1.8.0_152\jre\lib\ext\dnsns.jar;D:\Java\jdk1.8.0_152\jre\lib\ext\jaccess.jar;D:\Java\jdk1.8.0_152\jre\lib\ext\jfxrt.jar;D:\Java\jdk1.8.0_152\jre\lib\ext\localedata.jar;D:\Java\jdk1.8.0_152\jre\lib\ext\nashorn.jar;D:\Java\jdk1.8.0_152\jre\lib\ext\sunec.jar;D:\Java\jdk1.8.0_152\jre\lib\ext\sunjce_provider.jar;D:\Java\jdk1.8.0_152\jre\lib\ext\sunmscapi.jar;D:\Java\jdk1.8.0_152\jre\lib\ext\sunpkcs11.jar;D:\Java\jdk1.8.0_152\jre\lib\ext\zipfs.jar;D:\Java\jdk1.8.0_152\jre\lib\javaws.jar;D:\Java\jdk1.8.0_152\jre\lib\jce.jar;D:\Java\jdk1.8.0_152\jre\lib\jfr.jar;D:\Java\jdk1.8.0_152\jre\lib\jfxswt.jar;D:\Java\jdk1.8.0_152\jre\lib\jsse.jar;D:\Java\jdk1.8.0_152\jre\lib\management-agent.jar;D:\Java\jdk1.8.0_152\jre\lib\plugin.jar;D:\Java\jdk1.8.0_152\jre\lib\resources.jar;D:\Java\jdk1.8.0_152\jre\lib\rt.jar;D:\idea-sprongcloud\auth\authentication-server\target\classes;D:\idea-sprongcloud\common\web\target\classes;D:\idea-sprongcloud\common\core\target\classes;C:\Users\¿‰œ˛”Ó\.m2\repository\org\springframework\spring-web\5.1.11.RELEASE\spring-web-5.1.11.RELEASE.jar;C:\Users\¿‰œ˛”Ó\.m2\repository\org\springframework\spring-webmvc\5.1.11.RELEASE\spring-webmvc-5.1.11.RELEASE.jar;C:\Users\¿‰œ˛”Ó\.m2\repository\org\springframework\spring-aop\5.1.11.RELEASE\spring-aop-5.1.11.RELEASE.jar;C:\Users\¿‰œ˛”Ó\.m2\repository\org\springframework\spring-expression\5.1.11.RELEASE\spring-expression-5.1.11.RELEASE.jar;C:\Users\¿‰œ˛”Ó\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.10.1\jackson-databind-2.9.10.1.jar;C:\Users\¿‰œ˛”Ó\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.10\jackson-annotations-2.9.10.jar;C:\Users\¿‰œ˛”Ó\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.10\jackson-core-2.9.10.jar;C:\Users\¿‰œ˛”Ó\.m2\repository\com\baomidou\myb
sun.boot.class.path=D:\Java\jdk1.8.0_152\jre\lib\resources.jar;D:\Java\jdk1.8.0_152\jre\lib\rt.jar;D:\Java\jdk1.8.0_152\jre\lib\sunrsasign.jar;D:\Java\jdk1.8.0_152\jre\lib\jsse.jar;D:\Java\jdk1.8.0_152\jre\lib\jce.jar;D:\Java\jdk1.8.0_152\jre\lib\charsets.jar;D:\Java\jdk1.8.0_152\jre\lib\jfr.jar;D:\Java\jdk1.8.0_152\jre\classes
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=1.8
java.vm.vendor=Oracle Corporation
file.encoding=UTF-8
sun.java.command=com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo
sun.java.launcher=SUN_STANDARD
</properties>
</vm_arguments>
<tty>
<writer thread='16772'/>
<task_queued compile_id='1' method='sun/instrument/TransformerManager getSnapshotTransformerList ()[Lsun/instrument/TransformerManager$TransformerInfo;' bytes='5' count='128' iicount='128' level='1' stamp='0.677' comment='tiered' hot_count='128'/>
<task_queued compile_id='2' method='java/lang/Math min (II)I' bytes='11' count='16256' iicount='16256' stamp='0.677' comment='tiered' hot_count='16256'/>
<writer thread='7332'/>
<thread_logfile thread='7332' filename='C:\Users\¿‰œ˛”Ó\AppData\Local\Temp\\hs_c7332_pid3352.log'/>
<writer thread='19284'/>
<thread_logfile thread='19284' filename='C:\Users\¿‰œ˛”Ó\AppData\Local\Temp\\hs_c19284_pid3352.log'/>
<writer thread='16536'/>
<thread_logfile thread='16536' filename='C:\Users\¿‰œ˛”Ó\AppData\Local\Temp\\hs_c16536_pid3352.log'/>
<writer thread='10060'/>
<thread_logfile thread='10060' filename='C:\Users\¿‰œ˛”Ó\AppData\Local\Temp\\hs_c10060_pid3352.log'/>
<writer thread='16772'/>
<task_queued compile_id='3' method='java/lang/String charAt (I)C' bytes='29' count='317056' iicount='317056' stamp='0.678' comment='tiered' hot_count='317056'/>
<task_queued compile_id='4' method='java/lang/String hashCode ()I' bytes='55' count='5106' backedge_count='126168' iicount='5106' stamp='0.678' comment='tiered' hot_count='5106'/>
<task_queued compile_id='5' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='624' backedge_count='57344' iicount='624' level='3' stamp='0.678' comment='tiered' hot_count='624'/>
<task_queued compile_id='6' method='java/nio/ByteBuffer arrayOffset ()I' bytes='35' count='1536' iicount='1536' level='3' stamp='0.678' comment='tiered' hot_count='1536'/>
<writer thread='7332'/>
Loaded disassembler from D:\Java\jdk1.8.0_152\jre\bin\server\hsdis-amd64.dll
Decoding compiled method 0x0000000003694b10:
Code:
[Disassembling for mach=&apos;i386:x86-64&apos;]
[Entry Point]
[Constants]
  # {method} {0x000000001c68a748} &apos;getSnapshotTransformerList&apos; &apos;()[Lsun/instrument/TransformerManager$TransformerInfo;&apos; in &apos;sun/instrument/TransformerManager&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000003694c60: mov    0x8(%rdx),%r10d
  0x0000000003694c64: shl    $0x3,%r10
  0x0000000003694c68: cmp    %rax,%r10
  0x0000000003694c6b: jne    0x00000000035d5f60  ;   {runtime_call}
  0x0000000003694c71: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000003694c7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000003694c80: mov    %eax,-0x6000(%rsp)
  0x0000000003694c87: push   %rbp
  0x0000000003694c88: sub    $0x30,%rsp         ;*aload_0
                                                ; - sun.instrument.TransformerManager::getSnapshotTransformerList@0 (line 166)

  0x0000000003694c8c: mov    0x10(%rdx),%eax
  0x0000000003694c8f: shl    $0x3,%rax          ;*getfield mTransformerList
                                                ; - sun.instrument.TransformerManager::getSnapshotTransformerList@1 (line 166)

  0x0000000003694c93: add    $0x30,%rsp
  0x0000000003694c97: pop    %rbp
  0x0000000003694c98: test   %eax,-0x20a4b9e(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x0000000003694c9e: retq   
  0x0000000003694c9f: nop
  0x0000000003694ca0: nop
  0x0000000003694ca1: mov    0x2a8(%r15),%rax
  0x0000000003694ca8: movabs $0x0,%r10
  0x0000000003694cb2: mov    %r10,0x2a8(%r15)
  0x0000000003694cb9: movabs $0x0,%r10
  0x0000000003694cc3: mov    %r10,0x2b0(%r15)
  0x0000000003694cca: add    $0x30,%rsp
  0x0000000003694cce: pop    %rbp
  0x0000000003694ccf: jmpq   0x000000000368c620  ;   {runtime_call}
  0x0000000003694cd4: hlt    
  0x0000000003694cd5: hlt    
  0x0000000003694cd6: hlt    
  0x0000000003694cd7: hlt    
  0x0000000003694cd8: hlt    
  0x0000000003694cd9: hlt    
  0x0000000003694cda: hlt    
  0x0000000003694cdb: hlt    
  0x0000000003694cdc: hlt    
  0x0000000003694cdd: hlt    
  0x0000000003694cde: hlt    
  0x0000000003694cdf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000003694ce0: callq  0x000000000368f1a0  ;   {no_reloc}
  0x0000000003694ce5: mov    %rsp,-0x28(%rsp)
  0x0000000003694cea: sub    $0x80,%rsp
  0x0000000003694cf1: mov    %rax,0x78(%rsp)
  0x0000000003694cf6: mov    %rcx,0x70(%rsp)
  0x0000000003694cfb: mov    %rdx,0x68(%rsp)
  0x0000000003694d00: mov    %rbx,0x60(%rsp)
  0x0000000003694d05: mov    %rbp,0x50(%rsp)
  0x0000000003694d0a: mov    %rsi,0x48(%rsp)
  0x0000000003694d0f: mov    %rdi,0x40(%rsp)
  0x0000000003694d14: mov    %r8,0x38(%rsp)
  0x0000000003694d19: mov    %r9,0x30(%rsp)
  0x0000000003694d1e: mov    %r10,0x28(%rsp)
  0x0000000003694d23: mov    %r11,0x20(%rsp)
  0x0000000003694d28: mov    %r12,0x18(%rsp)
  0x0000000003694d2d: mov    %r13,0x10(%rsp)
  0x0000000003694d32: mov    %r14,0x8(%rsp)
  0x0000000003694d37: mov    %r15,(%rsp)
  0x0000000003694d3b: movabs $0x553ec320,%rcx   ;   {external_word}
  0x0000000003694d45: movabs $0x3694ce5,%rdx    ;   {internal_word}
  0x0000000003694d4f: mov    %rsp,%r8
  0x0000000003694d52: and    $0xfffffffffffffff0,%rsp
  0x0000000003694d56: callq  0x00000000550a41d0  ;   {runtime_call}
  0x0000000003694d5b: hlt    
[Deopt Handler Code]
  0x0000000003694d5c: movabs $0x3694d5c,%r10    ;   {section_word}
  0x0000000003694d66: push   %r10
  0x0000000003694d68: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x0000000003694d6d: hlt    
  0x0000000003694d6e: hlt    
  0x0000000003694d6f: hlt    
<nmethod compile_id='1' compiler='C1' level='1' entry='0x0000000003694c60' size='704' address='0x0000000003694b10' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='sun/instrument/TransformerManager getSnapshotTransformerList ()[Lsun/instrument/TransformerManager$TransformerInfo;' bytes='5' count='141' iicount='141' stamp='0.683'/>
<writer thread='16772'/>
<task_queued compile_id='7' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='41984' backedge_count='15918' iicount='41984' stamp='0.683' comment='tiered' hot_count='41984'/>
<task_queued compile_id='8' method='sun/nio/cs/ext/DoubleByte$Encoder encodeChar (C)I' bytes='21' count='25472' iicount='25472' stamp='0.683' comment='tiered' hot_count='25472'/>
<writer thread='7332'/>
Decoding compiled method 0x0000000003692650:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001c4957a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    r8        = int
  # parm2:    r9        = int
  # parm3:    rdi:rdi   = &apos;[C&apos;
  # parm4:    rsi       = int
  # parm5:    rcx       = int
  # parm6:    [sp+0x50]   = int  (sp of caller)
  0x0000000003692800: mov    %eax,-0x6000(%rsp)
  0x0000000003692807: push   %rbp
  0x0000000003692808: sub    $0x40,%rsp
  0x000000000369280c: mov    %r8d,0x20(%rsp)
  0x0000000003692811: mov    %esi,0x24(%rsp)
  0x0000000003692815: movabs $0x1c67e398,%rax   ;   {metadata(method data for {method} {0x000000001c4957a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000000000369281f: mov    0xdc(%rax),%ebx
  0x0000000003692825: add    $0x8,%ebx
  0x0000000003692828: mov    %ebx,0xdc(%rax)
  0x000000000369282e: movabs $0x1c495798,%rax   ;   {metadata({method} {0x000000001c4957a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003692838: and    $0x1ff8,%ebx
  0x000000000369283e: cmp    $0x0,%ebx
  0x0000000003692841: je     0x0000000003692cde  ;*iload
                                                ; - java.lang.String::indexOf@0 (line 1756)

  0x0000000003692847: mov    0x50(%rsp),%eax
  0x000000000369284b: cmp    %r9d,%eax
  0x000000000369284e: movabs $0x1c67e398,%rbx   ;   {metadata(method data for {method} {0x000000001c4957a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003692858: movabs $0x108,%r11
  0x0000000003692862: jl     0x0000000003692872
  0x0000000003692868: movabs $0x118,%r11
  0x0000000003692872: mov    (%rbx,%r11,1),%r13
  0x0000000003692876: lea    0x1(%r13),%r13
  0x000000000369287a: mov    %r13,(%rbx,%r11,1)
  0x000000000369287e: jl     0x00000000036928c2  ;*if_icmplt
                                                ; - java.lang.String::indexOf@3 (line 1756)

  0x0000000003692884: cmp    $0x0,%ecx
  0x0000000003692887: movabs $0x1c67e398,%rax   ;   {metadata(method data for {method} {0x000000001c4957a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003692891: movabs $0x128,%rsi
  0x000000000369289b: jne    0x00000000036928ab
  0x00000000036928a1: movabs $0x138,%rsi
  0x00000000036928ab: mov    (%rax,%rsi,1),%rdi
  0x00000000036928af: lea    0x1(%rdi),%rdi
  0x00000000036928b3: mov    %rdi,(%rax,%rsi,1)
  0x00000000036928b7: jne    0x0000000003692cc9
  0x00000000036928bd: jmpq   0x0000000003692cb4  ;*ifne
                                                ; - java.lang.String::indexOf@8 (line 1757)

  0x00000000036928c2: cmp    $0x0,%eax
  0x00000000036928c5: movabs $0x1c67e398,%rbx   ;   {metadata(method data for {method} {0x000000001c4957a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000036928cf: movabs $0x160,%r11
  0x00000000036928d9: jge    0x00000000036928e9
  0x00000000036928df: movabs $0x170,%r11
  0x00000000036928e9: mov    (%rbx,%r11,1),%r13
  0x00000000036928ed: lea    0x1(%r13),%r13
  0x00000000036928f1: mov    %r13,(%rbx,%r11,1)
  0x00000000036928f5: jge    0x0000000003692900  ;*ifge
                                                ; - java.lang.String::indexOf@19 (line 1759)

  0x00000000036928fb: mov    $0x0,%eax          ;*iload
                                                ; - java.lang.String::indexOf@25 (line 1762)

  0x0000000003692900: cmp    $0x0,%ecx
  0x0000000003692903: movabs $0x1c67e398,%rbx   ;   {metadata(method data for {method} {0x000000001c4957a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000000000369290d: movabs $0x180,%r11
  0x0000000003692917: jne    0x0000000003692927
  0x000000000369291d: movabs $0x190,%r11
  0x0000000003692927: mov    (%rbx,%r11,1),%r13
  0x000000000369292b: lea    0x1(%r13),%r13
  0x000000000369292f: mov    %r13,(%rbx,%r11,1)
  0x0000000003692933: je     0x0000000003692ca8  ;*ifne
                                                ; - java.lang.String::indexOf@27 (line 1762)

  0x0000000003692939: movslq %esi,%rbx
  0x000000000369293c: cmp    0xc(%rdi),%esi     ; implicit exception: dispatches to 0x0000000003692cf5
  0x000000000369293f: jae    0x0000000003692cff
  0x0000000003692945: movzwl 0x10(%rdi,%rbx,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)

  0x000000000369294a: mov    %ebx,0x28(%rsp)
  0x000000000369294e: sub    %ecx,%r9d
  0x0000000003692951: add    %r8d,%r9d
  0x0000000003692954: add    %r8d,%eax
  0x0000000003692957: nop
  0x0000000003692958: cmp    %r9d,%eax
  0x000000000369295b: movabs $0x1c67e398,%r11   ;   {metadata(method data for {method} {0x000000001c4957a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003692965: movabs $0x1a0,%r13
  0x000000000369296f: jg     0x000000000369297f
  0x0000000003692975: movabs $0x1b0,%r13
  0x000000000369297f: mov    (%r11,%r13,1),%r14
  0x0000000003692983: lea    0x1(%r14),%r14
  0x0000000003692987: mov    %r14,(%r11,%r13,1)
  0x000000000369298b: jg     0x0000000003692c97  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@57 (line 1769)

  0x0000000003692991: movslq %eax,%r11
  0x0000000003692994: cmp    0xc(%rdx),%eax     ; implicit exception: dispatches to 0x0000000003692d08
  0x0000000003692997: jae    0x0000000003692d12
  0x000000000369299d: movzwl 0x10(%rdx,%r11,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)

  0x00000000036929a3: cmp    %ebx,%r11d
  0x00000000036929a6: movabs $0x1c67e398,%r11   ;   {metadata(method data for {method} {0x000000001c4957a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000036929b0: movabs $0x1c0,%r13
  0x00000000036929ba: je     0x00000000036929ca
  0x00000000036929c0: movabs $0x1d0,%r13
  0x00000000036929ca: mov    (%r11,%r13,1),%r14
  0x00000000036929ce: lea    0x1(%r14),%r14
  0x00000000036929d2: mov    %r14,(%r11,%r13,1)
  0x00000000036929d6: je     0x0000000003692abc
  0x00000000036929dc: jmpq   0x0000000003692a81  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@66 (line 1771)

  0x00000000036929e1: nopl   0x0(%rax)
  0x00000000036929e8: movslq %eax,%r11
  0x00000000036929eb: cmp    0xc(%rdx),%eax
  0x00000000036929ee: jae    0x0000000003692d1b
  0x00000000036929f4: movzwl 0x10(%rdx,%r11,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x00000000036929fa: cmp    %ebx,%r11d
  0x00000000036929fd: movabs $0x1c67e398,%r11   ;   {metadata(method data for {method} {0x000000001c4957a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003692a07: movabs $0x200,%r13
  0x0000000003692a11: je     0x0000000003692a21
  0x0000000003692a17: movabs $0x210,%r13
  0x0000000003692a21: mov    (%r11,%r13,1),%r14
  0x0000000003692a25: lea    0x1(%r14),%r14
  0x0000000003692a29: mov    %r14,(%r11,%r13,1)
  0x0000000003692a2d: je     0x0000000003692abc  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x0000000003692a33: movabs $0x1c67e398,%r11   ;   {metadata(method data for {method} {0x000000001c4957a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003692a3d: mov    0xe0(%r11),%r13d
  0x0000000003692a44: add    $0x8,%r13d
  0x0000000003692a48: mov    %r13d,0xe0(%r11)
  0x0000000003692a4f: movabs $0x1c495798,%r11   ;   {metadata({method} {0x000000001c4957a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003692a59: and    $0xfff8,%r13d
  0x0000000003692a60: cmp    $0x0,%r13d
  0x0000000003692a64: je     0x0000000003692d24  ; OopMap{rdi=Oop rdx=Oop off=618}
                                                ;*goto
                                                ; - java.lang.String::indexOf@88 (line 1772)

  0x0000000003692a6a: test   %eax,-0x20a2970(%rip)        # 0x00000000015f0100
                                                ;   {poll}
  0x0000000003692a70: movabs $0x1c67e398,%r11   ;   {metadata(method data for {method} {0x000000001c4957a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003692a7a: incl   0x220(%r11)        ;*goto
                                                ; - java.lang.String::indexOf@88 (line 1772)

  0x0000000003692a81: inc    %eax
  0x0000000003692a83: cmp    %r9d,%eax
  0x0000000003692a86: movabs $0x1c67e398,%r11   ;   {metadata(method data for {method} {0x000000001c4957a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003692a90: movabs $0x1e0,%r13
  0x0000000003692a9a: jg     0x0000000003692aaa
  0x0000000003692aa0: movabs $0x1f0,%r13
  0x0000000003692aaa: mov    (%r11,%r13,1),%r14
  0x0000000003692aae: lea    0x1(%r14),%r14
  0x0000000003692ab2: mov    %r14,(%r11,%r13,1)
  0x0000000003692ab6: jle    0x00000000036929e8  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@76 (line 1772)

  0x0000000003692abc: cmp    %r9d,%eax
  0x0000000003692abf: movabs $0x1c67e398,%r11   ;   {metadata(method data for {method} {0x000000001c4957a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003692ac9: movabs $0x238,%r13
  0x0000000003692ad3: jg     0x0000000003692ae3
  0x0000000003692ad9: movabs $0x248,%r13
  0x0000000003692ae3: mov    (%r11,%r13,1),%r14
  0x0000000003692ae7: lea    0x1(%r14),%r14
  0x0000000003692aeb: mov    %r14,(%r11,%r13,1)
  0x0000000003692aef: jg     0x0000000003692c2c  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@95 (line 1776)

  0x0000000003692af5: mov    %rax,%r11
  0x0000000003692af8: inc    %r11d
  0x0000000003692afb: mov    %r11,%r13
  0x0000000003692afe: add    %ecx,%r13d
  0x0000000003692b01: dec    %r13d
  0x0000000003692b04: mov    %rsi,%r14
  0x0000000003692b07: inc    %r14d
  0x0000000003692b0a: jmpq   0x0000000003692bba  ;*iload
                                                ; - java.lang.String::indexOf@119 (line 1779)

  0x0000000003692b0f: nop
  0x0000000003692b10: movslq %r11d,%rsi
  0x0000000003692b13: cmp    0xc(%rdx),%r11d
  0x0000000003692b17: jae    0x0000000003692d3b
  0x0000000003692b1d: movzwl 0x10(%rdx,%rsi,2),%esi  ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)

  0x0000000003692b22: movslq %r14d,%rbx
  0x0000000003692b25: cmp    0xc(%rdi),%r14d
  0x0000000003692b29: jae    0x0000000003692d44
  0x0000000003692b2f: movzwl 0x10(%rdi,%rbx,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)

  0x0000000003692b34: cmp    %ebx,%esi
  0x0000000003692b36: movabs $0x1c67e398,%rsi   ;   {metadata(method data for {method} {0x000000001c4957a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003692b40: movabs $0x278,%rbx
  0x0000000003692b4a: jne    0x0000000003692b5a
  0x0000000003692b50: movabs $0x288,%rbx
  0x0000000003692b5a: mov    (%rsi,%rbx,1),%r8
  0x0000000003692b5e: lea    0x1(%r8),%r8
  0x0000000003692b62: mov    %r8,(%rsi,%rbx,1)
  0x0000000003692b66: jne    0x0000000003692bf3  ;*if_icmpne
                                                ; - java.lang.String::indexOf@134 (line 1779)

  0x0000000003692b6c: inc    %r11d
  0x0000000003692b6f: inc    %r14d
  0x0000000003692b72: movabs $0x1c67e398,%rsi   ;   {metadata(method data for {method} {0x000000001c4957a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003692b7c: mov    0xe0(%rsi),%ebx
  0x0000000003692b82: add    $0x8,%ebx
  0x0000000003692b85: mov    %ebx,0xe0(%rsi)
  0x0000000003692b8b: movabs $0x1c495798,%rsi   ;   {metadata({method} {0x000000001c4957a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003692b95: and    $0xfff8,%ebx
  0x0000000003692b9b: cmp    $0x0,%ebx
  0x0000000003692b9e: je     0x0000000003692d4d  ; OopMap{rdi=Oop rdx=Oop off=932}
                                                ;*goto
                                                ; - java.lang.String::indexOf@143 (line 1780)

  0x0000000003692ba4: test   %eax,-0x20a2aaa(%rip)        # 0x00000000015f0100
                                                ;   {poll}
  0x0000000003692baa: movabs $0x1c67e398,%rsi   ;   {metadata(method data for {method} {0x000000001c4957a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003692bb4: incl   0x298(%rsi)        ;*goto
                                                ; - java.lang.String::indexOf@143 (line 1780)

  0x0000000003692bba: cmp    %r13d,%r11d
  0x0000000003692bbd: movabs $0x1c67e398,%r8    ;   {metadata(method data for {method} {0x000000001c4957a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003692bc7: movabs $0x258,%rsi
  0x0000000003692bd1: jge    0x0000000003692be1
  0x0000000003692bd7: movabs $0x268,%rsi
  0x0000000003692be1: mov    (%r8,%rsi,1),%rbx
  0x0000000003692be5: lea    0x1(%rbx),%rbx
  0x0000000003692be9: mov    %rbx,(%r8,%rsi,1)
  0x0000000003692bed: jl     0x0000000003692b10  ;*if_icmpge
                                                ; - java.lang.String::indexOf@123 (line 1779)

  0x0000000003692bf3: cmp    %r13d,%r11d
  0x0000000003692bf6: movabs $0x1c67e398,%rsi   ;   {metadata(method data for {method} {0x000000001c4957a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003692c00: movabs $0x2b0,%rbx
  0x0000000003692c0a: jne    0x0000000003692c1a
  0x0000000003692c10: movabs $0x2c0,%rbx
  0x0000000003692c1a: mov    (%rsi,%rbx,1),%r8
  0x0000000003692c1e: lea    0x1(%r8),%r8
  0x0000000003692c22: mov    %r8,(%rsi,%rbx,1)
  0x0000000003692c26: je     0x0000000003692c83  ;*if_icmpne
                                                ; - java.lang.String::indexOf@150 (line 1782)

  0x0000000003692c2c: inc    %eax
  0x0000000003692c2e: movabs $0x1c67e398,%rsi   ;   {metadata(method data for {method} {0x000000001c4957a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003692c38: mov    0xe0(%rsi),%ebx
  0x0000000003692c3e: add    $0x8,%ebx
  0x0000000003692c41: mov    %ebx,0xe0(%rsi)
  0x0000000003692c47: movabs $0x1c495798,%rsi   ;   {metadata({method} {0x000000001c4957a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003692c51: and    $0xfff8,%ebx
  0x0000000003692c57: cmp    $0x0,%ebx
  0x0000000003692c5a: je     0x0000000003692d64  ; OopMap{rdi=Oop rdx=Oop off=1120}
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)

  0x0000000003692c60: test   %eax,-0x20a2b66(%rip)        # 0x00000000015f0100
                                                ;   {poll}
  0x0000000003692c66: movabs $0x1c67e398,%rsi   ;   {metadata(method data for {method} {0x000000001c4957a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003692c70: incl   0x2d0(%rsi)
  0x0000000003692c76: mov    0x28(%rsp),%ebx
  0x0000000003692c7a: mov    0x24(%rsp),%esi
  0x0000000003692c7e: jmpq   0x0000000003692958  ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)

  0x0000000003692c83: mov    0x20(%rsp),%r8d
  0x0000000003692c88: sub    %r8d,%eax
  0x0000000003692c8b: add    $0x40,%rsp
  0x0000000003692c8f: pop    %rbp
  0x0000000003692c90: test   %eax,-0x20a2b96(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x0000000003692c96: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@157 (line 1784)

  0x0000000003692c97: mov    $0xffffffff,%eax
  0x0000000003692c9c: add    $0x40,%rsp
  0x0000000003692ca0: pop    %rbp
  0x0000000003692ca1: test   %eax,-0x20a2ba7(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x0000000003692ca7: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@165 (line 1788)

  0x0000000003692ca8: add    $0x40,%rsp
  0x0000000003692cac: pop    %rbp
  0x0000000003692cad: test   %eax,-0x20a2bb3(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x0000000003692cb3: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@32 (line 1763)

  0x0000000003692cb4: movabs $0x1c67e398,%rax   ;   {metadata(method data for {method} {0x000000001c4957a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000003692cbe: incl   0x148(%rax)
  0x0000000003692cc4: jmpq   0x0000000003692ccf  ;*goto
                                                ; - java.lang.String::indexOf@12 (line 1757)

  0x0000000003692cc9: mov    $0xffffffff,%r9d   ;*ireturn
                                                ; - java.lang.String::indexOf@16 (line 1757)

  0x0000000003692ccf: mov    %r9,%rax
  0x0000000003692cd2: add    $0x40,%rsp
  0x0000000003692cd6: pop    %rbp
  0x0000000003692cd7: test   %eax,-0x20a2bdd(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x0000000003692cdd: retq   
  0x0000000003692cde: mov    %rax,0x8(%rsp)
  0x0000000003692ce3: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003692ceb: callq  0x00000000036919e0  ; OopMap{rdx=Oop rdi=Oop off=1264}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1756)
                                                ;   {runtime_call}
  0x0000000003692cf0: jmpq   0x0000000003692847
  0x0000000003692cf5: callq  0x000000000368d080  ; OopMap{rdi=Oop rdx=Oop off=1274}
                                                ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x0000000003692cfa: callq  0x000000000368d080  ; OopMap{rdi=Oop rdx=Oop off=1279}
                                                ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x0000000003692cff: mov    %rsi,(%rsp)
  0x0000000003692d03: callq  0x000000000368c9c0  ; OopMap{rdi=Oop rdx=Oop off=1288}
                                                ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x0000000003692d08: callq  0x000000000368d080  ; OopMap{rdi=Oop rdx=Oop off=1293}
                                                ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x0000000003692d0d: callq  0x000000000368d080  ; OopMap{rdi=Oop rdx=Oop off=1298}
                                                ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x0000000003692d12: mov    %rax,(%rsp)
  0x0000000003692d16: callq  0x000000000368c9c0  ; OopMap{rdi=Oop rdx=Oop off=1307}
                                                ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x0000000003692d1b: mov    %rax,(%rsp)
  0x0000000003692d1f: callq  0x000000000368c9c0  ; OopMap{rdi=Oop rdx=Oop off=1316}
                                                ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)
                                                ;   {runtime_call}
  0x0000000003692d24: mov    %r11,0x8(%rsp)
  0x0000000003692d29: movq   $0x58,(%rsp)
  0x0000000003692d31: callq  0x00000000036919e0  ; OopMap{rdi=Oop rdx=Oop off=1334}
                                                ;*goto
                                                ; - java.lang.String::indexOf@88 (line 1772)
                                                ;   {runtime_call}
  0x0000000003692d36: jmpq   0x0000000003692a6a
  0x0000000003692d3b: mov    %r11,(%rsp)
  0x0000000003692d3f: callq  0x000000000368c9c0  ; OopMap{rdi=Oop rdx=Oop off=1348}
                                                ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)
                                                ;   {runtime_call}
  0x0000000003692d44: mov    %r14,(%rsp)
  0x0000000003692d48: callq  0x000000000368c9c0  ; OopMap{rdi=Oop rdx=Oop off=1357}
                                                ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)
                                                ;   {runtime_call}
  0x0000000003692d4d: mov    %rsi,0x8(%rsp)
  0x0000000003692d52: movq   $0x8f,(%rsp)
  0x0000000003692d5a: callq  0x00000000036919e0  ; OopMap{rdi=Oop rdx=Oop off=1375}
                                                ;*goto
                                                ; - java.lang.String::indexOf@143 (line 1780)
                                                ;   {runtime_call}
  0x0000000003692d5f: jmpq   0x0000000003692ba4
  0x0000000003692d64: mov    %rsi,0x8(%rsp)
  0x0000000003692d69: movq   $0xa1,(%rsp)
  0x0000000003692d71: callq  0x00000000036919e0  ; OopMap{rdi=Oop rdx=Oop off=1398}
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)
                                                ;   {runtime_call}
  0x0000000003692d76: jmpq   0x0000000003692c60
  0x0000000003692d7b: nop
  0x0000000003692d7c: nop
  0x0000000003692d7d: mov    0x2a8(%r15),%rax
  0x0000000003692d84: movabs $0x0,%r10
  0x0000000003692d8e: mov    %r10,0x2a8(%r15)
  0x0000000003692d95: movabs $0x0,%r10
  0x0000000003692d9f: mov    %r10,0x2b0(%r15)
  0x0000000003692da6: add    $0x40,%rsp
  0x0000000003692daa: pop    %rbp
  0x0000000003692dab: jmpq   0x000000000368c620  ;   {runtime_call}
  0x0000000003692db0: hlt    
  0x0000000003692db1: hlt    
  0x0000000003692db2: hlt    
  0x0000000003692db3: hlt    
  0x0000000003692db4: hlt    
  0x0000000003692db5: hlt    
  0x0000000003692db6: hlt    
  0x0000000003692db7: hlt    
  0x0000000003692db8: hlt    
  0x0000000003692db9: hlt    
  0x0000000003692dba: hlt    
  0x0000000003692dbb: hlt    
  0x0000000003692dbc: hlt    
  0x0000000003692dbd: hlt    
  0x0000000003692dbe: hlt    
  0x0000000003692dbf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000003692dc0: callq  0x000000000368f1a0  ;   {no_reloc}
  0x0000000003692dc5: mov    %rsp,-0x28(%rsp)
  0x0000000003692dca: sub    $0x80,%rsp
  0x0000000003692dd1: mov    %rax,0x78(%rsp)
  0x0000000003692dd6: mov    %rcx,0x70(%rsp)
  0x0000000003692ddb: mov    %rdx,0x68(%rsp)
  0x0000000003692de0: mov    %rbx,0x60(%rsp)
  0x0000000003692de5: mov    %rbp,0x50(%rsp)
  0x0000000003692dea: mov    %rsi,0x48(%rsp)
  0x0000000003692def: mov    %rdi,0x40(%rsp)
  0x0000000003692df4: mov    %r8,0x38(%rsp)
  0x0000000003692df9: mov    %r9,0x30(%rsp)
  0x0000000003692dfe: mov    %r10,0x28(%rsp)
  0x0000000003692e03: mov    %r11,0x20(%rsp)
  0x0000000003692e08: mov    %r12,0x18(%rsp)
  0x0000000003692e0d: mov    %r13,0x10(%rsp)
  0x0000000003692e12: mov    %r14,0x8(%rsp)
  0x0000000003692e17: mov    %r15,(%rsp)
  0x0000000003692e1b: movabs $0x553ec320,%rcx   ;   {external_word}
  0x0000000003692e25: movabs $0x3692dc5,%rdx    ;   {internal_word}
  0x0000000003692e2f: mov    %rsp,%r8
  0x0000000003692e32: and    $0xfffffffffffffff0,%rsp
  0x0000000003692e36: callq  0x00000000550a41d0  ;   {runtime_call}
  0x0000000003692e3b: hlt    
[Deopt Handler Code]
  0x0000000003692e3c: movabs $0x3692e3c,%r10    ;   {section_word}
  0x0000000003692e46: push   %r10
  0x0000000003692e48: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x0000000003692e4d: hlt    
  0x0000000003692e4e: hlt    
  0x0000000003692e4f: hlt    
<nmethod compile_id='5' compiler='C1' level='3' entry='0x0000000003692800' size='3232' address='0x0000000003692650' relocation_offset='288' insts_offset='432' stub_offset='1904' scopes_data_offset='2056' scopes_pcs_offset='2448' dependencies_offset='3184' nul_chk_table_offset='3192' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='624' backedge_count='57348' iicount='624' stamp='0.700'/>
<blob name='MethodHandlesAdapterBlob' size='32000'>
<sect index='1' size='32000' free='31628'/>
</blob>
<writer thread='16772'/>
<task_queued compile_id='9' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='2944' iicount='2944' level='3' stamp='0.700' comment='tiered' hot_count='2944'/>
<writer thread='7332'/>
Decoding compiled method 0x0000000003694290:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c5f8f70} &apos;arrayOffset&apos; &apos;()I&apos; in &apos;java/nio/ByteBuffer&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000000003694420: mov    0x8(%rdx),%r10d
  0x0000000003694424: shl    $0x3,%r10
  0x0000000003694428: cmp    %rax,%r10
  0x000000000369442b: jne    0x00000000035d5f60  ;   {runtime_call}
  0x0000000003694431: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000000369443c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000003694440: mov    %eax,-0x6000(%rsp)
  0x0000000003694447: push   %rbp
  0x0000000003694448: sub    $0x40,%rsp
  0x000000000369444c: movabs $0x1c6d3880,%rax   ;   {metadata(method data for {method} {0x000000001c5f8f70} &apos;arrayOffset&apos; &apos;()I&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x0000000003694456: mov    0xdc(%rax),%esi
  0x000000000369445c: add    $0x8,%esi
  0x000000000369445f: mov    %esi,0xdc(%rax)
  0x0000000003694465: movabs $0x1c5f8f68,%rax   ;   {metadata({method} {0x000000001c5f8f70} &apos;arrayOffset&apos; &apos;()I&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x000000000369446f: and    $0x1ff8,%esi
  0x0000000003694475: cmp    $0x0,%esi
  0x0000000003694478: je     0x000000000369458e  ;*aload_0
                                                ; - java.nio.ByteBuffer::arrayOffset@0 (line 1021)

  0x000000000369447e: mov    0x2c(%rdx),%eax
  0x0000000003694481: shl    $0x3,%rax          ;*getfield hb
                                                ; - java.nio.ByteBuffer::arrayOffset@1 (line 1021)

  0x0000000003694485: cmp    $0x0,%rax
  0x0000000003694489: movabs $0x1c6d3880,%rax   ;   {metadata(method data for {method} {0x000000001c5f8f70} &apos;arrayOffset&apos; &apos;()I&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x0000000003694493: movabs $0x108,%rsi
  0x000000000369449d: jne    0x00000000036944ad
  0x00000000036944a3: movabs $0x118,%rsi
  0x00000000036944ad: mov    (%rax,%rsi,1),%rdi
  0x00000000036944b1: lea    0x1(%rdi),%rdi
  0x00000000036944b5: mov    %rdi,(%rax,%rsi,1)
  0x00000000036944b9: je     0x000000000369454e  ;*ifnonnull
                                                ; - java.nio.ByteBuffer::arrayOffset@4 (line 1021)

  0x00000000036944bf: movsbl 0x28(%rdx),%eax    ;*getfield isReadOnly
                                                ; - java.nio.ByteBuffer::arrayOffset@16 (line 1023)

  0x00000000036944c3: cmp    $0x0,%eax
  0x00000000036944c6: movabs $0x1c6d3880,%rax   ;   {metadata(method data for {method} {0x000000001c5f8f70} &apos;arrayOffset&apos; &apos;()I&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x00000000036944d0: movabs $0x138,%rsi
  0x00000000036944da: je     0x00000000036944ea
  0x00000000036944e0: movabs $0x148,%rsi
  0x00000000036944ea: mov    (%rax,%rsi,1),%rdi
  0x00000000036944ee: lea    0x1(%rdi),%rdi
  0x00000000036944f2: mov    %rdi,(%rax,%rsi,1)
  0x00000000036944f6: jne    0x000000000369450b  ;*ifeq
                                                ; - java.nio.ByteBuffer::arrayOffset@19 (line 1023)

  0x00000000036944fc: mov    0x24(%rdx),%eax    ;*getfield offset
                                                ; - java.nio.ByteBuffer::arrayOffset@31 (line 1025)

  0x00000000036944ff: add    $0x40,%rsp
  0x0000000003694503: pop    %rbp
  0x0000000003694504: test   %eax,-0x20a440a(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x000000000369450a: retq                      ;*ireturn
                                                ; - java.nio.ByteBuffer::arrayOffset@34 (line 1025)

  0x000000000369450b: nopl   0x0(%rax,%rax,1)
  0x0000000003694510: jmpq   0x00000000036945b4  ;   {no_reloc}
  0x0000000003694515: add    %al,(%rax)
  0x0000000003694517: add    %al,(%rax)
  0x0000000003694519: add    %ch,%cl
  0x000000000369451b: lahf   
  0x000000000369451c: add    %al,(%rax)
  0x000000000369451e: add    %cl,-0x75(%rax)    ;*new  ; - java.nio.ByteBuffer::arrayOffset@22 (line 1024)

  0x0000000003694521: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x000000001c5f8f70} &apos;arrayOffset&apos; &apos;()I&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x0000000003694524: cmpb   $0x6d,(%rax)
  0x0000000003694527: sbb    $0x0,%al
  0x0000000003694529: add    %al,(%rax)
  0x000000000369452b: add    %cl,-0x7d(%rax)
  0x000000000369452e: xchg   %bl,0x1(%rax)
  0x0000000003694531: add    %al,(%rax)
  0x0000000003694533: add    %ecx,-0x75(%rax)
  0x0000000003694536: rorb   -0x77(%rax)        ;*invokespecial &lt;init&gt;
                                                ; - java.nio.ByteBuffer::arrayOffset@26 (line 1024)

  0x0000000003694539: rex.R and $0x20,%al
  0x000000000369453c: nop
  0x000000000369453d: nop
  0x000000000369453e: nop
  0x000000000369453f: callq  0x00000000035d61a0  ; OopMap{[32]=Oop off=292}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.nio.ByteBuffer::arrayOffset@26 (line 1024)
                                                ;   {optimized virtual_call}
  0x0000000003694544: mov    0x20(%rsp),%rax
  0x0000000003694549: jmpq   0x000000000369461c  ;*athrow
                                                ; - java.nio.ByteBuffer::arrayOffset@29 (line 1024)

  0x000000000369454e: xchg   %ax,%ax
  0x0000000003694550: jmpq   0x00000000036945da  ;   {no_reloc}
  0x0000000003694555: add    %al,(%rax)
  0x0000000003694557: add    %al,(%rax)
  0x0000000003694559: add    %ch,%cl
  0x000000000369455b: test   %eax,(%rax)
  0x000000000369455d: add    %al,(%rax)         ;*new  ; - java.nio.ByteBuffer::arrayOffset@7 (line 1022)

  0x000000000369455f: mov    %rax,%rdx
  0x0000000003694562: movabs $0x1c6d3880,%rsi   ;   {metadata(method data for {method} {0x000000001c5f8f70} &apos;arrayOffset&apos; &apos;()I&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x000000000369456c: addq   $0x1,0x128(%rsi)
  0x0000000003694574: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.nio.ByteBuffer::arrayOffset@11 (line 1022)

  0x0000000003694577: mov    %rax,0x28(%rsp)
  0x000000000369457c: nop
  0x000000000369457d: nop
  0x000000000369457e: nop
  0x000000000369457f: callq  0x00000000035d61a0  ; OopMap{[40]=Oop off=356}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.nio.ByteBuffer::arrayOffset@11 (line 1022)
                                                ;   {optimized virtual_call}
  0x0000000003694584: mov    0x28(%rsp),%rax
  0x0000000003694589: jmpq   0x000000000369461c
  0x000000000369458e: mov    %rax,0x8(%rsp)
  0x0000000003694593: movq   $0xffffffffffffffff,(%rsp)
  0x000000000369459b: callq  0x00000000036919e0  ; OopMap{rdx=Oop off=384}
                                                ;*synchronization entry
                                                ; - java.nio.ByteBuffer::arrayOffset@-1 (line 1021)
                                                ;   {runtime_call}
  0x00000000036945a0: jmpq   0x000000000369447e
  0x00000000036945a5: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000036945af: mov    $0xa050f00,%eax
  0x00000000036945b4: callq  0x0000000003690920  ; OopMap{off=409}
                                                ;*new  ; - java.nio.ByteBuffer::arrayOffset@22 (line 1024)
                                                ;   {runtime_call}
  0x00000000036945b9: jmpq   0x0000000003694510
  0x00000000036945be: mov    %rdx,%rdx
  0x00000000036945c1: callq  0x000000000368d720  ; OopMap{off=422}
                                                ;*new  ; - java.nio.ByteBuffer::arrayOffset@22 (line 1024)
                                                ;   {runtime_call}
  0x00000000036945c6: jmpq   0x000000000369451f
  0x00000000036945cb: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000036945d5: mov    $0xa050f00,%eax
  0x00000000036945da: callq  0x0000000003690920  ; OopMap{off=447}
                                                ;*new  ; - java.nio.ByteBuffer::arrayOffset@7 (line 1022)
                                                ;   {runtime_call}
  0x00000000036945df: jmpq   0x0000000003694550
  0x00000000036945e4: mov    %rdx,%rdx
  0x00000000036945e7: callq  0x000000000368d720  ; OopMap{off=460}
                                                ;*new  ; - java.nio.ByteBuffer::arrayOffset@7 (line 1022)
                                                ;   {runtime_call}
  0x00000000036945ec: jmpq   0x000000000369455f
  0x00000000036945f1: nop
  0x00000000036945f2: nop
  0x00000000036945f3: mov    0x2a8(%r15),%rax
  0x00000000036945fa: movabs $0x0,%r10
  0x0000000003694604: mov    %r10,0x2a8(%r15)
  0x000000000369460b: movabs $0x0,%r10
  0x0000000003694615: mov    %r10,0x2b0(%r15)
  0x000000000369461c: add    $0x40,%rsp
  0x0000000003694620: pop    %rbp
  0x0000000003694621: jmpq   0x000000000368c620  ;   {runtime_call}
  0x0000000003694626: hlt    
  0x0000000003694627: hlt    
  0x0000000003694628: hlt    
  0x0000000003694629: hlt    
  0x000000000369462a: hlt    
  0x000000000369462b: hlt    
  0x000000000369462c: hlt    
  0x000000000369462d: hlt    
  0x000000000369462e: hlt    
  0x000000000369462f: hlt    
  0x0000000003694630: hlt    
  0x0000000003694631: hlt    
  0x0000000003694632: hlt    
  0x0000000003694633: hlt    
  0x0000000003694634: hlt    
  0x0000000003694635: hlt    
  0x0000000003694636: hlt    
  0x0000000003694637: hlt    
  0x0000000003694638: hlt    
  0x0000000003694639: hlt    
  0x000000000369463a: hlt    
  0x000000000369463b: hlt    
  0x000000000369463c: hlt    
  0x000000000369463d: hlt    
  0x000000000369463e: hlt    
  0x000000000369463f: hlt    
[Stub Code]
  0x0000000003694640: nop                       ;   {no_reloc}
  0x0000000003694641: nop
  0x0000000003694642: nop
  0x0000000003694643: nop
  0x0000000003694644: nop
  0x0000000003694645: movabs $0x0,%rbx          ;   {static_stub}
  0x000000000369464f: jmpq   0x000000000369464f  ;   {runtime_call}
  0x0000000003694654: nop
  0x0000000003694655: movabs $0x0,%rbx          ;   {static_stub}
  0x000000000369465f: jmpq   0x000000000369465f  ;   {runtime_call}
[Exception Handler]
  0x0000000003694664: callq  0x000000000368f1a0  ;   {runtime_call}
  0x0000000003694669: mov    %rsp,-0x28(%rsp)
  0x000000000369466e: sub    $0x80,%rsp
  0x0000000003694675: mov    %rax,0x78(%rsp)
  0x000000000369467a: mov    %rcx,0x70(%rsp)
  0x000000000369467f: mov    %rdx,0x68(%rsp)
  0x0000000003694684: mov    %rbx,0x60(%rsp)
  0x0000000003694689: mov    %rbp,0x50(%rsp)
  0x000000000369468e: mov    %rsi,0x48(%rsp)
  0x0000000003694693: mov    %rdi,0x40(%rsp)
  0x0000000003694698: mov    %r8,0x38(%rsp)
  0x000000000369469d: mov    %r9,0x30(%rsp)
  0x00000000036946a2: mov    %r10,0x28(%rsp)
  0x00000000036946a7: mov    %r11,0x20(%rsp)
  0x00000000036946ac: mov    %r12,0x18(%rsp)
  0x00000000036946b1: mov    %r13,0x10(%rsp)
  0x00000000036946b6: mov    %r14,0x8(%rsp)
  0x00000000036946bb: mov    %r15,(%rsp)
  0x00000000036946bf: movabs $0x553ec320,%rcx   ;   {external_word}
  0x00000000036946c9: movabs $0x3694669,%rdx    ;   {internal_word}
  0x00000000036946d3: mov    %rsp,%r8
  0x00000000036946d6: and    $0xfffffffffffffff0,%rsp
  0x00000000036946da: callq  0x00000000550a41d0  ;   {runtime_call}
  0x00000000036946df: hlt    
[Deopt Handler Code]
  0x00000000036946e0: movabs $0x36946e0,%r10    ;   {section_word}
  0x00000000036946ea: push   %r10
  0x00000000036946ec: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036946f1: hlt    
  0x00000000036946f2: hlt    
  0x00000000036946f3: hlt    
  0x00000000036946f4: hlt    
  0x00000000036946f5: hlt    
  0x00000000036946f6: hlt    
  0x00000000036946f7: hlt    
<nmethod compile_id='6' compiler='C1' level='3' entry='0x0000000003694420' size='1600' address='0x0000000003694290' relocation_offset='288' insts_offset='400' stub_offset='944' scopes_data_offset='1136' scopes_pcs_offset='1256' dependencies_offset='1592' method='java/nio/ByteBuffer arrayOffset ()I' bytes='35' count='1536' iicount='1536' stamp='0.708'/>
<writer thread='16772'/>
<task_queued compile_id='10' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='27264' iicount='27264' stamp='0.709' comment='tiered' hot_count='27264'/>
<writer thread='7332'/>
Decoding compiled method 0x0000000003693ed0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c5079f0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/StringBuilder&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000003694040: mov    0x8(%rdx),%r10d
  0x0000000003694044: shl    $0x3,%r10
  0x0000000003694048: cmp    %rax,%r10
  0x000000000369404b: jne    0x00000000035d5f60  ;   {runtime_call}
  0x0000000003694051: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000000369405c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000003694060: mov    %eax,-0x6000(%rsp)
  0x0000000003694067: push   %rbp
  0x0000000003694068: sub    $0x30,%rsp
  0x000000000369406c: movabs $0x1c683cc0,%rsi   ;   {metadata(method data for {method} {0x000000001c5079f0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000003694076: mov    0xdc(%rsi),%edi
  0x000000000369407c: add    $0x8,%edi
  0x000000000369407f: mov    %edi,0xdc(%rsi)
  0x0000000003694085: movabs $0x1c5079e8,%rsi   ;   {metadata({method} {0x000000001c5079f0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000000369408f: and    $0x1ff8,%edi
  0x0000000003694095: cmp    $0x0,%edi
  0x0000000003694098: je     0x00000000036940d5  ;*aload_0
                                                ; - java.lang.StringBuilder::append@0 (line 136)

  0x000000000369409e: mov    %rdx,%rsi
  0x00000000036940a1: movabs $0x1c683cc0,%rdi   ;   {metadata(method data for {method} {0x000000001c5079f0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000036940ab: addq   $0x1,0x108(%rdi)
  0x00000000036940b3: mov    %rdx,%rsi
  0x00000000036940b6: mov    %rsi,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x00000000036940b9: mov    %rsi,0x20(%rsp)
  0x00000000036940be: nop
  0x00000000036940bf: callq  0x00000000035d61a0  ; OopMap{[32]=Oop off=132}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {optimized virtual_call}
  0x00000000036940c4: mov    0x20(%rsp),%rax
  0x00000000036940c9: add    $0x30,%rsp
  0x00000000036940cd: pop    %rbp
  0x00000000036940ce: test   %eax,-0x20a3fd4(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036940d4: retq   
  0x00000000036940d5: mov    %rsi,0x8(%rsp)
  0x00000000036940da: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036940e2: callq  0x00000000036919e0  ; OopMap{rdx=Oop r8=Oop off=167}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ;   {runtime_call}
  0x00000000036940e7: jmp    0x000000000369409e
  0x00000000036940e9: nop
  0x00000000036940ea: nop
  0x00000000036940eb: mov    0x2a8(%r15),%rax
  0x00000000036940f2: movabs $0x0,%r10
  0x00000000036940fc: mov    %r10,0x2a8(%r15)
  0x0000000003694103: movabs $0x0,%r10
  0x000000000369410d: mov    %r10,0x2b0(%r15)
  0x0000000003694114: add    $0x30,%rsp
  0x0000000003694118: pop    %rbp
  0x0000000003694119: jmpq   0x000000000368c620  ;   {runtime_call}
  0x000000000369411e: hlt    
  0x000000000369411f: hlt    
[Stub Code]
  0x0000000003694120: nop                       ;   {no_reloc}
  0x0000000003694121: nop
  0x0000000003694122: nop
  0x0000000003694123: nop
  0x0000000003694124: nop
  0x0000000003694125: movabs $0x0,%rbx          ;   {static_stub}
  0x000000000369412f: jmpq   0x000000000369412f  ;   {runtime_call}
[Exception Handler]
  0x0000000003694134: callq  0x000000000368f1a0  ;   {runtime_call}
  0x0000000003694139: mov    %rsp,-0x28(%rsp)
  0x000000000369413e: sub    $0x80,%rsp
  0x0000000003694145: mov    %rax,0x78(%rsp)
  0x000000000369414a: mov    %rcx,0x70(%rsp)
  0x000000000369414f: mov    %rdx,0x68(%rsp)
  0x0000000003694154: mov    %rbx,0x60(%rsp)
  0x0000000003694159: mov    %rbp,0x50(%rsp)
  0x000000000369415e: mov    %rsi,0x48(%rsp)
  0x0000000003694163: mov    %rdi,0x40(%rsp)
  0x0000000003694168: mov    %r8,0x38(%rsp)
  0x000000000369416d: mov    %r9,0x30(%rsp)
  0x0000000003694172: mov    %r10,0x28(%rsp)
  0x0000000003694177: mov    %r11,0x20(%rsp)
  0x000000000369417c: mov    %r12,0x18(%rsp)
  0x0000000003694181: mov    %r13,0x10(%rsp)
  0x0000000003694186: mov    %r14,0x8(%rsp)
  0x000000000369418b: mov    %r15,(%rsp)
  0x000000000369418f: movabs $0x553ec320,%rcx   ;   {external_word}
  0x0000000003694199: movabs $0x3694139,%rdx    ;   {internal_word}
  0x00000000036941a3: mov    %rsp,%r8
  0x00000000036941a6: and    $0xfffffffffffffff0,%rsp
  0x00000000036941aa: callq  0x00000000550a41d0  ;   {runtime_call}
  0x00000000036941af: hlt    
[Deopt Handler Code]
  0x00000000036941b0: movabs $0x36941b0,%r10    ;   {section_word}
  0x00000000036941ba: push   %r10
  0x00000000036941bc: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036941c1: hlt    
  0x00000000036941c2: hlt    
  0x00000000036941c3: hlt    
  0x00000000036941c4: hlt    
  0x00000000036941c5: hlt    
  0x00000000036941c6: hlt    
  0x00000000036941c7: hlt    
<nmethod compile_id='9' compiler='C1' level='3' entry='0x0000000003694040' size='912' address='0x0000000003693ed0' relocation_offset='288' insts_offset='368' stub_offset='592' scopes_data_offset='768' scopes_pcs_offset='808' dependencies_offset='904' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='2946' iicount='2946' stamp='0.713'/>
<writer thread='4360'/>
Decoding compiled method 0x0000000003693b10:
Code:
<writer thread='16772'/>
<task_queued compile_id='12' method='java/util/HashMap get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='23' count='1408' iicount='1408' level='3' stamp='0.713' comment='tiered' hot_count='1408'/>
<writer thread='4360'/>
[Entry Point]
  # {method} {0x000000001c4a96c0} &apos;arraycopy
<writer thread='16772'/>
<task_queued compile_id='13' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='8448' iicount='8448' level='3' stamp='0.713' comment='tiered' hot_count='8448'/>
<writer thread='4360'/>
&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8        = int
  # parm2:    r9:r9     = &apos;java/lang/Object&apos;
  # parm3:    rdi       = int
  # parm4:    rsi       = int
  #           [sp+0x90]  (sp of caller)
  0x0000000003693c80: mov    0x8(%rdx),%r10d
  0x0000000003693c84: shl    $0x3,%r10
  0x0000000003693c88: cmp    %r10,%rax
  0x0000000003693c8b: je     0x0000000003693c98
  0x0000000003693c91: jmpq   0x00000000035d5f60  ;   {runtime_call}
  0x0000000003693c96: xchg   %ax,%ax
[Verified Entry Point]
  0x0000000003693c98: mov    %eax,-0x6000(%rsp)
  0x0000000003693c9f: push   %rbp
  0x0000000003693ca0: mov    %rsp,%rbp
  0x0000000003693ca3: sub    $0x80,%rsp
  0x0000000003693caa: mov    %rsi,0x30(%rsp)
  0x0000000003693caf: mov    %rdi,0x28(%rsp)
  0x0000000003693cb4: mov    %r9,0x48(%rsp)
  0x0000000003693cb9: cmp    $0x0,%r9
  0x0000000003693cbd: lea    0x48(%rsp),%rax
  0x0000000003693cc2: cmove  0x48(%rsp),%rax
  0x0000000003693cc8: mov    %rax,0x20(%rsp)
  0x0000000003693ccd: mov    %r8,%r9
  0x0000000003693cd0: mov    %rdx,0x38(%rsp)
  0x0000000003693cd5: cmp    $0x0,%rdx
  0x0000000003693cd9: lea    0x38(%rsp),%r8
  0x0000000003693cde: cmove  0x38(%rsp),%r8
  0x0000000003693ce4: movabs $0x76c100c78,%r14  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x0000000003693cee: mov    %r14,0x68(%rsp)
  0x0000000003693cf3: lea    0x68(%rsp),%r14
  0x0000000003693cf8: mov    %r14,%rdx          ; OopMap{[72]=Oop [56]=Oop [104]=Oop off=123}
  0x0000000003693cfb: movabs $0x3693cfb,%r10    ;   {section_word}
  0x0000000003693d05: mov    %r10,0x1e0(%r15)
  0x0000000003693d0c: mov    %rsp,0x1d8(%r15)
  0x0000000003693d13: cmpb   $0x0,0x51f2dbd8(%rip)        # 0x00000000555c18f2
                                                ;   {external_word}
  0x0000000003693d1a: je     0x0000000003693d62
  0x0000000003693d20: push   %rdx
  0x0000000003693d21: push   %r8
  0x0000000003693d23: push   %r9
  0x0000000003693d25: movabs $0x1c4a96b8,%rdx   ;   {metadata({method} {0x000000001c4a96c0} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x0000000003693d2f: mov    %r15,%rcx
  0x0000000003693d32: sub    $0x20,%rsp
  0x0000000003693d36: test   $0xf,%esp
  0x0000000003693d3c: je     0x0000000003693d54
  0x0000000003693d42: sub    $0x8,%rsp
  0x0000000003693d46: callq  0x0000000054fdcdc0  ;   {runtime_call}
  0x0000000003693d4b: add    $0x8,%rsp
  0x0000000003693d4f: jmpq   0x0000000003693d59
  0x0000000003693d54: callq  0x0000000054fdcdc0  ;   {runtime_call}
  0x0000000003693d59: add    $0x20,%rsp
  0x0000000003693d5d: pop    %r9
  0x0000000003693d5f: pop    %r8
  0x0000000003693d61: pop    %rdx
  0x0000000003693d62: lea    0x1f8(%r15),%rcx
  0x0000000003693d69: movl   $0x4,0x270(%r15)
  0x0000000003693d74: callq  0x0000000056940de6  ;   {runtime_call}
  0x0000000003693d79: vzeroupper 
  0x0000000003693d7c: movl   $0x5,0x270(%r15)
  0x0000000003693d87: mov    %r15d,%ecx
  0x0000000003693d8a: shr    $0x4,%ecx
  0x0000000003693d8d: and    $0xffc,%ecx
  0x0000000003693d93: movabs $0x1600000,%r10    ;   {external_word}
  0x0000000003693d9d: mov    %ecx,(%r10,%rcx,1)
  0x0000000003693da1: cmpl   $0x0,0x51f2e725(%rip)        # 0x00000000555c24d0
                                                ;   {external_word}
  0x0000000003693dab: jne    0x0000000003693dbf
  0x0000000003693db1: cmpl   $0x0,0x30(%r15)
  0x0000000003693db9: je     0x0000000003693dd8
  0x0000000003693dbf: mov    %r15,%rcx
  0x0000000003693dc2: mov    %rsp,%r12
  0x0000000003693dc5: sub    $0x20,%rsp
  0x0000000003693dc9: and    $0xfffffffffffffff0,%rsp
  0x0000000003693dcd: callq  0x0000000054ff4100  ;   {runtime_call}
  0x0000000003693dd2: mov    %r12,%rsp
  0x0000000003693dd5: xor    %r12,%r12
  0x0000000003693dd8: movl   $0x8,0x270(%r15)
  0x0000000003693de3: cmpl   $0x1,0x29c(%r15)
  0x0000000003693dee: je     0x0000000003693e7e
  0x0000000003693df4: cmpb   $0x0,0x51f2daf7(%rip)        # 0x00000000555c18f2
                                                ;   {external_word}
  0x0000000003693dfb: je     0x0000000003693e39
  0x0000000003693e01: movabs $0x1c4a96b8,%rdx   ;   {metadata({method} {0x000000001c4a96c0} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x0000000003693e0b: mov    %r15,%rcx
  0x0000000003693e0e: sub    $0x20,%rsp
  0x0000000003693e12: test   $0xf,%esp
  0x0000000003693e18: je     0x0000000003693e30
  0x0000000003693e1e: sub    $0x8,%rsp
  0x0000000003693e22: callq  0x0000000054fdcdc0  ;   {runtime_call}
  0x0000000003693e27: add    $0x8,%rsp
  0x0000000003693e2b: jmpq   0x0000000003693e35
  0x0000000003693e30: callq  0x0000000054fdcdc0  ;   {runtime_call}
  0x0000000003693e35: add    $0x20,%rsp
  0x0000000003693e39: movabs $0x0,%r10
  0x0000000003693e43: mov    %r10,0x1d8(%r15)
  0x0000000003693e4a: movabs $0x0,%r10
  0x0000000003693e54: mov    %r10,0x1e0(%r15)
  0x0000000003693e5b: mov    0x38(%r15),%rcx
  0x0000000003693e5f: movl   $0x0,0x100(%rcx)
  0x0000000003693e69: leaveq 
  0x0000000003693e6a: cmpq   $0x0,0x8(%r15)
  0x0000000003693e72: jne    0x0000000003693e79
  0x0000000003693e78: retq   
  0x0000000003693e79: jmpq   Stub::forward exception  ;   {runtime_call}
  0x0000000003693e7e: mov    %rsp,%r12
  0x0000000003693e81: sub    $0x20,%rsp
  0x0000000003693e85: and    $0xfffffffffffffff0,%rsp
  0x0000000003693e89: callq  0x0000000054fdcde0  ;   {runtime_call}
  0x0000000003693e8e: mov    %r12,%rsp
  0x0000000003693e91: xor    %r12,%r12
  0x0000000003693e94: jmpq   0x0000000003693df4
  0x0000000003693e99: hlt    
  0x0000000003693e9a: hlt    
  0x0000000003693e9b: hlt    
  0x0000000003693e9c: hlt    
  0x0000000003693e9d: hlt    
  0x0000000003693e9e: hlt    
  0x0000000003693e9f: hlt    
<nmethod compile_id='11' compile_kind='c2n' level='0' entry='0x0000000003693c80' size='912' address='0x0000000003693b10' relocation_offset='288' consts_offset='912' insts_offset='368' method='java/lang/System arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V' bytes='0' count='19336' iicount='19336' stamp='0.718'/>
<writer thread='7332'/>
Decoding compiled method 0x000000000369f4d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c5785f0} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;
  # this:     rdx:rdx   = &apos;java/util/HashMap&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  #           [sp+0x70]  (sp of caller)
  0x000000000369f660: mov    0x8(%rdx),%r10d
  0x000000000369f664: shl    $0x3,%r10
  0x000000000369f668: cmp    %rax,%r10
  0x000000000369f66b: jne    0x00000000035d5f60  ;   {runtime_call}
  0x000000000369f671: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000000369f67c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000000369f680: mov    %eax,-0x6000(%rsp)
  0x000000000369f687: push   %rbp
  0x000000000369f688: sub    $0x60,%rsp
  0x000000000369f68c: movabs $0x1c6c4728,%rsi   ;   {metadata(method data for {method} {0x000000001c5785f0} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000000369f696: mov    0xdc(%rsi),%edi
  0x000000000369f69c: add    $0x8,%edi
  0x000000000369f69f: mov    %edi,0xdc(%rsi)
  0x000000000369f6a5: movabs $0x1c5785e8,%rsi   ;   {metadata({method} {0x000000001c5785f0} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000000369f6af: and    $0x1ff8,%edi
  0x000000000369f6b5: cmp    $0x0,%edi
  0x000000000369f6b8: je     0x000000000369f937  ;*aload_0
                                                ; - java.util.HashMap::get@0 (line 557)

  0x000000000369f6be: movabs $0x1c6c4728,%rsi   ;   {metadata(method data for {method} {0x000000001c5785f0} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000000369f6c8: addq   $0x1,0x108(%rsi)
  0x000000000369f6d0: movabs $0x1c6803c8,%rsi   ;   {metadata(method data for {method} {0x000000001c577d70} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000000369f6da: mov    0xdc(%rsi),%edi
  0x000000000369f6e0: add    $0x8,%edi
  0x000000000369f6e3: mov    %edi,0xdc(%rsi)
  0x000000000369f6e9: movabs $0x1c577d68,%rsi   ;   {metadata({method} {0x000000001c577d70} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000000369f6f3: and    $0x7ffff8,%edi
  0x000000000369f6f9: cmp    $0x0,%edi
  0x000000000369f6fc: je     0x000000000369f94e
  0x000000000369f702: cmp    $0x0,%r8
  0x000000000369f706: movabs $0x1c6803c8,%rsi   ;   {metadata(method data for {method} {0x000000001c577d70} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000000369f710: movabs $0x108,%rdi
  0x000000000369f71a: jne    0x000000000369f72a
  0x000000000369f720: movabs $0x118,%rdi
  0x000000000369f72a: mov    (%rsi,%rdi,1),%rbx
  0x000000000369f72e: lea    0x1(%rbx),%rbx
  0x000000000369f732: mov    %rbx,(%rsi,%rdi,1)
  0x000000000369f736: jne    0x000000000369f760  ;*ifnonnull
                                                ; - java.util.HashMap::hash@1 (line 339)
                                                ; - java.util.HashMap::get@2 (line 557)

  0x000000000369f73c: movabs $0x1c6803c8,%rsi   ;   {metadata(method data for {method} {0x000000001c577d70} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000000369f746: incl   0x128(%rsi)
  0x000000000369f74c: mov    $0x0,%esi
  0x000000000369f751: mov    %r8,0x48(%rsp)
  0x000000000369f756: mov    %rdx,0x40(%rsp)
  0x000000000369f75b: jmpq   0x000000000369f821  ;*goto
                                                ; - java.util.HashMap::hash@5 (line 339)
                                                ; - java.util.HashMap::get@2 (line 557)

  0x000000000369f760: mov    %rdx,0x40(%rsp)
  0x000000000369f765: cmp    (%r8),%rax         ; implicit exception: dispatches to 0x000000000369f965
  0x000000000369f768: mov    %r8,%rsi
  0x000000000369f76b: movabs $0x1c6803c8,%rdi   ;   {metadata(method data for {method} {0x000000001c577d70} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000000369f775: mov    0x8(%rsi),%esi
  0x000000000369f778: shl    $0x3,%rsi
  0x000000000369f77c: cmp    0x148(%rdi),%rsi
  0x000000000369f783: jne    0x000000000369f792
  0x000000000369f785: addq   $0x1,0x150(%rdi)
  0x000000000369f78d: jmpq   0x000000000369f7f8
  0x000000000369f792: cmp    0x158(%rdi),%rsi
  0x000000000369f799: jne    0x000000000369f7a8
  0x000000000369f79b: addq   $0x1,0x160(%rdi)
  0x000000000369f7a3: jmpq   0x000000000369f7f8
  0x000000000369f7a8: cmpq   $0x0,0x148(%rdi)
  0x000000000369f7b3: jne    0x000000000369f7cc
  0x000000000369f7b5: mov    %rsi,0x148(%rdi)
  0x000000000369f7bc: movq   $0x1,0x150(%rdi)
  0x000000000369f7c7: jmpq   0x000000000369f7f8
  0x000000000369f7cc: cmpq   $0x0,0x158(%rdi)
  0x000000000369f7d7: jne    0x000000000369f7f0
  0x000000000369f7d9: mov    %rsi,0x158(%rdi)
  0x000000000369f7e0: movq   $0x1,0x160(%rdi)
  0x000000000369f7eb: jmpq   0x000000000369f7f8
  0x000000000369f7f0: addq   $0x1,0x140(%rdi)
  0x000000000369f7f8: mov    %r8,%rdx           ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.HashMap::get@2 (line 557)

  0x000000000369f7fb: mov    %r8,0x48(%rsp)
  0x000000000369f800: nop
  0x000000000369f801: nop
  0x000000000369f802: nop
  0x000000000369f803: nop
  0x000000000369f804: nop
  0x000000000369f805: movabs $0xffffffffffffffff,%rax
  0x000000000369f80f: callq  0x00000000035d63e0  ; OopMap{[72]=Oop [64]=Oop off=436}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.HashMap::get@2 (line 557)
                                                ;   {virtual_call}
  0x000000000369f814: mov    %rax,%r8
  0x000000000369f817: shr    $0x10,%r8d
  0x000000000369f81b: xor    %rax,%r8
  0x000000000369f81e: mov    %r8,%rsi           ;*ireturn
                                                ; - java.util.HashMap::hash@19 (line 339)
                                                ; - java.util.HashMap::get@2 (line 557)

  0x000000000369f821: mov    0x48(%rsp),%r9
  0x000000000369f826: mov    0x40(%rsp),%rdx
  0x000000000369f82b: mov    %rdx,%r8
  0x000000000369f82e: movabs $0x1c6c4728,%rdi   ;   {metadata(method data for {method} {0x000000001c5785f0} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000000369f838: mov    0x8(%r8),%r8d
  0x000000000369f83c: shl    $0x3,%r8
  0x000000000369f840: cmp    0x120(%rdi),%r8
  0x000000000369f847: jne    0x000000000369f856
  0x000000000369f849: addq   $0x1,0x128(%rdi)
  0x000000000369f851: jmpq   0x000000000369f8bc
  0x000000000369f856: cmp    0x130(%rdi),%r8
  0x000000000369f85d: jne    0x000000000369f86c
  0x000000000369f85f: addq   $0x1,0x138(%rdi)
  0x000000000369f867: jmpq   0x000000000369f8bc
  0x000000000369f86c: cmpq   $0x0,0x120(%rdi)
  0x000000000369f877: jne    0x000000000369f890
  0x000000000369f879: mov    %r8,0x120(%rdi)
  0x000000000369f880: movq   $0x1,0x128(%rdi)
  0x000000000369f88b: jmpq   0x000000000369f8bc
  0x000000000369f890: cmpq   $0x0,0x130(%rdi)
  0x000000000369f89b: jne    0x000000000369f8b4
  0x000000000369f89d: mov    %r8,0x130(%rdi)
  0x000000000369f8a4: movq   $0x1,0x138(%rdi)
  0x000000000369f8af: jmpq   0x000000000369f8bc
  0x000000000369f8b4: addq   $0x1,0x118(%rdi)
  0x000000000369f8bc: mov    %rsi,%r8           ;*invokevirtual getNode
                                                ; - java.util.HashMap::get@6 (line 557)

  0x000000000369f8bf: callq  0x00000000035d61a0  ; OopMap{off=612}
                                                ;*invokevirtual getNode
                                                ; - java.util.HashMap::get@6 (line 557)
                                                ;   {optimized virtual_call}
  0x000000000369f8c4: cmp    $0x0,%rax
  0x000000000369f8c8: movabs $0x1c6c4728,%rsi   ;   {metadata(method data for {method} {0x000000001c5785f0} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000000369f8d2: movabs $0x148,%rdi
  0x000000000369f8dc: jne    0x000000000369f8ec
  0x000000000369f8e2: movabs $0x158,%rdi
  0x000000000369f8ec: mov    (%rsi,%rdi,1),%rbx
  0x000000000369f8f0: lea    0x1(%rbx),%rbx
  0x000000000369f8f4: mov    %rbx,(%rsi,%rdi,1)
  0x000000000369f8f8: jne    0x000000000369f924  ;*ifnonnull
                                                ; - java.util.HashMap::get@11 (line 557)

  0x000000000369f8fe: movabs $0x1c6c4728,%rax   ;   {metadata(method data for {method} {0x000000001c5785f0} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000000369f908: incl   0x168(%rax)
  0x000000000369f90e: movabs $0x0,%rax          ;*goto
                                                ; - java.util.HashMap::get@15 (line 557)
                                                ;   {oop(NULL)}
  0x000000000369f918: add    $0x60,%rsp
  0x000000000369f91c: pop    %rbp
  0x000000000369f91d: test   %eax,-0x20af823(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x000000000369f923: retq   
  0x000000000369f924: mov    0x14(%rax),%eax    ; implicit exception: dispatches to 0x000000000369f96a
  0x000000000369f927: shl    $0x3,%rax          ;*getfield value
                                                ; - java.util.HashMap::get@19 (line 557)

  0x000000000369f92b: add    $0x60,%rsp
  0x000000000369f92f: pop    %rbp
  0x000000000369f930: test   %eax,-0x20af836(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x000000000369f936: retq   
  0x000000000369f937: mov    %rsi,0x8(%rsp)
  0x000000000369f93c: movq   $0xffffffffffffffff,(%rsp)
  0x000000000369f944: callq  0x00000000036919e0  ; OopMap{rdx=Oop r8=Oop off=745}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::get@-1 (line 557)
                                                ;   {runtime_call}
  0x000000000369f949: jmpq   0x000000000369f6be
  0x000000000369f94e: mov    %rsi,0x8(%rsp)
  0x000000000369f953: movq   $0xffffffffffffffff,(%rsp)
  0x000000000369f95b: callq  0x00000000036919e0  ; OopMap{rdx=Oop r8=Oop off=768}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 339)
                                                ; - java.util.HashMap::get@2 (line 557)
                                                ;   {runtime_call}
  0x000000000369f960: jmpq   0x000000000369f702
  0x000000000369f965: callq  0x000000000368d080  ; OopMap{r8=Oop [64]=Oop off=778}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.HashMap::get@2 (line 557)
                                                ;   {runtime_call}
  0x000000000369f96a: callq  0x000000000368d080  ; OopMap{off=783}
                                                ;*getfield value
                                                ; - java.util.HashMap::get@19 (line 557)
                                                ;   {runtime_call}
  0x000000000369f96f: nop
  0x000000000369f970: nop
  0x000000000369f971: mov    0x2a8(%r15),%rax
  0x000000000369f978: movabs $0x0,%r10
  0x000000000369f982: mov    %r10,0x2a8(%r15)
  0x000000000369f989: movabs $0x0,%r10
  0x000000000369f993: mov    %r10,0x2b0(%r15)
  0x000000000369f99a: add    $0x60,%rsp
  0x000000000369f99e: pop    %rbp
  0x000000000369f99f: jmpq   0x000000000368c620  ;   {runtime_call}
  0x000000000369f9a4: hlt    
  0x000000000369f9a5: hlt    
  0x000000000369f9a6: hlt    
  0x000000000369f9a7: hlt    
  0x000000000369f9a8: hlt    
  0x000000000369f9a9: hlt    
  0x000000000369f9aa: hlt    
  0x000000000369f9ab: hlt    
  0x000000000369f9ac: hlt    
  0x000000000369f9ad: hlt    
  0x000000000369f9ae: hlt    
  0x000000000369f9af: hlt    
  0x000000000369f9b0: hlt    
  0x000000000369f9b1: hlt    
  0x000000000369f9b2: hlt    
  0x000000000369f9b3: hlt    
  0x000000000369f9b4: hlt    
  0x000000000369f9b5: hlt    
  0x000000000369f9b6: hlt    
  0x000000000369f9b7: hlt    
  0x000000000369f9b8: hlt    
  0x000000000369f9b9: hlt    
  0x000000000369f9ba: hlt    
  0x000000000369f9bb: hlt    
  0x000000000369f9bc: hlt    
  0x000000000369f9bd: hlt    
  0x000000000369f9be: hlt    
  0x000000000369f9bf: hlt    
[Stub Code]
  0x000000000369f9c0: nop                       ;   {no_reloc}
  0x000000000369f9c1: nop
  0x000000000369f9c2: nop
  0x000000000369f9c3: nop
  0x000000000369f9c4: nop
  0x000000000369f9c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000000369f9cf: jmpq   0x000000000369f9cf  ;   {runtime_call}
  0x000000000369f9d4: nop
  0x000000000369f9d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000000369f9df: jmpq   0x000000000369f9df  ;   {runtime_call}
[Exception Handler]
  0x000000000369f9e4: callq  0x000000000368f1a0  ;   {runtime_call}
  0x000000000369f9e9: mov    %rsp,-0x28(%rsp)
  0x000000000369f9ee: sub    $0x80,%rsp
  0x000000000369f9f5: mov    %rax,0x78(%rsp)
  0x000000000369f9fa: mov    %rcx,0x70(%rsp)
  0x000000000369f9ff: mov    %rdx,0x68(%rsp)
  0x000000000369fa04: mov    %rbx,0x60(%rsp)
  0x000000000369fa09: mov    %rbp,0x50(%rsp)
  0x000000000369fa0e: mov    %rsi,0x48(%rsp)
  0x000000000369fa13: mov    %rdi,0x40(%rsp)
  0x000000000369fa18: mov    %r8,0x38(%rsp)
  0x000000000369fa1d: mov    %r9,0x30(%rsp)
  0x000000000369fa22: mov    %r10,0x28(%rsp)
  0x000000000369fa27: mov    %r11,0x20(%rsp)
  0x000000000369fa2c: mov    %r12,0x18(%rsp)
  0x000000000369fa31: mov    %r13,0x10(%rsp)
  0x000000000369fa36: mov    %r14,0x8(%rsp)
  0x000000000369fa3b: mov    %r15,(%rsp)
  0x000000000369fa3f: movabs $0x553ec320,%rcx   ;   {external_word}
  0x000000000369fa49: movabs $0x369f9e9,%rdx    ;   {internal_word}
  0x000000000369fa53: mov    %rsp,%r8
  0x000000000369fa56: and    $0xfffffffffffffff0,%rsp
  0x000000000369fa5a: callq  0x00000000550a41d0  ;   {runtime_call}
  0x000000000369fa5f: hlt    
[Deopt Handler Code]
  0x000000000369fa60: movabs $0x369fa60,%r10    ;   {section_word}
  0x000000000369fa6a: push   %r10
  0x000000000369fa6c: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x000000000369fa71: hlt    
  0x000000000369fa72: hlt    
  0x000000000369fa73: hlt    
  0x000000000369fa74: hlt    
  0x000000000369fa75: hlt    
  0x000000000369fa76: hlt    
  0x000000000369fa77: hlt    
<nmethod compile_id='12' compiler='C1' level='3' entry='0x000000000369f660' size='1936' address='0x000000000369f4d0' relocation_offset='288' insts_offset='400' stub_offset='1264' scopes_data_offset='1464' scopes_pcs_offset='1632' dependencies_offset='1904' nul_chk_table_offset='1912' method='java/util/HashMap get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='23' count='1408' iicount='1408' stamp='0.727'/>
<writer thread='4360'/>
<task_queued compile_id='14' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='29440' iicount='29440' stamp='0.728' comment='tiered' hot_count='29440'/>
<task_queued compile_id='15' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='41088' iicount='41088' stamp='0.728' comment='tiered' hot_count='41088'/>
<task_queued compile_id='16' method='java/nio/charset/CharsetDecoder &lt;init&gt; (Ljava/nio/charset/Charset;FF)V' bytes='10' count='256' iicount='256' level='3' stamp='0.728' comment='tiered' hot_count='256'/>
<task_queued compile_id='17' method='java/nio/charset/CharsetDecoder &lt;init&gt; (Ljava/nio/charset/Charset;FFLjava/lang/String;)V' bytes='108' count='256' iicount='256' level='3' stamp='0.728' comment='tiered' hot_count='256'/>
<task_queued compile_id='18' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='129664' iicount='129664' stamp='0.728' comment='tiered' hot_count='129664'/>
<writer thread='7332'/>
Decoding compiled method 0x000000000369ec10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c493160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;[C&apos;
  # parm1:    r9        = int
  # parm2:    rdi       = int
  #           [sp+0x70]  (sp of caller)
  0x000000000369edc0: mov    0x8(%rdx),%r10d
  0x000000000369edc4: shl    $0x3,%r10
  0x000000000369edc8: cmp    %rax,%r10
  0x000000000369edcb: jne    0x00000000035d5f60  ;   {runtime_call}
  0x000000000369edd1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000000369eddc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000000369ede0: mov    %eax,-0x6000(%rsp)
  0x000000000369ede7: push   %rbp
  0x000000000369ede8: sub    $0x60,%rsp
  0x000000000369edec: movabs $0x1c5c6540,%rsi
  0x000000000369edf6: mov    0x8(%rsi),%ebx
  0x000000000369edf9: add    $0x8,%ebx
  0x000000000369edfc: mov    %ebx,0x8(%rsi)
  0x000000000369edff: movabs $0x1c493158,%rsi   ;   {metadata({method} {0x000000001c493160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000000369ee09: and    $0x3ff8,%ebx
  0x000000000369ee0f: cmp    $0x0,%ebx
  0x000000000369ee12: je     0x000000000369ef66  ;*aload_0
                                                ; - java.lang.String::&lt;init&gt;@0 (line 190)

  0x000000000369ee18: cmp    $0x0,%r9d
  0x000000000369ee1c: jl     0x000000000369ef36  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@5 (line 191)

  0x000000000369ee22: cmp    $0x0,%edi
  0x000000000369ee25: jg     0x000000000369ee41  ;*ifgt
                                                ; - java.lang.String::&lt;init&gt;@18 (line 194)

  0x000000000369ee2b: cmp    $0x0,%edi
  0x000000000369ee2e: jl     0x000000000369ef06  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@22 (line 195)

  0x000000000369ee34: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ; implicit exception: dispatches to 0x000000000369ef7d
  0x000000000369ee38: cmp    %esi,%r9d
  0x000000000369ee3b: jle    0x000000000369ee9a  ;*if_icmpgt
                                                ; - java.lang.String::&lt;init&gt;@37 (line 198)

  0x000000000369ee41: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; implicit exception: dispatches to 0x000000000369ef82
  0x000000000369ee45: sub    %edi,%esi
  0x000000000369ee47: cmp    %esi,%r9d
  0x000000000369ee4a: jg     0x000000000369eed4  ;*if_icmple
                                                ; - java.lang.String::&lt;init&gt;@55 (line 204)

  0x000000000369ee50: mov    %rdx,0x38(%rsp)
  0x000000000369ee55: add    %r9d,%edi
  0x000000000369ee58: mov    %r8,%rdx
  0x000000000369ee5b: mov    %r9,%r8
  0x000000000369ee5e: mov    %rdi,%r9           ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)

  0x000000000369ee61: nop
  0x000000000369ee62: nop
  0x000000000369ee63: nop
  0x000000000369ee64: nop
  0x000000000369ee65: nop
  0x000000000369ee66: nop
  0x000000000369ee67: callq  0x00000000035d6620  ; OopMap{[56]=Oop off=172}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ;   {static_call}
  0x000000000369ee6c: mov    0x38(%rsp),%rdx
  0x000000000369ee71: mov    %rax,%r10
  0x000000000369ee74: shr    $0x3,%r10
  0x000000000369ee78: mov    %r10d,0xc(%rdx)
  0x000000000369ee7c: shr    $0x9,%rdx
  0x000000000369ee80: movabs $0xf32f000,%rax
  0x000000000369ee8a: movb   $0x0,(%rdx,%rax,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@78 (line 207)

  0x000000000369ee8e: add    $0x60,%rsp
  0x000000000369ee92: pop    %rbp
  0x000000000369ee93: test   %eax,-0x20aed99(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x000000000369ee99: retq                      ;*return
                                                ; - java.lang.String::&lt;init&gt;@81 (line 208)

  0x000000000369ee9a: movabs $0x76c10aa68,%rax  ;   {oop(&quot;&quot;)}
  0x000000000369eea4: mov    0xc(%rax),%eax     ; implicit exception: dispatches to 0x000000000369ef87
  0x000000000369eea7: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)

  0x000000000369eeab: mov    %rax,%r10
  0x000000000369eeae: shr    $0x3,%r10
  0x000000000369eeb2: mov    %r10d,0xc(%rdx)
  0x000000000369eeb6: shr    $0x9,%rdx
  0x000000000369eeba: movabs $0xf32f000,%rax
  0x000000000369eec4: movb   $0x0,(%rdx,%rax,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@46 (line 199)

  0x000000000369eec8: add    $0x60,%rsp
  0x000000000369eecc: pop    %rbp
  0x000000000369eecd: test   %eax,-0x20aedd3(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x000000000369eed3: retq                      ;*return
                                                ; - java.lang.String::&lt;init&gt;@49 (line 200)

  0x000000000369eed4: nopl   0x0(%rax)
  0x000000000369eed8: jmpq   0x000000000369ef9b  ;   {no_reloc}
  0x000000000369eedd: add    %al,(%rax)
  0x000000000369eedf: add    %al,(%rax)
  0x000000000369eee1: add    %ch,%cl
  0x000000000369eee3: mov    $0x41000000,%esi   ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)

  0x000000000369eee8: add    %ecx,%edi
  0x000000000369eeea: mov    %rdi,%r8
  0x000000000369eeed: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)

  0x000000000369eef0: mov    %rax,0x40(%rsp)
  0x000000000369eef5: nop
  0x000000000369eef6: nop
  0x000000000369eef7: callq  0x00000000035d61a0  ; OopMap{[64]=Oop off=316}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)
                                                ;   {optimized virtual_call}
  0x000000000369eefc: mov    0x40(%rsp),%rax
  0x000000000369ef01: jmpq   0x000000000369f029  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@68 (line 205)

  0x000000000369ef06: xchg   %ax,%ax
  0x000000000369ef08: jmpq   0x000000000369efc1  ;   {no_reloc}
  0x000000000369ef0d: add    %al,(%rax)
  0x000000000369ef0f: add    %al,(%rax)
  0x000000000369ef11: add    %ch,%cl
  0x000000000369ef13: mov    $0x0,%ah
  0x000000000369ef15: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)

  0x000000000369ef17: mov    %rdi,%r8
  0x000000000369ef1a: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)

  0x000000000369ef1d: mov    %rax,0x48(%rsp)
  0x000000000369ef22: nop
  0x000000000369ef23: nop
  0x000000000369ef24: nop
  0x000000000369ef25: nop
  0x000000000369ef26: nop
  0x000000000369ef27: callq  0x00000000035d61a0  ; OopMap{[72]=Oop off=364}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)
                                                ;   {optimized virtual_call}
  0x000000000369ef2c: mov    0x48(%rsp),%rax
  0x000000000369ef31: jmpq   0x000000000369f029  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@33 (line 196)

  0x000000000369ef36: xchg   %ax,%ax
  0x000000000369ef38: jmpq   0x000000000369efe7  ;   {no_reloc}
  0x000000000369ef3d: add    %al,(%rax)
  0x000000000369ef3f: add    %al,(%rax)
  0x000000000369ef41: add    %ch,%cl
  0x000000000369ef43: stos   %al,%es:(%rdi)
  0x000000000369ef44: add    %al,(%rax)
  0x000000000369ef46: add    %cl,-0x75(%rbp)    ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)

  0x000000000369ef49: rorl   $0xd0,-0x75(%rax)  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)

  0x000000000369ef4d: mov    %rax,0x50(%rsp)
  0x000000000369ef52: nop
  0x000000000369ef53: nop
  0x000000000369ef54: nop
  0x000000000369ef55: nop
  0x000000000369ef56: nop
  0x000000000369ef57: callq  0x00000000035d61a0  ; OopMap{[80]=Oop off=412}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)
                                                ;   {optimized virtual_call}
  0x000000000369ef5c: mov    0x50(%rsp),%rax
  0x000000000369ef61: jmpq   0x000000000369f029
  0x000000000369ef66: mov    %rsi,0x8(%rsp)
  0x000000000369ef6b: movq   $0xffffffffffffffff,(%rsp)
  0x000000000369ef73: callq  0x00000000036919e0  ; OopMap{rdx=Oop r8=Oop off=440}
                                                ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 190)
                                                ;   {runtime_call}
  0x000000000369ef78: jmpq   0x000000000369ee18
  0x000000000369ef7d: callq  0x000000000368d080  ; OopMap{rdx=Oop r8=Oop off=450}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ;   {runtime_call}
  0x000000000369ef82: callq  0x000000000368d080  ; OopMap{rdx=Oop r8=Oop off=455}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ;   {runtime_call}
  0x000000000369ef87: callq  0x000000000368d080  ; OopMap{rdx=Oop off=460}
                                                ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)
                                                ;   {runtime_call}
  0x000000000369ef8c: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000000369ef96: mov    $0xa050f00,%eax
  0x000000000369ef9b: callq  0x0000000003690920  ; OopMap{off=480}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x000000000369efa0: jmpq   0x000000000369eed8
  0x000000000369efa5: mov    %rdx,%rdx
  0x000000000369efa8: callq  0x000000000368d720  ; OopMap{off=493}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x000000000369efad: jmpq   0x000000000369eee7
  0x000000000369efb2: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000000369efbc: mov    $0xa050f00,%eax
  0x000000000369efc1: callq  0x0000000003690920  ; OopMap{off=518}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x000000000369efc6: jmpq   0x000000000369ef08
  0x000000000369efcb: mov    %rdx,%rdx
  0x000000000369efce: callq  0x000000000368d720  ; OopMap{off=531}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x000000000369efd3: jmpq   0x000000000369ef17
  0x000000000369efd8: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000000369efe2: mov    $0xa050f00,%eax
  0x000000000369efe7: callq  0x0000000003690920  ; OopMap{off=556}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x000000000369efec: jmpq   0x000000000369ef38
  0x000000000369eff1: mov    %rdx,%rdx
  0x000000000369eff4: callq  0x000000000368d720  ; OopMap{off=569}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x000000000369eff9: jmpq   0x000000000369ef47
  0x000000000369effe: nop
  0x000000000369efff: nop
  0x000000000369f000: mov    0x2a8(%r15),%rax
  0x000000000369f007: movabs $0x0,%r10
  0x000000000369f011: mov    %r10,0x2a8(%r15)
  0x000000000369f018: movabs $0x0,%r10
  0x000000000369f022: mov    %r10,0x2b0(%r15)
  0x000000000369f029: add    $0x60,%rsp
  0x000000000369f02d: pop    %rbp
  0x000000000369f02e: jmpq   0x000000000368c620  ;   {runtime_call}
  0x000000000369f033: hlt    
  0x000000000369f034: hlt    
  0x000000000369f035: hlt    
  0x000000000369f036: hlt    
  0x000000000369f037: hlt    
  0x000000000369f038: hlt    
  0x000000000369f039: hlt    
  0x000000000369f03a: hlt    
  0x000000000369f03b: hlt    
  0x000000000369f03c: hlt    
  0x000000000369f03d: hlt    
  0x000000000369f03e: hlt    
  0x000000000369f03f: hlt    
[Stub Code]
  0x000000000369f040: nop                       ;   {no_reloc}
  0x000000000369f041: nop
  0x000000000369f042: nop
  0x000000000369f043: nop
  0x000000000369f044: nop
  0x000000000369f045: movabs $0x0,%rbx          ;   {static_stub}
  0x000000000369f04f: jmpq   0x000000000369f04f  ;   {runtime_call}
  0x000000000369f054: nop
  0x000000000369f055: movabs $0x0,%rbx          ;   {static_stub}
  0x000000000369f05f: jmpq   0x000000000369f05f  ;   {runtime_call}
  0x000000000369f064: nop
  0x000000000369f065: movabs $0x0,%rbx          ;   {static_stub}
  0x000000000369f06f: jmpq   0x000000000369f06f  ;   {runtime_call}
  0x000000000369f074: nop
  0x000000000369f075: movabs $0x0,%rbx          ;   {static_stub}
  0x000000000369f07f: jmpq   0x000000000369f07f  ;   {runtime_call}
[Exception Handler]
  0x000000000369f084: callq  0x000000000368f1a0  ;   {runtime_call}
  0x000000000369f089: mov    %rsp,-0x28(%rsp)
  0x000000000369f08e: sub    $0x80,%rsp
  0x000000000369f095: mov    %rax,0x78(%rsp)
  0x000000000369f09a: mov    %rcx,0x70(%rsp)
  0x000000000369f09f: mov    %rdx,0x68(%rsp)
  0x000000000369f0a4: mov    %rbx,0x60(%rsp)
  0x000000000369f0a9: mov    %rbp,0x50(%rsp)
  0x000000000369f0ae: mov    %rsi,0x48(%rsp)
  0x000000000369f0b3: mov    %rdi,0x40(%rsp)
  0x000000000369f0b8: mov    %r8,0x38(%rsp)
  0x000000000369f0bd: mov    %r9,0x30(%rsp)
  0x000000000369f0c2: mov    %r10,0x28(%rsp)
  0x000000000369f0c7: mov    %r11,0x20(%rsp)
  0x000000000369f0cc: mov    %r12,0x18(%rsp)
  0x000000000369f0d1: mov    %r13,0x10(%rsp)
  0x000000000369f0d6: mov    %r14,0x8(%rsp)
  0x000000000369f0db: mov    %r15,(%rsp)
  0x000000000369f0df: movabs $0x553ec320,%rcx   ;   {external_word}
  0x000000000369f0e9: movabs $0x369f089,%rdx    ;   {internal_word}
  0x000000000369f0f3: mov    %rsp,%r8
  0x000000000369f0f6: and    $0xfffffffffffffff0,%rsp
  0x000000000369f0fa: callq  0x00000000550a41d0  ;   {runtime_call}
  0x000000000369f0ff: hlt    
[Deopt Handler Code]
  0x000000000369f100: movabs $0x369f100,%r10    ;   {section_word}
  0x000000000369f10a: push   %r10
  0x000000000369f10c: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x000000000369f111: hlt    
  0x000000000369f112: hlt    
  0x000000000369f113: hlt    
  0x000000000369f114: hlt    
  0x000000000369f115: hlt    
  0x000000000369f116: hlt    
  0x000000000369f117: hlt    
<nmethod compile_id='13' compiler='C1' level='2' entry='0x000000000369edc0' size='2216' address='0x000000000369ec10' relocation_offset='288' insts_offset='432' stub_offset='1072' scopes_data_offset='1296' scopes_pcs_offset='1568' dependencies_offset='2176' nul_chk_table_offset='2184' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='8455' iicount='8455' stamp='0.740'/>
<writer thread='4360'/>
<task_queued compile_id='19' method='java/lang/String getChars (II[CI)V' bytes='62' count='3840' iicount='3840' level='3' stamp='0.740' comment='tiered' hot_count='3840'/>
<writer thread='7332'/>
Decoding compiled method 0x0000000003695e90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c4941c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  # parm2:    rdi:rdi   = &apos;[C&apos;
  # parm3:    rsi       = int
  #           [sp+0x70]  (sp of caller)
  0x0000000003696040: mov    0x8(%rdx),%r10d
  0x0000000003696044: shl    $0x3,%r10
  0x0000000003696048: cmp    %rax,%r10
  0x000000000369604b: jne    0x00000000035d5f60  ;   {runtime_call}
  0x0000000003696051: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000000369605c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000003696060: mov    %eax,-0x6000(%rsp)
  0x0000000003696067: push   %rbp
  0x0000000003696068: sub    $0x60,%rsp
  0x000000000369606c: movabs $0x1c683ab8,%rbx   ;   {metadata(method data for {method} {0x000000001c4941c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000003696076: mov    0xdc(%rbx),%eax
  0x000000000369607c: add    $0x8,%eax
  0x000000000369607f: mov    %eax,0xdc(%rbx)
  0x0000000003696085: movabs $0x1c4941c0,%rbx   ;   {metadata({method} {0x000000001c4941c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x000000000369608f: and    $0x1ff8,%eax
  0x0000000003696095: cmp    $0x0,%eax
  0x0000000003696098: je     0x00000000036962ce  ;*iload_1
                                                ; - java.lang.String::getChars@0 (line 817)

  0x000000000369609e: cmp    $0x0,%r8d
  0x00000000036960a2: movabs $0x1c683ab8,%rbx   ;   {metadata(method data for {method} {0x000000001c4941c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000036960ac: movabs $0x108,%rax
  0x00000000036960b6: jge    0x00000000036960c6
  0x00000000036960bc: movabs $0x118,%rax
  0x00000000036960c6: mov    (%rbx,%rax,1),%rcx
  0x00000000036960ca: lea    0x1(%rcx),%rcx
  0x00000000036960ce: mov    %rcx,(%rbx,%rax,1)
  0x00000000036960d2: jl     0x000000000369628e  ;*ifge
                                                ; - java.lang.String::getChars@1 (line 817)

  0x00000000036960d8: mov    0xc(%rdx),%edx
  0x00000000036960db: shl    $0x3,%rdx          ;*getfield value
                                                ; - java.lang.String::getChars@15 (line 820)

  0x00000000036960df: mov    0xc(%rdx),%ebx     ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ; implicit exception: dispatches to 0x00000000036962e5
  0x00000000036960e2: cmp    %ebx,%r9d
  0x00000000036960e5: movabs $0x1c683ab8,%rbx   ;   {metadata(method data for {method} {0x000000001c4941c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000036960ef: movabs $0x138,%rax
  0x00000000036960f9: jle    0x0000000003696109
  0x00000000036960ff: movabs $0x148,%rax
  0x0000000003696109: mov    (%rbx,%rax,1),%rcx
  0x000000000369610d: lea    0x1(%rcx),%rcx
  0x0000000003696111: mov    %rcx,(%rbx,%rax,1)
  0x0000000003696115: jg     0x000000000369624e  ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)

  0x000000000369611b: cmp    %r9d,%r8d
  0x000000000369611e: movabs $0x1c683ab8,%rbx   ;   {metadata(method data for {method} {0x000000001c4941c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000003696128: movabs $0x168,%rax
  0x0000000003696132: jle    0x0000000003696142
  0x0000000003696138: movabs $0x178,%rax
  0x0000000003696142: mov    (%rbx,%rax,1),%rcx
  0x0000000003696146: lea    0x1(%rcx),%rcx
  0x000000000369614a: mov    %rcx,(%rbx,%rax,1)
  0x000000000369614e: jg     0x0000000003696202  ;*if_icmple
                                                ; - java.lang.String::getChars@33 (line 823)

  0x0000000003696154: movabs $0x1c683ab8,%rbx   ;   {metadata(method data for {method} {0x000000001c4941c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x000000000369615e: addq   $0x1,0x198(%rbx)
  0x0000000003696166: mov    %r9,%rbx
  0x0000000003696169: sub    %r8d,%ebx
  0x000000000369616c: mov    %rdi,%r9
  0x000000000369616f: mov    %rsi,%rdi
  0x0000000003696172: mov    %rbx,%rsi
  0x0000000003696175: test   %r9,%r9
  0x0000000003696178: je     0x00000000036962ea
  0x000000000369617e: test   %r8d,%r8d
  0x0000000003696181: jl     0x00000000036962ea
  0x0000000003696187: test   %edi,%edi
  0x0000000003696189: jl     0x00000000036962ea
  0x000000000369618f: lea    (%r8,%rsi,1),%rcx
  0x0000000003696193: cmp    0xc(%rdx),%ecx
  0x0000000003696196: ja     0x00000000036962ea
  0x000000000369619c: lea    (%rdi,%rsi,1),%rcx
  0x00000000036961a0: cmp    0xc(%r9),%ecx
  0x00000000036961a4: ja     0x00000000036962ea
  0x00000000036961aa: test   %esi,%esi
  0x00000000036961ac: jl     0x00000000036962ea
  0x00000000036961b2: je     0x00000000036961f6
  0x00000000036961b8: movslq %r8d,%r8
  0x00000000036961bb: movslq %edi,%rdi
  0x00000000036961be: lea    0x10(%rdx,%r8,2),%rcx
  0x00000000036961c3: lea    0x10(%r9,%rdi,2),%rdx
  0x00000000036961c8: mov    %rsi,%r8
  0x00000000036961cb: sub    $0x20,%rsp
  0x00000000036961cf: test   $0xf,%esp
  0x00000000036961d5: je     0x00000000036961ed
  0x00000000036961db: sub    $0x8,%rsp
  0x00000000036961df: callq  Stub::jshort_arraycopy  ;   {runtime_call}
  0x00000000036961e4: add    $0x8,%rsp
  0x00000000036961e8: jmpq   0x00000000036961f2
  0x00000000036961ed: callq  Stub::jshort_arraycopy  ;   {runtime_call}
  0x00000000036961f2: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)

  0x00000000036961f6: add    $0x60,%rsp
  0x00000000036961fa: pop    %rbp
  0x00000000036961fb: test   %eax,-0x20a6101(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x0000000003696201: retq                      ;*return
                                                ; - java.lang.String::getChars@61 (line 827)

  0x0000000003696202: nopw   0x0(%rax,%rax,1)
  0x0000000003696208: jmpq   0x0000000003696308  ;   {no_reloc}
  0x000000000369620d: add    %al,(%rax)
  0x000000000369620f: add    %al,(%rax)
  0x0000000003696211: add    %ch,%cl
  0x0000000003696213: sti    
  0x0000000003696214: add    %al,(%rax)
  0x0000000003696216: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::getChars@36 (line 824)

  0x0000000003696219: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x000000001c4941c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x000000000369621c: mov    $0x1c683a,%eax
  0x0000000003696221: add    %al,(%rax)
  0x0000000003696223: add    %cl,-0x7d(%rax)
  0x0000000003696226: xchg   %cl,0x1000001(%rax)
  0x000000000369622c: sub    %r8d,%r9d
  0x000000000369622f: mov    %r9,%r8
  0x0000000003696232: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@43 (line 824)

  0x0000000003696235: mov    %rax,0x38(%rsp)
  0x000000000369623a: nop
  0x000000000369623b: nop
  0x000000000369623c: nop
  0x000000000369623d: nop
  0x000000000369623e: nop
  0x000000000369623f: callq  0x00000000035d61a0  ; OopMap{[56]=Oop off=516}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@43 (line 824)
                                                ;   {optimized virtual_call}
  0x0000000003696244: mov    0x38(%rsp),%rax
  0x0000000003696249: jmpq   0x0000000003696396  ;*athrow
                                                ; - java.lang.String::getChars@46 (line 824)

  0x000000000369624e: xchg   %ax,%ax
  0x0000000003696250: jmpq   0x000000000369632e  ;   {no_reloc}
  0x0000000003696255: add    %al,(%rax)
  0x0000000003696257: add    %al,(%rax)
  0x0000000003696259: add    %ch,%cl
  0x000000000369625b: flds   (%rax)
  0x000000000369625d: add    %al,(%rax)         ;*new  ; - java.lang.String::getChars@22 (line 821)

  0x000000000369625f: mov    %rax,%r8
  0x0000000003696262: movabs $0x1c683ab8,%rdx   ;   {metadata(method data for {method} {0x000000001c4941c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x000000000369626c: addq   $0x1,0x158(%rdx)
  0x0000000003696274: mov    %r9,%r8
  0x0000000003696277: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@27 (line 821)

  0x000000000369627a: mov    %rax,0x40(%rsp)
  0x000000000369627f: callq  0x00000000035d61a0  ; OopMap{[64]=Oop off=580}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@27 (line 821)
                                                ;   {optimized virtual_call}
  0x0000000003696284: mov    0x40(%rsp),%rax
  0x0000000003696289: jmpq   0x0000000003696396  ;*athrow
                                                ; - java.lang.String::getChars@30 (line 821)

  0x000000000369628e: xchg   %ax,%ax
  0x0000000003696290: jmpq   0x0000000003696354  ;   {no_reloc}
  0x0000000003696295: add    %al,(%rax)
  0x0000000003696297: add    %al,(%rax)
  0x0000000003696299: add    %ch,%cl
  0x000000000369629b: mov    $0x48000000,%edi   ;*new  ; - java.lang.String::getChars@4 (line 818)

  0x00000000036962a0: mov    %eax,%edx
  0x00000000036962a2: movabs $0x1c683ab8,%rsi   ;   {metadata(method data for {method} {0x000000001c4941c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000036962ac: addq   $0x1,0x128(%rsi)
  0x00000000036962b4: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@9 (line 818)

  0x00000000036962b7: mov    %rax,0x48(%rsp)
  0x00000000036962bc: nop
  0x00000000036962bd: nop
  0x00000000036962be: nop
  0x00000000036962bf: callq  0x00000000035d61a0  ; OopMap{[72]=Oop off=644}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@9 (line 818)
                                                ;   {optimized virtual_call}
  0x00000000036962c4: mov    0x48(%rsp),%rax
  0x00000000036962c9: jmpq   0x0000000003696396
  0x00000000036962ce: mov    %rbx,0x8(%rsp)
  0x00000000036962d3: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036962db: callq  0x00000000036919e0  ; OopMap{rdx=Oop rdi=Oop off=672}
                                                ;*synchronization entry
                                                ; - java.lang.String::getChars@-1 (line 817)
                                                ;   {runtime_call}
  0x00000000036962e0: jmpq   0x000000000369609e
  0x00000000036962e5: callq  0x000000000368d080  ; OopMap{rdi=Oop rdx=Oop off=682}
                                                ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ;   {runtime_call}
  0x00000000036962ea: nop
  0x00000000036962eb: nop
  0x00000000036962ec: nop
  0x00000000036962ed: nop
  0x00000000036962ee: nop
  0x00000000036962ef: callq  0x00000000035d6620  ; OopMap{off=692}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ;   {static_call}
  0x00000000036962f4: jmpq   0x00000000036961f6
  0x00000000036962f9: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000003696303: mov    $0xa050f00,%eax
  0x0000000003696308: callq  0x0000000003690920  ; OopMap{off=717}
                                                ;*new  ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x000000000369630d: jmpq   0x0000000003696208
  0x0000000003696312: mov    %rdx,%rdx
  0x0000000003696315: callq  0x000000000368d720  ; OopMap{off=730}
                                                ;*new  ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x000000000369631a: jmpq   0x0000000003696217
  0x000000000369631f: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000003696329: mov    $0xa050f00,%eax
  0x000000000369632e: callq  0x0000000003690920  ; OopMap{off=755}
                                                ;*new  ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x0000000003696333: jmpq   0x0000000003696250
  0x0000000003696338: mov    %rdx,%rdx
  0x000000000369633b: callq  0x000000000368d720  ; OopMap{off=768}
                                                ;*new  ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x0000000003696340: jmpq   0x000000000369625f
  0x0000000003696345: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000000369634f: mov    $0xa050f00,%eax
  0x0000000003696354: callq  0x0000000003690920  ; OopMap{off=793}
                                                ;*new  ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x0000000003696359: jmpq   0x0000000003696290
  0x000000000369635e: mov    %rdx,%rdx
  0x0000000003696361: callq  0x000000000368d720  ; OopMap{off=806}
                                                ;*new  ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x0000000003696366: jmpq   0x000000000369629f
  0x000000000369636b: nop
  0x000000000369636c: nop
  0x000000000369636d: mov    0x2a8(%r15),%rax
  0x0000000003696374: movabs $0x0,%r10
  0x000000000369637e: mov    %r10,0x2a8(%r15)
  0x0000000003696385: movabs $0x0,%r10
  0x000000000369638f: mov    %r10,0x2b0(%r15)
  0x0000000003696396: add    $0x60,%rsp
  0x000000000369639a: pop    %rbp
  0x000000000369639b: jmpq   0x000000000368c620  ;   {runtime_call}
[Stub Code]
  0x00000000036963a0: nop                       ;   {no_reloc}
  0x00000000036963a1: nop
  0x00000000036963a2: nop
  0x00000000036963a3: nop
  0x00000000036963a4: nop
  0x00000000036963a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036963af: jmpq   0x00000000036963af  ;   {runtime_call}
  0x00000000036963b4: nop
  0x00000000036963b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036963bf: jmpq   0x00000000036963bf  ;   {runtime_call}
  0x00000000036963c4: nop
  0x00000000036963c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036963cf: jmpq   0x00000000036963cf  ;   {runtime_call}
  0x00000000036963d4: nop
  0x00000000036963d5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036963df: jmpq   0x00000000036963df  ;   {runtime_call}
[Exception Handler]
  0x00000000036963e4: callq  0x000000000368f1a0  ;   {runtime_call}
  0x00000000036963e9: mov    %rsp,-0x28(%rsp)
  0x00000000036963ee: sub    $0x80,%rsp
  0x00000000036963f5: mov    %rax,0x78(%rsp)
  0x00000000036963fa: mov    %rcx,0x70(%rsp)
  0x00000000036963ff: mov    %rdx,0x68(%rsp)
  0x0000000003696404: mov    %rbx,0x60(%rsp)
  0x0000000003696409: mov    %rbp,0x50(%rsp)
  0x000000000369640e: mov    %rsi,0x48(%rsp)
  0x0000000003696413: mov    %rdi,0x40(%rsp)
  0x0000000003696418: mov    %r8,0x38(%rsp)
  0x000000000369641d: mov    %r9,0x30(%rsp)
  0x0000000003696422: mov    %r10,0x28(%rsp)
  0x0000000003696427: mov    %r11,0x20(%rsp)
  0x000000000369642c: mov    %r12,0x18(%rsp)
  0x0000000003696431: mov    %r13,0x10(%rsp)
  0x0000000003696436: mov    %r14,0x8(%rsp)
  0x000000000369643b: mov    %r15,(%rsp)
  0x000000000369643f: movabs $0x553ec320,%rcx   ;   {external_word}
  0x0000000003696449: movabs $0x36963e9,%rdx    ;   {internal_word}
  0x0000000003696453: mov    %rsp,%r8
  0x0000000003696456: and    $0xfffffffffffffff0,%rsp
  0x000000000369645a: callq  0x00000000550a41d0  ;   {runtime_call}
  0x000000000369645f: hlt    
[Deopt Handler Code]
  0x0000000003696460: movabs $0x3696460,%r10    ;   {section_word}
  0x000000000369646a: push   %r10
  0x000000000369646c: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x0000000003696471: hlt    
  0x0000000003696472: hlt    
  0x0000000003696473: hlt    
  0x0000000003696474: hlt    
  0x0000000003696475: hlt    
  0x0000000003696476: hlt    
  0x0000000003696477: hlt    
<nmethod compile_id='19' compiler='C1' level='3' entry='0x0000000003696040' size='2256' address='0x0000000003695e90' relocation_offset='288' insts_offset='432' stub_offset='1296' scopes_data_offset='1520' scopes_pcs_offset='1752' dependencies_offset='2232' nul_chk_table_offset='2240' method='java/lang/String getChars (II[CI)V' bytes='62' count='3851' iicount='3851' stamp='0.753'/>
<writer thread='4360'/>
<task_queued compile_id='20' method='java/lang/String length ()I' bytes='6' count='40832' iicount='40832' stamp='0.753' comment='tiered' hot_count='40832'/>
<writer thread='7332'/>
Decoding compiled method 0x0000000003695ad0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c5cfd18} &apos;&lt;init&gt;&apos; &apos;(Ljava/nio/charset/Charset;FF)V&apos; in &apos;java/nio/charset/CharsetDecoder&apos;
  # this:     rdx:rdx   = &apos;java/nio/charset/CharsetDecoder&apos;
  # parm0:    r8:r8     = &apos;java/nio/charset/Charset&apos;
  # parm1:    xmm0      = float
  # parm2:    xmm1      = float
  #           [sp+0x50]  (sp of caller)
  0x0000000003695c40: mov    0x8(%rdx),%r10d
  0x0000000003695c44: shl    $0x3,%r10
  0x0000000003695c48: cmp    %rax,%r10
  0x0000000003695c4b: jne    0x00000000035d5f60  ;   {runtime_call}
  0x0000000003695c51: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000003695c5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000003695c60: mov    %eax,-0x6000(%rsp)
  0x0000000003695c67: push   %rbp
  0x0000000003695c68: sub    $0x40,%rsp
  0x0000000003695c6c: movabs $0x1c7748a0,%r9    ;   {metadata(method data for {method} {0x000000001c5cfd18} &apos;&lt;init&gt;&apos; &apos;(Ljava/nio/charset/Charset;FF)V&apos; in &apos;java/nio/charset/CharsetDecoder&apos;)}
  0x0000000003695c76: mov    0xdc(%r9),%esi
  0x0000000003695c7d: add    $0x8,%esi
  0x0000000003695c80: mov    %esi,0xdc(%r9)
  0x0000000003695c87: movabs $0x1c5cfd10,%r9    ;   {metadata({method} {0x000000001c5cfd18} &apos;&lt;init&gt;&apos; &apos;(Ljava/nio/charset/Charset;FF)V&apos; in &apos;java/nio/charset/CharsetDecoder&apos;)}
  0x0000000003695c91: and    $0x1ff8,%esi
  0x0000000003695c97: cmp    $0x0,%esi
  0x0000000003695c9a: je     0x0000000003695cd0  ;*aload_0
                                                ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@0 (line 233)

  0x0000000003695ca0: mov    %rdx,%r9
  0x0000000003695ca3: movabs $0x1c7748a0,%rsi   ;   {metadata(method data for {method} {0x000000001c5cfd18} &apos;&lt;init&gt;&apos; &apos;(Ljava/nio/charset/Charset;FF)V&apos; in &apos;java/nio/charset/CharsetDecoder&apos;)}
  0x0000000003695cad: addq   $0x1,0x108(%rsi)
  0x0000000003695cb5: movabs $0x76c153fd8,%r9   ;*invokespecial &lt;init&gt;
                                                ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@6 (line 233)
                                                ;   {oop(&quot;˝&quot;)}
  0x0000000003695cbf: callq  0x00000000035d61a0  ; OopMap{off=132}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@6 (line 233)
                                                ;   {optimized virtual_call}
  0x0000000003695cc4: add    $0x40,%rsp
  0x0000000003695cc8: pop    %rbp
  0x0000000003695cc9: test   %eax,-0x20a5bcf(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x0000000003695ccf: retq   
  0x0000000003695cd0: mov    %r9,0x8(%rsp)
  0x0000000003695cd5: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003695cdd: callq  0x00000000036919e0  ; OopMap{rdx=Oop r8=Oop off=162}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@-1 (line 233)
                                                ;   {runtime_call}
  0x0000000003695ce2: jmp    0x0000000003695ca0
  0x0000000003695ce4: nop
  0x0000000003695ce5: nop
  0x0000000003695ce6: mov    0x2a8(%r15),%rax
  0x0000000003695ced: movabs $0x0,%r10
  0x0000000003695cf7: mov    %r10,0x2a8(%r15)
  0x0000000003695cfe: movabs $0x0,%r10
  0x0000000003695d08: mov    %r10,0x2b0(%r15)
  0x0000000003695d0f: add    $0x40,%rsp
  0x0000000003695d13: pop    %rbp
  0x0000000003695d14: jmpq   0x000000000368c620  ;   {runtime_call}
  0x0000000003695d19: hlt    
  0x0000000003695d1a: hlt    
  0x0000000003695d1b: hlt    
  0x0000000003695d1c: hlt    
  0x0000000003695d1d: hlt    
  0x0000000003695d1e: hlt    
  0x0000000003695d1f: hlt    
[Stub Code]
  0x0000000003695d20: nop                       ;   {no_reloc}
  0x0000000003695d21: nop
  0x0000000003695d22: nop
  0x0000000003695d23: nop
  0x0000000003695d24: nop
  0x0000000003695d25: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000003695d2f: jmpq   0x0000000003695d2f  ;   {runtime_call}
[Exception Handler]
  0x0000000003695d34: callq  0x000000000368f1a0  ;   {runtime_call}
  0x0000000003695d39: mov    %rsp,-0x28(%rsp)
  0x0000000003695d3e: sub    $0x80,%rsp
  0x0000000003695d45: mov    %rax,0x78(%rsp)
  0x0000000003695d4a: mov    %rcx,0x70(%rsp)
  0x0000000003695d4f: mov    %rdx,0x68(%rsp)
  0x0000000003695d54: mov    %rbx,0x60(%rsp)
  0x0000000003695d59: mov    %rbp,0x50(%rsp)
  0x0000000003695d5e: mov    %rsi,0x48(%rsp)
  0x0000000003695d63: mov    %rdi,0x40(%rsp)
  0x0000000003695d68: mov    %r8,0x38(%rsp)
  0x0000000003695d6d: mov    %r9,0x30(%rsp)
  0x0000000003695d72: mov    %r10,0x28(%rsp)
  0x0000000003695d77: mov    %r11,0x20(%rsp)
  0x0000000003695d7c: mov    %r12,0x18(%rsp)
  0x0000000003695d81: mov    %r13,0x10(%rsp)
  0x0000000003695d86: mov    %r14,0x8(%rsp)
  0x0000000003695d8b: mov    %r15,(%rsp)
  0x0000000003695d8f: movabs $0x553ec320,%rcx   ;   {external_word}
  0x0000000003695d99: movabs $0x3695d39,%rdx    ;   {internal_word}
  0x0000000003695da3: mov    %rsp,%r8
  0x0000000003695da6: and    $0xfffffffffffffff0,%rsp
  0x0000000003695daa: callq  0x00000000550a41d0  ;   {runtime_call}
  0x0000000003695daf: hlt    
[Deopt Handler Code]
  0x0000000003695db0: movabs $0x3695db0,%r10    ;   {section_word}
  0x0000000003695dba: push   %r10
  0x0000000003695dbc: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x0000000003695dc1: hlt    
  0x0000000003695dc2: hlt    
  0x0000000003695dc3: hlt    
  0x0000000003695dc4: hlt    
  0x0000000003695dc5: hlt    
  0x0000000003695dc6: hlt    
  0x0000000003695dc7: hlt    
<nmethod compile_id='16' compiler='C1' level='3' entry='0x0000000003695c40' size='920' address='0x0000000003695ad0' relocation_offset='288' insts_offset='368' stub_offset='592' scopes_data_offset='768' scopes_pcs_offset='816' dependencies_offset='912' method='java/nio/charset/CharsetDecoder &lt;init&gt; (Ljava/nio/charset/Charset;FF)V' bytes='10' count='256' iicount='256' stamp='0.757'/>
Decoding compiled method 0x00000000036a1ed0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c5cfc80} &apos;&lt;init&gt;&apos; &apos;(Ljava/nio/charset/Charset;FFLjava/lang/String;)V&apos; in &apos;java/nio/charset/CharsetDecoder&apos;
  # this:     rdx:rdx   = &apos;java/nio/charset/CharsetDecoder&apos;
  # parm0:    r8:r8     = &apos;java/nio/charset/Charset&apos;
  # parm1:    xmm0      = float
  # parm2:    xmm1      = float
  # parm3:    r9:r9     = &apos;java/lang/String&apos;
  #           [sp+0x70]  (sp of caller)
  0x00000000036a20a0: mov    0x8(%rdx),%r10d
  0x00000000036a20a4: shl    $0x3,%r10
  0x00000000036a20a8: cmp    %rax,%r10
  0x00000000036a20ab: jne    0x00000000035d5f60  ;   {runtime_call}
  0x00000000036a20b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000036a20bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000036a20c0: mov    %eax,-0x6000(%rsp)
  0x00000000036a20c7: push   %rbp
  0x00000000036a20c8: sub    $0x60,%rsp
  0x00000000036a20cc: movabs $0x1c774a08,%rsi   ;   {metadata(method data for {method} {0x000000001c5cfc80} &apos;&lt;init&gt;&apos; &apos;(Ljava/nio/charset/Charset;FFLjava/lang/String;)V&apos; in &apos;java/nio/charset/CharsetDecoder&apos;)}
  0x00000000036a20d6: mov    0xdc(%rsi),%edi
  0x00000000036a20dc: add    $0x8,%edi
  0x00000000036a20df: mov    %edi,0xdc(%rsi)
  0x00000000036a20e5: movabs $0x1c5cfc78,%rsi   ;   {metadata({method} {0x000000001c5cfc80} &apos;&lt;init&gt;&apos; &apos;(Ljava/nio/charset/Charset;FFLjava/lang/String;)V&apos; in &apos;java/nio/charset/CharsetDecoder&apos;)}
  0x00000000036a20ef: and    $0x1ff8,%edi
  0x00000000036a20f5: cmp    $0x0,%edi
  0x00000000036a20f8: je     0x00000000036a25be  ;*aload_0
                                                ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@0 (line 190)

  0x00000000036a20fe: mov    %rdx,%rsi
  0x00000000036a2101: movabs $0x1c774a08,%rdi   ;   {metadata(method data for {method} {0x000000001c5cfc80} &apos;&lt;init&gt;&apos; &apos;(Ljava/nio/charset/Charset;FFLjava/lang/String;)V&apos; in &apos;java/nio/charset/CharsetDecoder&apos;)}
  0x00000000036a210b: addq   $0x1,0x108(%rdi)
  0x00000000036a2113: movabs $0x1c5c3748,%rsi   ;   {metadata(method data for {method} {0x000000001c490488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000036a211d: mov    0xdc(%rsi),%edi
  0x00000000036a2123: add    $0x8,%edi
  0x00000000036a2126: mov    %edi,0xdc(%rsi)
  0x00000000036a212c: movabs $0x1c490480,%rsi   ;   {metadata({method} {0x000000001c490488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000036a2136: and    $0x7ffff8,%edi
  0x00000000036a213c: cmp    $0x0,%edi
  0x00000000036a213f: je     0x00000000036a25d5
  0x00000000036a2145: movabs $0x76c154140,%rsi  ;   {oop(a &apos;java/nio/charset/CodingErrorAction&apos;)}
  0x00000000036a214f: movabs $0x76c154140,%r10  ;   {oop(a &apos;java/nio/charset/CodingErrorAction&apos;)}
  0x00000000036a2159: shr    $0x3,%r10
  0x00000000036a215d: mov    %r10d,0x20(%rdx)
  0x00000000036a2161: mov    %rdx,%rsi
  0x00000000036a2164: shr    $0x9,%rsi
  0x00000000036a2168: movabs $0xf32f000,%rdi
  0x00000000036a2172: movb   $0x0,(%rsi,%rdi,1)  ;*putfield malformedInputAction
                                                ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@8 (line 144)

  0x00000000036a2176: movabs $0x76c154140,%r10  ;   {oop(a &apos;java/nio/charset/CodingErrorAction&apos;)}
  0x00000000036a2180: shr    $0x3,%r10
  0x00000000036a2184: mov    %r10d,0x24(%rdx)
  0x00000000036a2188: mov    %rdx,%rsi
  0x00000000036a218b: shr    $0x9,%rsi
  0x00000000036a218f: movb   $0x0,(%rsi,%rdi,1)  ;*putfield unmappableCharacterAction
                                                ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@15 (line 146)

  0x00000000036a2193: movl   $0x0,0x14(%rdx)    ;*putfield state
                                                ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@20 (line 156)

  0x00000000036a219a: mov    %r8,%r10
  0x00000000036a219d: shr    $0x3,%r10
  0x00000000036a21a1: mov    %r10d,0x18(%rdx)
  0x00000000036a21a5: mov    %rdx,%rsi
  0x00000000036a21a8: shr    $0x9,%rsi
  0x00000000036a21ac: movb   $0x0,(%rsi,%rdi,1)  ;*putfield charset
                                                ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@25 (line 191)

  0x00000000036a21b0: vxorps %xmm2,%xmm2,%xmm2
  0x00000000036a21b4: vucomiss %xmm2,%xmm0
  0x00000000036a21b8: mov    $0x1,%esi
  0x00000000036a21bd: jp     0x00000000036a21d6
  0x00000000036a21c3: ja     0x00000000036a21d6
  0x00000000036a21c9: mov    $0x0,%esi
  0x00000000036a21ce: je     0x00000000036a21d6
  0x00000000036a21d4: dec    %esi               ;*fcmpg
                                                ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@30 (line 192)

  0x00000000036a21d6: cmp    $0x0,%esi
  0x00000000036a21d9: movabs $0x1c774a08,%rsi   ;   {metadata(method data for {method} {0x000000001c5cfc80} &apos;&lt;init&gt;&apos; &apos;(Ljava/nio/charset/Charset;FFLjava/lang/String;)V&apos; in &apos;java/nio/charset/CharsetDecoder&apos;)}
  0x00000000036a21e3: movabs $0x118,%rdi
  0x00000000036a21ed: jg     0x00000000036a21fd
  0x00000000036a21f3: movabs $0x128,%rdi
  0x00000000036a21fd: mov    (%rsi,%rdi,1),%rbx
  0x00000000036a2201: lea    0x1(%rbx),%rbx
  0x00000000036a2205: mov    %rbx,(%rsi,%rdi,1)
  0x00000000036a2209: jle    0x00000000036a253e  ;*ifgt
                                                ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@31 (line 192)

  0x00000000036a220f: vxorps %xmm2,%xmm2,%xmm2
  0x00000000036a2213: vucomiss %xmm2,%xmm1
  0x00000000036a2217: mov    $0x1,%esi
  0x00000000036a221c: jp     0x00000000036a2235
  0x00000000036a2222: ja     0x00000000036a2235
  0x00000000036a2228: mov    $0x0,%esi
  0x00000000036a222d: je     0x00000000036a2235
  0x00000000036a2233: dec    %esi               ;*fcmpg
                                                ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@46 (line 195)

  0x00000000036a2235: cmp    $0x0,%esi
  0x00000000036a2238: movabs $0x1c774a08,%rsi   ;   {metadata(method data for {method} {0x000000001c5cfc80} &apos;&lt;init&gt;&apos; &apos;(Ljava/nio/charset/Charset;FFLjava/lang/String;)V&apos; in &apos;java/nio/charset/CharsetDecoder&apos;)}
  0x00000000036a2242: movabs $0x148,%rdi
  0x00000000036a224c: jg     0x00000000036a225c
  0x00000000036a2252: movabs $0x158,%rdi
  0x00000000036a225c: mov    (%rsi,%rdi,1),%rbx
  0x00000000036a2260: lea    0x1(%rbx),%rbx
  0x00000000036a2264: mov    %rbx,(%rsi,%rdi,1)
  0x00000000036a2268: jle    0x00000000036a24be  ;*ifgt
                                                ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@47 (line 195)

  0x00000000036a226e: mov    %r9,0x30(%rsp)
  0x00000000036a2273: vmovss %xmm1,0x54(%rsp)
  0x00000000036a2279: vmovss %xmm0,0x50(%rsp)
  0x00000000036a227f: mov    %rdx,0x28(%rsp)
  0x00000000036a2284: movabs $0x1c774a08,%rsi   ;   {metadata(method data for {method} {0x000000001c5cfc80} &apos;&lt;init&gt;&apos; &apos;(Ljava/nio/charset/Charset;FFLjava/lang/String;)V&apos; in &apos;java/nio/charset/CharsetDecoder&apos;)}
  0x00000000036a228e: addq   $0x1,0x178(%rsi)
  0x00000000036a2296: movabs $0x76c146e08,%rdx  ;*invokestatic atBugLevel
                                                ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@62 (line 198)
                                                ;   {oop(&quot;1.4&quot;)}
  0x00000000036a22a0: nop
  0x00000000036a22a1: nop
  0x00000000036a22a2: nop
  0x00000000036a22a3: nop
  0x00000000036a22a4: nop
  0x00000000036a22a5: nop
  0x00000000036a22a6: nop
  0x00000000036a22a7: callq  0x00000000035d6620  ; OopMap{[40]=Oop [48]=Oop off=524}
                                                ;*invokestatic atBugLevel
                                                ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@62 (line 198)
                                                ;   {static_call}
  0x00000000036a22ac: cmp    $0x0,%eax
  0x00000000036a22af: movabs $0x1c774a08,%r8    ;   {metadata(method data for {method} {0x000000001c5cfc80} &apos;&lt;init&gt;&apos; &apos;(Ljava/nio/charset/Charset;FFLjava/lang/String;)V&apos; in &apos;java/nio/charset/CharsetDecoder&apos;)}
  0x00000000036a22b9: movabs $0x188,%rdx
  0x00000000036a22c3: jne    0x00000000036a22d3
  0x00000000036a22c9: movabs $0x198,%rdx
  0x00000000036a22d3: mov    (%r8,%rdx,1),%rsi
  0x00000000036a22d7: lea    0x1(%rsi),%rsi
  0x00000000036a22db: mov    %rsi,(%r8,%rdx,1)
  0x00000000036a22df: je     0x00000000036a22fb  ;*ifne
                                                ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@65 (line 198)

  0x00000000036a22e5: mov    0x30(%rsp),%r9
  0x00000000036a22ea: vmovss 0x54(%rsp),%xmm1
  0x00000000036a22f0: vmovss 0x50(%rsp),%xmm0
  0x00000000036a22f6: jmpq   0x00000000036a236b  ;*aload_0
                                                ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@84 (line 204)

  0x00000000036a22fb: vmovss 0x54(%rsp),%xmm1
  0x00000000036a2301: vmovss 0x50(%rsp),%xmm0
  0x00000000036a2307: vucomiss %xmm1,%xmm0
  0x00000000036a230b: mov    $0xffffffff,%r8d
  0x00000000036a2311: jp     0x00000000036a232c
  0x00000000036a2317: jb     0x00000000036a232c
  0x00000000036a231d: mov    $0x0,%r8d
  0x00000000036a2323: je     0x00000000036a232c
  0x00000000036a2329: inc    %r8                ;*fcmpl
                                                ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@70 (line 199)

  0x00000000036a232c: cmp    $0x0,%r8d
  0x00000000036a2330: movabs $0x1c774a08,%r8    ;   {metadata(method data for {method} {0x000000001c5cfc80} &apos;&lt;init&gt;&apos; &apos;(Ljava/nio/charset/Charset;FFLjava/lang/String;)V&apos; in &apos;java/nio/charset/CharsetDecoder&apos;)}
  0x00000000036a233a: movabs $0x1a8,%rdx
  0x00000000036a2344: jle    0x00000000036a2354
  0x00000000036a234a: movabs $0x1b8,%rdx
  0x00000000036a2354: mov    (%r8,%rdx,1),%rsi
  0x00000000036a2358: lea    0x1(%rsi),%rsi
  0x00000000036a235c: mov    %rsi,(%r8,%rdx,1)
  0x00000000036a2360: jg     0x00000000036a2440  ;*ifle
                                                ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@71 (line 199)

  0x00000000036a2366: mov    0x30(%rsp),%r9
  0x00000000036a236b: mov    0x28(%rsp),%rdx
  0x00000000036a2370: mov    %r9,%r10
  0x00000000036a2373: shr    $0x3,%r10
  0x00000000036a2377: mov    %r10d,0x1c(%rdx)
  0x00000000036a237b: mov    %rdx,%r8
  0x00000000036a237e: shr    $0x9,%r8
  0x00000000036a2382: movabs $0xf32f000,%rsi
  0x00000000036a238c: movb   $0x0,(%r8,%rsi,1)  ;*putfield replacement
                                                ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@87 (line 204)

  0x00000000036a2391: vmovss %xmm0,0xc(%rdx)    ;*putfield averageCharsPerByte
                                                ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@92 (line 205)

  0x00000000036a2396: vmovss %xmm1,0x10(%rdx)   ;*putfield maxCharsPerByte
                                                ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@97 (line 206)

  0x00000000036a239b: mov    %rdx,%r8
  0x00000000036a239e: movabs $0x1c774a08,%rsi   ;   {metadata(method data for {method} {0x000000001c5cfc80} &apos;&lt;init&gt;&apos; &apos;(Ljava/nio/charset/Charset;FFLjava/lang/String;)V&apos; in &apos;java/nio/charset/CharsetDecoder&apos;)}
  0x00000000036a23a8: mov    0x8(%r8),%r8d
  0x00000000036a23ac: shl    $0x3,%r8
  0x00000000036a23b0: cmp    0x1e0(%rsi),%r8
  0x00000000036a23b7: jne    0x00000000036a23c6
  0x00000000036a23b9: addq   $0x1,0x1e8(%rsi)
  0x00000000036a23c1: jmpq   0x00000000036a242c
  0x00000000036a23c6: cmp    0x1f0(%rsi),%r8
  0x00000000036a23cd: jne    0x00000000036a23dc
  0x00000000036a23cf: addq   $0x1,0x1f8(%rsi)
  0x00000000036a23d7: jmpq   0x00000000036a242c
  0x00000000036a23dc: cmpq   $0x0,0x1e0(%rsi)
  0x00000000036a23e7: jne    0x00000000036a2400
  0x00000000036a23e9: mov    %r8,0x1e0(%rsi)
  0x00000000036a23f0: movq   $0x1,0x1e8(%rsi)
  0x00000000036a23fb: jmpq   0x00000000036a242c
  0x00000000036a2400: cmpq   $0x0,0x1f0(%rsi)
  0x00000000036a240b: jne    0x00000000036a2424
  0x00000000036a240d: mov    %r8,0x1f0(%rsi)
  0x00000000036a2414: movq   $0x1,0x1f8(%rsi)
  0x00000000036a241f: jmpq   0x00000000036a242c
  0x00000000036a2424: addq   $0x1,0x1d8(%rsi)
  0x00000000036a242c: mov    %r9,%r8            ;*invokevirtual replaceWith
                                                ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@103 (line 207)

  0x00000000036a242f: callq  0x00000000035d61a0  ; OopMap{off=916}
                                                ;*invokevirtual replaceWith
                                                ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@103 (line 207)
                                                ;   {optimized virtual_call}
  0x00000000036a2434: add    $0x60,%rsp
  0x00000000036a2438: pop    %rbp
  0x00000000036a2439: test   %eax,-0x20b233f(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036a243f: retq                      ;*return
                                                ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@107 (line 208)

  0x00000000036a2440: jmpq   0x00000000036a25fb  ;   {no_reloc}
  0x00000000036a2445: add    %al,(%rax)
  0x00000000036a2447: add    %al,(%rax)
  0x00000000036a2449: add    %cl,-0x75(%rcx)
  0x00000000036a244c: rex.RXB (bad) 
  0x00000000036a244e: lea    0x20(%rax),%rdi
  0x00000000036a2452: cmp    0x70(%r15),%rdi
  0x00000000036a2456: ja     0x00000000036a2605
  0x00000000036a245c: mov    %rdi,0x60(%r15)
  0x00000000036a2460: mov    0xa8(%rdx),%rcx
  0x00000000036a2467: mov    %rcx,(%rax)
  0x00000000036a246a: mov    %rdx,%rcx
  0x00000000036a246d: shr    $0x3,%rcx
  0x00000000036a2471: mov    %ecx,0x8(%rax)
  0x00000000036a2474: xor    %rcx,%rcx
  0x00000000036a2477: mov    %ecx,0xc(%rax)
  0x00000000036a247a: xor    %rcx,%rcx
  0x00000000036a247d: mov    %rcx,0x10(%rax)
  0x00000000036a2481: mov    %rcx,0x18(%rax)    ;*new  ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@74 (line 200)

  0x00000000036a2485: mov    %rax,%r8
  0x00000000036a2488: movabs $0x1c774a08,%rdx   ;   {metadata(method data for {method} {0x000000001c5cfc80} &apos;&lt;init&gt;&apos; &apos;(Ljava/nio/charset/Charset;FFLjava/lang/String;)V&apos; in &apos;java/nio/charset/CharsetDecoder&apos;)}
  0x00000000036a2492: addq   $0x1,0x1c8(%rdx)
  0x00000000036a249a: movabs $0x76ca4e1b8,%r8   ;   {oop(&quot;averageCharsPerByte exceeds maxCharsPerByte&quot;)}
  0x00000000036a24a4: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@80 (line 200)

  0x00000000036a24a7: mov    %rax,0x38(%rsp)
  0x00000000036a24ac: nop
  0x00000000036a24ad: nop
  0x00000000036a24ae: nop
  0x00000000036a24af: callq  0x00000000035d61a0  ; OopMap{[56]=Oop off=1044}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@80 (line 200)
                                                ;   {optimized virtual_call}
  0x00000000036a24b4: mov    0x38(%rsp),%rax
  0x00000000036a24b9: jmpq   0x00000000036a2689  ;*athrow
                                                ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@83 (line 200)

  0x00000000036a24be: xchg   %ax,%ax
  0x00000000036a24c0: jmpq   0x00000000036a2621  ;   {no_reloc}
  0x00000000036a24c5: add    %al,(%rax)
  0x00000000036a24c7: add    %al,(%rax)
  0x00000000036a24c9: add    %cl,-0x75(%rcx)
  0x00000000036a24cc: rex.RXB (bad) 
  0x00000000036a24ce: lea    0x20(%rax),%rdi
  0x00000000036a24d2: cmp    0x70(%r15),%rdi
  0x00000000036a24d6: ja     0x00000000036a262b
  0x00000000036a24dc: mov    %rdi,0x60(%r15)
  0x00000000036a24e0: mov    0xa8(%rdx),%rcx
  0x00000000036a24e7: mov    %rcx,(%rax)
  0x00000000036a24ea: mov    %rdx,%rcx
  0x00000000036a24ed: shr    $0x3,%rcx
  0x00000000036a24f1: mov    %ecx,0x8(%rax)
  0x00000000036a24f4: xor    %rcx,%rcx
  0x00000000036a24f7: mov    %ecx,0xc(%rax)
  0x00000000036a24fa: xor    %rcx,%rcx
  0x00000000036a24fd: mov    %rcx,0x10(%rax)
  0x00000000036a2501: mov    %rcx,0x18(%rax)    ;*new  ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@50 (line 196)

  0x00000000036a2505: mov    %rax,%r8
  0x00000000036a2508: movabs $0x1c774a08,%rdx   ;   {metadata(method data for {method} {0x000000001c5cfc80} &apos;&lt;init&gt;&apos; &apos;(Ljava/nio/charset/Charset;FFLjava/lang/String;)V&apos; in &apos;java/nio/charset/CharsetDecoder&apos;)}
  0x00000000036a2512: addq   $0x1,0x168(%rdx)
  0x00000000036a251a: movabs $0x76ca4e158,%r8   ;   {oop(&quot;Non-positive maxCharsPerByte&quot;)}
  0x00000000036a2524: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@56 (line 196)

  0x00000000036a2527: mov    %rax,0x40(%rsp)
  0x00000000036a252c: nop
  0x00000000036a252d: nop
  0x00000000036a252e: nop
  0x00000000036a252f: callq  0x00000000035d61a0  ; OopMap{[64]=Oop off=1172}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@56 (line 196)
                                                ;   {optimized virtual_call}
  0x00000000036a2534: mov    0x40(%rsp),%rax
  0x00000000036a2539: jmpq   0x00000000036a2689  ;*athrow
                                                ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@59 (line 196)

  0x00000000036a253e: xchg   %ax,%ax
  0x00000000036a2540: jmpq   0x00000000036a2647  ;   {no_reloc}
  0x00000000036a2545: add    %al,(%rax)
  0x00000000036a2547: add    %al,(%rax)
  0x00000000036a2549: add    %cl,-0x75(%rcx)
  0x00000000036a254c: rex.RXB (bad) 
  0x00000000036a254e: lea    0x20(%rax),%rdi
  0x00000000036a2552: cmp    0x70(%r15),%rdi
  0x00000000036a2556: ja     0x00000000036a2651
  0x00000000036a255c: mov    %rdi,0x60(%r15)
  0x00000000036a2560: mov    0xa8(%rdx),%rcx
  0x00000000036a2567: mov    %rcx,(%rax)
  0x00000000036a256a: mov    %rdx,%rcx
  0x00000000036a256d: shr    $0x3,%rcx
  0x00000000036a2571: mov    %ecx,0x8(%rax)
  0x00000000036a2574: xor    %rcx,%rcx
  0x00000000036a2577: mov    %ecx,0xc(%rax)
  0x00000000036a257a: xor    %rcx,%rcx
  0x00000000036a257d: mov    %rcx,0x10(%rax)
  0x00000000036a2581: mov    %rcx,0x18(%rax)    ;*new  ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@34 (line 193)

  0x00000000036a2585: mov    %rax,%r8
  0x00000000036a2588: movabs $0x1c774a08,%rdx   ;   {metadata(method data for {method} {0x000000001c5cfc80} &apos;&lt;init&gt;&apos; &apos;(Ljava/nio/charset/Charset;FFLjava/lang/String;)V&apos; in &apos;java/nio/charset/CharsetDecoder&apos;)}
  0x00000000036a2592: addq   $0x1,0x138(%rdx)
  0x00000000036a259a: movabs $0x76ca4e0f0,%r8   ;   {oop(&quot;Non-positive averageCharsPerByte&quot;)}
  0x00000000036a25a4: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@40 (line 193)

  0x00000000036a25a7: mov    %rax,0x48(%rsp)
  0x00000000036a25ac: nop
  0x00000000036a25ad: nop
  0x00000000036a25ae: nop
  0x00000000036a25af: callq  0x00000000035d61a0  ; OopMap{[72]=Oop off=1300}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@40 (line 193)
                                                ;   {optimized virtual_call}
  0x00000000036a25b4: mov    0x48(%rsp),%rax
  0x00000000036a25b9: jmpq   0x00000000036a2689
  0x00000000036a25be: mov    %rsi,0x8(%rsp)
  0x00000000036a25c3: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036a25cb: callq  0x00000000036919e0  ; OopMap{rdx=Oop r8=Oop r9=Oop off=1328}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@-1 (line 190)
                                                ;   {runtime_call}
  0x00000000036a25d0: jmpq   0x00000000036a20fe
  0x00000000036a25d5: mov    %rsi,0x8(%rsp)
  0x00000000036a25da: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036a25e2: callq  0x00000000036919e0  ; OopMap{rdx=Oop r8=Oop r9=Oop off=1351}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@1 (line 190)
                                                ;   {runtime_call}
  0x00000000036a25e7: jmpq   0x00000000036a2145
  0x00000000036a25ec: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000036a25f6: mov    $0xa050f00,%eax
  0x00000000036a25fb: callq  0x0000000003690920  ; OopMap{off=1376}
                                                ;*new  ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@74 (line 200)
                                                ;   {runtime_call}
  0x00000000036a2600: jmpq   0x00000000036a2440
  0x00000000036a2605: mov    %rdx,%rdx
  0x00000000036a2608: callq  0x000000000368d300  ; OopMap{off=1389}
                                                ;*new  ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@74 (line 200)
                                                ;   {runtime_call}
  0x00000000036a260d: jmpq   0x00000000036a2485
  0x00000000036a2612: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000036a261c: mov    $0xa050f00,%eax
  0x00000000036a2621: callq  0x0000000003690920  ; OopMap{off=1414}
                                                ;*new  ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@50 (line 196)
                                                ;   {runtime_call}
  0x00000000036a2626: jmpq   0x00000000036a24c0
  0x00000000036a262b: mov    %rdx,%rdx
  0x00000000036a262e: callq  0x000000000368d300  ; OopMap{off=1427}
                                                ;*new  ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@50 (line 196)
                                                ;   {runtime_call}
  0x00000000036a2633: jmpq   0x00000000036a2505
  0x00000000036a2638: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000036a2642: mov    $0xa050f00,%eax
  0x00000000036a2647: callq  0x0000000003690920  ; OopMap{off=1452}
                                                ;*new  ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@34 (line 193)
                                                ;   {runtime_call}
  0x00000000036a264c: jmpq   0x00000000036a2540
  0x00000000036a2651: mov    %rdx,%rdx
  0x00000000036a2654: callq  0x000000000368d300  ; OopMap{off=1465}
                                                ;*new  ; - java.nio.charset.CharsetDecoder::&lt;init&gt;@34 (line 193)
                                                ;   {runtime_call}
  0x00000000036a2659: jmpq   0x00000000036a2585
  0x00000000036a265e: nop
  0x00000000036a265f: nop
  0x00000000036a2660: mov    0x2a8(%r15),%rax
  0x00000000036a2667: movabs $0x0,%r10
  0x00000000036a2671: mov    %r10,0x2a8(%r15)
  0x00000000036a2678: movabs $0x0,%r10
  0x00000000036a2682: mov    %r10,0x2b0(%r15)
  0x00000000036a2689: add    $0x60,%rsp
  0x00000000036a268d: pop    %rbp
  0x00000000036a268e: jmpq   0x000000000368c620  ;   {runtime_call}
  0x00000000036a2693: hlt    
  0x00000000036a2694: hlt    
  0x00000000036a2695: hlt    
  0x00000000036a2696: hlt    
  0x00000000036a2697: hlt    
  0x00000000036a2698: hlt    
  0x00000000036a2699: hlt    
  0x00000000036a269a: hlt    
  0x00000000036a269b: hlt    
  0x00000000036a269c: hlt    
  0x00000000036a269d: hlt    
  0x00000000036a269e: hlt    
  0x00000000036a269f: hlt    
[Stub Code]
  0x00000000036a26a0: nop                       ;   {no_reloc}
  0x00000000036a26a1: nop
  0x00000000036a26a2: nop
  0x00000000036a26a3: nop
  0x00000000036a26a4: nop
  0x00000000036a26a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036a26af: jmpq   0x00000000036a26af  ;   {runtime_call}
  0x00000000036a26b4: nop
  0x00000000036a26b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036a26bf: jmpq   0x00000000036a26bf  ;   {runtime_call}
  0x00000000036a26c4: nop
  0x00000000036a26c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036a26cf: jmpq   0x00000000036a26cf  ;   {runtime_call}
  0x00000000036a26d4: nop
  0x00000000036a26d5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036a26df: jmpq   0x00000000036a26df  ;   {runtime_call}
  0x00000000036a26e4: nop
  0x00000000036a26e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036a26ef: jmpq   0x00000000036a26ef  ;   {runtime_call}
[Exception Handler]
  0x00000000036a26f4: callq  0x000000000368f1a0  ;   {runtime_call}
  0x00000000036a26f9: mov    %rsp,-0x28(%rsp)
  0x00000000036a26fe: sub    $0x80,%rsp
  0x00000000036a2705: mov    %rax,0x78(%rsp)
  0x00000000036a270a: mov    %rcx,0x70(%rsp)
  0x00000000036a270f: mov    %rdx,0x68(%rsp)
  0x00000000036a2714: mov    %rbx,0x60(%rsp)
  0x00000000036a2719: mov    %rbp,0x50(%rsp)
  0x00000000036a271e: mov    %rsi,0x48(%rsp)
  0x00000000036a2723: mov    %rdi,0x40(%rsp)
  0x00000000036a2728: mov    %r8,0x38(%rsp)
  0x00000000036a272d: mov    %r9,0x30(%rsp)
  0x00000000036a2732: mov    %r10,0x28(%rsp)
  0x00000000036a2737: mov    %r11,0x20(%rsp)
  0x00000000036a273c: mov    %r12,0x18(%rsp)
  0x00000000036a2741: mov    %r13,0x10(%rsp)
  0x00000000036a2746: mov    %r14,0x8(%rsp)
  0x00000000036a274b: mov    %r15,(%rsp)
  0x00000000036a274f: movabs $0x553ec320,%rcx   ;   {external_word}
  0x00000000036a2759: movabs $0x36a26f9,%rdx    ;   {internal_word}
  0x00000000036a2763: mov    %rsp,%r8
  0x00000000036a2766: and    $0xfffffffffffffff0,%rsp
  0x00000000036a276a: callq  0x00000000550a41d0  ;   {runtime_call}
  0x00000000036a276f: hlt    
[Deopt Handler Code]
  0x00000000036a2770: movabs $0x36a2770,%r10    ;   {section_word}
  0x00000000036a277a: push   %r10
  0x00000000036a277c: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036a2781: hlt    
  0x00000000036a2782: hlt    
  0x00000000036a2783: hlt    
  0x00000000036a2784: hlt    
  0x00000000036a2785: hlt    
  0x00000000036a2786: hlt    
  0x00000000036a2787: hlt    
<nmethod compile_id='17' compiler='C1' level='3' entry='0x00000000036a20a0' size='3232' address='0x00000000036a1ed0' relocation_offset='288' insts_offset='464' stub_offset='2000' scopes_data_offset='2256' scopes_pcs_offset='2552' dependencies_offset='3224' method='java/nio/charset/CharsetDecoder &lt;init&gt; (Ljava/nio/charset/Charset;FFLjava/lang/String;)V' bytes='108' count='256' iicount='256' stamp='0.776'/>
<writer thread='4360'/>
<task_queued compile_id='21' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='768' iicount='768' level='3' stamp='0.776' comment='tiered' hot_count='768'/>
<writer thread='10060'/>
Decoding compiled method 0x00000000036a0410:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c493d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  #           [sp+0x30]  (sp of caller)
  0x00000000036a0560: mov    0x8(%rdx),%r10d
  0x00000000036a0564: shl    $0x3,%r10
  0x00000000036a0568: cmp    %r10,%rax
  0x00000000036a056b: jne    0x00000000035d5f60  ;   {runtime_call}
  0x00000000036a0571: data16 xchg %ax,%ax
  0x00000000036a0574: nopl   0x0(%rax,%rax,1)
  0x00000000036a057c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000036a0580: mov    %eax,-0x6000(%rsp)
  0x00000000036a0587: push   %rbp
  0x00000000036a0588: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)

  0x00000000036a058c: test   %r8d,%r8d
  0x00000000036a058f: jl     0x00000000036a05cd  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x00000000036a0591: mov    0xc(%rdx),%r10d    ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)

  0x00000000036a0595: mov    0xc(%r12,%r10,8),%ebp  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; implicit exception: dispatches to 0x00000000036a05f5
  0x00000000036a059a: cmp    %ebp,%r8d
  0x00000000036a059d: jge    0x00000000036a05e1  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x00000000036a059f: cmp    %ebp,%r8d
  0x00000000036a05a2: jae    0x00000000036a05ba
  0x00000000036a05a4: shl    $0x3,%r10
  0x00000000036a05a8: movzwl 0x10(%r10,%r8,2),%eax
  0x00000000036a05ae: add    $0x20,%rsp
  0x00000000036a05b2: pop    %rbp
  0x00000000036a05b3: test   %eax,-0x20b05b9(%rip)        # 0x00000000015f0000
                                                ;   {poll_return}
  0x00000000036a05b9: retq   
  0x00000000036a05ba: mov    $0xffffffe4,%edx
  0x00000000036a05bf: mov    %r8d,%ebp
  0x00000000036a05c2: mov    %r10d,(%rsp)
  0x00000000036a05c6: nop
  0x00000000036a05c7: callq  0x00000000035d57a0  ; OopMap{[0]=NarrowOop off=108}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ;   {runtime_call}
  0x00000000036a05cc: int3                      ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)

  0x00000000036a05cd: mov    %rdx,%rbp
  0x00000000036a05d0: mov    %r8d,0x4(%rsp)
  0x00000000036a05d5: mov    $0xffffff65,%edx
  0x00000000036a05da: nop
  0x00000000036a05db: callq  0x00000000035d57a0  ; OopMap{rbp=Oop off=128}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ;   {runtime_call}
  0x00000000036a05e0: int3                      ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x00000000036a05e1: mov    %rdx,(%rsp)
  0x00000000036a05e5: mov    %r8d,0xc(%rsp)
  0x00000000036a05ea: mov    $0xffffff65,%edx
  0x00000000036a05ef: callq  0x00000000035d57a0  ; OopMap{[0]=Oop off=148}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ;   {runtime_call}
  0x00000000036a05f4: int3                      ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x00000000036a05f5: mov    $0xfffffff6,%edx
  0x00000000036a05fa: nop
  0x00000000036a05fb: callq  0x00000000035d57a0  ; OopMap{off=160}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x00000000036a0600: int3                      ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)

  0x00000000036a0601: hlt    
  0x00000000036a0602: hlt    
  0x00000000036a0603: hlt    
  0x00000000036a0604: hlt    
  0x00000000036a0605: hlt    
  0x00000000036a0606: hlt    
  0x00000000036a0607: hlt    
  0x00000000036a0608: hlt    
  0x00000000036a0609: hlt    
  0x00000000036a060a: hlt    
  0x00000000036a060b: hlt    
  0x00000000036a060c: hlt    
  0x00000000036a060d: hlt    
  0x00000000036a060e: hlt    
  0x00000000036a060f: hlt    
  0x00000000036a0610: hlt    
  0x00000000036a0611: hlt    
  0x00000000036a0612: hlt    
  0x00000000036a0613: hlt    
  0x00000000036a0614: hlt    
  0x00000000036a0615: hlt    
  0x00000000036a0616: hlt    
  0x00000000036a0617: hlt    
  0x00000000036a0618: hlt    
  0x00000000036a0619: hlt    
  0x00000000036a061a: hlt    
  0x00000000036a061b: hlt    
  0x00000000036a061c: hlt    
  0x00000000036a061d: hlt    
  0x00000000036a061e: hlt    
  0x00000000036a061f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000036a0620: jmpq   0x000000000368dc20  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000036a0625: callq  0x00000000036a062a
  0x00000000036a062a: subq   $0x5,(%rsp)
  0x00000000036a062f: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036a0634: hlt    
  0x00000000036a0635: hlt    
  0x00000000036a0636: hlt    
  0x00000000036a0637: hlt    
<nmethod compile_id='3' compiler='C2' level='4' entry='0x00000000036a0560' size='928' address='0x00000000036a0410' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='560' scopes_pcs_offset='664' dependencies_offset='904' nul_chk_table_offset='912' method='java/lang/String charAt (I)C' bytes='29' count='317499' iicount='317499' stamp='0.779'/>
<writer thread='16536'/>
Decoding compiled method 0x00000000036a6550:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c4945d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x00000000036a66a0: mov    0x8(%rdx),%r10d
  0x00000000036a66a4: shl    $0x3,%r10
  0x00000000036a66a8: cmp    %r10,%rax
  0x00000000036a66ab: jne    0x00000000035d5f60  ;   {runtime_call}
  0x00000000036a66b1: data16 xchg %ax,%ax
  0x00000000036a66b4: nopl   0x0(%rax,%rax,1)
  0x00000000036a66bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000036a66c0: mov    %eax,-0x6000(%rsp)
  0x00000000036a66c7: push   %rbp
  0x00000000036a66c8: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)

  0x00000000036a66cc: cmp    %r8,%rdx
  0x00000000036a66cf: je     0x00000000036a670a  ;*if_acmpne
                                                ; - java.lang.String::equals@2 (line 977)

  0x00000000036a66d1: test   %r8,%r8
  0x00000000036a66d4: je     0x00000000036a66fc
  0x00000000036a66d6: mov    0x8(%r8),%r11d
  0x00000000036a66da: cmp    $0xf80002da,%r11d  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000000036a66e1: jne    0x00000000036a68a9  ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)

  0x00000000036a66e7: mov    0xc(%rdx),%edi     ;*getfield value
                                                ; - java.lang.String::equals@20 (line 982)

  0x00000000036a66ea: mov    0xc(%r12,%rdi,8),%esi  ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)
                                                ; implicit exception: dispatches to 0x00000000036a68bd
  0x00000000036a66ef: mov    0xc(%r8),%r9d      ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)

  0x00000000036a66f3: mov    0xc(%r12,%r9,8),%ecx  ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ; implicit exception: dispatches to 0x00000000036a68c9
  0x00000000036a66f8: cmp    %ecx,%esi
  0x00000000036a66fa: je     0x00000000036a6711  ;*iconst_0
                                                ; - java.lang.String::equals@79 (line 995)

  0x00000000036a66fc: xor    %eax,%eax          ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)

  0x00000000036a66fe: add    $0x30,%rsp
  0x00000000036a6702: pop    %rbp
  0x00000000036a6703: test   %eax,-0x20b6709(%rip)        # 0x00000000015f0000
                                                ;   {poll_return}
  0x00000000036a6709: retq   
  0x00000000036a670a: mov    $0x1,%eax
  0x00000000036a670f: jmp    0x00000000036a66fe
  0x00000000036a6711: test   %esi,%esi
  0x00000000036a6713: je     0x00000000036a685d  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x00000000036a6719: mov    %esi,%r10d
  0x00000000036a671c: dec    %r10d              ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x00000000036a671f: movslq %esi,%r11
  0x00000000036a6722: vmovq  %r11,%xmm0
  0x00000000036a6727: lea    (%r12,%rdi,8),%r8
  0x00000000036a672b: lea    (%r12,%r9,8),%r14
  0x00000000036a672f: mov    %esi,%r13d
  0x00000000036a6732: add    $0xfffffffe,%r13d
  0x00000000036a6736: mov    $0xffffffff,%edx
  0x00000000036a673b: cmp    %edx,%r13d
  0x00000000036a673e: cmovl  %edx,%r13d
  0x00000000036a6742: mov    %r10d,%ebx
  0x00000000036a6745: xor    %r11d,%r11d
  0x00000000036a6748: mov    %r10d,%eax
  0x00000000036a674b: sub    %ebx,%eax          ;*aload
                                                ; - java.lang.String::equals@56 (line 988)

  0x00000000036a674d: cmp    %esi,%eax
  0x00000000036a674f: jae    0x00000000036a6870
  0x00000000036a6755: vmovd  %r10d,%xmm2
  0x00000000036a675a: vmovd  %r11d,%xmm1
  0x00000000036a675f: movslq %ebx,%r11
  0x00000000036a6762: vmovq  %xmm0,%r10
  0x00000000036a6767: sub    %r11,%r10
  0x00000000036a676a: movzwl 0xe(%r8,%r10,2),%ebp  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x00000000036a6770: cmp    %ecx,%eax
  0x00000000036a6772: jae    0x00000000036a688d  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x00000000036a6778: movzwl 0xe(%r14,%r10,2),%r10d
  0x00000000036a677e: cmp    %r10d,%ebp
  0x00000000036a6781: jne    0x00000000036a6867  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x00000000036a6787: dec    %ebx               ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x00000000036a6789: cmp    %r13d,%ebx
  0x00000000036a678c: jle    0x00000000036a679a  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x00000000036a678e: vmovd  %xmm1,%r11d
  0x00000000036a6793: vmovd  %xmm2,%r10d
  0x00000000036a6798: jmp    0x00000000036a6748
  0x00000000036a679a: mov    %esi,%r11d
  0x00000000036a679d: sub    %ecx,%r11d
  0x00000000036a67a0: dec    %r11d
  0x00000000036a67a3: cmp    %edx,%r11d
  0x00000000036a67a6: cmovl  %edx,%r11d
  0x00000000036a67aa: mov    %r11d,%edx
  0x00000000036a67ad: add    $0x3,%edx
  0x00000000036a67b0: mov    $0x7fffffff,%r10d
  0x00000000036a67b6: cmp    %edx,%r11d
  0x00000000036a67b9: cmovg  %r10d,%edx
  0x00000000036a67bd: cmp    %edx,%ebx
  0x00000000036a67bf: jle    0x00000000036a6824  ;*aload
                                                ; - java.lang.String::equals@56 (line 988)

  0x00000000036a67c1: movslq %ebx,%r10
  0x00000000036a67c4: vmovq  %xmm0,%rax
  0x00000000036a67c9: sub    %r10,%rax          ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x00000000036a67cc: movzwl 0xe(%r14,%rax,2),%r11d  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x00000000036a67d2: movzwl 0xe(%r8,%rax,2),%r10d  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x00000000036a67d8: cmp    %r11d,%r10d
  0x00000000036a67db: jne    0x00000000036a6867  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x00000000036a67e1: movzwl 0x10(%r14,%rax,2),%r11d  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x00000000036a67e7: movzwl 0x10(%r8,%rax,2),%eax  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x00000000036a67ed: cmp    %r11d,%eax
  0x00000000036a67f0: jne    0x00000000036a6867  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x00000000036a67f2: mov    %esi,%r11d
  0x00000000036a67f5: sub    %ebx,%r11d
  0x00000000036a67f8: movslq %r11d,%r11
  0x00000000036a67fb: movzwl 0x12(%r8,%r11,2),%r10d  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x00000000036a6801: movzwl 0x12(%r14,%r11,2),%eax  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x00000000036a6807: cmp    %eax,%r10d
  0x00000000036a680a: jne    0x00000000036a6867  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x00000000036a680c: movzwl 0x14(%r14,%r11,2),%r10d  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x00000000036a6812: movzwl 0x14(%r8,%r11,2),%r11d  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x00000000036a6818: cmp    %r10d,%r11d
  0x00000000036a681b: jne    0x00000000036a6867  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x00000000036a681d: add    $0xfffffffc,%ebx   ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x00000000036a6820: cmp    %edx,%ebx
  0x00000000036a6822: jg     0x00000000036a67c1  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x00000000036a6824: cmp    $0xffffffff,%ebx
  0x00000000036a6827: je     0x00000000036a685d
  0x00000000036a6829: data16 xchg %ax,%ax
  0x00000000036a682c: vmovd  %xmm2,%eax
  0x00000000036a6830: sub    %ebx,%eax          ;*aload
                                                ; - java.lang.String::equals@56 (line 988)

  0x00000000036a6832: cmp    %esi,%eax
  0x00000000036a6834: jae    0x00000000036a6870
  0x00000000036a6836: movslq %ebx,%r11
  0x00000000036a6839: vmovq  %xmm0,%r10
  0x00000000036a683e: sub    %r11,%r10
  0x00000000036a6841: movzwl 0xe(%r8,%r10,2),%ebp  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x00000000036a6847: cmp    %ecx,%eax
  0x00000000036a6849: jae    0x00000000036a688d  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x00000000036a684b: movzwl 0xe(%r14,%r10,2),%r10d
  0x00000000036a6851: cmp    %r10d,%ebp
  0x00000000036a6854: jne    0x00000000036a6867  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x00000000036a6856: dec    %ebx               ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x00000000036a6858: cmp    $0xffffffff,%ebx
  0x00000000036a685b: jne    0x00000000036a682c  ;*iconst_1
                                                ; - java.lang.String::equals@77 (line 992)

  0x00000000036a685d: mov    $0x1,%eax
  0x00000000036a6862: jmpq   0x00000000036a66fe
  0x00000000036a6867: vmovd  %xmm1,%eax
  0x00000000036a686b: jmpq   0x00000000036a66fe
  0x00000000036a6870: mov    $0xffffffe4,%edx
  0x00000000036a6875: mov    %ebx,%ebp
  0x00000000036a6877: mov    %r9d,0x4(%rsp)
  0x00000000036a687c: mov    %edi,0xc(%rsp)
  0x00000000036a6880: mov    %eax,0x10(%rsp)
  0x00000000036a6884: data16 xchg %ax,%ax
  0x00000000036a6887: callq  0x00000000035d57a0  ; OopMap{[4]=NarrowOop [12]=NarrowOop off=492}
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)
                                                ;   {runtime_call}
  0x00000000036a688c: int3                      ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x00000000036a688d: mov    $0xffffffe4,%edx
  0x00000000036a6892: mov    %ebx,(%rsp)
  0x00000000036a6895: mov    %edi,0x4(%rsp)
  0x00000000036a6899: mov    %r9d,0x10(%rsp)
  0x00000000036a689e: mov    %eax,0x14(%rsp)
  0x00000000036a68a2: nop
  0x00000000036a68a3: callq  0x00000000035d57a0  ; OopMap{[4]=NarrowOop [16]=NarrowOop off=520}
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 988)
                                                ;   {runtime_call}
  0x00000000036a68a8: int3                      ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x00000000036a68a9: mov    %rdx,%rbp
  0x00000000036a68ac: mov    %r8,0x8(%rsp)
  0x00000000036a68b1: mov    $0xffffffde,%edx
  0x00000000036a68b6: nop
  0x00000000036a68b7: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [8]=Oop off=540}
                                                ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)
                                                ;   {runtime_call}
  0x00000000036a68bc: int3                      ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)

  0x00000000036a68bd: mov    $0xfffffff6,%edx
  0x00000000036a68c2: nop
  0x00000000036a68c3: callq  0x00000000035d57a0  ; OopMap{off=552}
                                                ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ;   {runtime_call}
  0x00000000036a68c8: int3                      ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)

  0x00000000036a68c9: mov    $0xfffffff6,%edx
  0x00000000036a68ce: nop
  0x00000000036a68cf: callq  0x00000000035d57a0  ; OopMap{off=564}
                                                ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ;   {runtime_call}
  0x00000000036a68d4: int3                      ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)

  0x00000000036a68d5: hlt    
  0x00000000036a68d6: hlt    
  0x00000000036a68d7: hlt    
  0x00000000036a68d8: hlt    
  0x00000000036a68d9: hlt    
  0x00000000036a68da: hlt    
  0x00000000036a68db: hlt    
  0x00000000036a68dc: hlt    
  0x00000000036a68dd: hlt    
  0x00000000036a68de: hlt    
  0x00000000036a68df: hlt    
[Exception Handler]
[Stub Code]
  0x00000000036a68e0: jmpq   0x000000000368dc20  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000036a68e5: callq  0x00000000036a68ea
  0x00000000036a68ea: subq   $0x5,(%rsp)
  0x00000000036a68ef: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036a68f4: hlt    
  0x00000000036a68f5: hlt    
  0x00000000036a68f6: hlt    
  0x00000000036a68f7: hlt    
<nmethod compile_id='7' compiler='C2' level='4' entry='0x00000000036a66a0' size='2016' address='0x00000000036a6550' relocation_offset='288' insts_offset='336' stub_offset='912' scopes_data_offset='952' scopes_pcs_offset='1168' dependencies_offset='1984' nul_chk_table_offset='1992' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='42073' backedge_count='16351' iicount='42073' stamp='0.789'/>
<writer thread='4360'/>
<task_queued compile_id='22' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='1453' backedge_count='55296' iicount='1453' stamp='0.789' comment='tiered' hot_count='1453'/>
<writer thread='19284'/>
Decoding compiled method 0x00000000036a1990:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c494fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x30]  (sp of caller)
  0x00000000036a1ac0: mov    0x8(%rdx),%r10d
  0x00000000036a1ac4: shl    $0x3,%r10
  0x00000000036a1ac8: cmp    %r10,%rax
  0x00000000036a1acb: jne    0x00000000035d5f60  ;   {runtime_call}
  0x00000000036a1ad1: data16 xchg %ax,%ax
  0x00000000036a1ad4: nopl   0x0(%rax,%rax,1)
  0x00000000036a1adc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000036a1ae0: mov    %eax,-0x6000(%rsp)
  0x00000000036a1ae7: push   %rbp
  0x00000000036a1ae8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)

  0x00000000036a1aec: vmovq  %rdx,%xmm0
  0x00000000036a1af1: mov    0x10(%rdx),%eax    ;*getfield hash
                                                ; - java.lang.String::hashCode@1 (line 1466)

  0x00000000036a1af4: test   %eax,%eax
  0x00000000036a1af6: jne    0x00000000036a1c36  ;*ifne
                                                ; - java.lang.String::hashCode@6 (line 1467)

  0x00000000036a1afc: mov    0xc(%rdx),%ebp     ;*getfield value
                                                ; - java.lang.String::hashCode@10 (line 1467)

  0x00000000036a1aff: mov    0xc(%r12,%rbp,8),%ebx  ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ; implicit exception: dispatches to 0x00000000036a1c59
  0x00000000036a1b04: test   %ebx,%ebx
  0x00000000036a1b06: jle    0x00000000036a1c42  ;*ifle
                                                ; - java.lang.String::hashCode@14 (line 1467)

  0x00000000036a1b0c: test   %ebx,%ebx
  0x00000000036a1b0e: jbe    0x00000000036a1c46
  0x00000000036a1b14: mov    %ebx,%r11d
  0x00000000036a1b17: dec    %r11d
  0x00000000036a1b1a: cmp    %ebx,%r11d
  0x00000000036a1b1d: jae    0x00000000036a1c46  ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)

  0x00000000036a1b23: movzwl 0x10(%r12,%rbp,8),%ecx  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x00000000036a1b29: mov    %ebx,%edx
  0x00000000036a1b2b: add    $0xfffffff9,%edx
  0x00000000036a1b2e: mov    %ecx,%eax
  0x00000000036a1b30: shl    $0x5,%eax
  0x00000000036a1b33: lea    (%r12,%rbp,8),%r10
  0x00000000036a1b37: mov    $0x1,%r13d
  0x00000000036a1b3d: mov    $0x80000000,%r8d
  0x00000000036a1b43: cmp    %edx,%r11d
  0x00000000036a1b46: cmovl  %r8d,%edx
  0x00000000036a1b4a: cmp    $0x1,%edx
  0x00000000036a1b4d: jle    0x00000000036a1c22
  0x00000000036a1b53: sub    %ecx,%eax          ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x00000000036a1b55: vmovd  %ebx,%xmm1
  0x00000000036a1b59: jmp    0x00000000036a1b82  ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)

  0x00000000036a1b5b: movzwl 0x10(%r10,%r13,2),%r11d
  0x00000000036a1b61: sub    %ecx,%eax
  0x00000000036a1b63: add    %r11d,%eax         ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x00000000036a1b66: inc    %r13d              ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x00000000036a1b69: cmp    %ebx,%r13d
  0x00000000036a1b6c: jge    0x00000000036a1c2d  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x00000000036a1b72: mov    %eax,%r11d
  0x00000000036a1b75: shl    $0x5,%r11d
  0x00000000036a1b79: mov    %eax,%ecx
  0x00000000036a1b7b: mov    %r11d,%eax
  0x00000000036a1b7e: jmp    0x00000000036a1b5b
  0x00000000036a1b80: sub    %ecx,%eax          ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x00000000036a1b82: movzwl 0x10(%r10,%r13,2),%r11d
  0x00000000036a1b88: add    %r11d,%eax
  0x00000000036a1b8b: movslq %r13d,%r11
  0x00000000036a1b8e: movzwl 0x12(%r10,%r11,2),%r14d
  0x00000000036a1b94: movzwl 0x1e(%r10,%r11,2),%r8d
  0x00000000036a1b9a: movzwl 0x1c(%r10,%r11,2),%ecx
  0x00000000036a1ba0: movzwl 0x1a(%r10,%r11,2),%r9d
  0x00000000036a1ba6: movzwl 0x18(%r10,%r11,2),%edi
  0x00000000036a1bac: movzwl 0x16(%r10,%r11,2),%ebx
  0x00000000036a1bb2: movzwl 0x14(%r10,%r11,2),%esi
  0x00000000036a1bb8: mov    %eax,%ebp
  0x00000000036a1bba: shl    $0x5,%ebp
  0x00000000036a1bbd: sub    %eax,%ebp
  0x00000000036a1bbf: add    %r14d,%ebp
  0x00000000036a1bc2: mov    %ebp,%r11d
  0x00000000036a1bc5: shl    $0x5,%r11d
  0x00000000036a1bc9: sub    %ebp,%r11d
  0x00000000036a1bcc: add    %esi,%r11d
  0x00000000036a1bcf: mov    %r11d,%eax
  0x00000000036a1bd2: shl    $0x5,%eax
  0x00000000036a1bd5: sub    %r11d,%eax
  0x00000000036a1bd8: add    %ebx,%eax
  0x00000000036a1bda: mov    %eax,%r11d
  0x00000000036a1bdd: shl    $0x5,%r11d
  0x00000000036a1be1: sub    %eax,%r11d
  0x00000000036a1be4: add    %edi,%r11d
  0x00000000036a1be7: mov    %r11d,%edi
  0x00000000036a1bea: shl    $0x5,%edi
  0x00000000036a1bed: sub    %r11d,%edi
  0x00000000036a1bf0: add    %r9d,%edi
  0x00000000036a1bf3: mov    %edi,%r11d
  0x00000000036a1bf6: shl    $0x5,%r11d
  0x00000000036a1bfa: sub    %edi,%r11d
  0x00000000036a1bfd: add    %ecx,%r11d
  0x00000000036a1c00: mov    %r11d,%ecx
  0x00000000036a1c03: shl    $0x5,%ecx
  0x00000000036a1c06: sub    %r11d,%ecx
  0x00000000036a1c09: add    %r8d,%ecx          ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x00000000036a1c0c: mov    %ecx,%eax
  0x00000000036a1c0e: shl    $0x5,%eax          ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x00000000036a1c11: add    $0x8,%r13d         ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x00000000036a1c15: cmp    %edx,%r13d
  0x00000000036a1c18: jl     0x00000000036a1b80  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x00000000036a1c1e: vmovd  %xmm1,%ebx
  0x00000000036a1c22: cmp    %ebx,%r13d
  0x00000000036a1c25: jl     0x00000000036a1b5b
  0x00000000036a1c2b: mov    %ecx,%eax
  0x00000000036a1c2d: vmovq  %xmm0,%r10
  0x00000000036a1c32: mov    %eax,0x10(%r10)    ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)

  0x00000000036a1c36: add    $0x20,%rsp
  0x00000000036a1c3a: pop    %rbp
  0x00000000036a1c3b: test   %eax,-0x20b1c41(%rip)        # 0x00000000015f0000
                                                ;   {poll_return}
  0x00000000036a1c41: retq   
  0x00000000036a1c42: xor    %eax,%eax
  0x00000000036a1c44: jmp    0x00000000036a1c36
  0x00000000036a1c46: mov    $0xffffff86,%edx
  0x00000000036a1c4b: vmovsd %xmm0,(%rsp)
  0x00000000036a1c50: data16 xchg %ax,%ax
  0x00000000036a1c53: callq  0x00000000035d57a0  ; OopMap{rbp=NarrowOop [0]=Oop off=408}
                                                ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)
                                                ;   {runtime_call}
  0x00000000036a1c58: int3                      ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)

  0x00000000036a1c59: mov    $0xfffffff6,%edx
  0x00000000036a1c5e: nop
  0x00000000036a1c5f: callq  0x00000000035d57a0  ; OopMap{off=420}
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ;   {runtime_call}
  0x00000000036a1c64: int3                      ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)

  0x00000000036a1c65: hlt    
  0x00000000036a1c66: hlt    
  0x00000000036a1c67: hlt    
  0x00000000036a1c68: hlt    
  0x00000000036a1c69: hlt    
  0x00000000036a1c6a: hlt    
  0x00000000036a1c6b: hlt    
  0x00000000036a1c6c: hlt    
  0x00000000036a1c6d: hlt    
  0x00000000036a1c6e: hlt    
  0x00000000036a1c6f: hlt    
  0x00000000036a1c70: hlt    
  0x00000000036a1c71: hlt    
  0x00000000036a1c72: hlt    
  0x00000000036a1c73: hlt    
  0x00000000036a1c74: hlt    
  0x00000000036a1c75: hlt    
  0x00000000036a1c76: hlt    
  0x00000000036a1c77: hlt    
  0x00000000036a1c78: hlt    
  0x00000000036a1c79: hlt    
  0x00000000036a1c7a: hlt    
  0x00000000036a1c7b: hlt    
  0x00000000036a1c7c: hlt    
  0x00000000036a1c7d: hlt    
  0x00000000036a1c7e: hlt    
  0x00000000036a1c7f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000036a1c80: jmpq   0x000000000368dc20  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000036a1c85: callq  0x00000000036a1c8a
  0x00000000036a1c8a: subq   $0x5,(%rsp)
  0x00000000036a1c8f: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036a1c94: hlt    
  0x00000000036a1c95: hlt    
  0x00000000036a1c96: hlt    
  0x00000000036a1c97: hlt    
<nmethod compile_id='4' compiler='C2' level='4' entry='0x00000000036a1ac0' size='1320' address='0x00000000036a1990' relocation_offset='288' insts_offset='304' stub_offset='752' scopes_data_offset='784' scopes_pcs_offset='896' dependencies_offset='1296' nul_chk_table_offset='1304' method='java/lang/String hashCode ()I' bytes='55' count='5169' backedge_count='127623' iicount='5169' stamp='0.796'/>
<writer thread='7332'/>
Decoding compiled method 0x000000000369ff10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c494e50} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x00000000036a0080: mov    0x8(%rdx),%r10d
  0x00000000036a0084: shl    $0x3,%r10
  0x00000000036a0088: cmp    %rax,%r10
  0x00000000036a008b: jne    0x00000000035d5f60  ;   {runtime_call}
  0x00000000036a0091: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000036a009c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000036a00a0: mov    %eax,-0x6000(%rsp)
  0x00000000036a00a7: push   %rbp
  0x00000000036a00a8: sub    $0x30,%rsp
  0x00000000036a00ac: movabs $0x1c6d9138,%r9    ;   {metadata(method data for {method} {0x000000001c494e50} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000036a00b6: mov    0xdc(%r9),%esi
  0x00000000036a00bd: add    $0x8,%esi
  0x00000000036a00c0: mov    %esi,0xdc(%r9)
  0x00000000036a00c7: movabs $0x1c494e48,%r9    ;   {metadata({method} {0x000000001c494e50} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000036a00d1: and    $0x1ff8,%esi
  0x00000000036a00d7: cmp    $0x0,%esi
  0x00000000036a00da: je     0x00000000036a018b  ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1434)

  0x00000000036a00e0: mov    %rdx,%r9
  0x00000000036a00e3: movabs $0x1c6d9138,%rsi   ;   {metadata(method data for {method} {0x000000001c494e50} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000036a00ed: mov    0x8(%r9),%r9d
  0x00000000036a00f1: shl    $0x3,%r9
  0x00000000036a00f5: cmp    0x110(%rsi),%r9
  0x00000000036a00fc: jne    0x00000000036a010b
  0x00000000036a00fe: addq   $0x1,0x118(%rsi)
  0x00000000036a0106: jmpq   0x00000000036a0171
  0x00000000036a010b: cmp    0x120(%rsi),%r9
  0x00000000036a0112: jne    0x00000000036a0121
  0x00000000036a0114: addq   $0x1,0x128(%rsi)
  0x00000000036a011c: jmpq   0x00000000036a0171
  0x00000000036a0121: cmpq   $0x0,0x110(%rsi)
  0x00000000036a012c: jne    0x00000000036a0145
  0x00000000036a012e: mov    %r9,0x110(%rsi)
  0x00000000036a0135: movq   $0x1,0x118(%rsi)
  0x00000000036a0140: jmpq   0x00000000036a0171
  0x00000000036a0145: cmpq   $0x0,0x120(%rsi)
  0x00000000036a0150: jne    0x00000000036a0169
  0x00000000036a0152: mov    %r9,0x120(%rsi)
  0x00000000036a0159: movq   $0x1,0x128(%rsi)
  0x00000000036a0164: jmpq   0x00000000036a0171
  0x00000000036a0169: addq   $0x1,0x108(%rsi)
  0x00000000036a0171: mov    $0x0,%r9d          ;*invokevirtual startsWith
                                                ; - java.lang.String::startsWith@3 (line 1434)

  0x00000000036a0177: callq  0x00000000035d61a0  ; OopMap{off=252}
                                                ;*invokevirtual startsWith
                                                ; - java.lang.String::startsWith@3 (line 1434)
                                                ;   {optimized virtual_call}
  0x00000000036a017c: and    $0x1,%eax
  0x00000000036a017f: add    $0x30,%rsp
  0x00000000036a0183: pop    %rbp
  0x00000000036a0184: test   %eax,-0x20b008a(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036a018a: retq   
  0x00000000036a018b: mov    %r9,0x8(%rsp)
  0x00000000036a0190: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036a0198: callq  0x00000000036919e0  ; OopMap{rdx=Oop r8=Oop off=285}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1434)
                                                ;   {runtime_call}
  0x00000000036a019d: jmpq   0x00000000036a00e0
  0x00000000036a01a2: nop
  0x00000000036a01a3: nop
  0x00000000036a01a4: mov    0x2a8(%r15),%rax
  0x00000000036a01ab: movabs $0x0,%r10
  0x00000000036a01b5: mov    %r10,0x2a8(%r15)
  0x00000000036a01bc: movabs $0x0,%r10
  0x00000000036a01c6: mov    %r10,0x2b0(%r15)
  0x00000000036a01cd: add    $0x30,%rsp
  0x00000000036a01d1: pop    %rbp
  0x00000000036a01d2: jmpq   0x000000000368c620  ;   {runtime_call}
  0x00000000036a01d7: hlt    
  0x00000000036a01d8: hlt    
  0x00000000036a01d9: hlt    
  0x00000000036a01da: hlt    
  0x00000000036a01db: hlt    
  0x00000000036a01dc: hlt    
  0x00000000036a01dd: hlt    
  0x00000000036a01de: hlt    
  0x00000000036a01df: hlt    
[Stub Code]
  0x00000000036a01e0: nop                       ;   {no_reloc}
  0x00000000036a01e1: nop
  0x00000000036a01e2: nop
  0x00000000036a01e3: nop
  0x00000000036a01e4: nop
  0x00000000036a01e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036a01ef: jmpq   0x00000000036a01ef  ;   {runtime_call}
[Exception Handler]
  0x00000000036a01f4: callq  0x000000000368f1a0  ;   {runtime_call}
  0x00000000036a01f9: mov    %rsp,-0x28(%rsp)
  0x00000000036a01fe: sub    $0x80,%rsp
  0x00000000036a0205: mov    %rax,0x78(%rsp)
  0x00000000036a020a: mov    %rcx,0x70(%rsp)
  0x00000000036a020f: mov    %rdx,0x68(%rsp)
  0x00000000036a0214: mov    %rbx,0x60(%rsp)
  0x00000000036a0219: mov    %rbp,0x50(%rsp)
  0x00000000036a021e: mov    %rsi,0x48(%rsp)
  0x00000000036a0223: mov    %rdi,0x40(%rsp)
  0x00000000036a0228: mov    %r8,0x38(%rsp)
  0x00000000036a022d: mov    %r9,0x30(%rsp)
  0x00000000036a0232: mov    %r10,0x28(%rsp)
  0x00000000036a0237: mov    %r11,0x20(%rsp)
  0x00000000036a023c: mov    %r12,0x18(%rsp)
  0x00000000036a0241: mov    %r13,0x10(%rsp)
  0x00000000036a0246: mov    %r14,0x8(%rsp)
  0x00000000036a024b: mov    %r15,(%rsp)
  0x00000000036a024f: movabs $0x553ec320,%rcx   ;   {external_word}
  0x00000000036a0259: movabs $0x36a01f9,%rdx    ;   {internal_word}
  0x00000000036a0263: mov    %rsp,%r8
  0x00000000036a0266: and    $0xfffffffffffffff0,%rsp
  0x00000000036a026a: callq  0x00000000550a41d0  ;   {runtime_call}
  0x00000000036a026f: hlt    
[Deopt Handler Code]
  0x00000000036a0270: movabs $0x36a0270,%r10    ;   {section_word}
  0x00000000036a027a: push   %r10
  0x00000000036a027c: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036a0281: hlt    
  0x00000000036a0282: hlt    
  0x00000000036a0283: hlt    
  0x00000000036a0284: hlt    
  0x00000000036a0285: hlt    
  0x00000000036a0286: hlt    
  0x00000000036a0287: hlt    
<nmethod compile_id='21' compiler='C1' level='3' entry='0x00000000036a0080' size='1040' address='0x000000000369ff10' relocation_offset='288' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='936' dependencies_offset='1032' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='786' iicount='786' stamp='0.800'/>
<writer thread='4360'/>
<task_queued compile_id='23' method='java/lang/String replace (CC)Ljava/lang/String;' bytes='127' count='322' backedge_count='33792' iicount='322' level='3' stamp='0.800' comment='tiered' hot_count='322'/>
<task_queued compile_id='24' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='9472' iicount='9472' stamp='0.800' comment='tiered' hot_count='9472'/>
<writer thread='10060'/>
Decoding compiled method 0x00000000036a0b50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c493c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x20]  (sp of caller)
  0x00000000036a0c80: mov    0x8(%rdx),%r10d
  0x00000000036a0c84: shl    $0x3,%r10
  0x00000000036a0c88: cmp    %r10,%rax
  0x00000000036a0c8b: jne    0x00000000035d5f60  ;   {runtime_call}
  0x00000000036a0c91: data16 xchg %ax,%ax
  0x00000000036a0c94: nopl   0x0(%rax,%rax,1)
  0x00000000036a0c9c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000036a0ca0: mov    %eax,-0x6000(%rsp)
  0x00000000036a0ca7: push   %rbp
  0x00000000036a0ca8: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)

  0x00000000036a0cac: mov    0xc(%rdx),%r11d    ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)

  0x00000000036a0cb0: mov    0xc(%r12,%r11,8),%eax  ; implicit exception: dispatches to 0x00000000036a0cc1
  0x00000000036a0cb5: add    $0x10,%rsp
  0x00000000036a0cb9: pop    %rbp
  0x00000000036a0cba: test   %eax,-0x20b0cc0(%rip)        # 0x00000000015f0000
                                                ;   {poll_return}
  0x00000000036a0cc0: retq   
  0x00000000036a0cc1: mov    $0xfffffff6,%edx
  0x00000000036a0cc6: nop
  0x00000000036a0cc7: callq  0x00000000035d57a0  ; OopMap{off=76}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ;   {runtime_call}
  0x00000000036a0ccc: int3                      ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)

  0x00000000036a0ccd: hlt    
  0x00000000036a0cce: hlt    
  0x00000000036a0ccf: hlt    
  0x00000000036a0cd0: hlt    
  0x00000000036a0cd1: hlt    
  0x00000000036a0cd2: hlt    
  0x00000000036a0cd3: hlt    
  0x00000000036a0cd4: hlt    
  0x00000000036a0cd5: hlt    
  0x00000000036a0cd6: hlt    
  0x00000000036a0cd7: hlt    
  0x00000000036a0cd8: hlt    
  0x00000000036a0cd9: hlt    
  0x00000000036a0cda: hlt    
  0x00000000036a0cdb: hlt    
  0x00000000036a0cdc: hlt    
  0x00000000036a0cdd: hlt    
  0x00000000036a0cde: hlt    
  0x00000000036a0cdf: hlt    
[Exception Handler]
[Stub Code]
  0x00000000036a0ce0: jmpq   0x000000000368dc20  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000036a0ce5: callq  0x00000000036a0cea
  0x00000000036a0cea: subq   $0x5,(%rsp)
  0x00000000036a0cef: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036a0cf4: hlt    
  0x00000000036a0cf5: hlt    
  0x00000000036a0cf6: hlt    
  0x00000000036a0cf7: hlt    
<nmethod compile_id='20' compiler='C2' level='4' entry='0x00000000036a0c80' size='584' address='0x00000000036a0b50' relocation_offset='288' insts_offset='304' stub_offset='400' scopes_data_offset='432' scopes_pcs_offset='464' dependencies_offset='560' nul_chk_table_offset='568' method='java/lang/String length ()I' bytes='6' count='40898' iicount='40898' stamp='0.803'/>
<writer thread='7332'/>
Decoding compiled method 0x00000000036a9250:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c495ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = char
  # parm1:    r9        = char
  #           [sp+0x60]  (sp of caller)
  0x00000000036a9400: mov    0x8(%rdx),%r10d
  0x00000000036a9404: shl    $0x3,%r10
  0x00000000036a9408: cmp    %rax,%r10
  0x00000000036a940b: jne    0x00000000035d5f60  ;   {runtime_call}
  0x00000000036a9411: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000036a941c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000036a9420: mov    %eax,-0x6000(%rsp)
  0x00000000036a9427: push   %rbp
  0x00000000036a9428: sub    $0x50,%rsp
  0x00000000036a942c: movabs $0x1c6d8eb0,%rbx   ;   {metadata(method data for {method} {0x000000001c495ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000036a9436: mov    0xdc(%rbx),%esi
  0x00000000036a943c: add    $0x8,%esi
  0x00000000036a943f: mov    %esi,0xdc(%rbx)
  0x00000000036a9445: movabs $0x1c495ef0,%rbx   ;   {metadata({method} {0x000000001c495ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000036a944f: and    $0x1ff8,%esi
  0x00000000036a9455: cmp    $0x0,%esi
  0x00000000036a9458: je     0x00000000036a98ff  ;*iload_1
                                                ; - java.lang.String::replace@0 (line 2067)

  0x00000000036a945e: cmp    %r9d,%r8d
  0x00000000036a9461: movabs $0x1c6d8eb0,%rbx   ;   {metadata(method data for {method} {0x000000001c495ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000036a946b: movabs $0x108,%rsi
  0x00000000036a9475: je     0x00000000036a9485
  0x00000000036a947b: movabs $0x118,%rsi
  0x00000000036a9485: mov    (%rbx,%rsi,1),%rdi
  0x00000000036a9489: lea    0x1(%rdi),%rdi
  0x00000000036a948d: mov    %rdi,(%rbx,%rsi,1)
  0x00000000036a9491: je     0x00000000036a98f0  ;*if_icmpeq
                                                ; - java.lang.String::replace@2 (line 2067)

  0x00000000036a9497: mov    0xc(%rdx),%r11d
  0x00000000036a949b: shl    $0x3,%r11          ;*getfield value
                                                ; - java.lang.String::replace@6 (line 2068)

  0x00000000036a949f: mov    0xc(%r11),%r13d    ;*arraylength
                                                ; - java.lang.String::replace@9 (line 2068)
                                                ; implicit exception: dispatches to 0x00000000036a9916
  0x00000000036a94a3: mov    $0xffffffff,%ebx
  0x00000000036a94a8: jmpq   0x00000000036a9537  ;*iinc
                                                ; - java.lang.String::replace@20 (line 2072)

  0x00000000036a94ad: data16 xchg %ax,%ax
  0x00000000036a94b0: movslq %r14d,%rbx
  0x00000000036a94b3: cmp    0xc(%r11),%r14d
  0x00000000036a94b7: jae    0x00000000036a991b
  0x00000000036a94bd: movzwl 0x10(%r11,%rbx,2),%ebx  ;*caload
                                                ; - java.lang.String::replace@33 (line 2073)

  0x00000000036a94c3: movabs $0x1c6d8eb0,%rsi   ;   {metadata(method data for {method} {0x000000001c495ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000036a94cd: mov    0xe0(%rsi),%edi
  0x00000000036a94d3: add    $0x8,%edi
  0x00000000036a94d6: mov    %edi,0xe0(%rsi)
  0x00000000036a94dc: movabs $0x1c495ef0,%rsi   ;   {metadata({method} {0x000000001c495ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000036a94e6: and    $0xfff8,%edi
  0x00000000036a94ec: cmp    $0x0,%edi
  0x00000000036a94ef: je     0x00000000036a9924  ; OopMap{rdx=Oop r11=Oop off=245}
                                                ;*if_icmpne
                                                ; - java.lang.String::replace@35 (line 2073)

  0x00000000036a94f5: test   %eax,-0x20b93fb(%rip)        # 0x00000000015f0100
                                                ;   {poll}
  0x00000000036a94fb: cmp    %r8d,%ebx
  0x00000000036a94fe: movabs $0x1c6d8eb0,%rbx   ;   {metadata(method data for {method} {0x000000001c495ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000036a9508: movabs $0x148,%rsi
  0x00000000036a9512: jne    0x00000000036a9522
  0x00000000036a9518: movabs $0x158,%rsi
  0x00000000036a9522: mov    (%rbx,%rsi,1),%rdi
  0x00000000036a9526: lea    0x1(%rdi),%rdi
  0x00000000036a952a: mov    %rdi,(%rbx,%rsi,1)
  0x00000000036a952e: je     0x00000000036a957b  ;*if_icmpne
                                                ; - java.lang.String::replace@35 (line 2073)

  0x00000000036a9534: mov    %r14,%rbx          ;*iinc
                                                ; - java.lang.String::replace@20 (line 2072)

  0x00000000036a9537: mov    %rbx,%r14
  0x00000000036a953a: inc    %r14d
  0x00000000036a953d: cmp    %r13d,%r14d
  0x00000000036a9540: movabs $0x1c6d8eb0,%rbx   ;   {metadata(method data for {method} {0x000000001c495ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000036a954a: movabs $0x128,%rsi
  0x00000000036a9554: jge    0x00000000036a9564
  0x00000000036a955a: movabs $0x138,%rsi
  0x00000000036a9564: mov    (%rbx,%rsi,1),%rdi
  0x00000000036a9568: lea    0x1(%rdi),%rdi
  0x00000000036a956c: mov    %rdi,(%rbx,%rsi,1)
  0x00000000036a9570: jge    0x00000000036a958b
  0x00000000036a9576: jmpq   0x00000000036a94b0  ;*if_icmpge
                                                ; - java.lang.String::replace@26 (line 2072)

  0x00000000036a957b: movabs $0x1c6d8eb0,%rbx   ;   {metadata(method data for {method} {0x000000001c495ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000036a9585: incl   0x168(%rbx)        ;*goto
                                                ; - java.lang.String::replace@38 (line 2074)

  0x00000000036a958b: cmp    %r13d,%r14d
  0x00000000036a958e: movabs $0x1c6d8eb0,%rbx   ;   {metadata(method data for {method} {0x000000001c495ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000036a9598: movabs $0x180,%rsi
  0x00000000036a95a2: jge    0x00000000036a95b2
  0x00000000036a95a8: movabs $0x190,%rsi
  0x00000000036a95b2: mov    (%rbx,%rsi,1),%rdi
  0x00000000036a95b6: lea    0x1(%rdi),%rdi
  0x00000000036a95ba: mov    %rdi,(%rbx,%rsi,1)
  0x00000000036a95be: jge    0x00000000036a98f0  ;*if_icmpge
                                                ; - java.lang.String::replace@44 (line 2077)

  0x00000000036a95c4: mov    %r13,%rbx
  0x00000000036a95c7: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000000036a95d1: movslq %ebx,%rbx
  0x00000000036a95d4: mov    %rbx,%rdi
  0x00000000036a95d7: cmp    $0xffffff,%rbx
  0x00000000036a95de: ja     0x00000000036a993b
  0x00000000036a95e4: movabs $0x17,%rsi
  0x00000000036a95ee: lea    (%rsi,%rbx,2),%rsi
  0x00000000036a95f2: and    $0xfffffffffffffff8,%rsi
  0x00000000036a95f6: mov    0x60(%r15),%rax
  0x00000000036a95fa: lea    (%rax,%rsi,1),%rsi
  0x00000000036a95fe: cmp    0x70(%r15),%rsi
  0x00000000036a9602: ja     0x00000000036a993b
  0x00000000036a9608: mov    %rsi,0x60(%r15)
  0x00000000036a960c: sub    %rax,%rsi
  0x00000000036a960f: movq   $0x1,(%rax)
  0x00000000036a9616: mov    %rdx,%rcx
  0x00000000036a9619: shr    $0x3,%rcx
  0x00000000036a961d: mov    %ecx,0x8(%rax)
  0x00000000036a9620: mov    %ebx,0xc(%rax)
  0x00000000036a9623: sub    $0x10,%rsi
  0x00000000036a9627: je     0x00000000036a963e
  0x00000000036a962d: xor    %rbx,%rbx
  0x00000000036a9630: shr    $0x3,%rsi
  0x00000000036a9634: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000000036a9639: dec    %rsi
  0x00000000036a963c: jne    0x00000000036a9634
  0x00000000036a963e: mov    %rax,%rbx          ;*newarray
                                                ; - java.lang.String::replace@48 (line 2078)

  0x00000000036a9641: mov    $0x0,%edx
  0x00000000036a9646: jmpq   0x00000000036a96be  ;*iload
                                                ; - java.lang.String::replace@55 (line 2079)

  0x00000000036a964b: nopl   0x0(%rax,%rax,1)
  0x00000000036a9650: movslq %edx,%rsi
  0x00000000036a9653: cmp    0xc(%r11),%edx
  0x00000000036a9657: jae    0x00000000036a9945
  0x00000000036a965d: movzwl 0x10(%r11,%rsi,2),%esi  ;*caload
                                                ; - java.lang.String::replace@70 (line 2080)

  0x00000000036a9663: movslq %edx,%rdi
  0x00000000036a9666: cmp    0xc(%rbx),%edx
  0x00000000036a9669: jae    0x00000000036a994e
  0x00000000036a966f: mov    %si,0x10(%rbx,%rdi,2)  ;*castore
                                                ; - java.lang.String::replace@71 (line 2080)

  0x00000000036a9674: inc    %edx
  0x00000000036a9676: movabs $0x1c6d8eb0,%rsi   ;   {metadata(method data for {method} {0x000000001c495ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000036a9680: mov    0xe0(%rsi),%edi
  0x00000000036a9686: add    $0x8,%edi
  0x00000000036a9689: mov    %edi,0xe0(%rsi)
  0x00000000036a968f: movabs $0x1c495ef0,%rsi   ;   {metadata({method} {0x000000001c495ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000036a9699: and    $0xfff8,%edi
  0x00000000036a969f: cmp    $0x0,%edi
  0x00000000036a96a2: je     0x00000000036a9957  ; OopMap{r11=Oop rbx=Oop off=680}
                                                ;*goto
                                                ; - java.lang.String::replace@75 (line 2079)

  0x00000000036a96a8: test   %eax,-0x20b95ae(%rip)        # 0x00000000015f0100
                                                ;   {poll}
  0x00000000036a96ae: movabs $0x1c6d8eb0,%rsi   ;   {metadata(method data for {method} {0x000000001c495ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000036a96b8: incl   0x1c0(%rsi)        ;*goto
                                                ; - java.lang.String::replace@75 (line 2079)

  0x00000000036a96be: cmp    %r14d,%edx
  0x00000000036a96c1: movabs $0x1c6d8eb0,%rsi   ;   {metadata(method data for {method} {0x000000001c495ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000036a96cb: movabs $0x1a0,%rdi
  0x00000000036a96d5: jge    0x00000000036a96e5
  0x00000000036a96db: movabs $0x1b0,%rdi
  0x00000000036a96e5: mov    (%rsi,%rdi,1),%rax
  0x00000000036a96e9: lea    0x1(%rax),%rax
  0x00000000036a96ed: mov    %rax,(%rsi,%rdi,1)
  0x00000000036a96f1: jge    0x00000000036a97bc
  0x00000000036a96f7: jmpq   0x00000000036a9650  ;*if_icmpge
                                                ; - java.lang.String::replace@59 (line 2079)

  0x00000000036a96fc: nopl   0x0(%rax)
  0x00000000036a9700: movslq %r14d,%rdx
  0x00000000036a9703: cmp    0xc(%r11),%r14d
  0x00000000036a9707: jae    0x00000000036a996e
  0x00000000036a970d: movzwl 0x10(%r11,%rdx,2),%edx  ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)

  0x00000000036a9713: cmp    %r8d,%edx
  0x00000000036a9716: movabs $0x1c6d8eb0,%rsi   ;   {metadata(method data for {method} {0x000000001c495ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000036a9720: movabs $0x1f8,%rdi
  0x00000000036a972a: jne    0x00000000036a973a
  0x00000000036a9730: movabs $0x208,%rdi
  0x00000000036a973a: mov    (%rsi,%rdi,1),%rax
  0x00000000036a973e: lea    0x1(%rax),%rax
  0x00000000036a9742: mov    %rax,(%rsi,%rdi,1)
  0x00000000036a9746: jne    0x00000000036a975f  ;*if_icmpne
                                                ; - java.lang.String::replace@98 (line 2084)

  0x00000000036a974c: movabs $0x1c6d8eb0,%rdx   ;   {metadata(method data for {method} {0x000000001c495ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000036a9756: incl   0x218(%rdx)
  0x00000000036a975c: mov    %r9,%rdx           ;*goto
                                                ; - java.lang.String::replace@102 (line 2084)

  0x00000000036a975f: movslq %r14d,%rsi
  0x00000000036a9762: cmp    0xc(%rbx),%r14d
  0x00000000036a9766: jae    0x00000000036a9977
  0x00000000036a976c: mov    %dx,0x10(%rbx,%rsi,2)  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x00000000036a9771: inc    %r14d
  0x00000000036a9774: movabs $0x1c6d8eb0,%rdx   ;   {metadata(method data for {method} {0x000000001c495ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000036a977e: mov    0xe0(%rdx),%esi
  0x00000000036a9784: add    $0x8,%esi
  0x00000000036a9787: mov    %esi,0xe0(%rdx)
  0x00000000036a978d: movabs $0x1c495ef0,%rdx   ;   {metadata({method} {0x000000001c495ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000036a9797: and    $0xfff8,%esi
  0x00000000036a979d: cmp    $0x0,%esi
  0x00000000036a97a0: je     0x00000000036a9980  ; OopMap{r11=Oop rbx=Oop off=934}
                                                ;*goto
                                                ; - java.lang.String::replace@111 (line 2086)

  0x00000000036a97a6: test   %eax,-0x20b96ac(%rip)        # 0x00000000015f0100
                                                ;   {poll}
  0x00000000036a97ac: movabs $0x1c6d8eb0,%rdx   ;   {metadata(method data for {method} {0x000000001c495ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000036a97b6: incl   0x230(%rdx)        ;*goto
                                                ; - java.lang.String::replace@111 (line 2086)

  0x00000000036a97bc: cmp    %r13d,%r14d
  0x00000000036a97bf: movabs $0x1c6d8eb0,%rdx   ;   {metadata(method data for {method} {0x000000001c495ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000036a97c9: movabs $0x1d8,%rsi
  0x00000000036a97d3: jge    0x00000000036a97e3
  0x00000000036a97d9: movabs $0x1e8,%rsi
  0x00000000036a97e3: mov    (%rdx,%rsi,1),%rdi
  0x00000000036a97e7: lea    0x1(%rdi),%rdi
  0x00000000036a97eb: mov    %rdi,(%rdx,%rsi,1)
  0x00000000036a97ef: jl     0x00000000036a9700  ;*if_icmpge
                                                ; - java.lang.String::replace@81 (line 2082)

  0x00000000036a97f5: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000000036a97ff: mov    0x60(%r15),%rax
  0x00000000036a9803: lea    0x18(%rax),%rdi
  0x00000000036a9807: cmp    0x70(%r15),%rdi
  0x00000000036a980b: ja     0x00000000036a9997
  0x00000000036a9811: mov    %rdi,0x60(%r15)
  0x00000000036a9815: mov    0xa8(%rdx),%rcx
  0x00000000036a981c: mov    %rcx,(%rax)
  0x00000000036a981f: mov    %rdx,%rcx
  0x00000000036a9822: shr    $0x3,%rcx
  0x00000000036a9826: mov    %ecx,0x8(%rax)
  0x00000000036a9829: xor    %rcx,%rcx
  0x00000000036a982c: mov    %ecx,0xc(%rax)
  0x00000000036a982f: xor    %rcx,%rcx
  0x00000000036a9832: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.String::replace@114 (line 2087)

  0x00000000036a9836: mov    %rax,%rsi
  0x00000000036a9839: movabs $0x1c6d8eb0,%rdi   ;   {metadata(method data for {method} {0x000000001c495ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000036a9843: addq   $0x1,0x248(%rdi)
  0x00000000036a984b: movabs $0x1c6d3a00,%rsi   ;   {metadata(method data for {method} {0x000000001c493b88} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000036a9855: mov    0xdc(%rsi),%edi
  0x00000000036a985b: add    $0x8,%edi
  0x00000000036a985e: mov    %edi,0xdc(%rsi)
  0x00000000036a9864: movabs $0x1c493b80,%rsi   ;   {metadata({method} {0x000000001c493b88} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000036a986e: and    $0x7ffff8,%edi
  0x00000000036a9874: cmp    $0x0,%edi
  0x00000000036a9877: je     0x00000000036a99a4
  0x00000000036a987d: mov    %rax,%rsi
  0x00000000036a9880: movabs $0x1c6d3a00,%rdi   ;   {metadata(method data for {method} {0x000000001c493b88} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000036a988a: addq   $0x1,0x108(%rdi)
  0x00000000036a9892: movabs $0x1c5c3748,%rsi   ;   {metadata(method data for {method} {0x000000001c490488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000036a989c: mov    0xdc(%rsi),%edi
  0x00000000036a98a2: add    $0x8,%edi
  0x00000000036a98a5: mov    %edi,0xdc(%rsi)
  0x00000000036a98ab: movabs $0x1c490480,%rsi   ;   {metadata({method} {0x000000001c490488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000036a98b5: and    $0x7ffff8,%edi
  0x00000000036a98bb: cmp    $0x0,%edi
  0x00000000036a98be: je     0x00000000036a99bb
  0x00000000036a98c4: mov    %rbx,%r10
  0x00000000036a98c7: shr    $0x3,%r10
  0x00000000036a98cb: mov    %r10d,0xc(%rax)
  0x00000000036a98cf: mov    %rax,%rsi
  0x00000000036a98d2: shr    $0x9,%rsi
  0x00000000036a98d6: movabs $0xf32f000,%rdi
  0x00000000036a98e0: movb   $0x0,(%rsi,%rdi,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@6 (line 611)
                                                ; - java.lang.String::replace@121 (line 2087)

  0x00000000036a98e4: add    $0x50,%rsp
  0x00000000036a98e8: pop    %rbp
  0x00000000036a98e9: test   %eax,-0x20b97ef(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036a98ef: retq                      ;*areturn
                                                ; - java.lang.String::replace@124 (line 2087)

  0x00000000036a98f0: mov    %rdx,%rax
  0x00000000036a98f3: add    $0x50,%rsp
  0x00000000036a98f7: pop    %rbp
  0x00000000036a98f8: test   %eax,-0x20b97fe(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036a98fe: retq   
  0x00000000036a98ff: mov    %rbx,0x8(%rsp)
  0x00000000036a9904: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036a990c: callq  0x00000000036919e0  ; OopMap{rdx=Oop off=1297}
                                                ;*synchronization entry
                                                ; - java.lang.String::replace@-1 (line 2067)
                                                ;   {runtime_call}
  0x00000000036a9911: jmpq   0x00000000036a945e
  0x00000000036a9916: callq  0x000000000368d080  ; OopMap{rdx=Oop r11=Oop off=1307}
                                                ;*arraylength
                                                ; - java.lang.String::replace@9 (line 2068)
                                                ;   {runtime_call}
  0x00000000036a991b: mov    %r14,(%rsp)
  0x00000000036a991f: callq  0x000000000368c9c0  ; OopMap{rdx=Oop r11=Oop off=1316}
                                                ;*caload
                                                ; - java.lang.String::replace@33 (line 2073)
                                                ;   {runtime_call}
  0x00000000036a9924: mov    %rsi,0x8(%rsp)
  0x00000000036a9929: movq   $0x23,(%rsp)
  0x00000000036a9931: callq  0x00000000036919e0  ; OopMap{rdx=Oop r11=Oop off=1334}
                                                ;*if_icmpne
                                                ; - java.lang.String::replace@35 (line 2073)
                                                ;   {runtime_call}
  0x00000000036a9936: jmpq   0x00000000036a94f5
  0x00000000036a993b: callq  0x000000000368e200  ; OopMap{r11=Oop off=1344}
                                                ;*newarray
                                                ; - java.lang.String::replace@48 (line 2078)
                                                ;   {runtime_call}
  0x00000000036a9940: jmpq   0x00000000036a963e
  0x00000000036a9945: mov    %rdx,(%rsp)
  0x00000000036a9949: callq  0x000000000368c9c0  ; OopMap{r11=Oop rbx=Oop off=1358}
                                                ;*caload
                                                ; - java.lang.String::replace@70 (line 2080)
                                                ;   {runtime_call}
  0x00000000036a994e: mov    %rdx,(%rsp)
  0x00000000036a9952: callq  0x000000000368c9c0  ; OopMap{r11=Oop rbx=Oop off=1367}
                                                ;*castore
                                                ; - java.lang.String::replace@71 (line 2080)
                                                ;   {runtime_call}
  0x00000000036a9957: mov    %rsi,0x8(%rsp)
  0x00000000036a995c: movq   $0x4b,(%rsp)
  0x00000000036a9964: callq  0x00000000036919e0  ; OopMap{r11=Oop rbx=Oop off=1385}
                                                ;*goto
                                                ; - java.lang.String::replace@75 (line 2079)
                                                ;   {runtime_call}
  0x00000000036a9969: jmpq   0x00000000036a96a8
  0x00000000036a996e: mov    %r14,(%rsp)
  0x00000000036a9972: callq  0x000000000368c9c0  ; OopMap{r11=Oop rbx=Oop off=1399}
                                                ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)
                                                ;   {runtime_call}
  0x00000000036a9977: mov    %r14,(%rsp)
  0x00000000036a997b: callq  0x000000000368c9c0  ; OopMap{r11=Oop rbx=Oop off=1408}
                                                ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)
                                                ;   {runtime_call}
  0x00000000036a9980: mov    %rdx,0x8(%rsp)
  0x00000000036a9985: movq   $0x6f,(%rsp)
  0x00000000036a998d: callq  0x00000000036919e0  ; OopMap{r11=Oop rbx=Oop off=1426}
                                                ;*goto
                                                ; - java.lang.String::replace@111 (line 2086)
                                                ;   {runtime_call}
  0x00000000036a9992: jmpq   0x00000000036a97a6
  0x00000000036a9997: mov    %rdx,%rdx
  0x00000000036a999a: callq  0x000000000368d300  ; OopMap{rbx=Oop off=1439}
                                                ;*new  ; - java.lang.String::replace@114 (line 2087)
                                                ;   {runtime_call}
  0x00000000036a999f: jmpq   0x00000000036a9836
  0x00000000036a99a4: mov    %rsi,0x8(%rsp)
  0x00000000036a99a9: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036a99b1: callq  0x00000000036919e0  ; OopMap{rbx=Oop rax=Oop off=1462}
                                                ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 609)
                                                ; - java.lang.String::replace@121 (line 2087)
                                                ;   {runtime_call}
  0x00000000036a99b6: jmpq   0x00000000036a987d
  0x00000000036a99bb: mov    %rsi,0x8(%rsp)
  0x00000000036a99c0: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036a99c8: callq  0x00000000036919e0  ; OopMap{rbx=Oop rax=Oop off=1485}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ; - java.lang.String::replace@121 (line 2087)
                                                ;   {runtime_call}
  0x00000000036a99cd: jmpq   0x00000000036a98c4
  0x00000000036a99d2: nop
  0x00000000036a99d3: nop
  0x00000000036a99d4: mov    0x2a8(%r15),%rax
  0x00000000036a99db: movabs $0x0,%r10
  0x00000000036a99e5: mov    %r10,0x2a8(%r15)
  0x00000000036a99ec: movabs $0x0,%r10
  0x00000000036a99f6: mov    %r10,0x2b0(%r15)
  0x00000000036a99fd: add    $0x50,%rsp
  0x00000000036a9a01: pop    %rbp
  0x00000000036a9a02: jmpq   0x000000000368c620  ;   {runtime_call}
  0x00000000036a9a07: hlt    
  0x00000000036a9a08: hlt    
  0x00000000036a9a09: hlt    
  0x00000000036a9a0a: hlt    
  0x00000000036a9a0b: hlt    
  0x00000000036a9a0c: hlt    
  0x00000000036a9a0d: hlt    
  0x00000000036a9a0e: hlt    
  0x00000000036a9a0f: hlt    
  0x00000000036a9a10: hlt    
  0x00000000036a9a11: hlt    
  0x00000000036a9a12: hlt    
  0x00000000036a9a13: hlt    
  0x00000000036a9a14: hlt    
  0x00000000036a9a15: hlt    
  0x00000000036a9a16: hlt    
  0x00000000036a9a17: hlt    
  0x00000000036a9a18: hlt    
  0x00000000036a9a19: hlt    
  0x00000000036a9a1a: hlt    
  0x00000000036a9a1b: hlt    
  0x00000000036a9a1c: hlt    
  0x00000000036a9a1d: hlt    
  0x00000000036a9a1e: hlt    
  0x00000000036a9a1f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000036a9a20: callq  0x000000000368f1a0  ;   {no_reloc}
  0x00000000036a9a25: mov    %rsp,-0x28(%rsp)
  0x00000000036a9a2a: sub    $0x80,%rsp
  0x00000000036a9a31: mov    %rax,0x78(%rsp)
  0x00000000036a9a36: mov    %rcx,0x70(%rsp)
  0x00000000036a9a3b: mov    %rdx,0x68(%rsp)
  0x00000000036a9a40: mov    %rbx,0x60(%rsp)
  0x00000000036a9a45: mov    %rbp,0x50(%rsp)
  0x00000000036a9a4a: mov    %rsi,0x48(%rsp)
  0x00000000036a9a4f: mov    %rdi,0x40(%rsp)
  0x00000000036a9a54: mov    %r8,0x38(%rsp)
  0x00000000036a9a59: mov    %r9,0x30(%rsp)
  0x00000000036a9a5e: mov    %r10,0x28(%rsp)
  0x00000000036a9a63: mov    %r11,0x20(%rsp)
  0x00000000036a9a68: mov    %r12,0x18(%rsp)
  0x00000000036a9a6d: mov    %r13,0x10(%rsp)
  0x00000000036a9a72: mov    %r14,0x8(%rsp)
  0x00000000036a9a77: mov    %r15,(%rsp)
  0x00000000036a9a7b: movabs $0x553ec320,%rcx   ;   {external_word}
  0x00000000036a9a85: movabs $0x36a9a25,%rdx    ;   {internal_word}
  0x00000000036a9a8f: mov    %rsp,%r8
  0x00000000036a9a92: and    $0xfffffffffffffff0,%rsp
  0x00000000036a9a96: callq  0x00000000550a41d0  ;   {runtime_call}
  0x00000000036a9a9b: hlt    
[Deopt Handler Code]
  0x00000000036a9a9c: movabs $0x36a9a9c,%r10    ;   {section_word}
  0x00000000036a9aa6: push   %r10
  0x00000000036a9aa8: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036a9aad: hlt    
  0x00000000036a9aae: hlt    
  0x00000000036a9aaf: hlt    
<nmethod compile_id='23' compiler='C1' level='3' entry='0x00000000036a9400' size='3352' address='0x00000000036a9250' relocation_offset='288' insts_offset='432' stub_offset='2000' scopes_data_offset='2168' scopes_pcs_offset='2608' dependencies_offset='3328' nul_chk_table_offset='3336' method='java/lang/String replace (CC)Ljava/lang/String;' bytes='127' count='328' backedge_count='34164' iicount='328' stamp='0.821'/>
<writer thread='4360'/>
<task_queued compile_id='25' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='125952' iicount='125952' stamp='0.821' comment='tiered' hot_count='125952'/>
<task_queued compile_id='26' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='77184' iicount='77184' stamp='0.822' comment='tiered' hot_count='77184'/>
<task_queued compile_id='27' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='84224' iicount='84224' stamp='0.822' comment='tiered' hot_count='84224'/>
<writer thread='19284'/>
Decoding compiled method 0x00000000036a2f50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c5f4160} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;
  # this:     rdx:rdx   = &apos;sun/nio/cs/UTF_8$Encoder&apos;
  # parm0:    r8:r8     = &apos;[C&apos;
  # parm1:    r9        = int
  # parm2:    rdi       = int
  # parm3:    rsi:rsi   = &apos;[B&apos;
  #           [sp+0x50]  (sp of caller)
  0x00000000036a30a0: mov    0x8(%rdx),%r10d
  0x00000000036a30a4: shl    $0x3,%r10
  0x00000000036a30a8: cmp    %r10,%rax
  0x00000000036a30ab: jne    0x00000000035d5f60  ;   {runtime_call}
  0x00000000036a30b1: data16 xchg %ax,%ax
  0x00000000036a30b4: nopl   0x0(%rax,%rax,1)
  0x00000000036a30bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000036a30c0: mov    %eax,-0x6000(%rsp)
  0x00000000036a30c7: push   %rbp
  0x00000000036a30c8: sub    $0x40,%rsp         ;*synchronization entry
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@-1 (line 704)

  0x00000000036a30cc: mov    %rdx,%r13
  0x00000000036a30cf: mov    0xc(%rsi),%ebx     ;*arraylength
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@13 (line 706)
                                                ; implicit exception: dispatches to 0x00000000036a32c1
  0x00000000036a30d2: cmp    %ebx,%edi
  0x00000000036a30d4: mov    %ebx,%r10d
  0x00000000036a30d7: cmovl  %edi,%r10d         ;*invokestatic min
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)

  0x00000000036a30db: mov    %r9d,%ecx
  0x00000000036a30de: add    %edi,%ecx          ;*iadd
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@2 (line 704)

  0x00000000036a30e0: xor    %eax,%eax
  0x00000000036a30e2: test   %r10d,%r10d
  0x00000000036a30e5: jle    0x00000000036a3213  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x00000000036a30eb: mov    0xc(%r8),%r11d     ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ; implicit exception: dispatches to 0x00000000036a3259
  0x00000000036a30ef: cmp    %r11d,%r9d
  0x00000000036a30f2: jae    0x00000000036a3259
  0x00000000036a30f8: movslq %r11d,%r11
  0x00000000036a30fb: movslq %r9d,%rdi
  0x00000000036a30fe: movslq %r10d,%rdx
  0x00000000036a3101: add    %rdx,%rdi
  0x00000000036a3104: dec    %rdi
  0x00000000036a3107: cmp    %r11,%rdi
  0x00000000036a310a: jae    0x00000000036a3259
  0x00000000036a3110: test   %ebx,%ebx
  0x00000000036a3112: jbe    0x00000000036a3259
  0x00000000036a3118: dec    %rdx
  0x00000000036a311b: movslq %ebx,%r11
  0x00000000036a311e: cmp    %r11,%rdx
  0x00000000036a3121: jae    0x00000000036a3259  ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x00000000036a3127: movzwl 0x10(%r8,%r9,2),%ebp  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x00000000036a312d: cmp    $0x80,%ebp
  0x00000000036a3133: jge    0x00000000036a32b1  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x00000000036a3139: mov    %bpl,0x10(%rsi)    ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x00000000036a313d: mov    %r10d,%edi
  0x00000000036a3140: add    $0xfffffffd,%edi
  0x00000000036a3143: mov    $0x80000000,%r11d
  0x00000000036a3149: cmp    %edi,%r10d
  0x00000000036a314c: cmovl  %r11d,%edi
  0x00000000036a3150: mov    $0x1,%eax
  0x00000000036a3155: cmp    $0x1,%edi
  0x00000000036a3158: jle    0x00000000036a3281
  0x00000000036a315e: xchg   %ax,%ax
  0x00000000036a3160: mov    %eax,%r11d
  0x00000000036a3163: add    %r9d,%r11d         ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x00000000036a3166: movzwl 0x10(%r8,%r11,2),%ebx  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x00000000036a316c: cmp    $0x80,%ebx
  0x00000000036a3172: jge    0x00000000036a321f  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x00000000036a3178: movslq %r11d,%r14
  0x00000000036a317b: movzwl 0x12(%r8,%r14,2),%ebp  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x00000000036a3181: movslq %eax,%rdx
  0x00000000036a3184: mov    %bl,0x10(%rsi,%rdx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x00000000036a3188: cmp    $0x80,%ebp
  0x00000000036a318e: jge    0x00000000036a3223  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x00000000036a3194: movzwl 0x14(%r8,%r14,2),%ebx  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x00000000036a319a: movslq %eax,%rdx
  0x00000000036a319d: mov    %bpl,0x11(%rsi,%rdx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x00000000036a31a2: cmp    $0x80,%ebx
  0x00000000036a31a8: jge    0x00000000036a3218  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x00000000036a31aa: mov    %bl,0x12(%rsi,%rdx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x00000000036a31ae: movzwl 0x16(%r8,%r14,2),%ebp  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x00000000036a31b4: add    $0x3,%r11d         ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x00000000036a31b8: cmp    $0x80,%ebp
  0x00000000036a31be: jge    0x00000000036a322a  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x00000000036a31c0: mov    %bpl,0x13(%rsi,%rdx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x00000000036a31c5: add    $0x4,%eax          ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x00000000036a31c8: cmp    %edi,%eax
  0x00000000036a31ca: jl     0x00000000036a3160  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x00000000036a31cc: cmp    %r10d,%eax
  0x00000000036a31cf: jge    0x00000000036a31fb
  0x00000000036a31d1: data16 xchg %ax,%ax
  0x00000000036a31d4: mov    %eax,%r11d
  0x00000000036a31d7: add    %r9d,%r11d         ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x00000000036a31da: movzwl 0x10(%r8,%r11,2),%ebp  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x00000000036a31e0: cmp    $0x80,%ebp
  0x00000000036a31e6: jge    0x00000000036a32b9  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x00000000036a31ec: movslq %eax,%rbx
  0x00000000036a31ef: mov    %bpl,0x10(%rsi,%rbx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x00000000036a31f4: inc    %eax               ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x00000000036a31f6: cmp    %r10d,%eax
  0x00000000036a31f9: jl     0x00000000036a31d4
  0x00000000036a31fb: inc    %r11d              ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x00000000036a31fe: cmp    %ecx,%r11d
  0x00000000036a3201: jl     0x00000000036a3289
  0x00000000036a3207: add    $0x40,%rsp
  0x00000000036a320b: pop    %rbp
  0x00000000036a320c: test   %eax,-0x20b3212(%rip)        # 0x00000000015f0000
                                                ;   {poll_return}
  0x00000000036a3212: retq   
  0x00000000036a3213: mov    %r9d,%r11d
  0x00000000036a3216: jmp    0x00000000036a31fe
  0x00000000036a3218: add    $0x2,%r11d
  0x00000000036a321c: add    $0x2,%eax
  0x00000000036a321f: mov    %ebx,%ebp
  0x00000000036a3221: jmp    0x00000000036a322d  ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x00000000036a3223: inc    %eax               ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x00000000036a3225: inc    %r11d
  0x00000000036a3228: jmp    0x00000000036a322d  ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x00000000036a322a: add    $0x3,%eax          ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x00000000036a322d: mov    %eax,(%rsp)
  0x00000000036a3230: mov    $0xffffff65,%edx
  0x00000000036a3235: mov    %r8,0x8(%rsp)
  0x00000000036a323a: mov    %r11d,0x4(%rsp)
  0x00000000036a323f: mov    %r13,0x10(%rsp)
  0x00000000036a3244: mov    %rsi,0x18(%rsp)
  0x00000000036a3249: mov    %ecx,0x20(%rsp)
  0x00000000036a324d: mov    %r10d,0x24(%rsp)
  0x00000000036a3252: nop
  0x00000000036a3253: callq  0x00000000035d57a0  ; OopMap{[8]=Oop [16]=Oop [24]=Oop off=440}
                                                ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)
                                                ;   {runtime_call}
  0x00000000036a3258: int3                      ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x00000000036a3259: mov    $0xffffff86,%edx
  0x00000000036a325e: mov    %r8,%rbp
  0x00000000036a3261: mov    %r9d,(%rsp)
  0x00000000036a3265: mov    %r13,0x8(%rsp)
  0x00000000036a326a: mov    %rsi,0x10(%rsp)
  0x00000000036a326f: mov    %ecx,0x4(%rsp)
  0x00000000036a3273: mov    %r10d,0x18(%rsp)
  0x00000000036a3278: data16 xchg %ax,%ax
  0x00000000036a327b: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [8]=Oop [16]=Oop off=480}
                                                ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)
                                                ;   {runtime_call}
  0x00000000036a3280: int3                      ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x00000000036a3281: mov    %r9d,%r11d
  0x00000000036a3284: jmpq   0x00000000036a31cc  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x00000000036a3289: mov    $0xffffff65,%edx
  0x00000000036a328e: mov    %r8,%rbp
  0x00000000036a3291: mov    %eax,0x4(%rsp)
  0x00000000036a3295: mov    %r11d,0x8(%rsp)
  0x00000000036a329a: mov    %r13,0x10(%rsp)
  0x00000000036a329f: mov    %rsi,0x18(%rsp)
  0x00000000036a32a4: mov    %ecx,0x20(%rsp)
  0x00000000036a32a8: data16 xchg %ax,%ax
  0x00000000036a32ab: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [16]=Oop [24]=Oop off=528}
                                                ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@57 (line 712)
                                                ;   {runtime_call}
  0x00000000036a32b0: int3                      ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@57 (line 712)

  0x00000000036a32b1: mov    %r9d,%r11d
  0x00000000036a32b4: jmpq   0x00000000036a322d  ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x00000000036a32b9: mov    %eax,(%rsp)
  0x00000000036a32bc: jmpq   0x00000000036a3230
  0x00000000036a32c1: mov    $0xfffffff6,%edx
  0x00000000036a32c6: nop
  0x00000000036a32c7: callq  0x00000000035d57a0  ; OopMap{off=556}
                                                ;*arraylength
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@13 (line 706)
                                                ;   {runtime_call}
  0x00000000036a32cc: int3                      ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x00000000036a32cd: hlt    
  0x00000000036a32ce: hlt    
  0x00000000036a32cf: hlt    
  0x00000000036a32d0: hlt    
  0x00000000036a32d1: hlt    
  0x00000000036a32d2: hlt    
  0x00000000036a32d3: hlt    
  0x00000000036a32d4: hlt    
  0x00000000036a32d5: hlt    
  0x00000000036a32d6: hlt    
  0x00000000036a32d7: hlt    
  0x00000000036a32d8: hlt    
  0x00000000036a32d9: hlt    
  0x00000000036a32da: hlt    
  0x00000000036a32db: hlt    
  0x00000000036a32dc: hlt    
  0x00000000036a32dd: hlt    
  0x00000000036a32de: hlt    
  0x00000000036a32df: hlt    
[Exception Handler]
[Stub Code]
  0x00000000036a32e0: jmpq   0x000000000368dc20  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000036a32e5: callq  0x00000000036a32ea
  0x00000000036a32ea: subq   $0x5,(%rsp)
  0x00000000036a32ef: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036a32f4: hlt    
  0x00000000036a32f5: hlt    
  0x00000000036a32f6: hlt    
  0x00000000036a32f7: hlt    
<nmethod compile_id='22' compiler='C2' level='4' entry='0x00000000036a30a0' size='1952' address='0x00000000036a2f50' relocation_offset='288' insts_offset='336' stub_offset='912' scopes_data_offset='944' scopes_pcs_offset='1152' dependencies_offset='1920' nul_chk_table_offset='1928' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='1458' backedge_count='55672' iicount='1458' stamp='0.832'/>
<writer thread='16536'/>
Decoding compiled method 0x00000000036a7610:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c503c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8        = int
  #           [sp+0x70]  (sp of caller)
  0x00000000036a7760: mov    0x8(%rdx),%r10d
  0x00000000036a7764: shl    $0x3,%r10
  0x00000000036a7768: cmp    %r10,%rax
  0x00000000036a776b: jne    0x00000000035d5f60  ;   {runtime_call}
  0x00000000036a7771: data16 xchg %ax,%ax
  0x00000000036a7774: nopl   0x0(%rax,%rax,1)
  0x00000000036a777c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000036a7780: mov    %eax,-0x6000(%rsp)
  0x00000000036a7787: push   %rbp
  0x00000000036a7788: sub    $0x60,%rsp         ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)

  0x00000000036a778c: mov    %rdx,0x40(%rsp)
  0x00000000036a7791: mov    0x10(%rdx),%r9d    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)

  0x00000000036a7795: mov    0xc(%r12,%r9,8),%ebp  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; implicit exception: dispatches to 0x00000000036a79c0
  0x00000000036a779a: mov    %r8d,%r11d
  0x00000000036a779d: sub    %ebp,%r11d
  0x00000000036a77a0: test   %r11d,%r11d
  0x00000000036a77a3: jg     0x00000000036a77b6  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)

  0x00000000036a77a5: add    $0x60,%rsp
  0x00000000036a77a9: pop    %rbp
  0x00000000036a77aa: test   %eax,-0x20b77b0(%rip)        # 0x00000000015f0000
                                                ;   {poll_return}
  0x00000000036a77b0: retq   
  0x00000000036a77b1: mov    %r8d,%edi
  0x00000000036a77b4: jmp    0x00000000036a77cc
  0x00000000036a77b6: mov    %ebp,%edi
  0x00000000036a77b8: shl    %edi               ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x00000000036a77ba: mov    %edi,%r11d
  0x00000000036a77bd: sub    %r8d,%r11d
  0x00000000036a77c0: add    $0x2,%r11d
  0x00000000036a77c4: test   %r11d,%r11d
  0x00000000036a77c7: jl     0x00000000036a77b1  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x00000000036a77c9: add    $0x2,%edi          ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x00000000036a77cc: test   %edi,%edi
  0x00000000036a77ce: jle    0x00000000036a77db  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x00000000036a77d0: mov    $0x7ffffff7,%ecx
  0x00000000036a77d5: sub    %edi,%ecx
  0x00000000036a77d7: test   %ecx,%ecx
  0x00000000036a77d9: jge    0x00000000036a77ef  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@29 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x00000000036a77db: mov    %r9d,0x28(%rsp)
  0x00000000036a77e0: data16 xchg %ax,%ax
  0x00000000036a77e3: callq  0x00000000035d61a0  ; OopMap{[40]=NarrowOop [64]=Oop off=136}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ;   {optimized virtual_call}
  0x00000000036a77e8: mov    %eax,%edi
  0x00000000036a77ea: mov    0x28(%rsp),%r9d    ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x00000000036a77ef: cmp    $0x80000,%edi
  0x00000000036a77f5: ja     0x00000000036a7976
  0x00000000036a77fb: movslq %edi,%r10
  0x00000000036a77fe: shl    %r10
  0x00000000036a7801: add    $0x17,%r10
  0x00000000036a7805: mov    %r10,%rax
  0x00000000036a7808: and    $0xfffffffffffffff8,%rax
  0x00000000036a780c: cmp    $0x80000,%edi
  0x00000000036a7812: ja     0x00000000036a7926
  0x00000000036a7818: mov    0x60(%r15),%rbx
  0x00000000036a781c: mov    %rbx,%r11
  0x00000000036a781f: add    %rax,%r11
  0x00000000036a7822: cmp    0x70(%r15),%r11
  0x00000000036a7826: jae    0x00000000036a7926
  0x00000000036a782c: mov    %r11,0x60(%r15)
  0x00000000036a7830: prefetchw 0xc0(%r11)
  0x00000000036a7838: movq   $0x1,(%rbx)
  0x00000000036a783f: prefetchw 0x100(%r11)
  0x00000000036a7847: movl   $0xf8000041,0x8(%rbx)  ;   {metadata({type array char})}
  0x00000000036a784e: mov    %edi,0xc(%rbx)
  0x00000000036a7851: prefetchw 0x140(%r11)
  0x00000000036a7859: prefetchw 0x180(%r11)     ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00000000036a7861: cmp    %edi,%ebp
  0x00000000036a7863: mov    %edi,%esi
  0x00000000036a7865: cmovl  %ebp,%esi          ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00000000036a7868: mov    %rbx,%r13
  0x00000000036a786b: add    $0x10,%r13         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00000000036a786f: lea    (%r12,%r9,8),%rdx  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)

  0x00000000036a7873: shr    $0x3,%r10
  0x00000000036a7877: mov    %r10,%rcx
  0x00000000036a787a: add    $0xfffffffffffffffe,%rcx
  0x00000000036a787e: cmp    %esi,%ebp
  0x00000000036a7880: jb     0x00000000036a797e
  0x00000000036a7886: cmp    %esi,%edi
  0x00000000036a7888: jb     0x00000000036a797e
  0x00000000036a788e: test   %esi,%esi
  0x00000000036a7890: jle    0x00000000036a79ae
  0x00000000036a7896: lea    0x10(%r12,%r9,8),%r9
  0x00000000036a789b: cmp    %edi,%esi
  0x00000000036a789d: jl     0x00000000036a78e3
  0x00000000036a789f: add    $0xfffffffffffffff0,%rax
  0x00000000036a78a3: shr    $0x3,%rax
  0x00000000036a78a7: mov    %r9,%rcx
  0x00000000036a78aa: mov    %r13,%rdx
  0x00000000036a78ad: mov    %rax,%r8
  0x00000000036a78b0: movabs $0x35e2ca0,%r10
  0x00000000036a78ba: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00000000036a78bd: mov    %rbx,%r10
  0x00000000036a78c0: shr    $0x3,%r10
  0x00000000036a78c4: mov    0x40(%rsp),%r11
  0x00000000036a78c9: mov    %r10d,0x10(%r11)
  0x00000000036a78cd: mov    %r11,%r10
  0x00000000036a78d0: shr    $0x9,%r10
  0x00000000036a78d4: mov    $0xf32f000,%r11d
  0x00000000036a78da: mov    %r12b,(%r11,%r10,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)

  0x00000000036a78de: jmpq   0x00000000036a77a5
  0x00000000036a78e3: movslq %esi,%r8
  0x00000000036a78e6: mov    %r8,%r11
  0x00000000036a78e9: shl    %r11
  0x00000000036a78ec: add    $0x10,%r11
  0x00000000036a78f0: mov    %r11,%rcx
  0x00000000036a78f3: and    $0xfffffffffffffff9,%rcx
  0x00000000036a78f7: mov    %rbx,%rdi
  0x00000000036a78fa: add    %rcx,%rdi
  0x00000000036a78fd: shr    $0x3,%r11
  0x00000000036a7901: sub    %r11,%r10
  0x00000000036a7904: mov    %r10,%rcx
  0x00000000036a7907: xor    %rax,%rax
  0x00000000036a790a: shl    $0x3,%rcx
  0x00000000036a790e: rep rex.W stos %al,%es:(%rdi)
  0x00000000036a7911: mov    %r9,%rcx
  0x00000000036a7914: mov    %r13,%rdx
  0x00000000036a7917: movabs $0x35e2980,%r10
  0x00000000036a7921: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00000000036a7924: jmp    0x00000000036a78bd
  0x00000000036a7926: mov    %r9d,0x2c(%rsp)
  0x00000000036a792b: mov    %rax,0x38(%rsp)
  0x00000000036a7930: mov    %r10,0x30(%rsp)
  0x00000000036a7935: mov    %edi,0x28(%rsp)
  0x00000000036a7939: rex.W pushq 0x40(%rsp)
  0x00000000036a793e: rex.W popq 0x20(%rsp)
  0x00000000036a7943: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000000036a794d: mov    %edi,%r8d
  0x00000000036a7950: data16 xchg %ax,%ax
  0x00000000036a7953: callq  0x0000000003693360  ; OopMap{[32]=Oop [44]=NarrowOop [64]=Oop off=504}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x00000000036a7958: mov    %rax,%r11
  0x00000000036a795b: mov    0x28(%rsp),%edi
  0x00000000036a795f: mov    0x30(%rsp),%r10
  0x00000000036a7964: mov    0x38(%rsp),%rax
  0x00000000036a7969: mov    0x2c(%rsp),%r9d
  0x00000000036a796e: mov    %r11,%rbx
  0x00000000036a7971: jmpq   0x00000000036a7861
  0x00000000036a7976: movslq %edi,%r10          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00000000036a7979: jmpq   0x00000000036a77fe
  0x00000000036a797e: mov    %r13,%rdi
  0x00000000036a7981: xor    %rax,%rax
  0x00000000036a7984: shl    $0x3,%rcx
  0x00000000036a7988: rep rex.W stos %al,%es:(%rdi)
  0x00000000036a798b: xor    %r8d,%r8d
  0x00000000036a798e: mov    %rbx,%r9
  0x00000000036a7991: xor    %edi,%edi
  0x00000000036a7993: mov    0x40(%rsp),%rbp
  0x00000000036a7998: mov    %rbx,0x28(%rsp)
  0x00000000036a799d: xchg   %ax,%ax
  0x00000000036a799f: callq  0x000000000369fea0  ; OopMap{rbp=Oop [40]=Oop [64]=Oop off=580}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x00000000036a79a4: mov    0x28(%rsp),%rbx
  0x00000000036a79a9: jmpq   0x00000000036a78bd
  0x00000000036a79ae: mov    %r13,%rdi
  0x00000000036a79b1: xor    %rax,%rax
  0x00000000036a79b4: shl    $0x3,%rcx
  0x00000000036a79b8: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00000000036a79bb: jmpq   0x00000000036a78bd
  0x00000000036a79c0: mov    $0xfffffff6,%edx
  0x00000000036a79c5: xchg   %ax,%ax
  0x00000000036a79c7: callq  0x00000000035d57a0  ; OopMap{off=620}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ;   {runtime_call}
  0x00000000036a79cc: int3   
  0x00000000036a79cd: jmp    0x00000000036a79cf  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00000000036a79cf: mov    %rax,%rdx
  0x00000000036a79d2: jmp    0x00000000036a79d7  ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x00000000036a79d4: mov    %rax,%rdx          ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)

  0x00000000036a79d7: add    $0x60,%rsp
  0x00000000036a79db: pop    %rbp
  0x00000000036a79dc: jmpq   0x000000000369e960  ;   {runtime_call}
  0x00000000036a79e1: hlt    
  0x00000000036a79e2: hlt    
  0x00000000036a79e3: hlt    
  0x00000000036a79e4: hlt    
  0x00000000036a79e5: hlt    
  0x00000000036a79e6: hlt    
  0x00000000036a79e7: hlt    
  0x00000000036a79e8: hlt    
  0x00000000036a79e9: hlt    
  0x00000000036a79ea: hlt    
  0x00000000036a79eb: hlt    
  0x00000000036a79ec: hlt    
  0x00000000036a79ed: hlt    
  0x00000000036a79ee: hlt    
  0x00000000036a79ef: hlt    
  0x00000000036a79f0: hlt    
  0x00000000036a79f1: hlt    
  0x00000000036a79f2: hlt    
  0x00000000036a79f3: hlt    
  0x00000000036a79f4: hlt    
  0x00000000036a79f5: hlt    
  0x00000000036a79f6: hlt    
  0x00000000036a79f7: hlt    
  0x00000000036a79f8: hlt    
  0x00000000036a79f9: hlt    
  0x00000000036a79fa: hlt    
  0x00000000036a79fb: hlt    
  0x00000000036a79fc: hlt    
  0x00000000036a79fd: hlt    
  0x00000000036a79fe: hlt    
  0x00000000036a79ff: hlt    
[Stub Code]
  0x00000000036a7a00: movabs $0x0,%rbx          ;   {no_reloc}
  0x00000000036a7a0a: jmpq   0x00000000036a7a0a  ;   {runtime_call}
[Exception Handler]
  0x00000000036a7a0f: jmpq   0x000000000368dc20  ;   {runtime_call}
[Deopt Handler Code]
  0x00000000036a7a14: callq  0x00000000036a7a19
  0x00000000036a7a19: subq   $0x5,(%rsp)
  0x00000000036a7a1e: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036a7a23: hlt    
  0x00000000036a7a24: hlt    
  0x00000000036a7a25: hlt    
  0x00000000036a7a26: hlt    
  0x00000000036a7a27: hlt    
<nmethod compile_id='18' compiler='C2' level='4' entry='0x00000000036a7760' size='1816' address='0x00000000036a7610' relocation_offset='288' insts_offset='336' stub_offset='1008' scopes_data_offset='1080' scopes_pcs_offset='1272' dependencies_offset='1720' handler_table_offset='1728' nul_chk_table_offset='1800' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='129820' iicount='129820' stamp='0.844'/>
<writer thread='4360'/>
<task_queued compile_id='28' compile_kind='osr' method='java/lang/String indexOf (II)I' bytes='70' count='3104' backedge_count='208896' iicount='3104' osr_bci='37' stamp='0.844' comment='tiered' hot_count='208896'/>
<writer thread='19284'/>
Decoding compiled method 0x00000000036a2cd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c60bc48} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;
  # this:     rdx:rdx   = &apos;java/io/WinNTFileSystem&apos;
  # parm0:    r8        = char
  #           [sp+0x20]  (sp of caller)
  0x00000000036a2e00: mov    0x8(%rdx),%r10d
  0x00000000036a2e04: shl    $0x3,%r10
  0x00000000036a2e08: cmp    %r10,%rax
  0x00000000036a2e0b: jne    0x00000000035d5f60  ;   {runtime_call}
  0x00000000036a2e11: data16 xchg %ax,%ax
  0x00000000036a2e14: nopl   0x0(%rax,%rax,1)
  0x00000000036a2e1c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000036a2e20: sub    $0x18,%rsp
  0x00000000036a2e27: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::isSlash@-1 (line 53)

  0x00000000036a2e2c: cmp    $0x5c,%r8d
  0x00000000036a2e30: je     0x00000000036a2e46  ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)

  0x00000000036a2e32: cmp    $0x2f,%r8d
  0x00000000036a2e36: je     0x00000000036a2e46  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)

  0x00000000036a2e38: xor    %eax,%eax          ;*goto
                                                ; - java.io.WinNTFileSystem::isSlash@13 (line 53)

  0x00000000036a2e3a: add    $0x10,%rsp
  0x00000000036a2e3e: pop    %rbp
  0x00000000036a2e3f: test   %eax,-0x20b2e45(%rip)        # 0x00000000015f0000
                                                ;   {poll_return}
  0x00000000036a2e45: retq                      ;*iconst_1
                                                ; - java.io.WinNTFileSystem::isSlash@12 (line 53)

  0x00000000036a2e46: mov    $0x1,%eax
  0x00000000036a2e4b: jmp    0x00000000036a2e3a
  0x00000000036a2e4d: hlt    
  0x00000000036a2e4e: hlt    
  0x00000000036a2e4f: hlt    
  0x00000000036a2e50: hlt    
  0x00000000036a2e51: hlt    
  0x00000000036a2e52: hlt    
  0x00000000036a2e53: hlt    
  0x00000000036a2e54: hlt    
  0x00000000036a2e55: hlt    
  0x00000000036a2e56: hlt    
  0x00000000036a2e57: hlt    
  0x00000000036a2e58: hlt    
  0x00000000036a2e59: hlt    
  0x00000000036a2e5a: hlt    
  0x00000000036a2e5b: hlt    
  0x00000000036a2e5c: hlt    
  0x00000000036a2e5d: hlt    
  0x00000000036a2e5e: hlt    
  0x00000000036a2e5f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000036a2e60: jmpq   0x000000000368dc20  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000036a2e65: callq  0x00000000036a2e6a
  0x00000000036a2e6a: subq   $0x5,(%rsp)
  0x00000000036a2e6f: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036a2e74: hlt    
  0x00000000036a2e75: hlt    
  0x00000000036a2e76: hlt    
  0x00000000036a2e77: hlt    
<nmethod compile_id='27' compiler='C2' level='4' entry='0x00000000036a2e00' size='584' address='0x00000000036a2cd0' relocation_offset='288' insts_offset='304' stub_offset='400' scopes_data_offset='432' scopes_pcs_offset='464' dependencies_offset='576' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='84328' iicount='84328' stamp='0.848'/>
<writer thread='16772'/>
<task_queued compile_id='29' method='java/io/File isDirectory ()Z' bytes='43' count='512' iicount='512' level='3' stamp='0.848' comment='tiered' hot_count='512'/>
<writer thread='7332'/>
Decoding compiled method 0x00000000036a6d50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c514a88} &apos;isDirectory&apos; &apos;()Z&apos; in &apos;java/io/File&apos;
  #           [sp+0x50]  (sp of caller)
  0x00000000036a6ee0: mov    0x8(%rdx),%r10d
  0x00000000036a6ee4: shl    $0x3,%r10
  0x00000000036a6ee8: cmp    %rax,%r10
  0x00000000036a6eeb: jne    0x00000000035d5f60  ;   {runtime_call}
  0x00000000036a6ef1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000036a6efc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000036a6f00: mov    %eax,-0x6000(%rsp)
  0x00000000036a6f07: push   %rbp
  0x00000000036a6f08: sub    $0x40,%rsp
  0x00000000036a6f0c: movabs $0x1c78bf88,%r8    ;   {metadata(method data for {method} {0x000000001c514a88} &apos;isDirectory&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x00000000036a6f16: mov    0xdc(%r8),%esi
  0x00000000036a6f1d: add    $0x8,%esi
  0x00000000036a6f20: mov    %esi,0xdc(%r8)
  0x00000000036a6f27: movabs $0x1c514a80,%r8    ;   {metadata({method} {0x000000001c514a88} &apos;isDirectory&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x00000000036a6f31: and    $0x1ff8,%esi
  0x00000000036a6f37: cmp    $0x0,%esi
  0x00000000036a6f3a: je     0x00000000036a722f  ;*invokestatic getSecurityManager
                                                ; - java.io.File::isDirectory@0 (line 842)

  0x00000000036a6f40: movabs $0x1c78bf88,%r8    ;   {metadata(method data for {method} {0x000000001c514a88} &apos;isDirectory&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x00000000036a6f4a: addq   $0x1,0x108(%r8)
  0x00000000036a6f52: movabs $0x1c6839a0,%r8    ;   {metadata(method data for {method} {0x000000001c4a9508} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x00000000036a6f5c: mov    0xdc(%r8),%esi
  0x00000000036a6f63: add    $0x8,%esi
  0x00000000036a6f66: mov    %esi,0xdc(%r8)
  0x00000000036a6f6d: movabs $0x1c4a9500,%r8    ;   {metadata({method} {0x000000001c4a9508} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x00000000036a6f77: and    $0x7ffff8,%esi
  0x00000000036a6f7d: cmp    $0x0,%esi
  0x00000000036a6f80: je     0x00000000036a7246
  0x00000000036a6f86: movabs $0x76c100c78,%r8   ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00000000036a6f90: mov    0x74(%r8),%esi
  0x00000000036a6f94: shl    $0x3,%rsi          ;*getstatic security
                                                ; - java.lang.System::getSecurityManager@0 (line 334)
                                                ; - java.io.File::isDirectory@0 (line 842)

  0x00000000036a6f98: cmp    $0x0,%rsi
  0x00000000036a6f9c: movabs $0x1c78bf88,%r8    ;   {metadata(method data for {method} {0x000000001c514a88} &apos;isDirectory&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x00000000036a6fa6: movabs $0x118,%rdi
  0x00000000036a6fb0: je     0x00000000036a6fc0
  0x00000000036a6fb6: movabs $0x128,%rdi
  0x00000000036a6fc0: mov    (%r8,%rdi,1),%rbx
  0x00000000036a6fc4: lea    0x1(%rbx),%rbx
  0x00000000036a6fc8: mov    %rbx,(%r8,%rdi,1)
  0x00000000036a6fcc: jne    0x00000000036a6fdc  ;*ifnull
                                                ; - java.io.File::isDirectory@5 (line 843)

  0x00000000036a6fd2: mov    %rdx,0x28(%rsp)
  0x00000000036a6fd7: jmpq   0x00000000036a7094  ;*aload_0
                                                ; - java.io.File::isDirectory@16 (line 846)

  0x00000000036a6fdc: mov    0x10(%rdx),%r8d
  0x00000000036a6fe0: shl    $0x3,%r8           ;*getfield path
                                                ; - java.io.File::isDirectory@10 (line 844)

  0x00000000036a6fe4: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x00000000036a725d
  0x00000000036a6fe7: mov    %rsi,%rdi
  0x00000000036a6fea: movabs $0x1c78bf88,%rbx   ;   {metadata(method data for {method} {0x000000001c514a88} &apos;isDirectory&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x00000000036a6ff4: mov    0x8(%rdi),%edi
  0x00000000036a6ff7: shl    $0x3,%rdi
  0x00000000036a6ffb: cmp    0x140(%rbx),%rdi
  0x00000000036a7002: jne    0x00000000036a7011
  0x00000000036a7004: addq   $0x1,0x148(%rbx)
  0x00000000036a700c: jmpq   0x00000000036a7077
  0x00000000036a7011: cmp    0x150(%rbx),%rdi
  0x00000000036a7018: jne    0x00000000036a7027
  0x00000000036a701a: addq   $0x1,0x158(%rbx)
  0x00000000036a7022: jmpq   0x00000000036a7077
  0x00000000036a7027: cmpq   $0x0,0x140(%rbx)
  0x00000000036a7032: jne    0x00000000036a704b
  0x00000000036a7034: mov    %rdi,0x140(%rbx)
  0x00000000036a703b: movq   $0x1,0x148(%rbx)
  0x00000000036a7046: jmpq   0x00000000036a7077
  0x00000000036a704b: cmpq   $0x0,0x150(%rbx)
  0x00000000036a7056: jne    0x00000000036a706f
  0x00000000036a7058: mov    %rdi,0x150(%rbx)
  0x00000000036a705f: movq   $0x1,0x158(%rbx)
  0x00000000036a706a: jmpq   0x00000000036a7077
  0x00000000036a706f: addq   $0x1,0x138(%rbx)
  0x00000000036a7077: mov    %rdx,0x28(%rsp)
  0x00000000036a707c: mov    %rsi,%rdx          ;*invokevirtual checkRead
                                                ; - java.io.File::isDirectory@13 (line 844)

  0x00000000036a707f: nop
  0x00000000036a7080: nop
  0x00000000036a7081: nop
  0x00000000036a7082: nop
  0x00000000036a7083: nop
  0x00000000036a7084: nop
  0x00000000036a7085: movabs $0xffffffffffffffff,%rax
  0x00000000036a708f: callq  0x00000000035d63e0  ; OopMap{[40]=Oop off=436}
                                                ;*invokevirtual checkRead
                                                ; - java.io.File::isDirectory@13 (line 844)
                                                ;   {virtual_call}
  0x00000000036a7094: mov    0x28(%rsp),%rdx
  0x00000000036a7099: movabs $0x1c78bf88,%rsi   ;   {metadata(method data for {method} {0x000000001c514a88} &apos;isDirectory&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x00000000036a70a3: mov    0x8(%rdx),%edx
  0x00000000036a70a6: shl    $0x3,%rdx
  0x00000000036a70aa: cmp    0x170(%rsi),%rdx
  0x00000000036a70b1: jne    0x00000000036a70c0
  0x00000000036a70b3: addq   $0x1,0x178(%rsi)
  0x00000000036a70bb: jmpq   0x00000000036a7126
  0x00000000036a70c0: cmp    0x180(%rsi),%rdx
  0x00000000036a70c7: jne    0x00000000036a70d6
  0x00000000036a70c9: addq   $0x1,0x188(%rsi)
  0x00000000036a70d1: jmpq   0x00000000036a7126
  0x00000000036a70d6: cmpq   $0x0,0x170(%rsi)
  0x00000000036a70e1: jne    0x00000000036a70fa
  0x00000000036a70e3: mov    %rdx,0x170(%rsi)
  0x00000000036a70ea: movq   $0x1,0x178(%rsi)
  0x00000000036a70f5: jmpq   0x00000000036a7126
  0x00000000036a70fa: cmpq   $0x0,0x180(%rsi)
  0x00000000036a7105: jne    0x00000000036a711e
  0x00000000036a7107: mov    %rdx,0x180(%rsi)
  0x00000000036a710e: movq   $0x1,0x188(%rsi)
  0x00000000036a7119: jmpq   0x00000000036a7126
  0x00000000036a711e: addq   $0x1,0x168(%rsi)
  0x00000000036a7126: mov    0x28(%rsp),%rdx    ;*invokevirtual isInvalid
                                                ; - java.io.File::isDirectory@17 (line 846)

  0x00000000036a712b: nop
  0x00000000036a712c: nop
  0x00000000036a712d: nop
  0x00000000036a712e: nop
  0x00000000036a712f: callq  0x00000000035d61a0  ; OopMap{[40]=Oop off=596}
                                                ;*invokevirtual isInvalid
                                                ; - java.io.File::isDirectory@17 (line 846)
                                                ;   {optimized virtual_call}
  0x00000000036a7134: cmp    $0x0,%eax
  0x00000000036a7137: movabs $0x1c78bf88,%r8    ;   {metadata(method data for {method} {0x000000001c514a88} &apos;isDirectory&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x00000000036a7141: movabs $0x198,%rdx
  0x00000000036a714b: je     0x00000000036a715b
  0x00000000036a7151: movabs $0x1a8,%rdx
  0x00000000036a715b: mov    (%r8,%rdx,1),%rsi
  0x00000000036a715f: lea    0x1(%rsi),%rsi
  0x00000000036a7163: mov    %rsi,(%r8,%rdx,1)
  0x00000000036a7167: jne    0x00000000036a721e  ;*ifeq
                                                ; - java.io.File::isDirectory@20 (line 846)

  0x00000000036a716d: mov    0x28(%rsp),%rdx
  0x00000000036a7172: movabs $0x76c1898d8,%rsi  ;   {oop(a &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036a717c: mov    %rsi,%r8
  0x00000000036a717f: movabs $0x1c78bf88,%rdi   ;   {metadata(method data for {method} {0x000000001c514a88} &apos;isDirectory&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x00000000036a7189: movabs $0x7c002cbf8,%r10  ;   {metadata(&apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036a7193: mov    %r10,0x1c0(%rdi)
  0x00000000036a719a: addq   $0x1,0x1c8(%rdi)
  0x00000000036a71a2: mov    %rdx,%r8
  0x00000000036a71a5: mov    %rsi,%rdx          ;*invokevirtual getBooleanAttributes
                                                ; - java.io.File::isDirectory@29 (line 849)

  0x00000000036a71a8: nop
  0x00000000036a71a9: nop
  0x00000000036a71aa: nop
  0x00000000036a71ab: nop
  0x00000000036a71ac: nop
  0x00000000036a71ad: nop
  0x00000000036a71ae: nop
  0x00000000036a71af: callq  0x00000000035d61a0  ; OopMap{off=724}
                                                ;*invokevirtual getBooleanAttributes
                                                ; - java.io.File::isDirectory@29 (line 849)
                                                ;   {optimized virtual_call}
  0x00000000036a71b4: and    $0x4,%eax
  0x00000000036a71b7: cmp    $0x0,%eax
  0x00000000036a71ba: movabs $0x1c78bf88,%rax   ;   {metadata(method data for {method} {0x000000001c514a88} &apos;isDirectory&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x00000000036a71c4: movabs $0x1e8,%rsi
  0x00000000036a71ce: je     0x00000000036a71de
  0x00000000036a71d4: movabs $0x1f8,%rsi
  0x00000000036a71de: mov    (%rax,%rsi,1),%rdi
  0x00000000036a71e2: lea    0x1(%rdi),%rdi
  0x00000000036a71e6: mov    %rdi,(%rax,%rsi,1)
  0x00000000036a71ea: je     0x00000000036a720a  ;*ifeq
                                                ; - java.io.File::isDirectory@34 (line 849)

  0x00000000036a71f0: movabs $0x1c78bf88,%rax   ;   {metadata(method data for {method} {0x000000001c514a88} &apos;isDirectory&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x00000000036a71fa: incl   0x208(%rax)
  0x00000000036a7200: mov    $0x1,%eax
  0x00000000036a7205: jmpq   0x00000000036a720f  ;*goto
                                                ; - java.io.File::isDirectory@38 (line 849)

  0x00000000036a720a: mov    $0x0,%eax
  0x00000000036a720f: and    $0x1,%eax
  0x00000000036a7212: add    $0x40,%rsp
  0x00000000036a7216: pop    %rbp
  0x00000000036a7217: test   %eax,-0x20b711d(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036a721d: retq                      ;*ireturn
                                                ; - java.io.File::isDirectory@42 (line 849)

  0x00000000036a721e: mov    $0x0,%eax
  0x00000000036a7223: add    $0x40,%rsp
  0x00000000036a7227: pop    %rbp
  0x00000000036a7228: test   %eax,-0x20b712e(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036a722e: retq   
  0x00000000036a722f: mov    %r8,0x8(%rsp)
  0x00000000036a7234: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036a723c: callq  0x00000000036919e0  ; OopMap{rdx=Oop off=865}
                                                ;*synchronization entry
                                                ; - java.io.File::isDirectory@-1 (line 842)
                                                ;   {runtime_call}
  0x00000000036a7241: jmpq   0x00000000036a6f40
  0x00000000036a7246: mov    %r8,0x8(%rsp)
  0x00000000036a724b: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036a7253: callq  0x00000000036919e0  ; OopMap{rdx=Oop off=888}
                                                ;*synchronization entry
                                                ; - java.lang.System::getSecurityManager@-1 (line 334)
                                                ; - java.io.File::isDirectory@0 (line 842)
                                                ;   {runtime_call}
  0x00000000036a7258: jmpq   0x00000000036a6f86
  0x00000000036a725d: callq  0x000000000368d080  ; OopMap{rdx=Oop rsi=Oop r8=Oop off=898}
                                                ;*invokevirtual checkRead
                                                ; - java.io.File::isDirectory@13 (line 844)
                                                ;   {runtime_call}
  0x00000000036a7262: nop
  0x00000000036a7263: nop
  0x00000000036a7264: mov    0x2a8(%r15),%rax
  0x00000000036a726b: movabs $0x0,%r10
  0x00000000036a7275: mov    %r10,0x2a8(%r15)
  0x00000000036a727c: movabs $0x0,%r10
  0x00000000036a7286: mov    %r10,0x2b0(%r15)
  0x00000000036a728d: add    $0x40,%rsp
  0x00000000036a7291: pop    %rbp
  0x00000000036a7292: jmpq   0x000000000368c620  ;   {runtime_call}
  0x00000000036a7297: hlt    
  0x00000000036a7298: hlt    
  0x00000000036a7299: hlt    
  0x00000000036a729a: hlt    
  0x00000000036a729b: hlt    
  0x00000000036a729c: hlt    
  0x00000000036a729d: hlt    
  0x00000000036a729e: hlt    
  0x00000000036a729f: hlt    
[Stub Code]
  0x00000000036a72a0: nop                       ;   {no_reloc}
  0x00000000036a72a1: nop
  0x00000000036a72a2: nop
  0x00000000036a72a3: nop
  0x00000000036a72a4: nop
  0x00000000036a72a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036a72af: jmpq   0x00000000036a72af  ;   {runtime_call}
  0x00000000036a72b4: nop
  0x00000000036a72b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036a72bf: jmpq   0x00000000036a72bf  ;   {runtime_call}
  0x00000000036a72c4: nop
  0x00000000036a72c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036a72cf: jmpq   0x00000000036a72cf  ;   {runtime_call}
[Exception Handler]
  0x00000000036a72d4: callq  0x000000000368f1a0  ;   {runtime_call}
  0x00000000036a72d9: mov    %rsp,-0x28(%rsp)
  0x00000000036a72de: sub    $0x80,%rsp
  0x00000000036a72e5: mov    %rax,0x78(%rsp)
  0x00000000036a72ea: mov    %rcx,0x70(%rsp)
  0x00000000036a72ef: mov    %rdx,0x68(%rsp)
  0x00000000036a72f4: mov    %rbx,0x60(%rsp)
  0x00000000036a72f9: mov    %rbp,0x50(%rsp)
  0x00000000036a72fe: mov    %rsi,0x48(%rsp)
  0x00000000036a7303: mov    %rdi,0x40(%rsp)
  0x00000000036a7308: mov    %r8,0x38(%rsp)
  0x00000000036a730d: mov    %r9,0x30(%rsp)
  0x00000000036a7312: mov    %r10,0x28(%rsp)
  0x00000000036a7317: mov    %r11,0x20(%rsp)
  0x00000000036a731c: mov    %r12,0x18(%rsp)
  0x00000000036a7321: mov    %r13,0x10(%rsp)
  0x00000000036a7326: mov    %r14,0x8(%rsp)
  0x00000000036a732b: mov    %r15,(%rsp)
  0x00000000036a732f: movabs $0x553ec320,%rcx   ;   {external_word}
  0x00000000036a7339: movabs $0x36a72d9,%rdx    ;   {internal_word}
  0x00000000036a7343: mov    %rsp,%r8
  0x00000000036a7346: and    $0xfffffffffffffff0,%rsp
  0x00000000036a734a: callq  0x00000000550a41d0  ;   {runtime_call}
  0x00000000036a734f: hlt    
[Deopt Handler Code]
  0x00000000036a7350: movabs $0x36a7350,%r10    ;   {section_word}
  0x00000000036a735a: push   %r10
  0x00000000036a735c: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036a7361: hlt    
  0x00000000036a7362: hlt    
  0x00000000036a7363: hlt    
  0x00000000036a7364: hlt    
  0x00000000036a7365: hlt    
  0x00000000036a7366: hlt    
  0x00000000036a7367: hlt    
<nmethod compile_id='29' compiler='C1' level='3' entry='0x00000000036a6ee0' size='2064' address='0x00000000036a6d50' relocation_offset='288' insts_offset='400' stub_offset='1360' scopes_data_offset='1584' scopes_pcs_offset='1720' dependencies_offset='2040' nul_chk_table_offset='2048' method='java/io/File isDirectory ()Z' bytes='43' count='512' iicount='512' stamp='0.861'/>
<writer thread='4360'/>
<task_queued compile_id='30' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='2310' iicount='2310' level='3' stamp='0.861' comment='tiered' hot_count='2304'/>
<writer thread='19284'/>
Decoding compiled method 0x00000000036aa1d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c490488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x20]  (sp of caller)
  0x00000000036aa300: mov    0x8(%rdx),%r10d
  0x00000000036aa304: shl    $0x3,%r10
  0x00000000036aa308: cmp    %r10,%rax
  0x00000000036aa30b: jne    0x00000000035d5f60  ;   {runtime_call}
  0x00000000036aa311: data16 xchg %ax,%ax
  0x00000000036aa314: nopl   0x0(%rax,%rax,1)
  0x00000000036aa31c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000036aa320: mov    %eax,-0x6000(%rsp)
  0x00000000036aa327: push   %rbp
  0x00000000036aa328: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)

  0x00000000036aa32c: mov    0x8(%rdx),%r11d
  0x00000000036aa330: movabs $0x0,%r10
  0x00000000036aa33a: lea    (%r10,%r11,8),%r10
  0x00000000036aa33e: mov    $0x40000000,%r8d
  0x00000000036aa344: test   %r8d,0x9c(%r10)
  0x00000000036aa34b: je     0x00000000036aa358  ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x00000000036aa34d: mov    %rdx,%rbp
  0x00000000036aa350: data16 xchg %ax,%ax
  0x00000000036aa353: callq  0x000000000369fde0  ; OopMap{rbp=Oop off=88}
                                                ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ;   {runtime_call}
  0x00000000036aa358: add    $0x10,%rsp
  0x00000000036aa35c: pop    %rbp
  0x00000000036aa35d: test   %eax,-0x20ba363(%rip)        # 0x00000000015f0000
                                                ;   {poll_return}
  0x00000000036aa363: retq                      ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x00000000036aa364: mov    %rax,%rdx
  0x00000000036aa367: add    $0x10,%rsp
  0x00000000036aa36b: pop    %rbp
  0x00000000036aa36c: jmpq   0x000000000369e960  ;   {runtime_call}
  0x00000000036aa371: hlt    
  0x00000000036aa372: hlt    
  0x00000000036aa373: hlt    
  0x00000000036aa374: hlt    
  0x00000000036aa375: hlt    
  0x00000000036aa376: hlt    
  0x00000000036aa377: hlt    
  0x00000000036aa378: hlt    
  0x00000000036aa379: hlt    
  0x00000000036aa37a: hlt    
  0x00000000036aa37b: hlt    
  0x00000000036aa37c: hlt    
  0x00000000036aa37d: hlt    
  0x00000000036aa37e: hlt    
  0x00000000036aa37f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000036aa380: jmpq   0x000000000368dc20  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000036aa385: callq  0x00000000036aa38a
  0x00000000036aa38a: subq   $0x5,(%rsp)
  0x00000000036aa38f: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036aa394: hlt    
  0x00000000036aa395: hlt    
  0x00000000036aa396: hlt    
  0x00000000036aa397: hlt    
<nmethod compile_id='10' compiler='C2' level='4' entry='0x00000000036aa300' size='616' address='0x00000000036aa1d0' relocation_offset='288' insts_offset='304' stub_offset='432' scopes_data_offset='464' scopes_pcs_offset='488' dependencies_offset='584' handler_table_offset='592' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='27495' iicount='27495' stamp='0.864'/>
<writer thread='16536'/>
Decoding compiled method 0x00000000036a5a50:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001c495140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  0x00000000036a5ba0: int3   
  0x00000000036a5ba1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000036a5bac: data16 data16 xchg %ax,%ax
  0x00000000036a5bb0: mov    %eax,-0x6000(%rsp)
  0x00000000036a5bb7: push   %rbp
  0x00000000036a5bb8: sub    $0x50,%rsp
  0x00000000036a5bbc: mov    (%rdx),%ebx
  0x00000000036a5bbe: mov    0x8(%rdx),%r14
  0x00000000036a5bc2: mov    0x20(%rdx),%r13d
  0x00000000036a5bc6: mov    0x10(%rdx),%ebp
  0x00000000036a5bc9: mov    %rdx,%rcx
  0x00000000036a5bcc: movabs $0x54fdc6c0,%r10
  0x00000000036a5bd6: callq  *%r10
  0x00000000036a5bd9: test   %r14,%r14
  0x00000000036a5bdc: je     0x00000000036a5d27
  0x00000000036a5be2: mov    0x8(%r14),%r11d
  0x00000000036a5be6: cmp    $0xf8000041,%r11d  ;   {metadata({type array char})}
  0x00000000036a5bed: jne    0x00000000036a5d61  ;*iload
                                                ; - java.lang.String::indexOf@37 (line 1558)

  0x00000000036a5bf3: mov    %r14,%r10
  0x00000000036a5bf6: add    $0xc,%r10          ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000036a5bfa: cmp    %ebp,%ebx
  0x00000000036a5bfc: jge    0x00000000036a5cf2  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x00000000036a5c02: mov    %ebx,%r11d
  0x00000000036a5c05: inc    %r11d
  0x00000000036a5c08: xor    %r8d,%r8d
  0x00000000036a5c0b: cmp    %r8d,%r11d
  0x00000000036a5c0e: cmovl  %r8d,%r11d
  0x00000000036a5c12: cmp    %ebp,%r11d
  0x00000000036a5c15: cmovg  %ebp,%r11d
  0x00000000036a5c19: test   %r14,%r14
  0x00000000036a5c1c: je     0x00000000036a5d35
  0x00000000036a5c22: mov    (%r10),%r9d
  0x00000000036a5c25: cmp    %r9d,%ebx
  0x00000000036a5c28: jae    0x00000000036a5d45  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000036a5c2e: movzwl 0x10(%r14,%rbx,2),%r8d
  0x00000000036a5c34: cmp    %r13d,%r8d
  0x00000000036a5c37: je     0x00000000036a5cf7  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000036a5c3d: inc    %ebx               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x00000000036a5c3f: cmp    %r11d,%ebx
  0x00000000036a5c42: jl     0x00000000036a5c19  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x00000000036a5c44: cmp    %r9d,%ebp
  0x00000000036a5c47: mov    %ebp,%r11d
  0x00000000036a5c4a: cmovg  %r9d,%r11d
  0x00000000036a5c4e: mov    %r11d,%edi
  0x00000000036a5c51: add    $0xfffffff9,%edi
  0x00000000036a5c54: mov    $0x80000000,%r8d
  0x00000000036a5c5a: cmp    %edi,%r11d
  0x00000000036a5c5d: cmovl  %r8d,%edi
  0x00000000036a5c61: cmp    %edi,%ebx
  0x00000000036a5c63: jge    0x00000000036a5cd2
  0x00000000036a5c65: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000036a5c70: movzwl 0x10(%r14,%rbx,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000036a5c76: cmp    %r13d,%r11d
  0x00000000036a5c79: je     0x00000000036a5cf7  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000036a5c7b: movslq %ebx,%r10
  0x00000000036a5c7e: movzwl 0x12(%r14,%r10,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000036a5c84: cmp    %r13d,%r11d
  0x00000000036a5c87: je     0x00000000036a5d05  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000036a5c89: movzwl 0x14(%r14,%r10,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000036a5c8f: cmp    %r13d,%r11d
  0x00000000036a5c92: je     0x00000000036a5d09  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000036a5c94: movzwl 0x16(%r14,%r10,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000036a5c9a: cmp    %r13d,%r11d
  0x00000000036a5c9d: je     0x00000000036a5d0e  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000036a5c9f: movzwl 0x18(%r14,%r10,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000036a5ca5: cmp    %r13d,%r11d
  0x00000000036a5ca8: je     0x00000000036a5d13  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000036a5caa: movzwl 0x1a(%r14,%r10,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000036a5cb0: cmp    %r13d,%r11d
  0x00000000036a5cb3: je     0x00000000036a5d18  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000036a5cb5: movzwl 0x1c(%r14,%r10,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000036a5cbb: cmp    %r13d,%r11d
  0x00000000036a5cbe: je     0x00000000036a5d1d  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000036a5cc0: movzwl 0x1e(%r14,%r10,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000036a5cc6: cmp    %r13d,%r10d
  0x00000000036a5cc9: je     0x00000000036a5d22  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000036a5ccb: add    $0x8,%ebx          ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x00000000036a5cce: cmp    %edi,%ebx
  0x00000000036a5cd0: jl     0x00000000036a5c70  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x00000000036a5cd2: cmp    %ebp,%ebx
  0x00000000036a5cd4: jge    0x00000000036a5cf2
  0x00000000036a5cd6: xchg   %ax,%ax
  0x00000000036a5cd8: cmp    %r9d,%ebx
  0x00000000036a5cdb: jae    0x00000000036a5d7d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000036a5ce1: movzwl 0x10(%r14,%rbx,2),%r11d
  0x00000000036a5ce7: cmp    %r13d,%r11d
  0x00000000036a5cea: je     0x00000000036a5cf7  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000036a5cec: inc    %ebx               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x00000000036a5cee: cmp    %ebp,%ebx
  0x00000000036a5cf0: jl     0x00000000036a5cd8  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x00000000036a5cf2: mov    $0xffffffff,%ebx   ;*iload
                                                ; - java.lang.String::indexOf@37 (line 1558)

  0x00000000036a5cf7: mov    %ebx,%eax
  0x00000000036a5cf9: add    $0x50,%rsp
  0x00000000036a5cfd: pop    %rbp
  0x00000000036a5cfe: test   %eax,-0x20b5d04(%rip)        # 0x00000000015f0000
                                                ;   {poll_return}
  0x00000000036a5d04: retq   
  0x00000000036a5d05: inc    %ebx
  0x00000000036a5d07: jmp    0x00000000036a5cf7
  0x00000000036a5d09: add    $0x2,%ebx
  0x00000000036a5d0c: jmp    0x00000000036a5cf7
  0x00000000036a5d0e: add    $0x3,%ebx
  0x00000000036a5d11: jmp    0x00000000036a5cf7
  0x00000000036a5d13: add    $0x4,%ebx
  0x00000000036a5d16: jmp    0x00000000036a5cf7
  0x00000000036a5d18: add    $0x5,%ebx
  0x00000000036a5d1b: jmp    0x00000000036a5cf7
  0x00000000036a5d1d: add    $0x6,%ebx
  0x00000000036a5d20: jmp    0x00000000036a5cf7
  0x00000000036a5d22: add    $0x7,%ebx          ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x00000000036a5d25: jmp    0x00000000036a5cf7
  0x00000000036a5d27: xor    %r14d,%r14d
  0x00000000036a5d2a: mov    $0xc,%r10d
  0x00000000036a5d30: jmpq   0x00000000036a5bfa
  0x00000000036a5d35: mov    $0xfffffff6,%edx
  0x00000000036a5d3a: mov    %ebx,%ebp
  0x00000000036a5d3c: data16 xchg %ax,%ax
  0x00000000036a5d3f: callq  0x00000000035d57a0  ; OopMap{off=420}
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)
                                                ;   {runtime_call}
  0x00000000036a5d44: int3   
  0x00000000036a5d45: mov    %ebx,0x20(%rsp)
  0x00000000036a5d49: mov    $0xffffffe4,%edx
  0x00000000036a5d4e: mov    %r13d,0x24(%rsp)
  0x00000000036a5d53: mov    %r14,0x30(%rsp)
  0x00000000036a5d58: data16 xchg %ax,%ax
  0x00000000036a5d5b: callq  0x00000000035d57a0  ; OopMap{[48]=Oop off=448}
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)
                                                ;   {runtime_call}
  0x00000000036a5d60: int3   
  0x00000000036a5d61: mov    $0xffffff9d,%edx
  0x00000000036a5d66: mov    %r13d,0x20(%rsp)
  0x00000000036a5d6b: mov    %r14,0x28(%rsp)
  0x00000000036a5d70: mov    %ebx,0x24(%rsp)
  0x00000000036a5d74: data16 xchg %ax,%ax
  0x00000000036a5d77: callq  0x00000000035d57a0  ; OopMap{[40]=Oop off=476}
                                                ;*iload
                                                ; - java.lang.String::indexOf@37 (line 1558)
                                                ;   {runtime_call}
  0x00000000036a5d7c: int3                      ;*iload
                                                ; - java.lang.String::indexOf@37 (line 1558)

  0x00000000036a5d7d: mov    %ebx,0x20(%rsp)
  0x00000000036a5d81: jmp    0x00000000036a5d49
  0x00000000036a5d83: hlt    
  0x00000000036a5d84: hlt    
  0x00000000036a5d85: hlt    
  0x00000000036a5d86: hlt    
  0x00000000036a5d87: hlt    
  0x00000000036a5d88: hlt    
  0x00000000036a5d89: hlt    
  0x00000000036a5d8a: hlt    
  0x00000000036a5d8b: hlt    
  0x00000000036a5d8c: hlt    
  0x00000000036a5d8d: hlt    
  0x00000000036a5d8e: hlt    
  0x00000000036a5d8f: hlt    
  0x00000000036a5d90: hlt    
  0x00000000036a5d91: hlt    
  0x00000000036a5d92: hlt    
  0x00000000036a5d93: hlt    
  0x00000000036a5d94: hlt    
  0x00000000036a5d95: hlt    
  0x00000000036a5d96: hlt    
  0x00000000036a5d97: hlt    
  0x00000000036a5d98: hlt    
  0x00000000036a5d99: hlt    
  0x00000000036a5d9a: hlt    
  0x00000000036a5d9b: hlt    
  0x00000000036a5d9c: hlt    
  0x00000000036a5d9d: hlt    
  0x00000000036a5d9e: hlt    
  0x00000000036a5d9f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000036a5da0: jmpq   0x000000000368dc20  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000036a5da5: callq  0x00000000036a5daa
  0x00000000036a5daa: subq   $0x5,(%rsp)
  0x00000000036a5daf: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036a5db4: hlt    
  0x00000000036a5db5: hlt    
  0x00000000036a5db6: hlt    
  0x00000000036a5db7: hlt    
<nmethod compile_id='28' compile_kind='osr' compiler='C2' level='4' entry='0x00000000036a5ba0' size='1600' address='0x00000000036a5a50' relocation_offset='288' insts_offset='336' stub_offset='848' scopes_data_offset='888' scopes_pcs_offset='1000' dependencies_offset='1592' method='java/lang/String indexOf (II)I' bytes='70' count='3112' backedge_count='209235' iicount='3112' stamp='0.874'/>
<writer thread='4360'/>
<task_queued compile_id='31' method='java/util/concurrent/ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='21' count='256' iicount='256' level='3' stamp='0.874' comment='tiered' hot_count='256'/>
<writer thread='7332'/>
Decoding compiled method 0x00000000036ab610:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001c4a9508} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;
  #           [sp+0x40]  (sp of caller)
  0x00000000036ab760: mov    %eax,-0x6000(%rsp)
  0x00000000036ab767: push   %rbp
  0x00000000036ab768: sub    $0x30,%rsp
  0x00000000036ab76c: movabs $0x1c6839a0,%rax   ;   {metadata(method data for {method} {0x000000001c4a9508} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x00000000036ab776: mov    0xdc(%rax),%esi
  0x00000000036ab77c: add    $0x8,%esi
  0x00000000036ab77f: mov    %esi,0xdc(%rax)
  0x00000000036ab785: movabs $0x1c4a9500,%rax   ;   {metadata({method} {0x000000001c4a9508} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x00000000036ab78f: and    $0x1ff8,%esi
  0x00000000036ab795: cmp    $0x0,%esi
  0x00000000036ab798: je     0x00000000036ab7bb
  0x00000000036ab79e: movabs $0x76c100c78,%rax  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00000000036ab7a8: mov    0x74(%rax),%eax
  0x00000000036ab7ab: shl    $0x3,%rax          ;*getstatic security
                                                ; - java.lang.System::getSecurityManager@0 (line 334)

  0x00000000036ab7af: add    $0x30,%rsp
  0x00000000036ab7b3: pop    %rbp
  0x00000000036ab7b4: test   %eax,-0x20bb6ba(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036ab7ba: retq   
  0x00000000036ab7bb: mov    %rax,0x8(%rsp)
  0x00000000036ab7c0: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036ab7c8: callq  0x00000000036919e0  ; OopMap{off=109}
                                                ;*synchronization entry
                                                ; - java.lang.System::getSecurityManager@-1 (line 334)
                                                ;   {runtime_call}
  0x00000000036ab7cd: jmp    0x00000000036ab79e
  0x00000000036ab7cf: nop
  0x00000000036ab7d0: nop
  0x00000000036ab7d1: mov    0x2a8(%r15),%rax
  0x00000000036ab7d8: movabs $0x0,%r10
  0x00000000036ab7e2: mov    %r10,0x2a8(%r15)
  0x00000000036ab7e9: movabs $0x0,%r10
  0x00000000036ab7f3: mov    %r10,0x2b0(%r15)
  0x00000000036ab7fa: add    $0x30,%rsp
  0x00000000036ab7fe: pop    %rbp
  0x00000000036ab7ff: jmpq   0x000000000368c620  ;   {runtime_call}
  0x00000000036ab804: hlt    
  0x00000000036ab805: hlt    
  0x00000000036ab806: hlt    
  0x00000000036ab807: hlt    
  0x00000000036ab808: hlt    
  0x00000000036ab809: hlt    
  0x00000000036ab80a: hlt    
  0x00000000036ab80b: hlt    
  0x00000000036ab80c: hlt    
  0x00000000036ab80d: hlt    
  0x00000000036ab80e: hlt    
  0x00000000036ab80f: hlt    
  0x00000000036ab810: hlt    
  0x00000000036ab811: hlt    
  0x00000000036ab812: hlt    
  0x00000000036ab813: hlt    
  0x00000000036ab814: hlt    
  0x00000000036ab815: hlt    
  0x00000000036ab816: hlt    
  0x00000000036ab817: hlt    
  0x00000000036ab818: hlt    
  0x00000000036ab819: hlt    
  0x00000000036ab81a: hlt    
  0x00000000036ab81b: hlt    
  0x00000000036ab81c: hlt    
  0x00000000036ab81d: hlt    
  0x00000000036ab81e: hlt    
  0x00000000036ab81f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000036ab820: callq  0x000000000368f1a0  ;   {no_reloc}
  0x00000000036ab825: mov    %rsp,-0x28(%rsp)
  0x00000000036ab82a: sub    $0x80,%rsp
  0x00000000036ab831: mov    %rax,0x78(%rsp)
  0x00000000036ab836: mov    %rcx,0x70(%rsp)
  0x00000000036ab83b: mov    %rdx,0x68(%rsp)
  0x00000000036ab840: mov    %rbx,0x60(%rsp)
  0x00000000036ab845: mov    %rbp,0x50(%rsp)
  0x00000000036ab84a: mov    %rsi,0x48(%rsp)
  0x00000000036ab84f: mov    %rdi,0x40(%rsp)
  0x00000000036ab854: mov    %r8,0x38(%rsp)
  0x00000000036ab859: mov    %r9,0x30(%rsp)
  0x00000000036ab85e: mov    %r10,0x28(%rsp)
  0x00000000036ab863: mov    %r11,0x20(%rsp)
  0x00000000036ab868: mov    %r12,0x18(%rsp)
  0x00000000036ab86d: mov    %r13,0x10(%rsp)
  0x00000000036ab872: mov    %r14,0x8(%rsp)
  0x00000000036ab877: mov    %r15,(%rsp)
  0x00000000036ab87b: movabs $0x553ec320,%rcx   ;   {external_word}
  0x00000000036ab885: movabs $0x36ab825,%rdx    ;   {internal_word}
  0x00000000036ab88f: mov    %rsp,%r8
  0x00000000036ab892: and    $0xfffffffffffffff0,%rsp
  0x00000000036ab896: callq  0x00000000550a41d0  ;   {runtime_call}
  0x00000000036ab89b: hlt    
[Deopt Handler Code]
  0x00000000036ab89c: movabs $0x36ab89c,%r10    ;   {section_word}
  0x00000000036ab8a6: push   %r10
  0x00000000036ab8a8: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036ab8ad: hlt    
  0x00000000036ab8ae: hlt    
  0x00000000036ab8af: hlt    
<nmethod compile_id='30' compiler='C1' level='3' entry='0x00000000036ab760' size='768' address='0x00000000036ab610' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='696' dependencies_offset='760' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='2313' iicount='2313' stamp='0.878'/>
<writer thread='4360'/>
Decoding compiled method 0x00000000036ab250:
Code:
[Entry Point]
  # {method} {0x000000001c50f3e0} &apos;getObjectVolatile&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;sun/misc/Unsafe&apos;
  # this:     rdx:rdx   = &apos;sun/misc/Unsafe&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  # parm1:    r9:r9     = long
  #           [sp+0x70]  (sp of caller)
  0x00000000036ab3c0: mov    0x8(%rdx),%r10d
  0x00000000036ab3c4: shl    $0x3,%r10
  0x00000000036ab3c8: cmp    %r10,%rax
  0x00000000036ab3cb: je     0x00000000036ab3d8
  0x00000000036ab3d1: jmpq   0x00000000035d5f60  ;   {runtime_call}
  0x00000000036ab3d6: xchg   %ax,%ax
[Verified Entry Point]
  0x00000000036ab3d8: mov    %eax,-0x6000(%rsp)
  0x00000000036ab3df: push   %rbp
  0x00000000036ab3e0: mov    %rsp,%rbp
  0x00000000036ab3e3: sub    $0x60,%rsp
  0x00000000036ab3e7: mov    %r8,0x28(%rsp)
  0x00000000036ab3ec: cmp    $0x0,%r8
  0x00000000036ab3f0: lea    0x28(%rsp),%r8
  0x00000000036ab3f5: cmove  0x28(%rsp),%r8
  0x00000000036ab3fb: mov    %rdx,0x20(%rsp)
  0x00000000036ab400: cmp    $0x0,%rdx
  0x00000000036ab404: lea    0x20(%rsp),%rdx
  0x00000000036ab409: cmove  0x20(%rsp),%rdx    ; OopMap{[40]=Oop [32]=Oop off=79}
  0x00000000036ab40f: movabs $0x36ab40f,%r10    ;   {section_word}
  0x00000000036ab419: mov    %r10,0x1e0(%r15)
  0x00000000036ab420: mov    %rsp,0x1d8(%r15)
  0x00000000036ab427: cmpb   $0x0,0x51f164c4(%rip)        # 0x00000000555c18f2
                                                ;   {external_word}
  0x00000000036ab42e: je     0x00000000036ab476
  0x00000000036ab434: push   %rdx
  0x00000000036ab435: push   %r8
  0x00000000036ab437: push   %r9
  0x00000000036ab439: movabs $0x1c50f3d8,%rdx   ;   {metadata({method} {0x000000001c50f3e0} &apos;getObjectVolatile&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x00000000036ab443: mov    %r15,%rcx
  0x00000000036ab446: sub    $0x20,%rsp
  0x00000000036ab44a: test   $0xf,%esp
  0x00000000036ab450: je     0x00000000036ab468
  0x00000000036ab456: sub    $0x8,%rsp
  0x00000000036ab45a: callq  0x0000000054fdcdc0  ;   {runtime_call}
  0x00000000036ab45f: add    $0x8,%rsp
  0x00000000036ab463: jmpq   0x00000000036ab46d
  0x00000000036ab468: callq  0x0000000054fdcdc0  ;   {runtime_call}
  0x00000000036ab46d: add    $0x20,%rsp
  0x00000000036ab471: pop    %r9
  0x00000000036ab473: pop    %r8
  0x00000000036ab475: pop    %rdx
  0x00000000036ab476: lea    0x1f8(%r15),%rcx
  0x00000000036ab47d: movl   $0x4,0x270(%r15)
  0x00000000036ab488: callq  0x0000000054f8e170  ;   {runtime_call}
  0x00000000036ab48d: vzeroupper 
  0x00000000036ab490: movl   $0x5,0x270(%r15)
  0x00000000036ab49b: mov    %r15d,%ecx
  0x00000000036ab49e: shr    $0x4,%ecx
  0x00000000036ab4a1: and    $0xffc,%ecx
  0x00000000036ab4a7: movabs $0x1600000,%r10    ;   {external_word}
  0x00000000036ab4b1: mov    %ecx,(%r10,%rcx,1)
  0x00000000036ab4b5: cmpl   $0x0,0x51f17011(%rip)        # 0x00000000555c24d0
                                                ;   {external_word}
  0x00000000036ab4bf: jne    0x00000000036ab4d3
  0x00000000036ab4c5: cmpl   $0x0,0x30(%r15)
  0x00000000036ab4cd: je     0x00000000036ab4f4
  0x00000000036ab4d3: mov    %rax,-0x8(%rbp)
  0x00000000036ab4d7: mov    %r15,%rcx
  0x00000000036ab4da: mov    %rsp,%r12
  0x00000000036ab4dd: sub    $0x20,%rsp
  0x00000000036ab4e1: and    $0xfffffffffffffff0,%rsp
  0x00000000036ab4e5: callq  0x0000000054ff4100  ;   {runtime_call}
  0x00000000036ab4ea: mov    %r12,%rsp
  0x00000000036ab4ed: xor    %r12,%r12
  0x00000000036ab4f0: mov    -0x8(%rbp),%rax
  0x00000000036ab4f4: movl   $0x8,0x270(%r15)
  0x00000000036ab4ff: cmpl   $0x1,0x29c(%r15)
  0x00000000036ab50a: je     0x00000000036ab5ae
  0x00000000036ab510: cmpb   $0x0,0x51f163db(%rip)        # 0x00000000555c18f2
                                                ;   {external_word}
  0x00000000036ab517: je     0x00000000036ab55d
  0x00000000036ab51d: mov    %rax,-0x8(%rbp)
  0x00000000036ab521: movabs $0x1c50f3d8,%rdx   ;   {metadata({method} {0x000000001c50f3e0} &apos;getObjectVolatile&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x00000000036ab52b: mov    %r15,%rcx
  0x00000000036ab52e: sub    $0x20,%rsp
  0x00000000036ab532: test   $0xf,%esp
  0x00000000036ab538: je     0x00000000036ab550
  0x00000000036ab53e: sub    $0x8,%rsp
  0x00000000036ab542: callq  0x0000000054fdcdc0  ;   {runtime_call}
  0x00000000036ab547: add    $0x8,%rsp
  0x00000000036ab54b: jmpq   0x00000000036ab555
  0x00000000036ab550: callq  0x0000000054fdcdc0  ;   {runtime_call}
  0x00000000036ab555: add    $0x20,%rsp
  0x00000000036ab559: mov    -0x8(%rbp),%rax
  0x00000000036ab55d: movabs $0x0,%r10
  0x00000000036ab567: mov    %r10,0x1d8(%r15)
  0x00000000036ab56e: movabs $0x0,%r10
  0x00000000036ab578: mov    %r10,0x1e0(%r15)
  0x00000000036ab57f: test   %rax,%rax
  0x00000000036ab582: je     0x00000000036ab58b
  0x00000000036ab588: mov    (%rax),%rax
  0x00000000036ab58b: mov    0x38(%r15),%rcx
  0x00000000036ab58f: movl   $0x0,0x100(%rcx)
  0x00000000036ab599: leaveq 
  0x00000000036ab59a: cmpq   $0x0,0x8(%r15)
  0x00000000036ab5a2: jne    0x00000000036ab5a9
  0x00000000036ab5a8: retq   
  0x00000000036ab5a9: jmpq   Stub::forward exception  ;   {runtime_call}
  0x00000000036ab5ae: mov    %rax,-0x8(%rbp)
  0x00000000036ab5b2: mov    %rsp,%r12
  0x00000000036ab5b5: sub    $0x20,%rsp
  0x00000000036ab5b9: and    $0xfffffffffffffff0,%rsp
  0x00000000036ab5bd: callq  0x0000000054fdcde0  ;   {runtime_call}
  0x00000000036ab5c2: mov    %r12,%rsp
  0x00000000036ab5c5: xor    %r12,%r12
  0x00000000036ab5c8: mov    -0x8(%rbp),%rax
  0x00000000036ab5cc: jmpq   0x00000000036ab510
  0x00000000036ab5d1: hlt    
  0x00000000036ab5d2: hlt    
  0x00000000036ab5d3: hlt    
  0x00000000036ab5d4: hlt    
  0x00000000036ab5d5: hlt    
  0x00000000036ab5d6: hlt    
  0x00000000036ab5d7: hlt    
<nmethod compile_id='32' compile_kind='c2n' level='0' entry='0x00000000036ab3c0' size='904' address='0x00000000036ab250' relocation_offset='288' consts_offset='904' insts_offset='368' method='sun/misc/Unsafe getObjectVolatile (Ljava/lang/Object;J)Ljava/lang/Object;' bytes='0' count='256' iicount='256' stamp='0.883'/>
<writer thread='10060'/>
Decoding compiled method 0x00000000036aa990:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c504dc0} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8        = char
  #           [sp+0x70]  (sp of caller)
  0x00000000036aaae0: mov    0x8(%rdx),%r10d
  0x00000000036aaae4: shl    $0x3,%r10
  0x00000000036aaae8: cmp    %r10,%rax
  0x00000000036aaaeb: jne    0x00000000035d5f60  ;   {runtime_call}
  0x00000000036aaaf1: data16 xchg %ax,%ax
  0x00000000036aaaf4: nopl   0x0(%rax,%rax,1)
  0x00000000036aaafc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000036aab00: mov    %eax,-0x6000(%rsp)
  0x00000000036aab07: push   %rbp
  0x00000000036aab08: sub    $0x60,%rsp         ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)

  0x00000000036aab0c: mov    %r8d,0x20(%rsp)
  0x00000000036aab11: mov    %rdx,%rbp
  0x00000000036aab14: mov    0x10(%rdx),%r9d    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000036aab18: mov    0xc(%r12,%r9,8),%edi  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; implicit exception: dispatches to 0x00000000036aadc0
  0x00000000036aab1d: mov    0xc(%rdx),%ecx     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)

  0x00000000036aab20: mov    %ecx,%r10d
  0x00000000036aab23: sub    %edi,%r10d
  0x00000000036aab26: mov    %r9,%rsi
  0x00000000036aab29: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000036aab2d: inc    %r10d
  0x00000000036aab30: mov    %ecx,%r8d
  0x00000000036aab33: inc    %r8d               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@6 (line 649)

  0x00000000036aab36: test   %r10d,%r10d
  0x00000000036aab39: jg     0x00000000036aab74  ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)

  0x00000000036aab3b: mov    %r8d,0xc(%rbp)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)

  0x00000000036aab3f: test   %rsi,%rsi
  0x00000000036aab42: je     0x00000000036aacff
  0x00000000036aab48: mov    0xc(%rsi),%r10d
  0x00000000036aab4c: cmp    %r10d,%ecx
  0x00000000036aab4f: jae    0x00000000036aad15
  0x00000000036aab55: mov    0x20(%rsp),%r10d
  0x00000000036aab5a: mov    %r10w,0x10(%rsi,%rcx,2)  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)

  0x00000000036aab60: mov    %rbp,%rax
  0x00000000036aab63: add    $0x60,%rsp
  0x00000000036aab67: pop    %rbp
  0x00000000036aab68: test   %eax,-0x20bab6e(%rip)        # 0x00000000015f0000
                                                ;   {poll_return}
  0x00000000036aab6e: retq   
  0x00000000036aab6f: mov    %r8d,%r10d
  0x00000000036aab72: jmp    0x00000000036aab89
  0x00000000036aab74: mov    %edi,%r10d
  0x00000000036aab77: shl    %r10d              ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000036aab7a: mov    %r10d,%ebx
  0x00000000036aab7d: sub    %ecx,%ebx
  0x00000000036aab7f: inc    %ebx
  0x00000000036aab81: test   %ebx,%ebx
  0x00000000036aab83: jl     0x00000000036aab6f  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000036aab85: add    $0x2,%r10d         ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000036aab89: test   %r10d,%r10d
  0x00000000036aab8c: jle    0x00000000036aab9a  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000036aab8e: mov    $0x7ffffff7,%ecx
  0x00000000036aab93: sub    %r10d,%ecx
  0x00000000036aab96: test   %ecx,%ecx
  0x00000000036aab98: jge    0x00000000036aabc1  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@29 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000036aab9a: mov    %edi,0x38(%rsp)
  0x00000000036aab9e: mov    %r9d,0x24(%rsp)
  0x00000000036aaba3: mov    %rsi,0x28(%rsp)
  0x00000000036aaba8: data16 xchg %ax,%ax
  0x00000000036aabab: callq  0x00000000035d61a0  ; OopMap{rbp=Oop [36]=NarrowOop [40]=Oop off=208}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {optimized virtual_call}
  0x00000000036aabb0: mov    0x28(%rsp),%rsi
  0x00000000036aabb5: mov    %eax,%r10d
  0x00000000036aabb8: mov    0x24(%rsp),%r9d
  0x00000000036aabbd: mov    0x38(%rsp),%edi    ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000036aabc1: cmp    $0x80000,%r10d
  0x00000000036aabc8: ja     0x00000000036aad7c
  0x00000000036aabce: movslq %r10d,%r11
  0x00000000036aabd1: shl    %r11
  0x00000000036aabd4: add    $0x17,%r11
  0x00000000036aabd8: mov    %r11,%r8
  0x00000000036aabdb: and    $0xfffffffffffffff8,%r8
  0x00000000036aabdf: cmp    $0x80000,%r10d
  0x00000000036aabe6: ja     0x00000000036aad29
  0x00000000036aabec: mov    0x60(%r15),%rbx
  0x00000000036aabf0: mov    %rbx,%rcx
  0x00000000036aabf3: add    %r8,%rcx
  0x00000000036aabf6: cmp    0x70(%r15),%rcx
  0x00000000036aabfa: jae    0x00000000036aad29
  0x00000000036aac00: mov    %rcx,0x60(%r15)
  0x00000000036aac04: prefetchw 0xc0(%rcx)
  0x00000000036aac0b: movq   $0x1,(%rbx)
  0x00000000036aac12: prefetchw 0x100(%rcx)
  0x00000000036aac19: movl   $0xf8000041,0x8(%rbx)  ;   {metadata({type array char})}
  0x00000000036aac20: mov    %r10d,0xc(%rbx)
  0x00000000036aac24: prefetchw 0x140(%rcx)
  0x00000000036aac2b: prefetchw 0x180(%rcx)     ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000036aac32: cmp    %r10d,%edi
  0x00000000036aac35: mov    %r10d,%esi
  0x00000000036aac38: cmovl  %edi,%esi          ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000036aac3b: mov    %rbx,%r13
  0x00000000036aac3e: add    $0x10,%r13         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000036aac42: lea    (%r12,%r9,8),%rdx  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000036aac46: shr    $0x3,%r11
  0x00000000036aac4a: mov    %r11,%rcx
  0x00000000036aac4d: add    $0xfffffffffffffffe,%rcx
  0x00000000036aac51: cmp    %esi,%edi
  0x00000000036aac53: jb     0x00000000036aad84
  0x00000000036aac59: cmp    %esi,%r10d
  0x00000000036aac5c: jb     0x00000000036aad84
  0x00000000036aac62: test   %esi,%esi
  0x00000000036aac64: jle    0x00000000036aadae
  0x00000000036aac6a: lea    0x10(%r12,%r9,8),%r9
  0x00000000036aac6f: cmp    %r10d,%esi
  0x00000000036aac72: jl     0x00000000036aacbc
  0x00000000036aac74: add    $0xfffffffffffffff0,%r8
  0x00000000036aac78: shr    $0x3,%r8
  0x00000000036aac7c: mov    %r9,%rcx
  0x00000000036aac7f: mov    %r13,%rdx
  0x00000000036aac82: movabs $0x35e2ca0,%r10
  0x00000000036aac8c: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000036aac8f: mov    0xc(%rbp),%ecx     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)

  0x00000000036aac92: mov    %rbx,%r10
  0x00000000036aac95: shr    $0x3,%r10
  0x00000000036aac99: mov    %r10d,0x10(%rbp)   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000036aac9d: mov    %ecx,%r8d
  0x00000000036aaca0: inc    %r8d               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 650)

  0x00000000036aaca3: mov    %rbp,%r10
  0x00000000036aaca6: shr    $0x9,%r10
  0x00000000036aacaa: mov    $0xf32f000,%r11d
  0x00000000036aacb0: mov    %r12b,(%r11,%r10,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000036aacb4: mov    %rbx,%rsi
  0x00000000036aacb7: jmpq   0x00000000036aab3b
  0x00000000036aacbc: movslq %esi,%r8
  0x00000000036aacbf: mov    %r8,%r10
  0x00000000036aacc2: shl    %r10
  0x00000000036aacc5: add    $0x10,%r10
  0x00000000036aacc9: mov    %r10,%rcx
  0x00000000036aaccc: and    $0xfffffffffffffff9,%rcx
  0x00000000036aacd0: mov    %rbx,%rdi
  0x00000000036aacd3: add    %rcx,%rdi
  0x00000000036aacd6: shr    $0x3,%r10
  0x00000000036aacda: sub    %r10,%r11
  0x00000000036aacdd: mov    %r11,%rcx
  0x00000000036aace0: xor    %rax,%rax
  0x00000000036aace3: shl    $0x3,%rcx
  0x00000000036aace7: rep rex.W stos %al,%es:(%rdi)
  0x00000000036aacea: mov    %r9,%rcx
  0x00000000036aaced: mov    %r13,%rdx
  0x00000000036aacf0: movabs $0x35e2980,%r10
  0x00000000036aacfa: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000036aacfd: jmp    0x00000000036aac8f
  0x00000000036aacff: mov    $0xfffffff6,%edx
  0x00000000036aad04: mov    0x20(%rsp),%ebp
  0x00000000036aad08: mov    %ecx,0x20(%rsp)
  0x00000000036aad0c: data16 xchg %ax,%ax
  0x00000000036aad0f: callq  0x00000000035d57a0  ; OopMap{off=564}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ;   {runtime_call}
  0x00000000036aad14: int3   
  0x00000000036aad15: mov    $0xffffffe4,%edx
  0x00000000036aad1a: mov    %rsi,0x28(%rsp)
  0x00000000036aad1f: mov    %ecx,0x24(%rsp)
  0x00000000036aad23: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [40]=Oop off=584}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ;   {runtime_call}
  0x00000000036aad28: int3                      ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)

  0x00000000036aad29: mov    %edi,0x4c(%rsp)
  0x00000000036aad2d: mov    %r9d,0x48(%rsp)
  0x00000000036aad32: mov    %r8,0x30(%rsp)
  0x00000000036aad37: mov    %r11,0x28(%rsp)
  0x00000000036aad3c: mov    %r10d,0x24(%rsp)
  0x00000000036aad41: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000000036aad4b: mov    0x24(%rsp),%r8d
  0x00000000036aad50: mov    %rsi,0x40(%rsp)
  0x00000000036aad55: xchg   %ax,%ax
  0x00000000036aad57: callq  0x0000000003693360  ; OopMap{rbp=Oop [64]=Oop [72]=NarrowOop off=636}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x00000000036aad5c: mov    0x24(%rsp),%r10d
  0x00000000036aad61: mov    0x28(%rsp),%r11
  0x00000000036aad66: mov    0x30(%rsp),%r8
  0x00000000036aad6b: mov    0x48(%rsp),%r9d
  0x00000000036aad70: mov    0x4c(%rsp),%edi
  0x00000000036aad74: mov    %rax,%rbx
  0x00000000036aad77: jmpq   0x00000000036aac32
  0x00000000036aad7c: movslq %r10d,%r11         ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000036aad7f: jmpq   0x00000000036aabd1
  0x00000000036aad84: mov    %r13,%rdi
  0x00000000036aad87: xor    %rax,%rax
  0x00000000036aad8a: shl    $0x3,%rcx
  0x00000000036aad8e: rep rex.W stos %al,%es:(%rdi)
  0x00000000036aad91: xor    %r8d,%r8d
  0x00000000036aad94: mov    %rbx,%r9
  0x00000000036aad97: xor    %edi,%edi
  0x00000000036aad99: mov    %rbx,0x38(%rsp)
  0x00000000036aad9e: nop
  0x00000000036aad9f: callq  0x000000000369fea0  ; OopMap{rbp=Oop [56]=Oop off=708}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x00000000036aada4: mov    0x38(%rsp),%rbx
  0x00000000036aada9: jmpq   0x00000000036aac8f
  0x00000000036aadae: mov    %r13,%rdi
  0x00000000036aadb1: xor    %rax,%rax
  0x00000000036aadb4: shl    $0x3,%rcx
  0x00000000036aadb8: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000036aadbb: jmpq   0x00000000036aac8f
  0x00000000036aadc0: mov    $0xfffffff6,%edx
  0x00000000036aadc5: xchg   %ax,%ax
  0x00000000036aadc7: callq  0x00000000035d57a0  ; OopMap{off=748}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x00000000036aadcc: int3   
  0x00000000036aadcd: jmp    0x00000000036aadcf  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000036aadcf: mov    %rax,%rdx
  0x00000000036aadd2: jmp    0x00000000036aadd7  ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000036aadd4: mov    %rax,%rdx          ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)

  0x00000000036aadd7: add    $0x60,%rsp
  0x00000000036aaddb: pop    %rbp
  0x00000000036aaddc: jmpq   0x000000000369e960  ;   {runtime_call}
  0x00000000036aade1: hlt    
  0x00000000036aade2: hlt    
  0x00000000036aade3: hlt    
  0x00000000036aade4: hlt    
  0x00000000036aade5: hlt    
  0x00000000036aade6: hlt    
  0x00000000036aade7: hlt    
  0x00000000036aade8: hlt    
  0x00000000036aade9: hlt    
  0x00000000036aadea: hlt    
  0x00000000036aadeb: hlt    
  0x00000000036aadec: hlt    
  0x00000000036aaded: hlt    
  0x00000000036aadee: hlt    
  0x00000000036aadef: hlt    
  0x00000000036aadf0: hlt    
  0x00000000036aadf1: hlt    
  0x00000000036aadf2: hlt    
  0x00000000036aadf3: hlt    
  0x00000000036aadf4: hlt    
  0x00000000036aadf5: hlt    
  0x00000000036aadf6: hlt    
  0x00000000036aadf7: hlt    
  0x00000000036aadf8: hlt    
  0x00000000036aadf9: hlt    
  0x00000000036aadfa: hlt    
  0x00000000036aadfb: hlt    
  0x00000000036aadfc: hlt    
  0x00000000036aadfd: hlt    
  0x00000000036aadfe: hlt    
  0x00000000036aadff: hlt    
[Stub Code]
  0x00000000036aae00: movabs $0x0,%rbx          ;   {no_reloc}
  0x00000000036aae0a: jmpq   0x00000000036aae0a  ;   {runtime_call}
[Exception Handler]
  0x00000000036aae0f: jmpq   0x000000000368dc20  ;   {runtime_call}
[Deopt Handler Code]
  0x00000000036aae14: callq  0x00000000036aae19
  0x00000000036aae19: subq   $0x5,(%rsp)
  0x00000000036aae1e: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036aae23: hlt    
  0x00000000036aae24: hlt    
  0x00000000036aae25: hlt    
  0x00000000036aae26: hlt    
  0x00000000036aae27: hlt    
<nmethod compile_id='25' compiler='C2' level='4' entry='0x00000000036aaae0' size='2224' address='0x00000000036aa990' relocation_offset='288' insts_offset='336' stub_offset='1136' scopes_data_offset='1216' scopes_pcs_offset='1504' dependencies_offset='2128' handler_table_offset='2136' nul_chk_table_offset='2208' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='126095' iicount='126095' stamp='0.898'/>
<writer thread='4360'/>
<task_queued compile_id='33' method='java/lang/String indexOf (I)I' bytes='7' count='3072' iicount='3072' level='3' stamp='0.898' comment='tiered' hot_count='3072'/>
<writer thread='16772'/>
<task_queued compile_id='34' method='java/lang/String indexOf (II)I' bytes='70' count='3161' backedge_count='209397' iicount='3161' stamp='0.898' comment='tiered' hot_count='3161'/>
<writer thread='7332'/>
Decoding compiled method 0x00000000036a8c10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c495058} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x00000000036a8d80: mov    0x8(%rdx),%r10d
  0x00000000036a8d84: shl    $0x3,%r10
  0x00000000036a8d88: cmp    %rax,%r10
  0x00000000036a8d8b: jne    0x00000000035d5f60  ;   {runtime_call}
  0x00000000036a8d91: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000036a8d9c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000036a8da0: mov    %eax,-0x6000(%rsp)
  0x00000000036a8da7: push   %rbp
  0x00000000036a8da8: sub    $0x30,%rsp
  0x00000000036a8dac: movabs $0x1c680578,%r9    ;   {metadata(method data for {method} {0x000000001c495058} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000036a8db6: mov    0xdc(%r9),%esi
  0x00000000036a8dbd: add    $0x8,%esi
  0x00000000036a8dc0: mov    %esi,0xdc(%r9)
  0x00000000036a8dc7: movabs $0x1c495050,%r9    ;   {metadata({method} {0x000000001c495058} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000036a8dd1: and    $0x1ff8,%esi
  0x00000000036a8dd7: cmp    $0x0,%esi
  0x00000000036a8dda: je     0x00000000036a8e88  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1503)

  0x00000000036a8de0: mov    %rdx,%r9
  0x00000000036a8de3: movabs $0x1c680578,%rsi   ;   {metadata(method data for {method} {0x000000001c495058} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000036a8ded: mov    0x8(%r9),%r9d
  0x00000000036a8df1: shl    $0x3,%r9
  0x00000000036a8df5: cmp    0x110(%rsi),%r9
  0x00000000036a8dfc: jne    0x00000000036a8e0b
  0x00000000036a8dfe: addq   $0x1,0x118(%rsi)
  0x00000000036a8e06: jmpq   0x00000000036a8e71
  0x00000000036a8e0b: cmp    0x120(%rsi),%r9
  0x00000000036a8e12: jne    0x00000000036a8e21
  0x00000000036a8e14: addq   $0x1,0x128(%rsi)
  0x00000000036a8e1c: jmpq   0x00000000036a8e71
  0x00000000036a8e21: cmpq   $0x0,0x110(%rsi)
  0x00000000036a8e2c: jne    0x00000000036a8e45
  0x00000000036a8e2e: mov    %r9,0x110(%rsi)
  0x00000000036a8e35: movq   $0x1,0x118(%rsi)
  0x00000000036a8e40: jmpq   0x00000000036a8e71
  0x00000000036a8e45: cmpq   $0x0,0x120(%rsi)
  0x00000000036a8e50: jne    0x00000000036a8e69
  0x00000000036a8e52: mov    %r9,0x120(%rsi)
  0x00000000036a8e59: movq   $0x1,0x128(%rsi)
  0x00000000036a8e64: jmpq   0x00000000036a8e71
  0x00000000036a8e69: addq   $0x1,0x108(%rsi)
  0x00000000036a8e71: mov    $0x0,%r9d          ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)

  0x00000000036a8e77: callq  0x00000000035d61a0  ; OopMap{off=252}
                                                ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)
                                                ;   {optimized virtual_call}
  0x00000000036a8e7c: add    $0x30,%rsp
  0x00000000036a8e80: pop    %rbp
  0x00000000036a8e81: test   %eax,-0x20b8d87(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036a8e87: retq   
  0x00000000036a8e88: mov    %r9,0x8(%rsp)
  0x00000000036a8e8d: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036a8e95: callq  0x00000000036919e0  ; OopMap{rdx=Oop off=282}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1503)
                                                ;   {runtime_call}
  0x00000000036a8e9a: jmpq   0x00000000036a8de0
  0x00000000036a8e9f: nop
  0x00000000036a8ea0: nop
  0x00000000036a8ea1: mov    0x2a8(%r15),%rax
  0x00000000036a8ea8: movabs $0x0,%r10
  0x00000000036a8eb2: mov    %r10,0x2a8(%r15)
  0x00000000036a8eb9: movabs $0x0,%r10
  0x00000000036a8ec3: mov    %r10,0x2b0(%r15)
  0x00000000036a8eca: add    $0x30,%rsp
  0x00000000036a8ece: pop    %rbp
  0x00000000036a8ecf: jmpq   0x000000000368c620  ;   {runtime_call}
  0x00000000036a8ed4: hlt    
  0x00000000036a8ed5: hlt    
  0x00000000036a8ed6: hlt    
  0x00000000036a8ed7: hlt    
  0x00000000036a8ed8: hlt    
  0x00000000036a8ed9: hlt    
  0x00000000036a8eda: hlt    
  0x00000000036a8edb: hlt    
  0x00000000036a8edc: hlt    
  0x00000000036a8edd: hlt    
  0x00000000036a8ede: hlt    
  0x00000000036a8edf: hlt    
[Stub Code]
  0x00000000036a8ee0: nop                       ;   {no_reloc}
  0x00000000036a8ee1: nop
  0x00000000036a8ee2: nop
  0x00000000036a8ee3: nop
  0x00000000036a8ee4: nop
  0x00000000036a8ee5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036a8eef: jmpq   0x00000000036a8eef  ;   {runtime_call}
[Exception Handler]
  0x00000000036a8ef4: callq  0x000000000368f1a0  ;   {runtime_call}
  0x00000000036a8ef9: mov    %rsp,-0x28(%rsp)
  0x00000000036a8efe: sub    $0x80,%rsp
  0x00000000036a8f05: mov    %rax,0x78(%rsp)
  0x00000000036a8f0a: mov    %rcx,0x70(%rsp)
  0x00000000036a8f0f: mov    %rdx,0x68(%rsp)
  0x00000000036a8f14: mov    %rbx,0x60(%rsp)
  0x00000000036a8f19: mov    %rbp,0x50(%rsp)
  0x00000000036a8f1e: mov    %rsi,0x48(%rsp)
  0x00000000036a8f23: mov    %rdi,0x40(%rsp)
  0x00000000036a8f28: mov    %r8,0x38(%rsp)
  0x00000000036a8f2d: mov    %r9,0x30(%rsp)
  0x00000000036a8f32: mov    %r10,0x28(%rsp)
  0x00000000036a8f37: mov    %r11,0x20(%rsp)
  0x00000000036a8f3c: mov    %r12,0x18(%rsp)
  0x00000000036a8f41: mov    %r13,0x10(%rsp)
  0x00000000036a8f46: mov    %r14,0x8(%rsp)
  0x00000000036a8f4b: mov    %r15,(%rsp)
  0x00000000036a8f4f: movabs $0x553ec320,%rcx   ;   {external_word}
  0x00000000036a8f59: movabs $0x36a8ef9,%rdx    ;   {internal_word}
  0x00000000036a8f63: mov    %rsp,%r8
  0x00000000036a8f66: and    $0xfffffffffffffff0,%rsp
  0x00000000036a8f6a: callq  0x00000000550a41d0  ;   {runtime_call}
  0x00000000036a8f6f: hlt    
[Deopt Handler Code]
  0x00000000036a8f70: movabs $0x36a8f70,%r10    ;   {section_word}
  0x00000000036a8f7a: push   %r10
  0x00000000036a8f7c: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036a8f81: hlt    
  0x00000000036a8f82: hlt    
  0x00000000036a8f83: hlt    
  0x00000000036a8f84: hlt    
  0x00000000036a8f85: hlt    
  0x00000000036a8f86: hlt    
  0x00000000036a8f87: hlt    
<nmethod compile_id='33' compiler='C1' level='3' entry='0x00000000036a8d80' size='1040' address='0x00000000036a8c10' relocation_offset='288' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='936' dependencies_offset='1032' method='java/lang/String indexOf (I)I' bytes='7' count='3191' iicount='3191' stamp='0.904'/>
<writer thread='16536'/>
Decoding compiled method 0x00000000036abe50:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001c584640} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;
  # parm0:    rdx       = int
  # parm1:    r8        = int
  #           [sp+0x20]  (sp of caller)
  0x00000000036abf80: sub    $0x18,%rsp
  0x00000000036abf87: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)

  0x00000000036abf8c: cmp    %r8d,%edx
  0x00000000036abf8f: mov    %r8d,%eax
  0x00000000036abf92: cmovle %edx,%eax          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)

  0x00000000036abf95: add    $0x10,%rsp
  0x00000000036abf99: pop    %rbp
  0x00000000036abf9a: test   %eax,-0x20bbfa0(%rip)        # 0x00000000015f0000
                                                ;   {poll_return}
  0x00000000036abfa0: retq   
  0x00000000036abfa1: hlt    
  0x00000000036abfa2: hlt    
  0x00000000036abfa3: hlt    
  0x00000000036abfa4: hlt    
  0x00000000036abfa5: hlt    
  0x00000000036abfa6: hlt    
  0x00000000036abfa7: hlt    
  0x00000000036abfa8: hlt    
  0x00000000036abfa9: hlt    
  0x00000000036abfaa: hlt    
  0x00000000036abfab: hlt    
  0x00000000036abfac: hlt    
  0x00000000036abfad: hlt    
  0x00000000036abfae: hlt    
  0x00000000036abfaf: hlt    
  0x00000000036abfb0: hlt    
  0x00000000036abfb1: hlt    
  0x00000000036abfb2: hlt    
  0x00000000036abfb3: hlt    
  0x00000000036abfb4: hlt    
  0x00000000036abfb5: hlt    
  0x00000000036abfb6: hlt    
  0x00000000036abfb7: hlt    
  0x00000000036abfb8: hlt    
  0x00000000036abfb9: hlt    
  0x00000000036abfba: hlt    
  0x00000000036abfbb: hlt    
  0x00000000036abfbc: hlt    
  0x00000000036abfbd: hlt    
  0x00000000036abfbe: hlt    
  0x00000000036abfbf: hlt    
[Exception Handler]
[Stub Code]
  0x00000000036abfc0: jmpq   0x000000000368dc20  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000036abfc5: callq  0x00000000036abfca
  0x00000000036abfca: subq   $0x5,(%rsp)
  0x00000000036abfcf: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036abfd4: hlt    
  0x00000000036abfd5: hlt    
  0x00000000036abfd6: hlt    
  0x00000000036abfd7: hlt    
<nmethod compile_id='2' compiler='C2' level='4' entry='0x00000000036abf80' size='488' address='0x00000000036abe50' relocation_offset='288' insts_offset='304' stub_offset='368' scopes_data_offset='400' scopes_pcs_offset='416' dependencies_offset='480' method='java/lang/Math min (II)I' bytes='11' count='16436' iicount='16436' stamp='0.906'/>
<writer thread='4360'/>
<task_queued compile_id='35' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='2432' backedge_count='1322' iicount='2432' level='3' stamp='0.906' comment='tiered' hot_count='2432'/>
<writer thread='16772'/>
<task_queued compile_id='36' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='40448' iicount='40448' stamp='0.906' comment='tiered' hot_count='40448'/>
<writer thread='10060'/>
Decoding compiled method 0x00000000036a3f90:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001c5a9360} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    r8        = int
  # parm2:    r9        = int
  #           [sp+0x60]  (sp of caller)
  0x00000000036a40e0: mov    %eax,-0x6000(%rsp)
  0x00000000036a40e7: push   %rbp
  0x00000000036a40e8: sub    $0x50,%rsp         ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)

  0x00000000036a40ec: mov    %rdx,0x20(%rsp)
  0x00000000036a40f1: mov    %r8d,0x28(%rsp)
  0x00000000036a40f6: mov    %r9d,%ebp
  0x00000000036a40f9: sub    %r8d,%ebp          ;*isub
                                                ; - java.util.Arrays::copyOfRange@2 (line 3661)

  0x00000000036a40fc: test   %ebp,%ebp
  0x00000000036a40fe: jl     0x00000000036a429b  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)

  0x00000000036a4104: cmp    $0x80000,%ebp
  0x00000000036a410a: ja     0x00000000036a4254
  0x00000000036a4110: movslq %ebp,%r10
  0x00000000036a4113: shl    %r10
  0x00000000036a4116: add    $0x17,%r10
  0x00000000036a411a: mov    %r10,0x38(%rsp)
  0x00000000036a411f: cmp    $0x80000,%ebp
  0x00000000036a4125: ja     0x00000000036a4238
  0x00000000036a412b: and    $0xfffffffffffffff8,%r10
  0x00000000036a412f: mov    0x60(%r15),%r8
  0x00000000036a4133: mov    %r8,%r11
  0x00000000036a4136: add    %r10,%r11
  0x00000000036a4139: cmp    0x70(%r15),%r11
  0x00000000036a413d: jae    0x00000000036a4238
  0x00000000036a4143: mov    %r11,0x60(%r15)
  0x00000000036a4147: prefetchw 0xc0(%r11)
  0x00000000036a414f: movq   $0x1,(%r8)
  0x00000000036a4156: prefetchw 0x100(%r11)
  0x00000000036a415e: movl   $0xf8000041,0x8(%r8)  ;   {metadata({type array char})}
  0x00000000036a4166: mov    %ebp,0xc(%r8)
  0x00000000036a416a: prefetchw 0x140(%r11)
  0x00000000036a4172: prefetchw 0x180(%r11)     ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)

  0x00000000036a417a: mov    %r8,0x30(%rsp)
  0x00000000036a417f: mov    0x20(%rsp),%r10
  0x00000000036a4184: mov    0xc(%r10),%r8d     ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ; implicit exception: dispatches to 0x00000000036a42ad
  0x00000000036a4188: mov    %r8d,%r11d
  0x00000000036a418b: sub    0x28(%rsp),%r11d   ;*isub
                                                ; - java.util.Arrays::copyOfRange@52 (line 3665)

  0x00000000036a4190: mov    0x30(%rsp),%rdx
  0x00000000036a4195: add    $0x10,%rdx         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)

  0x00000000036a4199: cmp    %ebp,%r11d
  0x00000000036a419c: mov    %ebp,%esi
  0x00000000036a419e: cmovl  %r11d,%esi         ;*invokestatic min
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x00000000036a41a2: mov    0x38(%rsp),%rbx
  0x00000000036a41a7: shr    $0x3,%rbx
  0x00000000036a41ab: mov    %rbx,%rcx
  0x00000000036a41ae: add    $0xfffffffffffffffe,%rcx
  0x00000000036a41b2: mov    0x28(%rsp),%r11d
  0x00000000036a41b7: test   %r11d,%r11d
  0x00000000036a41ba: jl     0x00000000036a425c
  0x00000000036a41c0: mov    %r11d,%r9d
  0x00000000036a41c3: add    %esi,%r9d
  0x00000000036a41c6: cmp    %r9d,%r8d
  0x00000000036a41c9: jb     0x00000000036a425c
  0x00000000036a41cf: cmp    %esi,%ebp
  0x00000000036a41d1: jb     0x00000000036a425c
  0x00000000036a41d7: test   %esi,%esi
  0x00000000036a41d9: jle    0x00000000036a4285
  0x00000000036a41df: movslq %esi,%r8
  0x00000000036a41e2: cmp    %ebp,%esi
  0x00000000036a41e4: jl     0x00000000036a4209
  0x00000000036a41e6: lea    0x10(%r10,%r11,2),%rcx
  0x00000000036a41eb: movabs $0x35e2a40,%r10
  0x00000000036a41f5: callq  *%r10
  0x00000000036a41f8: mov    0x30(%rsp),%rax
  0x00000000036a41fd: add    $0x50,%rsp
  0x00000000036a4201: pop    %rbp
  0x00000000036a4202: test   %eax,-0x20b4208(%rip)        # 0x00000000015f0000
                                                ;   {poll_return}
  0x00000000036a4208: retq   
  0x00000000036a4209: mov    %r8,%r9
  0x00000000036a420c: shl    %r9
  0x00000000036a420f: add    $0x10,%r9
  0x00000000036a4213: mov    %r9,%rcx
  0x00000000036a4216: and    $0xfffffffffffffff9,%rcx
  0x00000000036a421a: mov    0x30(%rsp),%rdi
  0x00000000036a421f: add    %rcx,%rdi
  0x00000000036a4222: shr    $0x3,%r9
  0x00000000036a4226: mov    %rbx,%rcx
  0x00000000036a4229: sub    %r9,%rcx
  0x00000000036a422c: xor    %rax,%rax
  0x00000000036a422f: shl    $0x3,%rcx
  0x00000000036a4233: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)

  0x00000000036a4236: jmp    0x00000000036a41e6
  0x00000000036a4238: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000000036a4242: mov    %ebp,%r8d
  0x00000000036a4245: xchg   %ax,%ax
  0x00000000036a4247: callq  0x0000000003693360  ; OopMap{[32]=Oop off=364}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ;   {runtime_call}
  0x00000000036a424c: mov    %rax,%r8
  0x00000000036a424f: jmpq   0x00000000036a417a
  0x00000000036a4254: movslq %ebp,%r10          ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)

  0x00000000036a4257: jmpq   0x00000000036a4113
  0x00000000036a425c: mov    %rdx,%rdi
  0x00000000036a425f: xor    %rax,%rax
  0x00000000036a4262: shl    $0x3,%rcx
  0x00000000036a4266: rep rex.W stos %al,%es:(%rdi)
  0x00000000036a4269: xor    %edi,%edi
  0x00000000036a426b: mov    %r10,%rdx
  0x00000000036a426e: mov    %r11d,%r8d
  0x00000000036a4271: mov    0x30(%rsp),%r9
  0x00000000036a4276: mov    %r9,%rbp
  0x00000000036a4279: xchg   %ax,%ax
  0x00000000036a427b: callq  0x000000000369fea0  ; OopMap{rbp=Oop [48]=Oop off=416}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {runtime_call}
  0x00000000036a4280: jmpq   0x00000000036a41f8
  0x00000000036a4285: test   %esi,%esi
  0x00000000036a4287: jl     0x00000000036a425c
  0x00000000036a4289: mov    %rdx,%rdi
  0x00000000036a428c: xor    %rax,%rax
  0x00000000036a428f: shl    $0x3,%rcx
  0x00000000036a4293: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)

  0x00000000036a4296: jmpq   0x00000000036a41f8
  0x00000000036a429b: mov    $0xffffff65,%edx
  0x00000000036a42a0: mov    %r9d,0x2c(%rsp)
  0x00000000036a42a5: xchg   %ax,%ax
  0x00000000036a42a7: callq  0x00000000035d57a0  ; OopMap{[32]=Oop off=460}
                                                ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ;   {runtime_call}
  0x00000000036a42ac: int3   
  0x00000000036a42ad: mov    $0xfffffff6,%edx
  0x00000000036a42b2: nop
  0x00000000036a42b3: callq  0x00000000035d57a0  ; OopMap{off=472}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ;   {runtime_call}
  0x00000000036a42b8: int3                      ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)

  0x00000000036a42b9: mov    %rax,%rdx
  0x00000000036a42bc: jmp    0x00000000036a42c1  ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)

  0x00000000036a42be: mov    %rax,%rdx          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)

  0x00000000036a42c1: add    $0x50,%rsp
  0x00000000036a42c5: pop    %rbp
  0x00000000036a42c6: jmpq   0x000000000369e960  ;   {runtime_call}
  0x00000000036a42cb: hlt    
  0x00000000036a42cc: hlt    
  0x00000000036a42cd: hlt    
  0x00000000036a42ce: hlt    
  0x00000000036a42cf: hlt    
  0x00000000036a42d0: hlt    
  0x00000000036a42d1: hlt    
  0x00000000036a42d2: hlt    
  0x00000000036a42d3: hlt    
  0x00000000036a42d4: hlt    
  0x00000000036a42d5: hlt    
  0x00000000036a42d6: hlt    
  0x00000000036a42d7: hlt    
  0x00000000036a42d8: hlt    
  0x00000000036a42d9: hlt    
  0x00000000036a42da: hlt    
  0x00000000036a42db: hlt    
  0x00000000036a42dc: hlt    
  0x00000000036a42dd: hlt    
  0x00000000036a42de: hlt    
  0x00000000036a42df: hlt    
[Exception Handler]
[Stub Code]
  0x00000000036a42e0: jmpq   0x000000000368dc20  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000036a42e5: callq  0x00000000036a42ea
  0x00000000036a42ea: subq   $0x5,(%rsp)
  0x00000000036a42ef: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036a42f4: hlt    
  0x00000000036a42f5: hlt    
  0x00000000036a42f6: hlt    
  0x00000000036a42f7: hlt    
<nmethod compile_id='24' compiler='C2' level='4' entry='0x00000000036a40e0' size='1424' address='0x00000000036a3f90' relocation_offset='288' insts_offset='336' stub_offset='848' scopes_data_offset='888' scopes_pcs_offset='1032' dependencies_offset='1352' handler_table_offset='1360' nul_chk_table_offset='1408' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='9509' iicount='9509' stamp='0.914'/>
<writer thread='16772'/>
<task_queued compile_id='37' method='java/lang/Character toLowerCase (C)C' bytes='6' count='3328' iicount='3328' level='3' stamp='0.914' comment='tiered' hot_count='3328'/>
<task_queued compile_id='38' method='java/util/Hashtable get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='69' count='384' backedge_count='54' iicount='384' level='3' stamp='0.915' comment='tiered' hot_count='384'/>
<writer thread='7332'/>
Decoding compiled method 0x00000000036a3850:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c494db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  # parm1:    r9        = int
  #           [sp+0x40]  (sp of caller)
  0x00000000036a39c0: mov    0x8(%rdx),%r10d
  0x00000000036a39c4: shl    $0x3,%r10
  0x00000000036a39c8: cmp    %rax,%r10
  0x00000000036a39cb: jne    0x00000000035d5f60  ;   {runtime_call}
  0x00000000036a39d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000036a39dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000036a39e0: mov    %eax,-0x6000(%rsp)
  0x00000000036a39e7: push   %rbp
  0x00000000036a39e8: sub    $0x30,%rsp
  0x00000000036a39ec: movabs $0x1c685368,%rax   ;   {metadata(method data for {method} {0x000000001c494db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000036a39f6: mov    0xdc(%rax),%esi
  0x00000000036a39fc: add    $0x8,%esi
  0x00000000036a39ff: mov    %esi,0xdc(%rax)
  0x00000000036a3a05: movabs $0x1c494db0,%rax   ;   {metadata({method} {0x000000001c494db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000036a3a0f: and    $0x1ff8,%esi
  0x00000000036a3a15: cmp    $0x0,%esi
  0x00000000036a3a18: je     0x00000000036a3bd5  ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1403)

  0x00000000036a3a1e: mov    0xc(%rdx),%eax
  0x00000000036a3a21: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::startsWith@1 (line 1403)

  0x00000000036a3a25: mov    0xc(%r8),%esi      ; implicit exception: dispatches to 0x00000000036a3bec
  0x00000000036a3a29: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)

  0x00000000036a3a2d: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ; implicit exception: dispatches to 0x00000000036a3bf1
  0x00000000036a3a30: cmp    $0x0,%r9d
  0x00000000036a3a34: movabs $0x1c685368,%rbx   ;   {metadata(method data for {method} {0x000000001c494db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000036a3a3e: movabs $0x108,%rdx
  0x00000000036a3a48: jl     0x00000000036a3a58
  0x00000000036a3a4e: movabs $0x118,%rdx
  0x00000000036a3a58: mov    (%rbx,%rdx,1),%rcx
  0x00000000036a3a5c: lea    0x1(%rcx),%rcx
  0x00000000036a3a60: mov    %rcx,(%rbx,%rdx,1)
  0x00000000036a3a64: jl     0x00000000036a3ba2  ;*iflt
                                                ; - java.lang.String::startsWith@25 (line 1409)

  0x00000000036a3a6a: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ; implicit exception: dispatches to 0x00000000036a3bf6
  0x00000000036a3a6d: sub    %edi,%ebx
  0x00000000036a3a6f: cmp    %ebx,%r9d
  0x00000000036a3a72: movabs $0x1c685368,%rbx   ;   {metadata(method data for {method} {0x000000001c494db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000036a3a7c: movabs $0x128,%rdx
  0x00000000036a3a86: jle    0x00000000036a3a96
  0x00000000036a3a8c: movabs $0x138,%rdx
  0x00000000036a3a96: mov    (%rbx,%rdx,1),%rcx
  0x00000000036a3a9a: lea    0x1(%rcx),%rcx
  0x00000000036a3a9e: mov    %rcx,(%rbx,%rdx,1)
  0x00000000036a3aa2: jg     0x00000000036a3ba2  ;*if_icmple
                                                ; - java.lang.String::startsWith@37 (line 1409)

  0x00000000036a3aa8: mov    $0x0,%ebx
  0x00000000036a3aad: jmpq   0x00000000036a3b62  ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x00000000036a3ab2: nopw   0x0(%rax,%rax,1)
  0x00000000036a3ab8: mov    %r9,%rdx
  0x00000000036a3abb: inc    %edx
  0x00000000036a3abd: movslq %r9d,%rcx
  0x00000000036a3ac0: cmp    0xc(%rax),%r9d
  0x00000000036a3ac4: jae    0x00000000036a3bfb
  0x00000000036a3aca: movzwl 0x10(%rax,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)

  0x00000000036a3acf: mov    %rbx,%r8
  0x00000000036a3ad2: inc    %r8d
  0x00000000036a3ad5: movslq %ebx,%r9
  0x00000000036a3ad8: cmp    0xc(%rsi),%ebx
  0x00000000036a3adb: jae    0x00000000036a3c04
  0x00000000036a3ae1: movzwl 0x10(%rsi,%r9,2),%ebx  ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)

  0x00000000036a3ae7: movabs $0x1c685368,%r9    ;   {metadata(method data for {method} {0x000000001c494db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000036a3af1: mov    0xe0(%r9),%r11d
  0x00000000036a3af8: add    $0x8,%r11d
  0x00000000036a3afc: mov    %r11d,0xe0(%r9)
  0x00000000036a3b03: movabs $0x1c494db0,%r9    ;   {metadata({method} {0x000000001c494db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000036a3b0d: and    $0xfff8,%r11d
  0x00000000036a3b14: cmp    $0x0,%r11d
  0x00000000036a3b18: je     0x00000000036a3c0d  ; OopMap{rsi=Oop rax=Oop off=350}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x00000000036a3b1e: test   %eax,-0x20b3a24(%rip)        # 0x00000000015f0100
                                                ;   {poll}
  0x00000000036a3b24: cmp    %ebx,%ecx
  0x00000000036a3b26: movabs $0x1c685368,%rbx   ;   {metadata(method data for {method} {0x000000001c494db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000036a3b30: movabs $0x168,%rcx
  0x00000000036a3b3a: je     0x00000000036a3b4a
  0x00000000036a3b40: movabs $0x178,%rcx
  0x00000000036a3b4a: mov    (%rbx,%rcx,1),%r9
  0x00000000036a3b4e: lea    0x1(%r9),%r9
  0x00000000036a3b52: mov    %r9,(%rbx,%rcx,1)
  0x00000000036a3b56: jne    0x00000000036a3bb3  ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x00000000036a3b5c: mov    %r8,%rbx
  0x00000000036a3b5f: mov    %rdx,%r9           ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x00000000036a3b62: dec    %edi
  0x00000000036a3b64: cmp    $0x0,%edi
  0x00000000036a3b67: movabs $0x1c685368,%rdx   ;   {metadata(method data for {method} {0x000000001c494db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000036a3b71: movabs $0x148,%rcx
  0x00000000036a3b7b: jl     0x00000000036a3b8b
  0x00000000036a3b81: movabs $0x158,%rcx
  0x00000000036a3b8b: mov    (%rdx,%rcx,1),%r8
  0x00000000036a3b8f: lea    0x1(%r8),%r8
  0x00000000036a3b93: mov    %r8,(%rdx,%rcx,1)
  0x00000000036a3b97: jl     0x00000000036a3bc4
  0x00000000036a3b9d: jmpq   0x00000000036a3ab8  ;*iflt
                                                ; - java.lang.String::startsWith@47 (line 1412)

  0x00000000036a3ba2: mov    $0x0,%eax
  0x00000000036a3ba7: add    $0x30,%rsp
  0x00000000036a3bab: pop    %rbp
  0x00000000036a3bac: test   %eax,-0x20b3ab2(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036a3bb2: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@41 (line 1410)

  0x00000000036a3bb3: mov    $0x0,%eax
  0x00000000036a3bb8: add    $0x30,%rsp
  0x00000000036a3bbc: pop    %rbp
  0x00000000036a3bbd: test   %eax,-0x20b3ac3(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036a3bc3: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@69 (line 1414)

  0x00000000036a3bc4: mov    $0x1,%eax
  0x00000000036a3bc9: add    $0x30,%rsp
  0x00000000036a3bcd: pop    %rbp
  0x00000000036a3bce: test   %eax,-0x20b3ad4(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036a3bd4: retq   
  0x00000000036a3bd5: mov    %rax,0x8(%rsp)
  0x00000000036a3bda: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036a3be2: callq  0x00000000036919e0  ; OopMap{rdx=Oop r8=Oop off=551}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1403)
                                                ;   {runtime_call}
  0x00000000036a3be7: jmpq   0x00000000036a3a1e
  0x00000000036a3bec: callq  0x000000000368d080  ; OopMap{rax=Oop off=561}
                                                ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)
                                                ;   {runtime_call}
  0x00000000036a3bf1: callq  0x000000000368d080  ; OopMap{rax=Oop rsi=Oop off=566}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ;   {runtime_call}
  0x00000000036a3bf6: callq  0x000000000368d080  ; OopMap{rsi=Oop rax=Oop off=571}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ;   {runtime_call}
  0x00000000036a3bfb: mov    %r9,(%rsp)
  0x00000000036a3bff: callq  0x000000000368c9c0  ; OopMap{rsi=Oop rax=Oop off=580}
                                                ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)
                                                ;   {runtime_call}
  0x00000000036a3c04: mov    %rbx,(%rsp)
  0x00000000036a3c08: callq  0x000000000368c9c0  ; OopMap{rsi=Oop rax=Oop off=589}
                                                ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)
                                                ;   {runtime_call}
  0x00000000036a3c0d: mov    %r9,0x8(%rsp)
  0x00000000036a3c12: movq   $0x41,(%rsp)
  0x00000000036a3c1a: callq  0x00000000036919e0  ; OopMap{rsi=Oop rax=Oop off=607}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)
                                                ;   {runtime_call}
  0x00000000036a3c1f: jmpq   0x00000000036a3b1e
  0x00000000036a3c24: nop
  0x00000000036a3c25: nop
  0x00000000036a3c26: mov    0x2a8(%r15),%rax
  0x00000000036a3c2d: movabs $0x0,%r10
  0x00000000036a3c37: mov    %r10,0x2a8(%r15)
  0x00000000036a3c3e: movabs $0x0,%r10
  0x00000000036a3c48: mov    %r10,0x2b0(%r15)
  0x00000000036a3c4f: add    $0x30,%rsp
  0x00000000036a3c53: pop    %rbp
  0x00000000036a3c54: jmpq   0x000000000368c620  ;   {runtime_call}
  0x00000000036a3c59: hlt    
  0x00000000036a3c5a: hlt    
  0x00000000036a3c5b: hlt    
  0x00000000036a3c5c: hlt    
  0x00000000036a3c5d: hlt    
  0x00000000036a3c5e: hlt    
  0x00000000036a3c5f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000036a3c60: callq  0x000000000368f1a0  ;   {no_reloc}
  0x00000000036a3c65: mov    %rsp,-0x28(%rsp)
  0x00000000036a3c6a: sub    $0x80,%rsp
  0x00000000036a3c71: mov    %rax,0x78(%rsp)
  0x00000000036a3c76: mov    %rcx,0x70(%rsp)
  0x00000000036a3c7b: mov    %rdx,0x68(%rsp)
  0x00000000036a3c80: mov    %rbx,0x60(%rsp)
  0x00000000036a3c85: mov    %rbp,0x50(%rsp)
  0x00000000036a3c8a: mov    %rsi,0x48(%rsp)
  0x00000000036a3c8f: mov    %rdi,0x40(%rsp)
  0x00000000036a3c94: mov    %r8,0x38(%rsp)
  0x00000000036a3c99: mov    %r9,0x30(%rsp)
  0x00000000036a3c9e: mov    %r10,0x28(%rsp)
  0x00000000036a3ca3: mov    %r11,0x20(%rsp)
  0x00000000036a3ca8: mov    %r12,0x18(%rsp)
  0x00000000036a3cad: mov    %r13,0x10(%rsp)
  0x00000000036a3cb2: mov    %r14,0x8(%rsp)
  0x00000000036a3cb7: mov    %r15,(%rsp)
  0x00000000036a3cbb: movabs $0x553ec320,%rcx   ;   {external_word}
  0x00000000036a3cc5: movabs $0x36a3c65,%rdx    ;   {internal_word}
  0x00000000036a3ccf: mov    %rsp,%r8
  0x00000000036a3cd2: and    $0xfffffffffffffff0,%rsp
  0x00000000036a3cd6: callq  0x00000000550a41d0  ;   {runtime_call}
  0x00000000036a3cdb: hlt    
[Deopt Handler Code]
  0x00000000036a3cdc: movabs $0x36a3cdc,%r10    ;   {section_word}
  0x00000000036a3ce6: push   %r10
  0x00000000036a3ce8: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036a3ced: hlt    
  0x00000000036a3cee: hlt    
  0x00000000036a3cef: hlt    
<nmethod compile_id='35' compiler='C1' level='3' entry='0x00000000036a39c0' size='1824' address='0x00000000036a3850' relocation_offset='288' insts_offset='368' stub_offset='1040' scopes_data_offset='1192' scopes_pcs_offset='1384' dependencies_offset='1784' nul_chk_table_offset='1792' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='2458' backedge_count='1354' iicount='2458' stamp='0.925'/>
<writer thread='10060'/>
Decoding compiled method 0x00000000036abbd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c6626b8} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rdx:rdx   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    r8        = int
  #           [sp+0x20]  (sp of caller)
  0x00000000036abd00: mov    0x8(%rdx),%r10d
  0x00000000036abd04: shl    $0x3,%r10
  0x00000000036abd08: cmp    %r10,%rax
  0x00000000036abd0b: jne    0x00000000035d5f60  ;   {runtime_call}
  0x00000000036abd11: data16 xchg %ax,%ax
  0x00000000036abd14: nopl   0x0(%rax,%rax,1)
  0x00000000036abd1c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000036abd20: mov    %eax,-0x6000(%rsp)
  0x00000000036abd27: push   %rbp
  0x00000000036abd28: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)

  0x00000000036abd2c: movzwl %r8w,%r8d          ;*i2c  ; - java.lang.CharacterDataLatin1::getProperties@1 (line 71)

  0x00000000036abd30: cmp    $0x100,%r8d
  0x00000000036abd37: jae    0x00000000036abd54
  0x00000000036abd39: movabs $0x76c1a97e0,%r10  ;   {oop([I)}
  0x00000000036abd43: mov    0x10(%r10,%r8,4),%eax
  0x00000000036abd48: add    $0x10,%rsp
  0x00000000036abd4c: pop    %rbp
  0x00000000036abd4d: test   %eax,-0x20bbd53(%rip)        # 0x00000000015f0000
                                                ;   {poll_return}
  0x00000000036abd53: retq   
  0x00000000036abd54: mov    $0xffffffe4,%edx
  0x00000000036abd59: mov    %r8d,%ebp
  0x00000000036abd5c: data16 xchg %ax,%ax
  0x00000000036abd5f: callq  0x00000000035d57a0  ; OopMap{off=100}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x00000000036abd64: int3                      ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)

  0x00000000036abd65: hlt    
  0x00000000036abd66: hlt    
  0x00000000036abd67: hlt    
  0x00000000036abd68: hlt    
  0x00000000036abd69: hlt    
  0x00000000036abd6a: hlt    
  0x00000000036abd6b: hlt    
  0x00000000036abd6c: hlt    
  0x00000000036abd6d: hlt    
  0x00000000036abd6e: hlt    
  0x00000000036abd6f: hlt    
  0x00000000036abd70: hlt    
  0x00000000036abd71: hlt    
  0x00000000036abd72: hlt    
  0x00000000036abd73: hlt    
  0x00000000036abd74: hlt    
  0x00000000036abd75: hlt    
  0x00000000036abd76: hlt    
  0x00000000036abd77: hlt    
  0x00000000036abd78: hlt    
  0x00000000036abd79: hlt    
  0x00000000036abd7a: hlt    
  0x00000000036abd7b: hlt    
  0x00000000036abd7c: hlt    
  0x00000000036abd7d: hlt    
  0x00000000036abd7e: hlt    
  0x00000000036abd7f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000036abd80: jmpq   0x000000000368dc20  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000036abd85: callq  0x00000000036abd8a
  0x00000000036abd8a: subq   $0x5,(%rsp)
  0x00000000036abd8f: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036abd94: hlt    
  0x00000000036abd95: hlt    
  0x00000000036abd96: hlt    
  0x00000000036abd97: hlt    
<nmethod compile_id='36' compiler='C2' level='4' entry='0x00000000036abd00' size='616' address='0x00000000036abbd0' relocation_offset='288' insts_offset='304' stub_offset='432' scopes_data_offset='472' scopes_pcs_offset='512' dependencies_offset='608' oops_offset='456' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='40459' iicount='40459' stamp='0.929'/>
<writer thread='4360'/>
<task_queued compile_id='39' method='java/util/ArrayList size ()I' bytes='5' count='1408' iicount='1408' level='1' stamp='0.929' comment='tiered' hot_count='1408'/>
<writer thread='16536'/>
Decoding compiled method 0x00000000036a84d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c495140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0x40]  (sp of caller)
  0x00000000036a8620: mov    0x8(%rdx),%r10d
  0x00000000036a8624: shl    $0x3,%r10
  0x00000000036a8628: cmp    %r10,%rax
  0x00000000036a862b: jne    0x00000000035d5f60  ;   {runtime_call}
  0x00000000036a8631: data16 xchg %ax,%ax
  0x00000000036a8634: nopl   0x0(%rax,%rax,1)
  0x00000000036a863c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000036a8640: mov    %eax,-0x6000(%rsp)
  0x00000000036a8647: push   %rbp
  0x00000000036a8648: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1546)

  0x00000000036a864c: mov    %rdx,%r10
  0x00000000036a864f: mov    0xc(%rdx),%ecx     ;*getfield value
                                                ; - java.lang.String::indexOf@1 (line 1546)

  0x00000000036a8652: mov    0xc(%r12,%rcx,8),%ebp  ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ; implicit exception: dispatches to 0x00000000036a87d9
  0x00000000036a8657: test   %r9d,%r9d
  0x00000000036a865a: jl     0x00000000036a87a1  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x00000000036a8660: mov    $0xffffffff,%eax
  0x00000000036a8665: cmp    %ebp,%r9d
  0x00000000036a8668: jge    0x00000000036a8757  ;*if_icmplt
                                                ; - java.lang.String::indexOf@17 (line 1549)

  0x00000000036a866e: cmp    $0x10000,%r8d
  0x00000000036a8675: jge    0x00000000036a87bd  ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)

  0x00000000036a867b: cmp    %ebp,%r9d
  0x00000000036a867e: jae    0x00000000036a8787
  0x00000000036a8684: mov    %ebp,%r10d
  0x00000000036a8687: dec    %r10d
  0x00000000036a868a: cmp    %ebp,%r10d
  0x00000000036a868d: jae    0x00000000036a8787
  0x00000000036a8693: lea    (%r12,%rcx,8),%rbx
  0x00000000036a8697: mov    %r9d,%r11d
  0x00000000036a869a: inc    %r11d              ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x00000000036a869d: movzwl 0x10(%rbx,%r9,2),%ecx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000036a86a3: cmp    %r8d,%ecx
  0x00000000036a86a6: je     0x00000000036a8754  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000036a86ac: inc    %r9d               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x00000000036a86af: cmp    %r11d,%r9d
  0x00000000036a86b2: jl     0x00000000036a869d  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x00000000036a86b4: mov    %ebp,%r11d
  0x00000000036a86b7: add    $0xfffffff9,%r11d
  0x00000000036a86bb: mov    $0x80000000,%ecx
  0x00000000036a86c0: cmp    %r11d,%r10d
  0x00000000036a86c3: cmovl  %ecx,%r11d
  0x00000000036a86c7: cmp    %r11d,%r9d
  0x00000000036a86ca: jge    0x00000000036a8734
  0x00000000036a86cc: nopl   0x0(%rax)          ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x00000000036a86d0: movzwl 0x10(%rbx,%r9,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000036a86d6: cmp    %r8d,%r10d
  0x00000000036a86d9: je     0x00000000036a8754  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000036a86db: movslq %r9d,%r10
  0x00000000036a86de: movzwl 0x12(%rbx,%r10,2),%edi  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000036a86e4: cmp    %r8d,%edi
  0x00000000036a86e7: je     0x00000000036a8751  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000036a86e9: movzwl 0x14(%rbx,%r10,2),%edi  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000036a86ef: cmp    %r8d,%edi
  0x00000000036a86f2: je     0x00000000036a8763  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000036a86f4: movzwl 0x16(%rbx,%r10,2),%edi  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000036a86fa: cmp    %r8d,%edi
  0x00000000036a86fd: je     0x00000000036a8769  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000036a86ff: movzwl 0x18(%rbx,%r10,2),%edi  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000036a8705: cmp    %r8d,%edi
  0x00000000036a8708: je     0x00000000036a876f  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000036a870a: movzwl 0x1a(%rbx,%r10,2),%edi  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000036a8710: cmp    %r8d,%edi
  0x00000000036a8713: je     0x00000000036a8775  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000036a8715: movzwl 0x1c(%rbx,%r10,2),%edi  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000036a871b: cmp    %r8d,%edi
  0x00000000036a871e: je     0x00000000036a877b  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000036a8720: movzwl 0x1e(%rbx,%r10,2),%ecx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000036a8726: cmp    %r8d,%ecx
  0x00000000036a8729: je     0x00000000036a8781  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000036a872b: add    $0x8,%r9d          ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x00000000036a872f: cmp    %r11d,%r9d
  0x00000000036a8732: jl     0x00000000036a86d0  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x00000000036a8734: cmp    %ebp,%r9d
  0x00000000036a8737: jge    0x00000000036a8757
  0x00000000036a8739: data16 xchg %ax,%ax       ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x00000000036a873c: movzwl 0x10(%rbx,%r9,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000036a8742: cmp    %r8d,%r11d
  0x00000000036a8745: je     0x00000000036a8754  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000036a8747: inc    %r9d               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x00000000036a874a: cmp    %ebp,%r9d
  0x00000000036a874d: jl     0x00000000036a873c  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x00000000036a874f: jmp    0x00000000036a8757
  0x00000000036a8751: inc    %r9d               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x00000000036a8754: mov    %r9d,%eax          ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x00000000036a8757: add    $0x30,%rsp
  0x00000000036a875b: pop    %rbp
  0x00000000036a875c: test   %eax,-0x20b8762(%rip)        # 0x00000000015f0000
                                                ;   {poll_return}
  0x00000000036a8762: retq   
  0x00000000036a8763: add    $0x2,%r9d
  0x00000000036a8767: jmp    0x00000000036a8754
  0x00000000036a8769: add    $0x3,%r9d
  0x00000000036a876d: jmp    0x00000000036a8754
  0x00000000036a876f: add    $0x4,%r9d
  0x00000000036a8773: jmp    0x00000000036a8754
  0x00000000036a8775: add    $0x5,%r9d
  0x00000000036a8779: jmp    0x00000000036a8754
  0x00000000036a877b: add    $0x6,%r9d
  0x00000000036a877f: jmp    0x00000000036a8754
  0x00000000036a8781: add    $0x7,%r9d          ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x00000000036a8785: jmp    0x00000000036a8754
  0x00000000036a8787: mov    $0xffffff86,%edx
  0x00000000036a878c: mov    %r8d,(%rsp)
  0x00000000036a8790: mov    %r9d,0x4(%rsp)
  0x00000000036a8795: mov    %ecx,0x8(%rsp)
  0x00000000036a8799: xchg   %ax,%ax
  0x00000000036a879b: callq  0x00000000035d57a0  ; OopMap{[8]=NarrowOop off=384}
                                                ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)
                                                ;   {runtime_call}
  0x00000000036a87a0: int3                      ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x00000000036a87a1: mov    $0xffffff65,%edx
  0x00000000036a87a6: mov    %r8d,(%rsp)
  0x00000000036a87aa: mov    %r9d,0x8(%rsp)
  0x00000000036a87af: mov    %r10,0x10(%rsp)
  0x00000000036a87b4: data16 xchg %ax,%ax
  0x00000000036a87b7: callq  0x00000000035d57a0  ; OopMap{[16]=Oop off=412}
                                                ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)
                                                ;   {runtime_call}
  0x00000000036a87bc: int3                      ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x00000000036a87bd: mov    $0xffffff65,%edx
  0x00000000036a87c2: mov    %r9d,0x4(%rsp)
  0x00000000036a87c7: mov    %r8d,0x8(%rsp)
  0x00000000036a87cc: mov    %r10,0x10(%rsp)
  0x00000000036a87d1: xchg   %ax,%ax
  0x00000000036a87d3: callq  0x00000000035d57a0  ; OopMap{[16]=Oop off=440}
                                                ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)
                                                ;   {runtime_call}
  0x00000000036a87d8: int3                      ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)

  0x00000000036a87d9: mov    $0xfffffff6,%edx
  0x00000000036a87de: nop
  0x00000000036a87df: callq  0x00000000035d57a0  ; OopMap{off=452}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ;   {runtime_call}
  0x00000000036a87e4: int3                      ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)

  0x00000000036a87e5: hlt    
  0x00000000036a87e6: hlt    
  0x00000000036a87e7: hlt    
  0x00000000036a87e8: hlt    
  0x00000000036a87e9: hlt    
  0x00000000036a87ea: hlt    
  0x00000000036a87eb: hlt    
  0x00000000036a87ec: hlt    
  0x00000000036a87ed: hlt    
  0x00000000036a87ee: hlt    
  0x00000000036a87ef: hlt    
  0x00000000036a87f0: hlt    
  0x00000000036a87f1: hlt    
  0x00000000036a87f2: hlt    
  0x00000000036a87f3: hlt    
  0x00000000036a87f4: hlt    
  0x00000000036a87f5: hlt    
  0x00000000036a87f6: hlt    
  0x00000000036a87f7: hlt    
  0x00000000036a87f8: hlt    
  0x00000000036a87f9: hlt    
  0x00000000036a87fa: hlt    
  0x00000000036a87fb: hlt    
  0x00000000036a87fc: hlt    
  0x00000000036a87fd: hlt    
  0x00000000036a87fe: hlt    
  0x00000000036a87ff: hlt    
[Exception Handler]
[Stub Code]
  0x00000000036a8800: jmpq   0x000000000368dc20  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000036a8805: callq  0x00000000036a880a
  0x00000000036a880a: subq   $0x5,(%rsp)
  0x00000000036a880f: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036a8814: hlt    
  0x00000000036a8815: hlt    
  0x00000000036a8816: hlt    
  0x00000000036a8817: hlt    
<nmethod compile_id='34' compiler='C2' level='4' entry='0x00000000036a8620' size='1800' address='0x00000000036a84d0' relocation_offset='288' insts_offset='336' stub_offset='816' scopes_data_offset='848' scopes_pcs_offset='1008' dependencies_offset='1776' nul_chk_table_offset='1784' method='java/lang/String indexOf (II)I' bytes='70' count='3240' backedge_count='209920' iicount='3240' stamp='0.941'/>
<writer thread='4360'/>
<task_queued compile_id='40' method='java/util/Arrays copyOf ([BI)[B' bytes='19' count='2304' iicount='2304' level='3' stamp='0.941' comment='tiered' hot_count='2304'/>
<task_queued compile_id='41' method='java/net/URL getProtocol ()Ljava/lang/String;' bytes='5' count='1408' iicount='1408' level='1' stamp='0.941' comment='tiered' hot_count='1408'/>
<writer thread='19284'/>
Decoding compiled method 0x00000000036ac850:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c4fffe0} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;
  # this:     rdx:rdx   = &apos;java/lang/StringBuffer&apos;
  # parm0:    r8        = char
  #           [sp+0x90]  (sp of caller)
  0x00000000036ac9a0: mov    0x8(%rdx),%r10d
  0x00000000036ac9a4: shl    $0x3,%r10
  0x00000000036ac9a8: cmp    %r10,%rax
  0x00000000036ac9ab: jne    0x00000000035d5f60  ;   {runtime_call}
  0x00000000036ac9b1: data16 xchg %ax,%ax
  0x00000000036ac9b4: nopl   0x0(%rax,%rax,1)
  0x00000000036ac9bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000036ac9c0: mov    %eax,-0x6000(%rsp)
  0x00000000036ac9c7: push   %rbp
  0x00000000036ac9c8: sub    $0x80,%rsp
  0x00000000036ac9cf: mov    %r8d,0x30(%rsp)
  0x00000000036ac9d4: mov    %rdx,%rbp
  0x00000000036ac9d7: mov    (%rdx),%rax
  0x00000000036ac9da: mov    %rax,%r10
  0x00000000036ac9dd: and    $0x7,%r10
  0x00000000036ac9e1: cmp    $0x5,%r10
  0x00000000036ac9e5: jne    0x00000000036acc52
  0x00000000036ac9eb: mov    $0xf8001ac1,%r11d  ;   {metadata(&apos;java/lang/StringBuffer&apos;)}
  0x00000000036ac9f1: movabs $0x0,%r10
  0x00000000036ac9fb: lea    (%r10,%r11,8),%r10
  0x00000000036ac9ff: mov    0xa8(%r10),%r10
  0x00000000036aca06: mov    %r10,%r11
  0x00000000036aca09: or     %r15,%r11
  0x00000000036aca0c: mov    %r11,%r8
  0x00000000036aca0f: xor    %rax,%r8
  0x00000000036aca12: test   $0xffffffffffffff87,%r8
  0x00000000036aca19: jne    0x00000000036accb5  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)

  0x00000000036aca1f: mov    0x10(%rbp),%r9d    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000036aca23: mov    %r12d,0x14(%rbp)   ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 380)

  0x00000000036aca27: mov    0xc(%r12,%r9,8),%edi  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; implicit exception: dispatches to 0x00000000036ace20
  0x00000000036aca2c: mov    0xc(%rbp),%ecx     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000036aca2f: mov    %ecx,%r10d
  0x00000000036aca32: sub    %edi,%r10d
  0x00000000036aca35: mov    %r9,%rsi
  0x00000000036aca38: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000036aca3c: inc    %r10d
  0x00000000036aca3f: mov    %ecx,%r8d
  0x00000000036aca42: inc    %r8d               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@6 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000036aca45: test   %r10d,%r10d
  0x00000000036aca48: jg     0x00000000036aca9a  ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000036aca4a: mov    %r8d,0xc(%rbp)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000036aca4e: test   %rsi,%rsi
  0x00000000036aca51: je     0x00000000036acc27
  0x00000000036aca57: mov    0xc(%rsi),%r10d
  0x00000000036aca5b: cmp    %r10d,%ecx
  0x00000000036aca5e: jae    0x00000000036acc39
  0x00000000036aca64: mov    0x30(%rsp),%r11d
  0x00000000036aca69: mov    %r11w,0x10(%rsi,%rcx,2)
  0x00000000036aca6f: mov    $0x7,%r10d
  0x00000000036aca75: and    0x0(%rbp),%r10
  0x00000000036aca79: cmp    $0x5,%r10
  0x00000000036aca7d: jne    0x00000000036acce0  ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)

  0x00000000036aca83: mov    %rbp,%rax
  0x00000000036aca86: add    $0x80,%rsp
  0x00000000036aca8d: pop    %rbp
  0x00000000036aca8e: test   %eax,-0x20bca94(%rip)        # 0x00000000015f0000
                                                ;   {poll_return}
  0x00000000036aca94: retq   
  0x00000000036aca95: mov    %r8d,%r10d
  0x00000000036aca98: jmp    0x00000000036acaaf
  0x00000000036aca9a: mov    %edi,%r10d
  0x00000000036aca9d: shl    %r10d              ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000036acaa0: mov    %r10d,%edx
  0x00000000036acaa3: sub    %ecx,%edx
  0x00000000036acaa5: inc    %edx
  0x00000000036acaa7: test   %edx,%edx
  0x00000000036acaa9: jl     0x00000000036aca95  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000036acaab: add    $0x2,%r10d         ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000036acaaf: test   %r10d,%r10d
  0x00000000036acab2: jle    0x00000000036acac0  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000036acab4: mov    $0x7ffffff7,%ebx
  0x00000000036acab9: sub    %r10d,%ebx
  0x00000000036acabc: test   %ebx,%ebx
  0x00000000036acabe: jge    0x00000000036acae9  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@29 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000036acac0: mov    %edi,0x48(%rsp)
  0x00000000036acac4: mov    %r9d,0x34(%rsp)
  0x00000000036acac9: mov    %rsi,0x20(%rsp)    ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000036acace: mov    %rbp,%rdx
  0x00000000036acad1: xchg   %ax,%ax
  0x00000000036acad3: callq  0x00000000035d61a0  ; OopMap{rbp=Oop [32]=Oop [52]=NarrowOop off=312}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {optimized virtual_call}
  0x00000000036acad8: mov    0x20(%rsp),%rsi
  0x00000000036acadd: mov    %eax,%r10d
  0x00000000036acae0: mov    0x34(%rsp),%r9d
  0x00000000036acae5: mov    0x48(%rsp),%edi    ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000036acae9: cmp    $0x80000,%r10d
  0x00000000036acaf0: ja     0x00000000036acddc
  0x00000000036acaf6: movslq %r10d,%r11
  0x00000000036acaf9: shl    %r11
  0x00000000036acafc: add    $0x17,%r11
  0x00000000036acb00: mov    %r11,%r8
  0x00000000036acb03: and    $0xfffffffffffffff8,%r8
  0x00000000036acb07: cmp    $0x80000,%r10d
  0x00000000036acb0e: ja     0x00000000036acd88
  0x00000000036acb14: mov    0x60(%r15),%rbx
  0x00000000036acb18: mov    %rbx,%rcx
  0x00000000036acb1b: add    %r8,%rcx
  0x00000000036acb1e: cmp    0x70(%r15),%rcx
  0x00000000036acb22: jae    0x00000000036acd88
  0x00000000036acb28: mov    %rcx,0x60(%r15)
  0x00000000036acb2c: prefetchw 0xc0(%rcx)
  0x00000000036acb33: movq   $0x1,(%rbx)
  0x00000000036acb3a: prefetchw 0x100(%rcx)
  0x00000000036acb41: movl   $0xf8000041,0x8(%rbx)  ;   {metadata({type array char})}
  0x00000000036acb48: mov    %r10d,0xc(%rbx)
  0x00000000036acb4c: prefetchw 0x140(%rcx)
  0x00000000036acb53: prefetchw 0x180(%rcx)     ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000036acb5a: cmp    %r10d,%edi
  0x00000000036acb5d: mov    %r10d,%esi
  0x00000000036acb60: cmovl  %edi,%esi          ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000036acb63: mov    %rbx,%r13
  0x00000000036acb66: add    $0x10,%r13         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000036acb6a: lea    (%r12,%r9,8),%rdx  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000036acb6e: shr    $0x3,%r11
  0x00000000036acb72: mov    %r11,%rcx
  0x00000000036acb75: add    $0xfffffffffffffffe,%rcx
  0x00000000036acb79: cmp    %esi,%edi
  0x00000000036acb7b: jb     0x00000000036acde4
  0x00000000036acb81: cmp    %esi,%r10d
  0x00000000036acb84: jb     0x00000000036acde4
  0x00000000036acb8a: test   %esi,%esi
  0x00000000036acb8c: jle    0x00000000036ace0e
  0x00000000036acb92: lea    0x10(%r12,%r9,8),%r9
  0x00000000036acb97: cmp    %r10d,%esi
  0x00000000036acb9a: jl     0x00000000036acbe4
  0x00000000036acb9c: add    $0xfffffffffffffff0,%r8
  0x00000000036acba0: shr    $0x3,%r8
  0x00000000036acba4: mov    %r9,%rcx
  0x00000000036acba7: mov    %r13,%rdx
  0x00000000036acbaa: movabs $0x35e2ca0,%r10
  0x00000000036acbb4: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000036acbb7: mov    0xc(%rbp),%ecx     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000036acbba: mov    %rbx,%r10
  0x00000000036acbbd: shr    $0x3,%r10
  0x00000000036acbc1: mov    %r10d,0x10(%rbp)   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000036acbc5: mov    %ecx,%r8d
  0x00000000036acbc8: inc    %r8d               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000036acbcb: mov    %rbp,%r10
  0x00000000036acbce: shr    $0x9,%r10
  0x00000000036acbd2: mov    $0xf32f000,%r11d
  0x00000000036acbd8: mov    %r12b,(%r11,%r10,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000036acbdc: mov    %rbx,%rsi
  0x00000000036acbdf: jmpq   0x00000000036aca4a
  0x00000000036acbe4: movslq %esi,%r8
  0x00000000036acbe7: mov    %r8,%r10
  0x00000000036acbea: shl    %r10
  0x00000000036acbed: add    $0x10,%r10
  0x00000000036acbf1: mov    %r10,%rcx
  0x00000000036acbf4: and    $0xfffffffffffffff9,%rcx
  0x00000000036acbf8: mov    %rbx,%rdi
  0x00000000036acbfb: add    %rcx,%rdi
  0x00000000036acbfe: shr    $0x3,%r10
  0x00000000036acc02: sub    %r10,%r11
  0x00000000036acc05: mov    %r11,%rcx
  0x00000000036acc08: xor    %rax,%rax
  0x00000000036acc0b: shl    $0x3,%rcx
  0x00000000036acc0f: rep rex.W stos %al,%es:(%rdi)
  0x00000000036acc12: mov    %r9,%rcx
  0x00000000036acc15: mov    %r13,%rdx
  0x00000000036acc18: movabs $0x35e2980,%r10
  0x00000000036acc22: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000036acc25: jmp    0x00000000036acbb7
  0x00000000036acc27: mov    $0xfffffff6,%edx
  0x00000000036acc2c: mov    %ecx,0x24(%rsp)
  0x00000000036acc30: data16 xchg %ax,%ax
  0x00000000036acc33: callq  0x00000000035d57a0  ; OopMap{rbp=Oop off=664}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x00000000036acc38: int3   
  0x00000000036acc39: mov    $0xffffffe4,%edx
  0x00000000036acc3e: mov    %rsi,0x38(%rsp)
  0x00000000036acc43: mov    %ecx,0x34(%rsp)
  0x00000000036acc47: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [56]=Oop off=684}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x00000000036acc4c: int3                      ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000036acc4d: lock cmpxchg %r10,(%rdx)
  0x00000000036acc52: lea    0x70(%rsp),%rbx
  0x00000000036acc57: mov    (%rdx),%rax
  0x00000000036acc5a: test   $0x2,%rax
  0x00000000036acc60: jne    0x00000000036acc86
  0x00000000036acc62: or     $0x1,%rax
  0x00000000036acc66: mov    %rax,(%rbx)
  0x00000000036acc69: lock cmpxchg %rbx,(%rdx)
  0x00000000036acc6e: je     0x00000000036acc9f
  0x00000000036acc74: sub    %rsp,%rax
  0x00000000036acc77: and    $0xfffffffffffff007,%rax
  0x00000000036acc7e: mov    %rax,(%rbx)
  0x00000000036acc81: jmpq   0x00000000036acc9f
  0x00000000036acc86: movq   $0x3,(%rbx)
  0x00000000036acc8d: mov    %rax,%rbx
  0x00000000036acc90: mov    0x16(%rbx),%rax
  0x00000000036acc94: test   %rax,%rax
  0x00000000036acc97: jne    0x00000000036acc9f
  0x00000000036acc99: lock cmpxchg %r15,0x16(%rbx)
  0x00000000036acc9f: je     0x00000000036aca1f
  0x00000000036acca5: lea    0x70(%rsp),%r8
  0x00000000036accaa: nop
  0x00000000036accab: callq  0x0000000003693720  ; OopMap{rbp=Oop off=784}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ;   {runtime_call}
  0x00000000036accb0: jmpq   0x00000000036aca1f
  0x00000000036accb5: test   $0x7,%r8
  0x00000000036accbc: jne    0x00000000036acc4d
  0x00000000036accbe: test   $0x300,%r8
  0x00000000036accc5: jne    0x00000000036accd4
  0x00000000036accc7: and    $0x37f,%rax
  0x00000000036accce: mov    %rax,%r11
  0x00000000036accd1: or     %r15,%r11
  0x00000000036accd4: lock cmpxchg %r11,(%rdx)
  0x00000000036accd9: jne    0x00000000036acca5
  0x00000000036accdb: jmpq   0x00000000036aca1f
  0x00000000036acce0: lea    0x70(%rsp),%rax
  0x00000000036acce5: cmpq   $0x0,(%rax)
  0x00000000036accec: je     0x00000000036acd68
  0x00000000036accf2: mov    0x0(%rbp),%r10
  0x00000000036accf6: test   $0x2,%r10
  0x00000000036accfd: je     0x00000000036acd5f
  0x00000000036accff: mov    0x16(%r10),%rax
  0x00000000036acd03: xor    %r15,%rax
  0x00000000036acd06: or     0x26(%r10),%rax
  0x00000000036acd0a: jne    0x00000000036acd68
  0x00000000036acd0c: mov    0x36(%r10),%rax
  0x00000000036acd10: or     0x3e(%r10),%rax
  0x00000000036acd14: jne    0x00000000036acd20
  0x00000000036acd16: movq   $0x0,0x16(%r10)
  0x00000000036acd1e: jmp    0x00000000036acd68
  0x00000000036acd20: cmpq   $0x0,0x46(%r10)
  0x00000000036acd28: je     0x00000000036acd53
  0x00000000036acd2a: movq   $0x0,0x16(%r10)
  0x00000000036acd32: lock addl $0x0,(%rsp)
  0x00000000036acd37: cmpq   $0x0,0x46(%r10)
  0x00000000036acd3f: jne    0x00000000036acd58
  0x00000000036acd41: movabs $0x0,%rax
  0x00000000036acd4b: lock cmpxchg %r15,0x16(%r10)
  0x00000000036acd51: jne    0x00000000036acd58
  0x00000000036acd53: or     $0x1,%eax
  0x00000000036acd56: jmp    0x00000000036acd68
  0x00000000036acd58: test   $0x0,%eax
  0x00000000036acd5d: jmp    0x00000000036acd68
  0x00000000036acd5f: mov    (%rax),%r10
  0x00000000036acd62: lock cmpxchg %r10,0x0(%rbp)
  0x00000000036acd68: je     0x00000000036aca83
  0x00000000036acd6e: mov    %rbp,%rcx
  0x00000000036acd71: lea    0x70(%rsp),%rdx    ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)

  0x00000000036acd76: movabs $0x54fdce00,%r10
  0x00000000036acd80: callq  *%r10              ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)

  0x00000000036acd83: jmpq   0x00000000036aca83
  0x00000000036acd88: mov    %edi,0x60(%rsp)
  0x00000000036acd8c: mov    %r9d,0x34(%rsp)
  0x00000000036acd91: mov    %r8,0x38(%rsp)
  0x00000000036acd96: mov    %r11,0x28(%rsp)
  0x00000000036acd9b: mov    %r10d,0x20(%rsp)   ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000036acda0: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000000036acdaa: mov    0x20(%rsp),%r8d
  0x00000000036acdaf: mov    %rsi,0x58(%rsp)
  0x00000000036acdb4: data16 xchg %ax,%ax
  0x00000000036acdb7: callq  0x0000000003693360  ; OopMap{rbp=Oop [52]=NarrowOop [88]=Oop off=1052}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x00000000036acdbc: mov    0x20(%rsp),%r10d
  0x00000000036acdc1: mov    0x28(%rsp),%r11
  0x00000000036acdc6: mov    0x38(%rsp),%r8
  0x00000000036acdcb: mov    0x34(%rsp),%r9d
  0x00000000036acdd0: mov    0x60(%rsp),%edi
  0x00000000036acdd4: mov    %rax,%rbx
  0x00000000036acdd7: jmpq   0x00000000036acb5a
  0x00000000036acddc: movslq %r10d,%r11         ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000036acddf: jmpq   0x00000000036acaf9
  0x00000000036acde4: mov    %r13,%rdi
  0x00000000036acde7: xor    %rax,%rax
  0x00000000036acdea: shl    $0x3,%rcx
  0x00000000036acdee: rep rex.W stos %al,%es:(%rdi)
  0x00000000036acdf1: xor    %r8d,%r8d
  0x00000000036acdf4: mov    %rbx,%r9
  0x00000000036acdf7: xor    %edi,%edi
  0x00000000036acdf9: mov    %rbx,0x48(%rsp)
  0x00000000036acdfe: nop
  0x00000000036acdff: callq  0x000000000369fea0  ; OopMap{rbp=Oop [72]=Oop off=1124}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x00000000036ace04: mov    0x48(%rsp),%rbx
  0x00000000036ace09: jmpq   0x00000000036acbb7
  0x00000000036ace0e: mov    %r13,%rdi
  0x00000000036ace11: xor    %rax,%rax
  0x00000000036ace14: shl    $0x3,%rcx
  0x00000000036ace18: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000036ace1b: jmpq   0x00000000036acbb7
  0x00000000036ace20: mov    $0xfffffff6,%edx
  0x00000000036ace25: xchg   %ax,%ax
  0x00000000036ace27: callq  0x00000000035d57a0  ; OopMap{rbp=Oop off=1164}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x00000000036ace2c: int3   
  0x00000000036ace2d: jmp    0x00000000036ace2f  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000036ace2f: mov    %rax,%rbx
  0x00000000036ace32: jmp    0x00000000036ace37  ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000036ace34: mov    %rax,%rbx          ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000036ace37: mov    $0x7,%r10d
  0x00000000036ace3d: and    0x0(%rbp),%r10
  0x00000000036ace41: cmp    $0x5,%r10
  0x00000000036ace45: jne    0x00000000036ace57
  0x00000000036ace47: mov    %rbx,%rdx
  0x00000000036ace4a: add    $0x80,%rsp
  0x00000000036ace51: pop    %rbp
  0x00000000036ace52: jmpq   0x000000000369e960  ;   {runtime_call}
  0x00000000036ace57: lea    0x70(%rsp),%rax
  0x00000000036ace5c: cmpq   $0x0,(%rax)
  0x00000000036ace63: je     0x00000000036acedf
  0x00000000036ace69: mov    0x0(%rbp),%r10
  0x00000000036ace6d: test   $0x2,%r10
  0x00000000036ace74: je     0x00000000036aced6
  0x00000000036ace76: mov    0x16(%r10),%rax
  0x00000000036ace7a: xor    %r15,%rax
  0x00000000036ace7d: or     0x26(%r10),%rax
  0x00000000036ace81: jne    0x00000000036acedf
  0x00000000036ace83: mov    0x36(%r10),%rax
  0x00000000036ace87: or     0x3e(%r10),%rax
  0x00000000036ace8b: jne    0x00000000036ace97
  0x00000000036ace8d: movq   $0x0,0x16(%r10)
  0x00000000036ace95: jmp    0x00000000036acedf
  0x00000000036ace97: cmpq   $0x0,0x46(%r10)
  0x00000000036ace9f: je     0x00000000036aceca
  0x00000000036acea1: movq   $0x0,0x16(%r10)
  0x00000000036acea9: lock addl $0x0,(%rsp)
  0x00000000036aceae: cmpq   $0x0,0x46(%r10)
  0x00000000036aceb6: jne    0x00000000036acecf
  0x00000000036aceb8: movabs $0x0,%rax
  0x00000000036acec2: lock cmpxchg %r15,0x16(%r10)
  0x00000000036acec8: jne    0x00000000036acecf
  0x00000000036aceca: or     $0x1,%eax
  0x00000000036acecd: jmp    0x00000000036acedf
  0x00000000036acecf: test   $0x0,%eax
  0x00000000036aced4: jmp    0x00000000036acedf
  0x00000000036aced6: mov    (%rax),%r10
  0x00000000036aced9: lock cmpxchg %r10,0x0(%rbp)
  0x00000000036acedf: je     0x00000000036ace47
  0x00000000036acee5: mov    %rbp,%rcx
  0x00000000036acee8: lea    0x70(%rsp),%rdx    ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)

  0x00000000036aceed: movabs $0x54fdce00,%r10
  0x00000000036acef7: callq  *%r10
  0x00000000036acefa: jmpq   0x00000000036ace47
  0x00000000036aceff: hlt    
[Stub Code]
  0x00000000036acf00: movabs $0x0,%rbx          ;   {no_reloc}
  0x00000000036acf0a: jmpq   0x00000000036acf0a  ;   {runtime_call}
[Exception Handler]
  0x00000000036acf0f: jmpq   0x000000000368dc20  ;   {runtime_call}
[Deopt Handler Code]
  0x00000000036acf14: callq  0x00000000036acf19
  0x00000000036acf19: subq   $0x5,(%rsp)
  0x00000000036acf1e: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036acf23: hlt    
  0x00000000036acf24: hlt    
  0x00000000036acf25: hlt    
  0x00000000036acf26: hlt    
  0x00000000036acf27: hlt    
<nmethod compile_id='26' compiler='C2' level='4' entry='0x00000000036ac9a0' size='2984' address='0x00000000036ac850' relocation_offset='288' insts_offset='336' stub_offset='1712' scopes_data_offset='1808' scopes_pcs_offset='2152' dependencies_offset='2888' handler_table_offset='2896' nul_chk_table_offset='2968' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='77282' iicount='77282' stamp='0.966'/>
<writer thread='8376'/>
<task_queued compile_id='42' method='java/lang/Boolean booleanValue ()Z' bytes='5' count='128' iicount='128' level='1' stamp='0.966' comment='tiered' hot_count='128'/>
<task_queued compile_id='43' method='com/springboot/cloud/auth/authentication/temptest/VisiBiltyDemo access$000 (Lcom/springboot/cloud/auth/authentication/temptest/VisiBiltyDemo;)Ljava/lang/Boolean;' bytes='5' count='128' iicount='128' level='1' stamp='0.966' comment='tiered' hot_count='128'/>
<writer thread='16772'/>
<task_queued compile_id='44' compile_kind='osr' method='java/lang/String lastIndexOf (II)I' bytes='52' count='629' backedge_count='67584' iicount='629' osr_bci='21' stamp='0.968' comment='tiered' hot_count='67584'/>
<writer thread='7332'/>
Decoding compiled method 0x00000000036a4f50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c4c7d10} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;
  # this:     rdx:rdx   = &apos;java/util/Hashtable&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  #           [sp+0x70]  (sp of caller)
  0x00000000036a50e0: mov    0x8(%rdx),%r10d
  0x00000000036a50e4: shl    $0x3,%r10
  0x00000000036a50e8: cmp    %rax,%r10
  0x00000000036a50eb: jne    0x00000000035d5f60  ;   {runtime_call}
  0x00000000036a50f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000036a50fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000036a5100: mov    %eax,-0x6000(%rsp)
  0x00000000036a5107: push   %rbp
  0x00000000036a5108: sub    $0x60,%rsp
  0x00000000036a510c: mov    %r8,0x28(%rsp)
  0x00000000036a5111: lea    0x40(%rsp),%rsi
  0x00000000036a5116: mov    %rdx,0x8(%rsi)
  0x00000000036a511a: mov    (%rdx),%rax
  0x00000000036a511d: mov    %rax,%rdi
  0x00000000036a5120: and    $0x7,%rdi
  0x00000000036a5124: cmp    $0x5,%rdi
  0x00000000036a5128: jne    0x00000000036a51af
  0x00000000036a512e: mov    0x8(%rdx),%edi
  0x00000000036a5131: shl    $0x3,%rdi
  0x00000000036a5135: mov    0xa8(%rdi),%rdi
  0x00000000036a513c: or     %r15,%rdi
  0x00000000036a513f: xor    %rax,%rdi
  0x00000000036a5142: and    $0xffffffffffffff87,%rdi
  0x00000000036a5146: je     0x00000000036a51d7
  0x00000000036a514c: test   $0x7,%rdi
  0x00000000036a5153: jne    0x00000000036a519c
  0x00000000036a5155: test   $0x300,%rdi
  0x00000000036a515c: jne    0x00000000036a517b
  0x00000000036a515e: and    $0x37f,%rax
  0x00000000036a5165: mov    %rax,%rdi
  0x00000000036a5168: or     %r15,%rdi
  0x00000000036a516b: lock cmpxchg %rdi,(%rdx)
  0x00000000036a5170: jne    0x00000000036a555d
  0x00000000036a5176: jmpq   0x00000000036a51d7
  0x00000000036a517b: mov    0x8(%rdx),%edi
  0x00000000036a517e: shl    $0x3,%rdi
  0x00000000036a5182: mov    0xa8(%rdi),%rdi
  0x00000000036a5189: or     %r15,%rdi
  0x00000000036a518c: lock cmpxchg %rdi,(%rdx)
  0x00000000036a5191: jne    0x00000000036a555d
  0x00000000036a5197: jmpq   0x00000000036a51d7
  0x00000000036a519c: mov    0x8(%rdx),%edi
  0x00000000036a519f: shl    $0x3,%rdi
  0x00000000036a51a3: mov    0xa8(%rdi),%rdi
  0x00000000036a51aa: lock cmpxchg %rdi,(%rdx)
  0x00000000036a51af: mov    (%rdx),%rax
  0x00000000036a51b2: or     $0x1,%rax
  0x00000000036a51b6: mov    %rax,(%rsi)
  0x00000000036a51b9: lock cmpxchg %rsi,(%rdx)
  0x00000000036a51be: je     0x00000000036a51d7
  0x00000000036a51c4: sub    %rsp,%rax
  0x00000000036a51c7: and    $0xfffffffffffff007,%rax
  0x00000000036a51ce: mov    %rax,(%rsi)
  0x00000000036a51d1: jne    0x00000000036a555d
  0x00000000036a51d7: movabs $0x1c79da28,%rsi   ;   {metadata(method data for {method} {0x000000001c4c7d10} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x00000000036a51e1: mov    0xdc(%rsi),%edi
  0x00000000036a51e7: add    $0x8,%edi
  0x00000000036a51ea: mov    %edi,0xdc(%rsi)
  0x00000000036a51f0: movabs $0x1c4c7d08,%rsi   ;   {metadata({method} {0x000000001c4c7d10} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x00000000036a51fa: and    $0x1ff8,%edi
  0x00000000036a5200: cmp    $0x0,%edi
  0x00000000036a5203: je     0x00000000036a5570  ;*aload_0
                                                ; - java.util.Hashtable::get@0 (line 363)

  0x00000000036a5209: mov    0x1c(%rdx),%esi
  0x00000000036a520c: shl    $0x3,%rsi          ;*getfield table
                                                ; - java.util.Hashtable::get@1 (line 363)

  0x00000000036a5210: cmp    (%r8),%rax         ; implicit exception: dispatches to 0x00000000036a5587
  0x00000000036a5213: mov    %r8,%rdx
  0x00000000036a5216: movabs $0x1c79da28,%rdi   ;   {metadata(method data for {method} {0x000000001c4c7d10} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x00000000036a5220: mov    0x8(%rdx),%edx
  0x00000000036a5223: shl    $0x3,%rdx
  0x00000000036a5227: cmp    0x110(%rdi),%rdx
  0x00000000036a522e: jne    0x00000000036a523d
  0x00000000036a5230: addq   $0x1,0x118(%rdi)
  0x00000000036a5238: jmpq   0x00000000036a52a3
  0x00000000036a523d: cmp    0x120(%rdi),%rdx
  0x00000000036a5244: jne    0x00000000036a5253
  0x00000000036a5246: addq   $0x1,0x128(%rdi)
  0x00000000036a524e: jmpq   0x00000000036a52a3
  0x00000000036a5253: cmpq   $0x0,0x110(%rdi)
  0x00000000036a525e: jne    0x00000000036a5277
  0x00000000036a5260: mov    %rdx,0x110(%rdi)
  0x00000000036a5267: movq   $0x1,0x118(%rdi)
  0x00000000036a5272: jmpq   0x00000000036a52a3
  0x00000000036a5277: cmpq   $0x0,0x120(%rdi)
  0x00000000036a5282: jne    0x00000000036a529b
  0x00000000036a5284: mov    %rdx,0x120(%rdi)
  0x00000000036a528b: movq   $0x1,0x128(%rdi)
  0x00000000036a5296: jmpq   0x00000000036a52a3
  0x00000000036a529b: addq   $0x1,0x108(%rdi)
  0x00000000036a52a3: mov    %r8,%rdx           ;*invokevirtual hashCode
                                                ; - java.util.Hashtable::get@6 (line 364)

  0x00000000036a52a6: mov    %rsi,0x20(%rsp)
  0x00000000036a52ab: nop
  0x00000000036a52ac: nop
  0x00000000036a52ad: movabs $0xffffffffffffffff,%rax
  0x00000000036a52b7: callq  0x00000000035d63e0  ; OopMap{[40]=Oop [32]=Oop [72]=Oop off=476}
                                                ;*invokevirtual hashCode
                                                ; - java.util.Hashtable::get@6 (line 364)
                                                ;   {virtual_call}
  0x00000000036a52bc: mov    %eax,0x38(%rsp)
  0x00000000036a52c0: mov    0x20(%rsp),%rsi
  0x00000000036a52c5: mov    0xc(%rsi),%r8d     ;*arraylength
                                                ; - java.util.Hashtable::get@15 (line 365)
                                                ; implicit exception: dispatches to 0x00000000036a558c
  0x00000000036a52c9: mov    %rax,%rdx
  0x00000000036a52cc: and    $0x7fffffff,%edx
  0x00000000036a52d2: mov    %rax,%rdi
  0x00000000036a52d5: mov    %rdx,%rax
  0x00000000036a52d8: cmp    $0x80000000,%eax
  0x00000000036a52de: jne    0x00000000036a52f0
  0x00000000036a52e4: xor    %edx,%edx
  0x00000000036a52e6: cmp    $0xffffffff,%r8d
  0x00000000036a52ea: je     0x00000000036a52f4
  0x00000000036a52f0: cltd   
  0x00000000036a52f1: idiv   %r8d               ;*irem
                                                ; - java.util.Hashtable::get@16 (line 365)
                                                ; implicit exception: dispatches to 0x00000000036a5591
  0x00000000036a52f4: movslq %edx,%rdx
  0x00000000036a52f7: mov    0x10(%rsi,%rdx,4),%r8d
  0x00000000036a52fc: shl    $0x3,%r8           ;*aaload
                                                ; - java.util.Hashtable::get@22 (line 366)

  0x00000000036a5300: mov    0x28(%rsp),%rsi
  0x00000000036a5305: cmp    $0x0,%r8
  0x00000000036a5309: movabs $0x1c79da28,%rdx   ;   {metadata(method data for {method} {0x000000001c4c7d10} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x00000000036a5313: movabs $0x138,%rbx
  0x00000000036a531d: je     0x00000000036a532d
  0x00000000036a5323: movabs $0x148,%rbx
  0x00000000036a532d: mov    (%rdx,%rbx,1),%rax
  0x00000000036a5331: lea    0x1(%rax),%rax
  0x00000000036a5335: mov    %rax,(%rdx,%rbx,1)
  0x00000000036a5339: je     0x00000000036a5516  ;*ifnull
                                                ; - java.util.Hashtable::get@27 (line 366)

  0x00000000036a533f: mov    0xc(%r8),%edx      ;*getfield hash
                                                ; - java.util.Hashtable::get@32 (line 367)
                                                ; implicit exception: dispatches to 0x00000000036a5596
  0x00000000036a5343: cmp    %edi,%edx
  0x00000000036a5345: movabs $0x1c79da28,%rdx   ;   {metadata(method data for {method} {0x000000001c4c7d10} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x00000000036a534f: movabs $0x158,%rbx
  0x00000000036a5359: jne    0x00000000036a5369
  0x00000000036a535f: movabs $0x168,%rbx
  0x00000000036a5369: mov    (%rdx,%rbx,1),%rax
  0x00000000036a536d: lea    0x1(%rax),%rax
  0x00000000036a5371: mov    %rax,(%rdx,%rbx,1)
  0x00000000036a5375: jne    0x00000000036a5472  ;*if_icmpne
                                                ; - java.util.Hashtable::get@36 (line 367)

  0x00000000036a537b: mov    0x10(%r8),%edx
  0x00000000036a537f: shl    $0x3,%rdx          ;*getfield key
                                                ; - java.util.Hashtable::get@41 (line 367)

  0x00000000036a5383: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x00000000036a559b
  0x00000000036a5386: mov    %rdx,%rdi
  0x00000000036a5389: movabs $0x1c79da28,%rbx   ;   {metadata(method data for {method} {0x000000001c4c7d10} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x00000000036a5393: mov    0x8(%rdi),%edi
  0x00000000036a5396: shl    $0x3,%rdi
  0x00000000036a539a: cmp    0x180(%rbx),%rdi
  0x00000000036a53a1: jne    0x00000000036a53b0
  0x00000000036a53a3: addq   $0x1,0x188(%rbx)
  0x00000000036a53ab: jmpq   0x00000000036a5416
  0x00000000036a53b0: cmp    0x190(%rbx),%rdi
  0x00000000036a53b7: jne    0x00000000036a53c6
  0x00000000036a53b9: addq   $0x1,0x198(%rbx)
  0x00000000036a53c1: jmpq   0x00000000036a5416
  0x00000000036a53c6: cmpq   $0x0,0x180(%rbx)
  0x00000000036a53d1: jne    0x00000000036a53ea
  0x00000000036a53d3: mov    %rdi,0x180(%rbx)
  0x00000000036a53da: movq   $0x1,0x188(%rbx)
  0x00000000036a53e5: jmpq   0x00000000036a5416
  0x00000000036a53ea: cmpq   $0x0,0x190(%rbx)
  0x00000000036a53f5: jne    0x00000000036a540e
  0x00000000036a53f7: mov    %rdi,0x190(%rbx)
  0x00000000036a53fe: movq   $0x1,0x198(%rbx)
  0x00000000036a5409: jmpq   0x00000000036a5416
  0x00000000036a540e: addq   $0x1,0x178(%rbx)
  0x00000000036a5416: mov    %r8,0x30(%rsp)
  0x00000000036a541b: mov    %rsi,%r8           ;*invokevirtual equals
                                                ; - java.util.Hashtable::get@45 (line 367)

  0x00000000036a541e: nop
  0x00000000036a541f: nop
  0x00000000036a5420: nop
  0x00000000036a5421: nop
  0x00000000036a5422: nop
  0x00000000036a5423: nop
  0x00000000036a5424: nop
  0x00000000036a5425: movabs $0xffffffffffffffff,%rax
  0x00000000036a542f: callq  0x00000000035d63e0  ; OopMap{[40]=Oop [48]=Oop [72]=Oop off=852}
                                                ;*invokevirtual equals
                                                ; - java.util.Hashtable::get@45 (line 367)
                                                ;   {virtual_call}
  0x00000000036a5434: cmp    $0x0,%eax
  0x00000000036a5437: movabs $0x1c79da28,%rax   ;   {metadata(method data for {method} {0x000000001c4c7d10} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x00000000036a5441: movabs $0x1a8,%rsi
  0x00000000036a544b: je     0x00000000036a545b
  0x00000000036a5451: movabs $0x1b8,%rsi
  0x00000000036a545b: mov    (%rax,%rsi,1),%rdi
  0x00000000036a545f: lea    0x1(%rdi),%rdi
  0x00000000036a5463: mov    %rdi,(%rax,%rsi,1)
  0x00000000036a5467: mov    0x30(%rsp),%r8
  0x00000000036a546c: jne    0x00000000036a54ce  ;*ifeq
                                                ; - java.util.Hashtable::get@48 (line 367)

  0x00000000036a5472: mov    0x18(%r8),%eax
  0x00000000036a5476: shl    $0x3,%rax          ;*getfield next
                                                ; - java.util.Hashtable::get@59 (line 366)

  0x00000000036a547a: movabs $0x1c79da28,%rsi   ;   {metadata(method data for {method} {0x000000001c4c7d10} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x00000000036a5484: mov    0xe0(%rsi),%edi
  0x00000000036a548a: add    $0x8,%edi
  0x00000000036a548d: mov    %edi,0xe0(%rsi)
  0x00000000036a5493: movabs $0x1c4c7d08,%rsi   ;   {metadata({method} {0x000000001c4c7d10} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x00000000036a549d: and    $0xfff8,%edi
  0x00000000036a54a3: cmp    $0x0,%edi
  0x00000000036a54a6: je     0x00000000036a55a0  ; OopMap{[40]=Oop rax=Oop [72]=Oop off=972}
                                                ;*goto
                                                ; - java.util.Hashtable::get@64 (line 366)

  0x00000000036a54ac: test   %eax,-0x20b53b2(%rip)        # 0x00000000015f0100
                                                ;   {poll}
  0x00000000036a54b2: movabs $0x1c79da28,%rsi   ;   {metadata(method data for {method} {0x000000001c4c7d10} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x00000000036a54bc: incl   0x1c8(%rsi)
  0x00000000036a54c2: mov    %rax,%r8
  0x00000000036a54c5: mov    0x38(%rsp),%edi
  0x00000000036a54c9: jmpq   0x00000000036a5300  ;*goto
                                                ; - java.util.Hashtable::get@64 (line 366)

  0x00000000036a54ce: mov    0x14(%r8),%esi
  0x00000000036a54d2: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.util.Hashtable::get@53 (line 368)

  0x00000000036a54d6: lea    0x40(%rsp),%rax
  0x00000000036a54db: mov    0x8(%rax),%rbx
  0x00000000036a54df: mov    (%rbx),%rdi
  0x00000000036a54e2: and    $0x7,%rdi
  0x00000000036a54e6: cmp    $0x5,%rdi
  0x00000000036a54ea: je     0x00000000036a5507
  0x00000000036a54f0: mov    (%rax),%rdi
  0x00000000036a54f3: test   %rdi,%rdi
  0x00000000036a54f6: je     0x00000000036a5507
  0x00000000036a54fc: lock cmpxchg %rdi,(%rbx)
  0x00000000036a5501: jne    0x00000000036a55b7
  0x00000000036a5507: mov    %rsi,%rax
  0x00000000036a550a: add    $0x60,%rsp
  0x00000000036a550e: pop    %rbp
  0x00000000036a550f: test   %eax,-0x20b5415(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036a5515: retq                      ;*areturn
                                                ; - java.util.Hashtable::get@56 (line 368)

  0x00000000036a5516: lea    0x40(%rsp),%rax
  0x00000000036a551b: mov    0x8(%rax),%rdi
  0x00000000036a551f: mov    (%rdi),%rsi
  0x00000000036a5522: and    $0x7,%rsi
  0x00000000036a5526: cmp    $0x5,%rsi
  0x00000000036a552a: je     0x00000000036a5547
  0x00000000036a5530: mov    (%rax),%rsi
  0x00000000036a5533: test   %rsi,%rsi
  0x00000000036a5536: je     0x00000000036a5547
  0x00000000036a553c: lock cmpxchg %rsi,(%rdi)
  0x00000000036a5541: jne    0x00000000036a55ca  ;*areturn
                                                ; - java.util.Hashtable::get@68 (line 371)

  0x00000000036a5547: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00000000036a5551: add    $0x60,%rsp
  0x00000000036a5555: pop    %rbp
  0x00000000036a5556: test   %eax,-0x20b545c(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036a555c: retq   
  0x00000000036a555d: mov    %rdx,0x8(%rsp)
  0x00000000036a5562: mov    %rsi,(%rsp)
  0x00000000036a5566: callq  0x000000000368fce0  ; OopMap{rdx=Oop r8=Oop [40]=Oop [72]=Oop off=1163}
                                                ;*synchronization entry
                                                ; - java.util.Hashtable::get@-1 (line 363)
                                                ;   {runtime_call}
  0x00000000036a556b: jmpq   0x00000000036a51d7
  0x00000000036a5570: mov    %rsi,0x8(%rsp)
  0x00000000036a5575: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036a557d: callq  0x00000000036919e0  ; OopMap{rdx=Oop r8=Oop [40]=Oop [72]=Oop off=1186}
                                                ;*synchronization entry
                                                ; - java.util.Hashtable::get@-1 (line 363)
                                                ;   {runtime_call}
  0x00000000036a5582: jmpq   0x00000000036a5209
  0x00000000036a5587: callq  0x000000000368d080  ; OopMap{r8=Oop [40]=Oop rsi=Oop [72]=Oop off=1196}
                                                ;*invokevirtual hashCode
                                                ; - java.util.Hashtable::get@6 (line 364)
                                                ;   {runtime_call}
  0x00000000036a558c: callq  0x000000000368d080  ; OopMap{[40]=Oop rsi=Oop [72]=Oop off=1201}
                                                ;*arraylength
                                                ; - java.util.Hashtable::get@15 (line 365)
                                                ;   {runtime_call}
  0x00000000036a5591: callq  0x000000000368ce40  ; OopMap{[40]=Oop rsi=Oop [72]=Oop off=1206}
                                                ;*irem
                                                ; - java.util.Hashtable::get@16 (line 365)
                                                ;   {runtime_call}
  0x00000000036a5596: callq  0x000000000368d080  ; OopMap{r8=Oop rsi=Oop [40]=Oop [72]=Oop off=1211}
                                                ;*getfield hash
                                                ; - java.util.Hashtable::get@32 (line 367)
                                                ;   {runtime_call}
  0x00000000036a559b: callq  0x000000000368d080  ; OopMap{r8=Oop rsi=Oop [40]=Oop rdx=Oop [72]=Oop off=1216}
                                                ;*invokevirtual equals
                                                ; - java.util.Hashtable::get@45 (line 367)
                                                ;   {runtime_call}
  0x00000000036a55a0: mov    %rsi,0x8(%rsp)
  0x00000000036a55a5: movq   $0x40,(%rsp)
  0x00000000036a55ad: callq  0x00000000036919e0  ; OopMap{[40]=Oop rax=Oop [72]=Oop off=1234}
                                                ;*goto
                                                ; - java.util.Hashtable::get@64 (line 366)
                                                ;   {runtime_call}
  0x00000000036a55b2: jmpq   0x00000000036a54ac
  0x00000000036a55b7: lea    0x40(%rsp),%rax
  0x00000000036a55bc: mov    %rax,(%rsp)
  0x00000000036a55c0: callq  0x00000000036900e0  ;   {runtime_call}
  0x00000000036a55c5: jmpq   0x00000000036a5507
  0x00000000036a55ca: lea    0x40(%rsp),%rax
  0x00000000036a55cf: mov    %rax,(%rsp)
  0x00000000036a55d3: callq  0x00000000036900e0  ;   {runtime_call}
  0x00000000036a55d8: jmpq   0x00000000036a5547
  0x00000000036a55dd: nop
  0x00000000036a55de: nop
  0x00000000036a55df: mov    0x2a8(%r15),%rax
  0x00000000036a55e6: movabs $0x0,%r10
  0x00000000036a55f0: mov    %r10,0x2a8(%r15)
  0x00000000036a55f7: movabs $0x0,%r10
  0x00000000036a5601: mov    %r10,0x2b0(%r15)
  0x00000000036a5608: mov    %rax,%rbx
  0x00000000036a560b: lea    0x40(%rsp),%rax
  0x00000000036a5610: mov    0x8(%rax),%rsi
  0x00000000036a5614: mov    (%rsi),%rdi
  0x00000000036a5617: and    $0x7,%rdi
  0x00000000036a561b: cmp    $0x5,%rdi
  0x00000000036a561f: je     0x00000000036a563c
  0x00000000036a5625: mov    (%rax),%rdi
  0x00000000036a5628: test   %rdi,%rdi
  0x00000000036a562b: je     0x00000000036a563c
  0x00000000036a5631: lock cmpxchg %rdi,(%rsi)
  0x00000000036a5636: jne    0x00000000036a5649
  0x00000000036a563c: mov    %rbx,%rax
  0x00000000036a563f: add    $0x60,%rsp
  0x00000000036a5643: pop    %rbp
  0x00000000036a5644: jmpq   0x000000000368c620  ;   {runtime_call}
  0x00000000036a5649: lea    0x40(%rsp),%rax
  0x00000000036a564e: mov    %rax,(%rsp)
  0x00000000036a5652: callq  0x00000000036900e0  ;   {runtime_call}
  0x00000000036a5657: jmp    0x00000000036a563c
  0x00000000036a5659: hlt    
  0x00000000036a565a: hlt    
  0x00000000036a565b: hlt    
  0x00000000036a565c: hlt    
  0x00000000036a565d: hlt    
  0x00000000036a565e: hlt    
  0x00000000036a565f: hlt    
[Stub Code]
  0x00000000036a5660: nop                       ;   {no_reloc}
  0x00000000036a5661: nop
  0x00000000036a5662: nop
  0x00000000036a5663: nop
  0x00000000036a5664: nop
  0x00000000036a5665: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036a566f: jmpq   0x00000000036a566f  ;   {runtime_call}
  0x00000000036a5674: nop
  0x00000000036a5675: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036a567f: jmpq   0x00000000036a567f  ;   {runtime_call}
[Exception Handler]
  0x00000000036a5684: callq  0x000000000368f1a0  ;   {runtime_call}
  0x00000000036a5689: mov    %rsp,-0x28(%rsp)
  0x00000000036a568e: sub    $0x80,%rsp
  0x00000000036a5695: mov    %rax,0x78(%rsp)
  0x00000000036a569a: mov    %rcx,0x70(%rsp)
  0x00000000036a569f: mov    %rdx,0x68(%rsp)
  0x00000000036a56a4: mov    %rbx,0x60(%rsp)
  0x00000000036a56a9: mov    %rbp,0x50(%rsp)
  0x00000000036a56ae: mov    %rsi,0x48(%rsp)
  0x00000000036a56b3: mov    %rdi,0x40(%rsp)
  0x00000000036a56b8: mov    %r8,0x38(%rsp)
  0x00000000036a56bd: mov    %r9,0x30(%rsp)
  0x00000000036a56c2: mov    %r10,0x28(%rsp)
  0x00000000036a56c7: mov    %r11,0x20(%rsp)
  0x00000000036a56cc: mov    %r12,0x18(%rsp)
  0x00000000036a56d1: mov    %r13,0x10(%rsp)
  0x00000000036a56d6: mov    %r14,0x8(%rsp)
  0x00000000036a56db: mov    %r15,(%rsp)
  0x00000000036a56df: movabs $0x553ec320,%rcx   ;   {external_word}
  0x00000000036a56e9: movabs $0x36a5689,%rdx    ;   {internal_word}
  0x00000000036a56f3: mov    %rsp,%r8
  0x00000000036a56f6: and    $0xfffffffffffffff0,%rsp
  0x00000000036a56fa: callq  0x00000000550a41d0  ;   {runtime_call}
  0x00000000036a56ff: hlt    
[Deopt Handler Code]
  0x00000000036a5700: movabs $0x36a5700,%r10    ;   {section_word}
  0x00000000036a570a: push   %r10
  0x00000000036a570c: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036a5711: hlt    
  0x00000000036a5712: hlt    
  0x00000000036a5713: hlt    
  0x00000000036a5714: hlt    
  0x00000000036a5715: hlt    
  0x00000000036a5716: hlt    
  0x00000000036a5717: hlt    
<nmethod compile_id='38' compiler='C1' level='3' entry='0x00000000036a50e0' size='2784' address='0x00000000036a4f50' relocation_offset='288' insts_offset='400' stub_offset='1808' scopes_data_offset='2000' scopes_pcs_offset='2248' dependencies_offset='2728' nul_chk_table_offset='2736' method='java/util/Hashtable get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='69' count='385' backedge_count='54' iicount='385' stamp='0.989'/>
<writer thread='8376'/>
<task_queued compile_id='45' compile_kind='osr' method='com/springboot/cloud/auth/authentication/temptest/VisiBiltyDemo$1 run ()V' bytes='29' count='1' backedge_count='133120' iicount='1' osr_bci='2' level='3' stamp='0.989' comment='tiered' hot_count='133120'/>
<writer thread='7332'/>
Decoding compiled method 0x00000000036a81d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c525868} &apos;booleanValue&apos; &apos;()Z&apos; in &apos;java/lang/Boolean&apos;
  #           [sp+0x40]  (sp of caller)
  0x00000000036a8320: mov    0x8(%rdx),%r10d
  0x00000000036a8324: shl    $0x3,%r10
  0x00000000036a8328: cmp    %rax,%r10
  0x00000000036a832b: jne    0x00000000035d5f60  ;   {runtime_call}
  0x00000000036a8331: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000036a833c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000036a8340: mov    %eax,-0x6000(%rsp)
  0x00000000036a8347: push   %rbp
  0x00000000036a8348: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.Boolean::booleanValue@0 (line 132)

  0x00000000036a834c: movsbl 0xc(%rdx),%eax     ;*getfield value
                                                ; - java.lang.Boolean::booleanValue@1 (line 132)

  0x00000000036a8350: and    $0x1,%eax
  0x00000000036a8353: add    $0x30,%rsp
  0x00000000036a8357: pop    %rbp
  0x00000000036a8358: test   %eax,-0x20b825e(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036a835e: retq   
  0x00000000036a835f: nop
  0x00000000036a8360: nop
  0x00000000036a8361: mov    0x2a8(%r15),%rax
  0x00000000036a8368: movabs $0x0,%r10
  0x00000000036a8372: mov    %r10,0x2a8(%r15)
  0x00000000036a8379: movabs $0x0,%r10
  0x00000000036a8383: mov    %r10,0x2b0(%r15)
  0x00000000036a838a: add    $0x30,%rsp
  0x00000000036a838e: pop    %rbp
  0x00000000036a838f: jmpq   0x000000000368c620  ;   {runtime_call}
  0x00000000036a8394: hlt    
  0x00000000036a8395: hlt    
  0x00000000036a8396: hlt    
  0x00000000036a8397: hlt    
  0x00000000036a8398: hlt    
  0x00000000036a8399: hlt    
  0x00000000036a839a: hlt    
  0x00000000036a839b: hlt    
  0x00000000036a839c: hlt    
  0x00000000036a839d: hlt    
  0x00000000036a839e: hlt    
  0x00000000036a839f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000036a83a0: callq  0x000000000368f1a0  ;   {no_reloc}
  0x00000000036a83a5: mov    %rsp,-0x28(%rsp)
  0x00000000036a83aa: sub    $0x80,%rsp
  0x00000000036a83b1: mov    %rax,0x78(%rsp)
  0x00000000036a83b6: mov    %rcx,0x70(%rsp)
  0x00000000036a83bb: mov    %rdx,0x68(%rsp)
  0x00000000036a83c0: mov    %rbx,0x60(%rsp)
  0x00000000036a83c5: mov    %rbp,0x50(%rsp)
  0x00000000036a83ca: mov    %rsi,0x48(%rsp)
  0x00000000036a83cf: mov    %rdi,0x40(%rsp)
  0x00000000036a83d4: mov    %r8,0x38(%rsp)
  0x00000000036a83d9: mov    %r9,0x30(%rsp)
  0x00000000036a83de: mov    %r10,0x28(%rsp)
  0x00000000036a83e3: mov    %r11,0x20(%rsp)
  0x00000000036a83e8: mov    %r12,0x18(%rsp)
  0x00000000036a83ed: mov    %r13,0x10(%rsp)
  0x00000000036a83f2: mov    %r14,0x8(%rsp)
  0x00000000036a83f7: mov    %r15,(%rsp)
  0x00000000036a83fb: movabs $0x553ec320,%rcx   ;   {external_word}
  0x00000000036a8405: movabs $0x36a83a5,%rdx    ;   {internal_word}
  0x00000000036a840f: mov    %rsp,%r8
  0x00000000036a8412: and    $0xfffffffffffffff0,%rsp
  0x00000000036a8416: callq  0x00000000550a41d0  ;   {runtime_call}
  0x00000000036a841b: hlt    
[Deopt Handler Code]
  0x00000000036a841c: movabs $0x36a841c,%r10    ;   {section_word}
  0x00000000036a8426: push   %r10
  0x00000000036a8428: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036a842d: hlt    
  0x00000000036a842e: hlt    
  0x00000000036a842f: hlt    
<nmethod compile_id='42' compiler='C1' level='1' entry='0x00000000036a8320' size='704' address='0x00000000036a81d0' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/lang/Boolean booleanValue ()Z' bytes='5' count='154178' iicount='154191' stamp='0.993'/>
Decoding compiled method 0x00000000036a46d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c8933a0} &apos;run&apos; &apos;()V&apos; in &apos;com/springboot/cloud/auth/authentication/temptest/VisiBiltyDemo$1&apos;
  0x00000000036a4860: mov    0x8(%rdx),%r10d
  0x00000000036a4864: shl    $0x3,%r10
  0x00000000036a4868: cmp    %rax,%r10
  0x00000000036a486b: jne    0x00000000035d5f60  ;   {runtime_call}
  0x00000000036a4871: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000036a487c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000036a4880: mov    %eax,-0x6000(%rsp)
  0x00000000036a4887: push   %rbp
  0x00000000036a4888: sub    $0x60,%rsp
  0x00000000036a488c: movabs $0x1c893550,%rcx   ;   {metadata(method data for {method} {0x000000001c8933a0} &apos;run&apos; &apos;()V&apos; in &apos;com/springboot/cloud/auth/authentication/temptest/VisiBiltyDemo$1&apos;)}
  0x00000000036a4896: mov    0xdc(%rcx),%esi
  0x00000000036a489c: add    $0x8,%esi
  0x00000000036a489f: mov    %esi,0xdc(%rcx)
  0x00000000036a48a5: movabs $0x1c893398,%rcx   ;   {metadata({method} {0x000000001c8933a0} &apos;run&apos; &apos;()V&apos; in &apos;com/springboot/cloud/auth/authentication/temptest/VisiBiltyDemo$1&apos;)}
  0x00000000036a48af: and    $0x1ff8,%esi
  0x00000000036a48b5: cmp    $0x0,%esi
  0x00000000036a48b8: je     0x00000000036a4b17  ;*iconst_0
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@0 (line 21)

  0x00000000036a48be: mov    $0x0,%esi
  0x00000000036a48c3: jmpq   0x00000000036a4915  ;*aload_0
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@2 (line 23)

  0x00000000036a48c8: inc    %esi
  0x00000000036a48ca: movabs $0x1c893550,%r8    ;   {metadata(method data for {method} {0x000000001c8933a0} &apos;run&apos; &apos;()V&apos; in &apos;com/springboot/cloud/auth/authentication/temptest/VisiBiltyDemo$1&apos;)}
  0x00000000036a48d4: mov    0xe0(%r8),%edi
  0x00000000036a48db: add    $0x8,%edi
  0x00000000036a48de: mov    %edi,0xe0(%r8)
  0x00000000036a48e5: movabs $0x1c893398,%r8    ;   {metadata({method} {0x000000001c8933a0} &apos;run&apos; &apos;()V&apos; in &apos;com/springboot/cloud/auth/authentication/temptest/VisiBiltyDemo$1&apos;)}
  0x00000000036a48ef: and    $0xfff8,%edi
  0x00000000036a48f5: cmp    $0x0,%edi
  0x00000000036a48f8: je     0x00000000036a4b2e  ; OopMap{rdx=Oop off=158}
                                                ;*goto
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@18 (line 24)

  0x00000000036a48fe: test   %eax,-0x20b4804(%rip)        # 0x00000000015f0100
                                                ;   {poll}
  0x00000000036a4904: movabs $0x1c893550,%r8    ;   {metadata(method data for {method} {0x000000001c8933a0} &apos;run&apos; &apos;()V&apos; in &apos;com/springboot/cloud/auth/authentication/temptest/VisiBiltyDemo$1&apos;)}
  0x00000000036a490e: incl   0x168(%r8)         ;*goto
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@18 (line 24)

  0x00000000036a4915: mov    0xc(%rdx),%r8d     ; implicit exception: dispatches to 0x00000000036a4b45
  0x00000000036a4919: shl    $0x3,%r8           ;*getfield val$demo
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@3 (line 23)

  0x00000000036a491d: movabs $0x1c893550,%rdi   ;   {metadata(method data for {method} {0x000000001c8933a0} &apos;run&apos; &apos;()V&apos; in &apos;com/springboot/cloud/auth/authentication/temptest/VisiBiltyDemo$1&apos;)}
  0x00000000036a4927: addq   $0x1,0x108(%rdi)
  0x00000000036a492f: mov    0xc(%r8),%r8d      ; implicit exception: dispatches to 0x00000000036a4b4a
  0x00000000036a4933: shl    $0x3,%r8           ;*getfield flag
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo::access$000@1 (line 13)
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@6 (line 23)

  0x00000000036a4937: cmp    (%r8),%rax         ;*invokevirtual booleanValue
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@9 (line 23)
                                                ; implicit exception: dispatches to 0x00000000036a4b4f
  0x00000000036a493a: mov    %r8,%rdi
  0x00000000036a493d: movabs $0x1c893550,%rbx   ;   {metadata(method data for {method} {0x000000001c8933a0} &apos;run&apos; &apos;()V&apos; in &apos;com/springboot/cloud/auth/authentication/temptest/VisiBiltyDemo$1&apos;)}
  0x00000000036a4947: mov    0x8(%rdi),%edi
  0x00000000036a494a: shl    $0x3,%rdi
  0x00000000036a494e: cmp    0x120(%rbx),%rdi
  0x00000000036a4955: jne    0x00000000036a4964
  0x00000000036a4957: addq   $0x1,0x128(%rbx)
  0x00000000036a495f: jmpq   0x00000000036a49ca
  0x00000000036a4964: cmp    0x130(%rbx),%rdi
  0x00000000036a496b: jne    0x00000000036a497a
  0x00000000036a496d: addq   $0x1,0x138(%rbx)
  0x00000000036a4975: jmpq   0x00000000036a49ca
  0x00000000036a497a: cmpq   $0x0,0x120(%rbx)
  0x00000000036a4985: jne    0x00000000036a499e
  0x00000000036a4987: mov    %rdi,0x120(%rbx)
  0x00000000036a498e: movq   $0x1,0x128(%rbx)
  0x00000000036a4999: jmpq   0x00000000036a49ca
  0x00000000036a499e: cmpq   $0x0,0x130(%rbx)
  0x00000000036a49a9: jne    0x00000000036a49c2
  0x00000000036a49ab: mov    %rdi,0x130(%rbx)
  0x00000000036a49b2: movq   $0x1,0x138(%rbx)
  0x00000000036a49bd: jmpq   0x00000000036a49ca
  0x00000000036a49c2: addq   $0x1,0x118(%rbx)
  0x00000000036a49ca: movsbl 0xc(%r8),%r8d      ;*getfield value
                                                ; - java.lang.Boolean::booleanValue@1 (line 132)
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@9 (line 23)

  0x00000000036a49cf: and    $0x1,%r8d
  0x00000000036a49d3: cmp    $0x0,%r8d
  0x00000000036a49d7: movabs $0x1c893550,%r8    ;   {metadata(method data for {method} {0x000000001c8933a0} &apos;run&apos; &apos;()V&apos; in &apos;com/springboot/cloud/auth/authentication/temptest/VisiBiltyDemo$1&apos;)}
  0x00000000036a49e1: movabs $0x148,%rdi
  0x00000000036a49eb: je     0x00000000036a49fb
  0x00000000036a49f1: movabs $0x158,%rdi
  0x00000000036a49fb: mov    (%r8,%rdi,1),%rbx
  0x00000000036a49ff: lea    0x1(%rbx),%rbx
  0x00000000036a4a03: mov    %rbx,(%r8,%rdi,1)
  0x00000000036a4a07: jne    0x00000000036a48c8  ;*ifeq
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@12 (line 23)

  0x00000000036a4a0d: data16 xchg %ax,%ax
  0x00000000036a4a10: jmpq   0x00000000036a4bb1  ;   {no_reloc}
  0x00000000036a4a15: add    %al,(%rax)
  0x00000000036a4a17: add    %al,(%rax)
  0x00000000036a4a19: add    %ah,0xf(%rsi)
  0x00000000036a4a1c: (bad)  
  0x00000000036a4a1d: add    %r8b,(%rax)
  0x00000000036a4a20: jmpq   0x00000000036a4bcc  ; implicit exception: dispatches to 0x00000000036a4bbb
  0x00000000036a4a25: nop
  0x00000000036a4a26: nop
  0x00000000036a4a27: shl    $0x3,%rdx          ;*getstatic out
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@21 (line 27)

  0x00000000036a4a2b: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x00000000036a4bd6
  0x00000000036a4a2e: mov    %rdx,%r8
  0x00000000036a4a31: movabs $0x1c893550,%rdi   ;   {metadata(method data for {method} {0x000000001c8933a0} &apos;run&apos; &apos;()V&apos; in &apos;com/springboot/cloud/auth/authentication/temptest/VisiBiltyDemo$1&apos;)}
  0x00000000036a4a3b: mov    0x8(%r8),%r8d
  0x00000000036a4a3f: shl    $0x3,%r8
  0x00000000036a4a43: cmp    0x188(%rdi),%r8
  0x00000000036a4a4a: jne    0x00000000036a4a59
  0x00000000036a4a4c: addq   $0x1,0x190(%rdi)
  0x00000000036a4a54: jmpq   0x00000000036a4abf
  0x00000000036a4a59: cmp    0x198(%rdi),%r8
  0x00000000036a4a60: jne    0x00000000036a4a6f
  0x00000000036a4a62: addq   $0x1,0x1a0(%rdi)
  0x00000000036a4a6a: jmpq   0x00000000036a4abf
  0x00000000036a4a6f: cmpq   $0x0,0x188(%rdi)
  0x00000000036a4a7a: jne    0x00000000036a4a93
  0x00000000036a4a7c: mov    %r8,0x188(%rdi)
  0x00000000036a4a83: movq   $0x1,0x190(%rdi)
  0x00000000036a4a8e: jmpq   0x00000000036a4abf
  0x00000000036a4a93: cmpq   $0x0,0x198(%rdi)
  0x00000000036a4a9e: jne    0x00000000036a4ab7
  0x00000000036a4aa0: mov    %r8,0x198(%rdi)
  0x00000000036a4aa7: movq   $0x1,0x1a0(%rdi)
  0x00000000036a4ab2: jmpq   0x00000000036a4abf
  0x00000000036a4ab7: addq   $0x1,0x180(%rdi)
  0x00000000036a4abf: mov    %rsi,%r8           ;*invokevirtual println
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@25 (line 27)

  0x00000000036a4ac2: nop
  0x00000000036a4ac3: nop
  0x00000000036a4ac4: nop
  0x00000000036a4ac5: movabs $0xffffffffffffffff,%rax
  0x00000000036a4acf: callq  0x00000000035d63e0  ; OopMap{off=628}
                                                ;*invokevirtual println
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@25 (line 27)
                                                ;   {virtual_call}
  0x00000000036a4ad4: add    $0x60,%rsp
  0x00000000036a4ad8: pop    %rbp
  0x00000000036a4ad9: test   %eax,-0x20b49df(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036a4adf: retq                      ;*return
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@28 (line 28)

  0x00000000036a4ae0: mov    %eax,-0x6000(%rsp)
  0x00000000036a4ae7: push   %rbp
  0x00000000036a4ae8: sub    $0x60,%rsp
  0x00000000036a4aec: mov    0x8(%rdx),%rsi
  0x00000000036a4af0: mov    (%rdx),%edi
  0x00000000036a4af2: mov    %rdx,%rcx
  0x00000000036a4af5: mov    %rsi,0x48(%rsp)
  0x00000000036a4afa: mov    %edi,0x40(%rsp)
  0x00000000036a4afe: callq  0x0000000054fdc6c0  ;   {runtime_call}
  0x00000000036a4b03: mov    0x40(%rsp),%edi
  0x00000000036a4b07: mov    %rdi,%rsi
  0x00000000036a4b0a: mov    0x48(%rsp),%r8
  0x00000000036a4b0f: mov    %r8,%rdx
  0x00000000036a4b12: jmpq   0x00000000036a4915
  0x00000000036a4b17: mov    %rcx,0x8(%rsp)
  0x00000000036a4b1c: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036a4b24: callq  0x00000000036919e0  ; OopMap{rdx=Oop off=713}
                                                ;*synchronization entry
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@-1 (line 21)
                                                ;   {runtime_call}
  0x00000000036a4b29: jmpq   0x00000000036a48be
  0x00000000036a4b2e: mov    %r8,0x8(%rsp)
  0x00000000036a4b33: movq   $0x12,(%rsp)
  0x00000000036a4b3b: callq  0x00000000036919e0  ; OopMap{rdx=Oop off=736}
                                                ;*goto
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@18 (line 24)
                                                ;   {runtime_call}
  0x00000000036a4b40: jmpq   0x00000000036a48fe
  0x00000000036a4b45: callq  0x000000000368d080  ; OopMap{rdx=Oop off=746}
                                                ;*getfield val$demo
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@3 (line 23)
                                                ;   {runtime_call}
  0x00000000036a4b4a: callq  0x000000000368d080  ; OopMap{rdx=Oop off=751}
                                                ;*getfield flag
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo::access$000@1 (line 13)
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@6 (line 23)
                                                ;   {runtime_call}
  0x00000000036a4b4f: callq  0x000000000368d080  ; OopMap{rdx=Oop r8=Oop off=756}
                                                ;*invokevirtual booleanValue
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@9 (line 23)
                                                ;   {runtime_call}
  0x00000000036a4b54: movabs $0x0,%r8           ;   {oop(NULL)}
  0x00000000036a4b5e: push   %rax
  0x00000000036a4b5f: push   %rbx
  0x00000000036a4b60: mov    0x48(%r8),%rbx
  0x00000000036a4b64: push   %rdi
  0x00000000036a4b65: push   %rsi
  0x00000000036a4b66: push   %rdx
  0x00000000036a4b67: push   %rcx
  0x00000000036a4b68: push   %r8
  0x00000000036a4b6a: push   %r9
  0x00000000036a4b6c: push   %r10
  0x00000000036a4b6e: mov    %rsp,%r10
  0x00000000036a4b71: and    $0xfffffffffffffff0,%rsp
  0x00000000036a4b75: push   %r10
  0x00000000036a4b77: push   %r11
  0x00000000036a4b79: mov    $0x7,%ecx
  0x00000000036a4b7e: movabs $0x7ffe205b5e40,%r10  ;   {runtime_call}
  0x00000000036a4b88: callq  *%r10
  0x00000000036a4b8b: pop    %r11
  0x00000000036a4b8d: pop    %rsp
  0x00000000036a4b8e: pop    %r10
  0x00000000036a4b90: pop    %r9
  0x00000000036a4b92: pop    %r8
  0x00000000036a4b94: pop    %rcx
  0x00000000036a4b95: pop    %rdx
  0x00000000036a4b96: pop    %rsi
  0x00000000036a4b97: pop    %rdi
  0x00000000036a4b98: cmp    0x118(%rbx),%rax
  0x00000000036a4b9f: pop    %rbx
  0x00000000036a4ba0: pop    %rax
  0x00000000036a4ba1: jne    0x00000000036a4bb1
  0x00000000036a4ba7: jmpq   0x00000000036a4a1a
  0x00000000036a4bac: mov    $0xa535d00,%eax
  0x00000000036a4bb1: callq  0x0000000003690d60  ; OopMap{off=854}
                                                ;*getstatic out
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@21 (line 27)
                                                ;   {runtime_call}
  0x00000000036a4bb6: jmpq   0x00000000036a4a10
  0x00000000036a4bbb: callq  0x000000000368d080  ; OopMap{r8=Oop off=864}
                                                ;*getstatic out
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@21 (line 27)
                                                ;   {runtime_call}
  0x00000000036a4bc0: mov    0x0(%r8),%edx
  0x00000000036a4bc7: mov    $0x7050c00,%eax
  0x00000000036a4bcc: callq  0x00000000036904e0  ; OopMap{r8=Oop off=881}
                                                ;*getstatic out
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@21 (line 27)
                                                ;   {runtime_call}
  0x00000000036a4bd1: jmpq   0x00000000036a4a20
  0x00000000036a4bd6: callq  0x000000000368d080  ; OopMap{rdx=Oop off=891}
                                                ;*invokevirtual println
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@25 (line 27)
                                                ;   {runtime_call}
  0x00000000036a4bdb: nop
  0x00000000036a4bdc: nop
  0x00000000036a4bdd: mov    0x2a8(%r15),%rax
  0x00000000036a4be4: movabs $0x0,%r10
  0x00000000036a4bee: mov    %r10,0x2a8(%r15)
  0x00000000036a4bf5: movabs $0x0,%r10
  0x00000000036a4bff: mov    %r10,0x2b0(%r15)
  0x00000000036a4c06: add    $0x60,%rsp
  0x00000000036a4c0a: pop    %rbp
  0x00000000036a4c0b: jmpq   0x000000000368c620  ;   {runtime_call}
  0x00000000036a4c10: hlt    
  0x00000000036a4c11: hlt    
  0x00000000036a4c12: hlt    
  0x00000000036a4c13: hlt    
  0x00000000036a4c14: hlt    
  0x00000000036a4c15: hlt    
  0x00000000036a4c16: hlt    
  0x00000000036a4c17: hlt    
  0x00000000036a4c18: hlt    
  0x00000000036a4c19: hlt    
  0x00000000036a4c1a: hlt    
  0x00000000036a4c1b: hlt    
  0x00000000036a4c1c: hlt    
  0x00000000036a4c1d: hlt    
  0x00000000036a4c1e: hlt    
  0x00000000036a4c1f: hlt    
[Stub Code]
  0x00000000036a4c20: nop                       ;   {no_reloc}
  0x00000000036a4c21: nop
  0x00000000036a4c22: nop
  0x00000000036a4c23: nop
  0x00000000036a4c24: nop
  0x00000000036a4c25: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036a4c2f: jmpq   0x00000000036a4c2f  ;   {runtime_call}
[Exception Handler]
  0x00000000036a4c34: callq  0x000000000368f1a0  ;   {runtime_call}
  0x00000000036a4c39: mov    %rsp,-0x28(%rsp)
  0x00000000036a4c3e: sub    $0x80,%rsp
  0x00000000036a4c45: mov    %rax,0x78(%rsp)
  0x00000000036a4c4a: mov    %rcx,0x70(%rsp)
  0x00000000036a4c4f: mov    %rdx,0x68(%rsp)
  0x00000000036a4c54: mov    %rbx,0x60(%rsp)
  0x00000000036a4c59: mov    %rbp,0x50(%rsp)
  0x00000000036a4c5e: mov    %rsi,0x48(%rsp)
  0x00000000036a4c63: mov    %rdi,0x40(%rsp)
  0x00000000036a4c68: mov    %r8,0x38(%rsp)
  0x00000000036a4c6d: mov    %r9,0x30(%rsp)
  0x00000000036a4c72: mov    %r10,0x28(%rsp)
  0x00000000036a4c77: mov    %r11,0x20(%rsp)
  0x00000000036a4c7c: mov    %r12,0x18(%rsp)
  0x00000000036a4c81: mov    %r13,0x10(%rsp)
  0x00000000036a4c86: mov    %r14,0x8(%rsp)
  0x00000000036a4c8b: mov    %r15,(%rsp)
  0x00000000036a4c8f: movabs $0x553ec320,%rcx   ;   {external_word}
  0x00000000036a4c99: movabs $0x36a4c39,%rdx    ;   {internal_word}
  0x00000000036a4ca3: mov    %rsp,%r8
  0x00000000036a4ca6: and    $0xfffffffffffffff0,%rsp
  0x00000000036a4caa: callq  0x00000000550a41d0  ;   {runtime_call}
  0x00000000036a4caf: hlt    
[Deopt Handler Code]
  0x00000000036a4cb0: movabs $0x36a4cb0,%r10    ;   {section_word}
  0x00000000036a4cba: push   %r10
  0x00000000036a4cbc: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036a4cc1: hlt    
  0x00000000036a4cc2: hlt    
  0x00000000036a4cc3: hlt    
  0x00000000036a4cc4: hlt    
  0x00000000036a4cc5: hlt    
  0x00000000036a4cc6: hlt    
  0x00000000036a4cc7: hlt    
<nmethod compile_id='45' compile_kind='osr' compiler='C1' level='3' entry='0x00000000036a4860' size='2152' address='0x00000000036a46d0' relocation_offset='288' insts_offset='400' stub_offset='1360' scopes_data_offset='1560' scopes_pcs_offset='1712' dependencies_offset='2096' nul_chk_table_offset='2104' oops_offset='1528' method='com/springboot/cloud/auth/authentication/temptest/VisiBiltyDemo$1 run ()V' bytes='29' count='1' backedge_count='272982' iicount='1' stamp='1.009'/>
<writer thread='8376'/>
<task_queued compile_id='46' method='com/springboot/cloud/auth/authentication/temptest/VisiBiltyDemo$1 run ()V' bytes='29' count='1' backedge_count='273408' iicount='1' level='3' stamp='1.009' comment='tiered' hot_count='1'/>
<writer thread='16772'/>
Decoding compiled method 0x00000000036a7e50:
Code:
[Entry Point]
  # {method} {0x000000001c490648} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x70]  (sp of caller)
  0x00000000036a7fc0: mov    0x8(%rdx),%r10d
  0x00000000036a7fc4: shl    $0x3,%r10
  0x00000000036a7fc8: cmp    %r10,%rax
  0x00000000036a7fcb: je     0x00000000036a7fd8
  0x00000000036a7fd1: jmpq   0x00000000035d5f60  ;   {runtime_call}
  0x00000000036a7fd6: xchg   %ax,%ax
[Verified Entry Point]
  0x00000000036a7fd8: mov    %eax,-0x6000(%rsp)
  0x00000000036a7fdf: push   %rbp
  0x00000000036a7fe0: mov    %rsp,%rbp
  0x00000000036a7fe3: sub    $0x60,%rsp
  0x00000000036a7fe7: mov    %rdx,0x20(%rsp)
  0x00000000036a7fec: cmp    $0x0,%rdx
  0x00000000036a7ff0: lea    0x20(%rsp),%rdx
  0x00000000036a7ff5: cmove  0x20(%rsp),%rdx    ; OopMap{[32]=Oop off=59}
  0x00000000036a7ffb: movabs $0x36a7ffb,%r10    ;   {section_word}
  0x00000000036a8005: mov    %r10,0x1e0(%r15)
  0x00000000036a800c: mov    %rsp,0x1d8(%r15)
  0x00000000036a8013: cmpb   $0x0,0x51f198d8(%rip)        # 0x00000000555c18f2
                                                ;   {external_word}
  0x00000000036a801a: je     0x00000000036a805a
  0x00000000036a8020: push   %rdx
  0x00000000036a8021: movabs $0x1c490640,%rdx   ;   {metadata({method} {0x000000001c490648} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/Object&apos;)}
  0x00000000036a802b: mov    %r15,%rcx
  0x00000000036a802e: sub    $0x20,%rsp
  0x00000000036a8032: test   $0xf,%esp
  0x00000000036a8038: je     0x00000000036a8050
  0x00000000036a803e: sub    $0x8,%rsp
  0x00000000036a8042: callq  0x0000000054fdcdc0  ;   {runtime_call}
  0x00000000036a8047: add    $0x8,%rsp
  0x00000000036a804b: jmpq   0x00000000036a8055
  0x00000000036a8050: callq  0x0000000054fdcdc0  ;   {runtime_call}
  0x00000000036a8055: add    $0x20,%rsp
  0x00000000036a8059: pop    %rdx
  0x00000000036a805a: lea    0x1f8(%r15),%rcx
  0x00000000036a8061: movl   $0x4,0x270(%r15)
  0x00000000036a806c: callq  0x0000000056940d5c  ;   {runtime_call}
  0x00000000036a8071: vzeroupper 
  0x00000000036a8074: movl   $0x5,0x270(%r15)
  0x00000000036a807f: mov    %r15d,%ecx
  0x00000000036a8082: shr    $0x4,%ecx
  0x00000000036a8085: and    $0xffc,%ecx
  0x00000000036a808b: movabs $0x1600000,%r10    ;   {external_word}
  0x00000000036a8095: mov    %ecx,(%r10,%rcx,1)
  0x00000000036a8099: cmpl   $0x0,0x51f1a42d(%rip)        # 0x00000000555c24d0
                                                ;   {external_word}
  0x00000000036a80a3: jne    0x00000000036a80b7
  0x00000000036a80a9: cmpl   $0x0,0x30(%r15)
  0x00000000036a80b1: je     0x00000000036a80d8
  0x00000000036a80b7: mov    %rax,-0x8(%rbp)
  0x00000000036a80bb: mov    %r15,%rcx
  0x00000000036a80be: mov    %rsp,%r12
  0x00000000036a80c1: sub    $0x20,%rsp
  0x00000000036a80c5: and    $0xfffffffffffffff0,%rsp
  0x00000000036a80c9: callq  0x0000000054ff4100  ;   {runtime_call}
  0x00000000036a80ce: mov    %r12,%rsp
  0x00000000036a80d1: xor    %r12,%r12
  0x00000000036a80d4: mov    -0x8(%rbp),%rax
  0x00000000036a80d8: movl   $0x8,0x270(%r15)
  0x00000000036a80e3: cmpl   $0x1,0x29c(%r15)
  0x00000000036a80ee: je     0x00000000036a8186
  0x00000000036a80f4: cmpb   $0x0,0x51f197f7(%rip)        # 0x00000000555c18f2
                                                ;   {external_word}
  0x00000000036a80fb: je     0x00000000036a8141
  0x00000000036a8101: mov    %rax,-0x8(%rbp)
  0x00000000036a8105: movabs $0x1c490640,%rdx   ;   {metadata({method} {0x000000001c490648} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/Object&apos;)}
  0x00000000036a810f: mov    %r15,%rcx
  0x00000000036a8112: sub    $0x20,%rsp
  0x00000000036a8116: test   $0xf,%esp
  0x00000000036a811c: je     0x00000000036a8134
  0x00000000036a8122: sub    $0x8,%rsp
  0x00000000036a8126: callq  0x0000000054fdcdc0  ;   {runtime_call}
  0x00000000036a812b: add    $0x8,%rsp
  0x00000000036a812f: jmpq   0x00000000036a8139
  0x00000000036a8134: callq  0x0000000054fdcdc0  ;   {runtime_call}
  0x00000000036a8139: add    $0x20,%rsp
  0x00000000036a813d: mov    -0x8(%rbp),%rax
  0x00000000036a8141: movabs $0x0,%r10
  0x00000000036a814b: mov    %r10,0x1d8(%r15)
  0x00000000036a8152: movabs $0x0,%r10
  0x00000000036a815c: mov    %r10,0x1e0(%r15)
  0x00000000036a8163: mov    0x38(%r15),%rcx
  0x00000000036a8167: movl   $0x0,0x100(%rcx)
  0x00000000036a8171: leaveq 
  0x00000000036a8172: cmpq   $0x0,0x8(%r15)
  0x00000000036a817a: jne    0x00000000036a8181
  0x00000000036a8180: retq   
  0x00000000036a8181: jmpq   Stub::forward exception  ;   {runtime_call}
  0x00000000036a8186: mov    %rax,-0x8(%rbp)
  0x00000000036a818a: mov    %rsp,%r12
  0x00000000036a818d: sub    $0x20,%rsp
  0x00000000036a8191: and    $0xfffffffffffffff0,%rsp
  0x00000000036a8195: callq  0x0000000054fdcde0  ;   {runtime_call}
  0x00000000036a819a: mov    %r12,%rsp
  0x00000000036a819d: xor    %r12,%r12
  0x00000000036a81a0: mov    -0x8(%rbp),%rax
  0x00000000036a81a4: jmpq   0x00000000036a80f4
  0x00000000036a81a9: hlt    
  0x00000000036a81aa: hlt    
  0x00000000036a81ab: hlt    
  0x00000000036a81ac: hlt    
  0x00000000036a81ad: hlt    
  0x00000000036a81ae: hlt    
  0x00000000036a81af: hlt    
<nmethod compile_id='47' compile_kind='c2n' level='0' entry='0x00000000036a7fc0' size='864' address='0x00000000036a7e50' relocation_offset='288' consts_offset='864' insts_offset='368' method='java/lang/Object hashCode ()I' bytes='0' count='768' iicount='768' stamp='1.013'/>
<writer thread='10060'/>
Decoding compiled method 0x00000000036ac1d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001c495390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  0x00000000036ac320: int3   
  0x00000000036ac321: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000036ac32c: data16 data16 xchg %ax,%ax
  0x00000000036ac330: mov    %eax,-0x6000(%rsp)
  0x00000000036ac337: push   %rbp
  0x00000000036ac338: sub    $0x50,%rsp
  0x00000000036ac33c: mov    (%rdx),%r14d
  0x00000000036ac33f: mov    0x8(%rdx),%rbx
  0x00000000036ac343: mov    0x18(%rdx),%r13d
  0x00000000036ac347: mov    %rdx,%rcx
  0x00000000036ac34a: movabs $0x54fdc6c0,%r10
  0x00000000036ac354: callq  *%r10
  0x00000000036ac357: test   %rbx,%rbx
  0x00000000036ac35a: je     0x00000000036ac4af
  0x00000000036ac360: mov    0x8(%rbx),%r11d
  0x00000000036ac364: cmp    $0xf8000041,%r11d  ;   {metadata({type array char})}
  0x00000000036ac36b: jne    0x00000000036ac4e5  ;*iload
                                                ; - java.lang.String::lastIndexOf@21 (line 1654)

  0x00000000036ac371: mov    %rbx,%r10
  0x00000000036ac374: add    $0xc,%r10          ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x00000000036ac378: mov    $0xffffffff,%r8d
  0x00000000036ac37e: test   %r14d,%r14d
  0x00000000036ac381: jl     0x00000000036ac471  ;*iflt
                                                ; - java.lang.String::lastIndexOf@23 (line 1654)

  0x00000000036ac387: mov    %r14d,%r9d
  0x00000000036ac38a: dec    %r9d
  0x00000000036ac38d: test   %rbx,%rbx
  0x00000000036ac390: je     0x00000000036ac4bc
  0x00000000036ac396: mov    (%r10),%edx
  0x00000000036ac399: cmp    %edx,%r14d
  0x00000000036ac39c: jae    0x00000000036ac4cd  ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x00000000036ac3a2: movzwl 0x10(%rbx,%r14,2),%ecx
  0x00000000036ac3a8: cmp    %r13d,%ecx
  0x00000000036ac3ab: je     0x00000000036ac477  ;*if_icmpne
                                                ; - java.lang.String::lastIndexOf@31 (line 1655)

  0x00000000036ac3b1: mov    %edx,%ecx
  0x00000000036ac3b3: dec    %ecx
  0x00000000036ac3b5: cmp    %ecx,%r9d
  0x00000000036ac3b8: mov    %r9d,%r11d
  0x00000000036ac3bb: cmovg  %ecx,%r11d
  0x00000000036ac3bf: cmp    %r8d,%r11d
  0x00000000036ac3c2: cmovl  %r8d,%r11d
  0x00000000036ac3c6: dec    %r14d              ;*iinc
                                                ; - java.lang.String::lastIndexOf@37 (line 1654)

  0x00000000036ac3c9: cmp    %r11d,%r14d
  0x00000000036ac3cc: jg     0x00000000036ac38d  ;*iflt
                                                ; - java.lang.String::lastIndexOf@23 (line 1654)

  0x00000000036ac3ce: cmp    $0x6,%r14d
  0x00000000036ac3d2: jle    0x00000000036ac44e
  0x00000000036ac3d4: nopl   0x0(%rax,%rax,1)
  0x00000000036ac3dc: data16 data16 xchg %ax,%ax
  0x00000000036ac3e0: movzwl 0x10(%rbx,%r14,2),%r11d  ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x00000000036ac3e6: cmp    %r13d,%r11d
  0x00000000036ac3e9: je     0x00000000036ac477  ;*if_icmpne
                                                ; - java.lang.String::lastIndexOf@31 (line 1655)

  0x00000000036ac3ef: movzwl 0xe(%rbx,%r14,2),%r10d  ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x00000000036ac3f5: cmp    %r13d,%r10d
  0x00000000036ac3f8: je     0x00000000036ac486  ;*if_icmpne
                                                ; - java.lang.String::lastIndexOf@31 (line 1655)

  0x00000000036ac3fe: movzwl 0xc(%rbx,%r14,2),%r10d  ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x00000000036ac404: cmp    %r13d,%r10d
  0x00000000036ac407: je     0x00000000036ac48b  ;*if_icmpne
                                                ; - java.lang.String::lastIndexOf@31 (line 1655)

  0x00000000036ac40d: movzwl 0xa(%rbx,%r14,2),%r10d  ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x00000000036ac413: cmp    %r13d,%r10d
  0x00000000036ac416: je     0x00000000036ac491  ;*if_icmpne
                                                ; - java.lang.String::lastIndexOf@31 (line 1655)

  0x00000000036ac418: movzwl 0x8(%rbx,%r14,2),%r10d  ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x00000000036ac41e: cmp    %r13d,%r10d
  0x00000000036ac421: je     0x00000000036ac497  ;*if_icmpne
                                                ; - java.lang.String::lastIndexOf@31 (line 1655)

  0x00000000036ac423: movzwl 0x6(%rbx,%r14,2),%r10d  ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x00000000036ac429: cmp    %r13d,%r10d
  0x00000000036ac42c: je     0x00000000036ac49d  ;*if_icmpne
                                                ; - java.lang.String::lastIndexOf@31 (line 1655)

  0x00000000036ac42e: movzwl 0x4(%rbx,%r14,2),%r10d  ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x00000000036ac434: cmp    %r13d,%r10d
  0x00000000036ac437: je     0x00000000036ac4a3  ;*if_icmpne
                                                ; - java.lang.String::lastIndexOf@31 (line 1655)

  0x00000000036ac439: movzwl 0x2(%rbx,%r14,2),%r10d  ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x00000000036ac43f: cmp    %r13d,%r10d
  0x00000000036ac442: je     0x00000000036ac4a9  ;*if_icmpne
                                                ; - java.lang.String::lastIndexOf@31 (line 1655)

  0x00000000036ac444: add    $0xfffffff8,%r14d  ;*iinc
                                                ; - java.lang.String::lastIndexOf@37 (line 1654)

  0x00000000036ac448: cmp    $0x6,%r14d
  0x00000000036ac44c: jg     0x00000000036ac3e0  ;*iflt
                                                ; - java.lang.String::lastIndexOf@23 (line 1654)

  0x00000000036ac44e: cmp    $0xffffffff,%r14d
  0x00000000036ac452: jle    0x00000000036ac471
  0x00000000036ac454: cmp    %edx,%r14d
  0x00000000036ac457: jae    0x00000000036ac4fd  ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x00000000036ac45d: movzwl 0x10(%rbx,%r14,2),%r11d
  0x00000000036ac463: cmp    %r13d,%r11d
  0x00000000036ac466: je     0x00000000036ac477  ;*if_icmpne
                                                ; - java.lang.String::lastIndexOf@31 (line 1655)

  0x00000000036ac468: dec    %r14d              ;*iinc
                                                ; - java.lang.String::lastIndexOf@37 (line 1654)

  0x00000000036ac46b: cmp    $0xffffffff,%r14d
  0x00000000036ac46f: jg     0x00000000036ac454  ;*iflt
                                                ; - java.lang.String::lastIndexOf@23 (line 1654)

  0x00000000036ac471: mov    $0xffffffff,%r14d  ;*iload
                                                ; - java.lang.String::lastIndexOf@21 (line 1654)

  0x00000000036ac477: mov    %r14d,%eax
  0x00000000036ac47a: add    $0x50,%rsp
  0x00000000036ac47e: pop    %rbp
  0x00000000036ac47f: test   %eax,-0x20bc485(%rip)        # 0x00000000015f0000
                                                ;   {poll_return}
  0x00000000036ac485: retq   
  0x00000000036ac486: dec    %r14d
  0x00000000036ac489: jmp    0x00000000036ac477
  0x00000000036ac48b: add    $0xfffffffe,%r14d
  0x00000000036ac48f: jmp    0x00000000036ac477
  0x00000000036ac491: add    $0xfffffffd,%r14d
  0x00000000036ac495: jmp    0x00000000036ac477
  0x00000000036ac497: add    $0xfffffffc,%r14d
  0x00000000036ac49b: jmp    0x00000000036ac477
  0x00000000036ac49d: add    $0xfffffffb,%r14d
  0x00000000036ac4a1: jmp    0x00000000036ac477
  0x00000000036ac4a3: add    $0xfffffffa,%r14d
  0x00000000036ac4a7: jmp    0x00000000036ac477
  0x00000000036ac4a9: add    $0xfffffff9,%r14d  ;*iinc
                                                ; - java.lang.String::lastIndexOf@37 (line 1654)

  0x00000000036ac4ad: jmp    0x00000000036ac477
  0x00000000036ac4af: mov    $0xc,%r10d
  0x00000000036ac4b5: xor    %ebx,%ebx
  0x00000000036ac4b7: jmpq   0x00000000036ac378
  0x00000000036ac4bc: mov    $0xfffffff6,%edx
  0x00000000036ac4c1: mov    %r14d,%ebp
  0x00000000036ac4c4: data16 xchg %ax,%ax
  0x00000000036ac4c7: callq  0x00000000035d57a0  ; OopMap{off=428}
                                                ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)
                                                ;   {runtime_call}
  0x00000000036ac4cc: int3   
  0x00000000036ac4cd: mov    %r14d,%ebp
  0x00000000036ac4d0: mov    $0xffffffe4,%edx
  0x00000000036ac4d5: mov    %r13d,0x20(%rsp)
  0x00000000036ac4da: mov    %rbx,0x30(%rsp)
  0x00000000036ac4df: callq  0x00000000035d57a0  ; OopMap{[48]=Oop off=452}
                                                ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)
                                                ;   {runtime_call}
  0x00000000036ac4e4: int3   
  0x00000000036ac4e5: mov    $0xffffff9d,%edx
  0x00000000036ac4ea: mov    %r13d,%ebp
  0x00000000036ac4ed: mov    %rbx,0x20(%rsp)
  0x00000000036ac4f2: mov    %r14d,0x28(%rsp)
  0x00000000036ac4f7: callq  0x00000000035d57a0  ; OopMap{[32]=Oop off=476}
                                                ;*iload
                                                ; - java.lang.String::lastIndexOf@21 (line 1654)
                                                ;   {runtime_call}
  0x00000000036ac4fc: int3                      ;*iload
                                                ; - java.lang.String::lastIndexOf@21 (line 1654)

  0x00000000036ac4fd: mov    %r14d,%ebp
  0x00000000036ac500: jmp    0x00000000036ac4d0
  0x00000000036ac502: hlt    
  0x00000000036ac503: hlt    
  0x00000000036ac504: hlt    
  0x00000000036ac505: hlt    
  0x00000000036ac506: hlt    
  0x00000000036ac507: hlt    
  0x00000000036ac508: hlt    
  0x00000000036ac509: hlt    
  0x00000000036ac50a: hlt    
  0x00000000036ac50b: hlt    
  0x00000000036ac50c: hlt    
  0x00000000036ac50d: hlt    
  0x00000000036ac50e: hlt    
  0x00000000036ac50f: hlt    
  0x00000000036ac510: hlt    
  0x00000000036ac511: hlt    
  0x00000000036ac512: hlt    
  0x00000000036ac513: hlt    
  0x00000000036ac514: hlt    
  0x00000000036ac515: hlt    
  0x00000000036ac516: hlt    
  0x00000000036ac517: hlt    
  0x00000000036ac518: hlt    
  0x00000000036ac519: hlt    
  0x00000000036ac51a: hlt    
  0x00000000036ac51b: hlt    
  0x00000000036ac51c: hlt    
  0x00000000036ac51d: hlt    
  0x00000000036ac51e: hlt    
  0x00000000036ac51f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000036ac520: jmpq   0x000000000368dc20  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000036ac525: callq  0x00000000036ac52a
  0x00000000036ac52a: subq   $0x5,(%rsp)
  0x00000000036ac52f: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036ac534: hlt    
  0x00000000036ac535: hlt    
  0x00000000036ac536: hlt    
  0x00000000036ac537: hlt    
<nmethod compile_id='44' compile_kind='osr' compiler='C2' level='4' entry='0x00000000036ac320' size='1592' address='0x00000000036ac1d0' relocation_offset='288' insts_offset='336' stub_offset='848' scopes_data_offset='888' scopes_pcs_offset='992' dependencies_offset='1584' method='java/lang/String lastIndexOf (II)I' bytes='52' count='629' backedge_count='67588' iicount='629' stamp='1.023'/>
<writer thread='7332'/>
Decoding compiled method 0x00000000036b1690:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c8933a0} &apos;run&apos; &apos;()V&apos; in &apos;com/springboot/cloud/auth/authentication/temptest/VisiBiltyDemo$1&apos;
  #           [sp+0x40]  (sp of caller)
  0x00000000036b1820: mov    0x8(%rdx),%r10d
  0x00000000036b1824: shl    $0x3,%r10
  0x00000000036b1828: cmp    %rax,%r10
  0x00000000036b182b: jne    0x00000000035d5f60  ;   {runtime_call}
  0x00000000036b1831: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000036b183c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000036b1840: mov    %eax,-0x6000(%rsp)
  0x00000000036b1847: push   %rbp
  0x00000000036b1848: sub    $0x30,%rsp
  0x00000000036b184c: movabs $0x1c893550,%r8    ;   {metadata(method data for {method} {0x000000001c8933a0} &apos;run&apos; &apos;()V&apos; in &apos;com/springboot/cloud/auth/authentication/temptest/VisiBiltyDemo$1&apos;)}
  0x00000000036b1856: mov    0xdc(%r8),%esi
  0x00000000036b185d: add    $0x8,%esi
  0x00000000036b1860: mov    %esi,0xdc(%r8)
  0x00000000036b1867: movabs $0x1c893398,%r8    ;   {metadata({method} {0x000000001c8933a0} &apos;run&apos; &apos;()V&apos; in &apos;com/springboot/cloud/auth/authentication/temptest/VisiBiltyDemo$1&apos;)}
  0x00000000036b1871: and    $0x1ff8,%esi
  0x00000000036b1877: cmp    $0x0,%esi
  0x00000000036b187a: je     0x00000000036b1a98  ;*iconst_0
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@0 (line 21)

  0x00000000036b1880: mov    $0x0,%r8d
  0x00000000036b1886: jmpq   0x00000000036b18db  ;*aload_0
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@2 (line 23)

  0x00000000036b188b: nopl   0x0(%rax,%rax,1)
  0x00000000036b1890: inc    %r8d
  0x00000000036b1893: movabs $0x1c893550,%rsi   ;   {metadata(method data for {method} {0x000000001c8933a0} &apos;run&apos; &apos;()V&apos; in &apos;com/springboot/cloud/auth/authentication/temptest/VisiBiltyDemo$1&apos;)}
  0x00000000036b189d: mov    0xe0(%rsi),%edi
  0x00000000036b18a3: add    $0x8,%edi
  0x00000000036b18a6: mov    %edi,0xe0(%rsi)
  0x00000000036b18ac: movabs $0x1c893398,%rsi   ;   {metadata({method} {0x000000001c8933a0} &apos;run&apos; &apos;()V&apos; in &apos;com/springboot/cloud/auth/authentication/temptest/VisiBiltyDemo$1&apos;)}
  0x00000000036b18b6: and    $0xfff8,%edi
  0x00000000036b18bc: cmp    $0x0,%edi
  0x00000000036b18bf: je     0x00000000036b1aaf  ; OopMap{rdx=Oop off=165}
                                                ;*goto
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@18 (line 24)

  0x00000000036b18c5: test   %eax,-0x20c17cb(%rip)        # 0x00000000015f0100
                                                ;   {poll}
  0x00000000036b18cb: movabs $0x1c893550,%rsi   ;   {metadata(method data for {method} {0x000000001c8933a0} &apos;run&apos; &apos;()V&apos; in &apos;com/springboot/cloud/auth/authentication/temptest/VisiBiltyDemo$1&apos;)}
  0x00000000036b18d5: incl   0x168(%rsi)        ;*goto
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@18 (line 24)

  0x00000000036b18db: mov    0xc(%rdx),%esi
  0x00000000036b18de: shl    $0x3,%rsi          ;*getfield val$demo
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@3 (line 23)

  0x00000000036b18e2: movabs $0x1c893550,%rdi   ;   {metadata(method data for {method} {0x000000001c8933a0} &apos;run&apos; &apos;()V&apos; in &apos;com/springboot/cloud/auth/authentication/temptest/VisiBiltyDemo$1&apos;)}
  0x00000000036b18ec: addq   $0x1,0x108(%rdi)
  0x00000000036b18f4: mov    0xc(%rsi),%esi     ; implicit exception: dispatches to 0x00000000036b1ac6
  0x00000000036b18f7: shl    $0x3,%rsi          ;*getfield flag
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo::access$000@1 (line 13)
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@6 (line 23)

  0x00000000036b18fb: cmp    (%rsi),%rax        ;*invokevirtual booleanValue
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@9 (line 23)
                                                ; implicit exception: dispatches to 0x00000000036b1acb
  0x00000000036b18fe: mov    %rsi,%rdi
  0x00000000036b1901: movabs $0x1c893550,%rbx   ;   {metadata(method data for {method} {0x000000001c8933a0} &apos;run&apos; &apos;()V&apos; in &apos;com/springboot/cloud/auth/authentication/temptest/VisiBiltyDemo$1&apos;)}
  0x00000000036b190b: mov    0x8(%rdi),%edi
  0x00000000036b190e: shl    $0x3,%rdi
  0x00000000036b1912: cmp    0x120(%rbx),%rdi
  0x00000000036b1919: jne    0x00000000036b1928
  0x00000000036b191b: addq   $0x1,0x128(%rbx)
  0x00000000036b1923: jmpq   0x00000000036b198e
  0x00000000036b1928: cmp    0x130(%rbx),%rdi
  0x00000000036b192f: jne    0x00000000036b193e
  0x00000000036b1931: addq   $0x1,0x138(%rbx)
  0x00000000036b1939: jmpq   0x00000000036b198e
  0x00000000036b193e: cmpq   $0x0,0x120(%rbx)
  0x00000000036b1949: jne    0x00000000036b1962
  0x00000000036b194b: mov    %rdi,0x120(%rbx)
  0x00000000036b1952: movq   $0x1,0x128(%rbx)
  0x00000000036b195d: jmpq   0x00000000036b198e
  0x00000000036b1962: cmpq   $0x0,0x130(%rbx)
  0x00000000036b196d: jne    0x00000000036b1986
  0x00000000036b196f: mov    %rdi,0x130(%rbx)
  0x00000000036b1976: movq   $0x1,0x138(%rbx)
  0x00000000036b1981: jmpq   0x00000000036b198e
  0x00000000036b1986: addq   $0x1,0x118(%rbx)
  0x00000000036b198e: movsbl 0xc(%rsi),%esi     ;*getfield value
                                                ; - java.lang.Boolean::booleanValue@1 (line 132)
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@9 (line 23)

  0x00000000036b1992: and    $0x1,%esi
  0x00000000036b1995: cmp    $0x0,%esi
  0x00000000036b1998: movabs $0x1c893550,%rsi   ;   {metadata(method data for {method} {0x000000001c8933a0} &apos;run&apos; &apos;()V&apos; in &apos;com/springboot/cloud/auth/authentication/temptest/VisiBiltyDemo$1&apos;)}
  0x00000000036b19a2: movabs $0x148,%rdi
  0x00000000036b19ac: je     0x00000000036b19bc
  0x00000000036b19b2: movabs $0x158,%rdi
  0x00000000036b19bc: mov    (%rsi,%rdi,1),%rbx
  0x00000000036b19c0: lea    0x1(%rbx),%rbx
  0x00000000036b19c4: mov    %rbx,(%rsi,%rdi,1)
  0x00000000036b19c8: jne    0x00000000036b1890  ;*ifeq
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@12 (line 23)

  0x00000000036b19ce: xchg   %ax,%ax
  0x00000000036b19d0: jmpq   0x00000000036b1b2d  ;   {no_reloc}
  0x00000000036b19d5: add    %al,(%rax)
  0x00000000036b19d7: add    %al,(%rax)
  0x00000000036b19d9: add    %ah,0xf(%rsi)
  0x00000000036b19dc: (bad)  
  0x00000000036b19dd: add    %r8b,(%rax)
  0x00000000036b19e0: jmpq   0x00000000036b1b47  ; implicit exception: dispatches to 0x00000000036b1b37
  0x00000000036b19e5: nop
  0x00000000036b19e6: shl    $0x3,%rdx          ;*getstatic out
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@21 (line 27)

  0x00000000036b19ea: cmp    (%rdx),%rax        ;*invokevirtual println
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@25 (line 27)
                                                ; implicit exception: dispatches to 0x00000000036b1b51
  0x00000000036b19ed: mov    %rdx,%rsi
  0x00000000036b19f0: movabs $0x1c893550,%rdi   ;   {metadata(method data for {method} {0x000000001c8933a0} &apos;run&apos; &apos;()V&apos; in &apos;com/springboot/cloud/auth/authentication/temptest/VisiBiltyDemo$1&apos;)}
  0x00000000036b19fa: mov    0x8(%rsi),%esi
  0x00000000036b19fd: shl    $0x3,%rsi
  0x00000000036b1a01: cmp    0x188(%rdi),%rsi
  0x00000000036b1a08: jne    0x00000000036b1a17
  0x00000000036b1a0a: addq   $0x1,0x190(%rdi)
  0x00000000036b1a12: jmpq   0x00000000036b1a7d
  0x00000000036b1a17: cmp    0x198(%rdi),%rsi
  0x00000000036b1a1e: jne    0x00000000036b1a2d
  0x00000000036b1a20: addq   $0x1,0x1a0(%rdi)
  0x00000000036b1a28: jmpq   0x00000000036b1a7d
  0x00000000036b1a2d: cmpq   $0x0,0x188(%rdi)
  0x00000000036b1a38: jne    0x00000000036b1a51
  0x00000000036b1a3a: mov    %rsi,0x188(%rdi)
  0x00000000036b1a41: movq   $0x1,0x190(%rdi)
  0x00000000036b1a4c: jmpq   0x00000000036b1a7d
  0x00000000036b1a51: cmpq   $0x0,0x198(%rdi)
  0x00000000036b1a5c: jne    0x00000000036b1a75
  0x00000000036b1a5e: mov    %rsi,0x198(%rdi)
  0x00000000036b1a65: movq   $0x1,0x1a0(%rdi)
  0x00000000036b1a70: jmpq   0x00000000036b1a7d
  0x00000000036b1a75: addq   $0x1,0x180(%rdi)
  0x00000000036b1a7d: movabs $0xffffffffffffffff,%rax
  0x00000000036b1a87: callq  0x00000000035d63e0  ; OopMap{off=620}
                                                ;*invokevirtual println
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@25 (line 27)
                                                ;   {virtual_call}
  0x00000000036b1a8c: add    $0x30,%rsp
  0x00000000036b1a90: pop    %rbp
  0x00000000036b1a91: test   %eax,-0x20c1997(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036b1a97: retq   
  0x00000000036b1a98: mov    %r8,0x8(%rsp)
  0x00000000036b1a9d: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036b1aa5: callq  0x00000000036919e0  ; OopMap{rdx=Oop off=650}
                                                ;*synchronization entry
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@-1 (line 21)
                                                ;   {runtime_call}
  0x00000000036b1aaa: jmpq   0x00000000036b1880
  0x00000000036b1aaf: mov    %rsi,0x8(%rsp)
  0x00000000036b1ab4: movq   $0x12,(%rsp)
  0x00000000036b1abc: callq  0x00000000036919e0  ; OopMap{rdx=Oop off=673}
                                                ;*goto
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@18 (line 24)
                                                ;   {runtime_call}
  0x00000000036b1ac1: jmpq   0x00000000036b18c5
  0x00000000036b1ac6: callq  0x000000000368d080  ; OopMap{rdx=Oop off=683}
                                                ;*getfield flag
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo::access$000@1 (line 13)
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@6 (line 23)
                                                ;   {runtime_call}
  0x00000000036b1acb: callq  0x000000000368d080  ; OopMap{rdx=Oop rsi=Oop off=688}
                                                ;*invokevirtual booleanValue
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@9 (line 23)
                                                ;   {runtime_call}
  0x00000000036b1ad0: movabs $0x0,%rdx          ;   {oop(NULL)}
  0x00000000036b1ada: push   %rax
  0x00000000036b1adb: push   %rbx
  0x00000000036b1adc: mov    0x48(%rdx),%rbx
  0x00000000036b1ae0: push   %rdi
  0x00000000036b1ae1: push   %rsi
  0x00000000036b1ae2: push   %rdx
  0x00000000036b1ae3: push   %rcx
  0x00000000036b1ae4: push   %r8
  0x00000000036b1ae6: push   %r9
  0x00000000036b1ae8: push   %r10
  0x00000000036b1aea: mov    %rsp,%r10
  0x00000000036b1aed: and    $0xfffffffffffffff0,%rsp
  0x00000000036b1af1: push   %r10
  0x00000000036b1af3: push   %r11
  0x00000000036b1af5: mov    $0x7,%ecx
  0x00000000036b1afa: movabs $0x7ffe205b5e40,%r10  ;   {runtime_call}
  0x00000000036b1b04: callq  *%r10
  0x00000000036b1b07: pop    %r11
  0x00000000036b1b09: pop    %rsp
  0x00000000036b1b0a: pop    %r10
  0x00000000036b1b0c: pop    %r9
  0x00000000036b1b0e: pop    %r8
  0x00000000036b1b10: pop    %rcx
  0x00000000036b1b11: pop    %rdx
  0x00000000036b1b12: pop    %rsi
  0x00000000036b1b13: pop    %rdi
  0x00000000036b1b14: cmp    0x118(%rbx),%rax
  0x00000000036b1b1b: pop    %rbx
  0x00000000036b1b1c: pop    %rax
  0x00000000036b1b1d: jne    0x00000000036b1b2d
  0x00000000036b1b23: jmpq   0x00000000036b19da
  0x00000000036b1b28: mov    $0xa535d00,%eax
  0x00000000036b1b2d: callq  0x0000000003690d60  ; OopMap{off=786}
                                                ;*getstatic out
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@21 (line 27)
                                                ;   {runtime_call}
  0x00000000036b1b32: jmpq   0x00000000036b19d0
  0x00000000036b1b37: callq  0x000000000368d080  ; OopMap{rdx=Oop off=796}
                                                ;*getstatic out
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@21 (line 27)
                                                ;   {runtime_call}
  0x00000000036b1b3c: mov    0x0(%rdx),%edx
  0x00000000036b1b42: mov    $0x6050b00,%eax
  0x00000000036b1b47: callq  0x00000000036904e0  ; OopMap{rdx=Oop off=812}
                                                ;*getstatic out
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@21 (line 27)
                                                ;   {runtime_call}
  0x00000000036b1b4c: jmpq   0x00000000036b19e0
  0x00000000036b1b51: callq  0x000000000368d080  ; OopMap{rdx=Oop off=822}
                                                ;*invokevirtual println
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@25 (line 27)
                                                ;   {runtime_call}
  0x00000000036b1b56: nop
  0x00000000036b1b57: nop
  0x00000000036b1b58: mov    0x2a8(%r15),%rax
  0x00000000036b1b5f: movabs $0x0,%r10
  0x00000000036b1b69: mov    %r10,0x2a8(%r15)
  0x00000000036b1b70: movabs $0x0,%r10
  0x00000000036b1b7a: mov    %r10,0x2b0(%r15)
  0x00000000036b1b81: add    $0x30,%rsp
  0x00000000036b1b85: pop    %rbp
  0x00000000036b1b86: jmpq   0x000000000368c620  ;   {runtime_call}
  0x00000000036b1b8b: hlt    
  0x00000000036b1b8c: hlt    
  0x00000000036b1b8d: hlt    
  0x00000000036b1b8e: hlt    
  0x00000000036b1b8f: hlt    
  0x00000000036b1b90: hlt    
  0x00000000036b1b91: hlt    
  0x00000000036b1b92: hlt    
  0x00000000036b1b93: hlt    
  0x00000000036b1b94: hlt    
  0x00000000036b1b95: hlt    
  0x00000000036b1b96: hlt    
  0x00000000036b1b97: hlt    
  0x00000000036b1b98: hlt    
  0x00000000036b1b99: hlt    
  0x00000000036b1b9a: hlt    
  0x00000000036b1b9b: hlt    
  0x00000000036b1b9c: hlt    
  0x00000000036b1b9d: hlt    
  0x00000000036b1b9e: hlt    
  0x00000000036b1b9f: hlt    
[Stub Code]
  0x00000000036b1ba0: nop                       ;   {no_reloc}
  0x00000000036b1ba1: nop
  0x00000000036b1ba2: nop
  0x00000000036b1ba3: nop
  0x00000000036b1ba4: nop
  0x00000000036b1ba5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b1baf: jmpq   0x00000000036b1baf  ;   {runtime_call}
[Exception Handler]
  0x00000000036b1bb4: callq  0x000000000368f1a0  ;   {runtime_call}
  0x00000000036b1bb9: mov    %rsp,-0x28(%rsp)
  0x00000000036b1bbe: sub    $0x80,%rsp
  0x00000000036b1bc5: mov    %rax,0x78(%rsp)
  0x00000000036b1bca: mov    %rcx,0x70(%rsp)
  0x00000000036b1bcf: mov    %rdx,0x68(%rsp)
  0x00000000036b1bd4: mov    %rbx,0x60(%rsp)
  0x00000000036b1bd9: mov    %rbp,0x50(%rsp)
  0x00000000036b1bde: mov    %rsi,0x48(%rsp)
  0x00000000036b1be3: mov    %rdi,0x40(%rsp)
  0x00000000036b1be8: mov    %r8,0x38(%rsp)
  0x00000000036b1bed: mov    %r9,0x30(%rsp)
  0x00000000036b1bf2: mov    %r10,0x28(%rsp)
  0x00000000036b1bf7: mov    %r11,0x20(%rsp)
  0x00000000036b1bfc: mov    %r12,0x18(%rsp)
  0x00000000036b1c01: mov    %r13,0x10(%rsp)
  0x00000000036b1c06: mov    %r14,0x8(%rsp)
  0x00000000036b1c0b: mov    %r15,(%rsp)
  0x00000000036b1c0f: movabs $0x553ec320,%rcx   ;   {external_word}
  0x00000000036b1c19: movabs $0x36b1bb9,%rdx    ;   {internal_word}
  0x00000000036b1c23: mov    %rsp,%r8
  0x00000000036b1c26: and    $0xfffffffffffffff0,%rsp
  0x00000000036b1c2a: callq  0x00000000550a41d0  ;   {runtime_call}
  0x00000000036b1c2f: hlt    
[Deopt Handler Code]
  0x00000000036b1c30: movabs $0x36b1c30,%r10    ;   {section_word}
  0x00000000036b1c3a: push   %r10
  0x00000000036b1c3c: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036b1c41: hlt    
  0x00000000036b1c42: hlt    
  0x00000000036b1c43: hlt    
  0x00000000036b1c44: hlt    
  0x00000000036b1c45: hlt    
  0x00000000036b1c46: hlt    
  0x00000000036b1c47: hlt    
<nmethod compile_id='46' compiler='C1' level='3' entry='0x00000000036b1820' size='2032' address='0x00000000036b1690' relocation_offset='288' insts_offset='400' stub_offset='1296' scopes_data_offset='1496' scopes_pcs_offset='1632' dependencies_offset='1984' nul_chk_table_offset='1992' oops_offset='1464' method='com/springboot/cloud/auth/authentication/temptest/VisiBiltyDemo$1 run ()V' bytes='29' count='1' backedge_count='2156870' iicount='1' stamp='1.037'/>
<writer thread='8376'/>
<task_queued compile_id='48' compile_kind='osr' method='com/springboot/cloud/auth/authentication/temptest/VisiBiltyDemo$1 run ()V' bytes='29' count='1' backedge_count='2168832' iicount='1' osr_bci='2' stamp='1.038' comment='tiered' hot_count='2168832'/>
<writer thread='7332'/>
Decoding compiled method 0x00000000036b0d90:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001c892d18} &apos;access$000&apos; &apos;(Lcom/springboot/cloud/auth/authentication/temptest/VisiBiltyDemo;)Ljava/lang/Boolean;&apos; in &apos;com/springboot/cloud/auth/authentication/temptest/VisiBiltyDemo&apos;
  # parm0:    rdx:rdx   = &apos;com/springboot/cloud/auth/authentication/temptest/VisiBiltyDemo&apos;
  #           [sp+0x40]  (sp of caller)
  0x00000000036b0ee0: mov    %eax,-0x6000(%rsp)
  0x00000000036b0ee7: push   %rbp
  0x00000000036b0ee8: sub    $0x30,%rsp         ;*aload_0
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo::access$000@0 (line 13)

  0x00000000036b0eec: mov    0xc(%rdx),%eax     ; implicit exception: dispatches to 0x00000000036b0eff
  0x00000000036b0eef: shl    $0x3,%rax          ;*getfield flag
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo::access$000@1 (line 13)

  0x00000000036b0ef3: add    $0x30,%rsp
  0x00000000036b0ef7: pop    %rbp
  0x00000000036b0ef8: test   %eax,-0x20c0dfe(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036b0efe: retq   
  0x00000000036b0eff: callq  0x000000000368d080  ; OopMap{off=36}
                                                ;*getfield flag
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo::access$000@1 (line 13)
                                                ;   {runtime_call}
  0x00000000036b0f04: nop
  0x00000000036b0f05: nop
  0x00000000036b0f06: mov    0x2a8(%r15),%rax
  0x00000000036b0f0d: movabs $0x0,%r10
  0x00000000036b0f17: mov    %r10,0x2a8(%r15)
  0x00000000036b0f1e: movabs $0x0,%r10
  0x00000000036b0f28: mov    %r10,0x2b0(%r15)
  0x00000000036b0f2f: add    $0x30,%rsp
  0x00000000036b0f33: pop    %rbp
  0x00000000036b0f34: jmpq   0x000000000368c620  ;   {runtime_call}
  0x00000000036b0f39: hlt    
  0x00000000036b0f3a: hlt    
  0x00000000036b0f3b: hlt    
  0x00000000036b0f3c: hlt    
  0x00000000036b0f3d: hlt    
  0x00000000036b0f3e: hlt    
  0x00000000036b0f3f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000036b0f40: callq  0x000000000368f1a0  ;   {no_reloc}
  0x00000000036b0f45: mov    %rsp,-0x28(%rsp)
  0x00000000036b0f4a: sub    $0x80,%rsp
  0x00000000036b0f51: mov    %rax,0x78(%rsp)
  0x00000000036b0f56: mov    %rcx,0x70(%rsp)
  0x00000000036b0f5b: mov    %rdx,0x68(%rsp)
  0x00000000036b0f60: mov    %rbx,0x60(%rsp)
  0x00000000036b0f65: mov    %rbp,0x50(%rsp)
  0x00000000036b0f6a: mov    %rsi,0x48(%rsp)
  0x00000000036b0f6f: mov    %rdi,0x40(%rsp)
  0x00000000036b0f74: mov    %r8,0x38(%rsp)
  0x00000000036b0f79: mov    %r9,0x30(%rsp)
  0x00000000036b0f7e: mov    %r10,0x28(%rsp)
  0x00000000036b0f83: mov    %r11,0x20(%rsp)
  0x00000000036b0f88: mov    %r12,0x18(%rsp)
  0x00000000036b0f8d: mov    %r13,0x10(%rsp)
  0x00000000036b0f92: mov    %r14,0x8(%rsp)
  0x00000000036b0f97: mov    %r15,(%rsp)
  0x00000000036b0f9b: movabs $0x553ec320,%rcx   ;   {external_word}
  0x00000000036b0fa5: movabs $0x36b0f45,%rdx    ;   {internal_word}
  0x00000000036b0faf: mov    %rsp,%r8
  0x00000000036b0fb2: and    $0xfffffffffffffff0,%rsp
  0x00000000036b0fb6: callq  0x00000000550a41d0  ;   {runtime_call}
  0x00000000036b0fbb: hlt    
[Deopt Handler Code]
  0x00000000036b0fbc: movabs $0x36b0fbc,%r10    ;   {section_word}
  0x00000000036b0fc6: push   %r10
  0x00000000036b0fc8: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036b0fcd: hlt    
  0x00000000036b0fce: hlt    
  0x00000000036b0fcf: hlt    
<nmethod compile_id='43' compiler='C1' level='1' entry='0x00000000036b0ee0' size='720' address='0x00000000036b0d90' relocation_offset='288' insts_offset='336' stub_offset='432' scopes_data_offset='592' scopes_pcs_offset='616' dependencies_offset='696' nul_chk_table_offset='704' oops_offset='576' method='com/springboot/cloud/auth/authentication/temptest/VisiBiltyDemo access$000 (Lcom/springboot/cloud/auth/authentication/temptest/VisiBiltyDemo;)Ljava/lang/Boolean;' bytes='5' count='273408' iicount='273408' stamp='1.043'/>
Decoding compiled method 0x00000000036b0950:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001c64cb20} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # parm0:    rdx:rdx   = &apos;[Ljava/util/concurrent/ConcurrentHashMap$Node;&apos;
  # parm1:    r8        = int
  #           [sp+0x50]  (sp of caller)
  0x00000000036b0aa0: mov    %eax,-0x6000(%rsp)
  0x00000000036b0aa7: push   %rbp
  0x00000000036b0aa8: sub    $0x40,%rsp
  0x00000000036b0aac: movabs $0x1c7b2a00,%rcx   ;   {metadata(method data for {method} {0x000000001c64cb20} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00000000036b0ab6: mov    0xdc(%rcx),%eax
  0x00000000036b0abc: add    $0x8,%eax
  0x00000000036b0abf: mov    %eax,0xdc(%rcx)
  0x00000000036b0ac5: movabs $0x1c64cb18,%rcx   ;   {metadata({method} {0x000000001c64cb20} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00000000036b0acf: and    $0x1ff8,%eax
  0x00000000036b0ad5: cmp    $0x0,%eax
  0x00000000036b0ad8: je     0x00000000036b0bea  ;*getstatic U
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@0 (line 755)

  0x00000000036b0ade: movslq %r8d,%r8
  0x00000000036b0ae1: mov    $0x2,%ecx
  0x00000000036b0ae6: shl    %cl,%r8
  0x00000000036b0ae9: movabs $0x10,%r10
  0x00000000036b0af3: add    %r10,%r8
  0x00000000036b0af6: mov    (%rdx,%r8,1),%eax
  0x00000000036b0afa: shl    $0x3,%rax
  0x00000000036b0afe: cmp    $0x0,%rax
  0x00000000036b0b02: jne    0x00000000036b0b1d
  0x00000000036b0b04: movabs $0x1c7b2a00,%rdi   ;   {metadata(method data for {method} {0x000000001c64cb20} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00000000036b0b0e: orl    $0x100,0x130(%rdi)
  0x00000000036b0b18: jmpq   0x00000000036b0bde
  0x00000000036b0b1d: movabs $0x7c0036fe0,%rbx  ;   {metadata(&apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00000000036b0b27: mov    0x8(%rax),%edi
  0x00000000036b0b2a: shl    $0x3,%rdi
  0x00000000036b0b2e: cmp    0x30(%rdi),%rbx
  0x00000000036b0b32: jne    0x00000000036b0bc2
  0x00000000036b0b38: movabs $0x1c7b2a00,%rdi   ;   {metadata(method data for {method} {0x000000001c64cb20} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00000000036b0b42: mov    0x8(%rax),%ebx
  0x00000000036b0b45: shl    $0x3,%rbx
  0x00000000036b0b49: cmp    0x140(%rdi),%rbx
  0x00000000036b0b50: jne    0x00000000036b0b5f
  0x00000000036b0b52: addq   $0x1,0x148(%rdi)
  0x00000000036b0b5a: jmpq   0x00000000036b0bde
  0x00000000036b0b5f: cmp    0x150(%rdi),%rbx
  0x00000000036b0b66: jne    0x00000000036b0b75
  0x00000000036b0b68: addq   $0x1,0x158(%rdi)
  0x00000000036b0b70: jmpq   0x00000000036b0bde
  0x00000000036b0b75: cmpq   $0x0,0x140(%rdi)
  0x00000000036b0b80: jne    0x00000000036b0b99
  0x00000000036b0b82: mov    %rbx,0x140(%rdi)
  0x00000000036b0b89: movq   $0x1,0x148(%rdi)
  0x00000000036b0b94: jmpq   0x00000000036b0bde
  0x00000000036b0b99: cmpq   $0x0,0x150(%rdi)
  0x00000000036b0ba4: jne    0x00000000036b0bbd
  0x00000000036b0ba6: mov    %rbx,0x150(%rdi)
  0x00000000036b0bad: movq   $0x1,0x158(%rdi)
  0x00000000036b0bb8: jmpq   0x00000000036b0bde
  0x00000000036b0bbd: jmpq   0x00000000036b0bde
  0x00000000036b0bc2: movabs $0x1c7b2a00,%rdi   ;   {metadata(method data for {method} {0x000000001c64cb20} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00000000036b0bcc: subq   $0x1,0x138(%rdi)
  0x00000000036b0bd4: jmpq   0x00000000036b0c01
  0x00000000036b0bd9: jmpq   0x00000000036b0bde  ;*checkcast
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@17 (line 755)

  0x00000000036b0bde: add    $0x40,%rsp
  0x00000000036b0be2: pop    %rbp
  0x00000000036b0be3: test   %eax,-0x20c0ae9(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036b0be9: retq   
  0x00000000036b0bea: mov    %rcx,0x8(%rsp)
  0x00000000036b0bef: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036b0bf7: callq  0x00000000036919e0  ; OopMap{rdx=Oop off=348}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1 (line 755)
                                                ;   {runtime_call}
  0x00000000036b0bfc: jmpq   0x00000000036b0ade
  0x00000000036b0c01: mov    %rax,(%rsp)
  0x00000000036b0c05: callq  0x000000000368f500  ; OopMap{off=362}
                                                ;*checkcast
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@17 (line 755)
                                                ;   {runtime_call}
  0x00000000036b0c0a: nop
  0x00000000036b0c0b: nop
  0x00000000036b0c0c: mov    0x2a8(%r15),%rax
  0x00000000036b0c13: movabs $0x0,%r10
  0x00000000036b0c1d: mov    %r10,0x2a8(%r15)
  0x00000000036b0c24: movabs $0x0,%r10
  0x00000000036b0c2e: mov    %r10,0x2b0(%r15)
  0x00000000036b0c35: add    $0x40,%rsp
  0x00000000036b0c39: pop    %rbp
  0x00000000036b0c3a: jmpq   0x000000000368c620  ;   {runtime_call}
  0x00000000036b0c3f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000036b0c40: callq  0x000000000368f1a0  ;   {no_reloc}
  0x00000000036b0c45: mov    %rsp,-0x28(%rsp)
  0x00000000036b0c4a: sub    $0x80,%rsp
  0x00000000036b0c51: mov    %rax,0x78(%rsp)
  0x00000000036b0c56: mov    %rcx,0x70(%rsp)
  0x00000000036b0c5b: mov    %rdx,0x68(%rsp)
  0x00000000036b0c60: mov    %rbx,0x60(%rsp)
  0x00000000036b0c65: mov    %rbp,0x50(%rsp)
  0x00000000036b0c6a: mov    %rsi,0x48(%rsp)
  0x00000000036b0c6f: mov    %rdi,0x40(%rsp)
  0x00000000036b0c74: mov    %r8,0x38(%rsp)
  0x00000000036b0c79: mov    %r9,0x30(%rsp)
  0x00000000036b0c7e: mov    %r10,0x28(%rsp)
  0x00000000036b0c83: mov    %r11,0x20(%rsp)
  0x00000000036b0c88: mov    %r12,0x18(%rsp)
  0x00000000036b0c8d: mov    %r13,0x10(%rsp)
  0x00000000036b0c92: mov    %r14,0x8(%rsp)
  0x00000000036b0c97: mov    %r15,(%rsp)
  0x00000000036b0c9b: movabs $0x553ec320,%rcx   ;   {external_word}
  0x00000000036b0ca5: movabs $0x36b0c45,%rdx    ;   {internal_word}
  0x00000000036b0caf: mov    %rsp,%r8
  0x00000000036b0cb2: and    $0xfffffffffffffff0,%rsp
  0x00000000036b0cb6: callq  0x00000000550a41d0  ;   {runtime_call}
  0x00000000036b0cbb: hlt    
[Deopt Handler Code]
  0x00000000036b0cbc: movabs $0x36b0cbc,%r10    ;   {section_word}
  0x00000000036b0cc6: push   %r10
  0x00000000036b0cc8: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036b0ccd: hlt    
  0x00000000036b0cce: hlt    
  0x00000000036b0ccf: hlt    
<nmethod compile_id='31' compiler='C1' level='3' entry='0x00000000036b0aa0' size='1048' address='0x00000000036b0950' relocation_offset='288' insts_offset='336' stub_offset='752' scopes_data_offset='904' scopes_pcs_offset='944' dependencies_offset='1040' method='java/util/concurrent/ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='21' count='398' iicount='398' stamp='1.051'/>
<writer thread='16536'/>
Decoding compiled method 0x00000000036ad850:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001c8933a0} &apos;run&apos; &apos;()V&apos; in &apos;com/springboot/cloud/auth/authentication/temptest/VisiBiltyDemo$1&apos;
  0x00000000036ad9a0: int3   
  0x00000000036ad9a1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000036ad9ac: data16 data16 xchg %ax,%ax
  0x00000000036ad9b0: mov    %eax,-0x6000(%rsp)
  0x00000000036ad9b7: push   %rbp
  0x00000000036ad9b8: sub    $0x40,%rsp
  0x00000000036ad9bc: mov    (%rdx),%ebp
  0x00000000036ad9be: mov    0x8(%rdx),%rbx
  0x00000000036ad9c2: mov    %rdx,%rcx
  0x00000000036ad9c5: movabs $0x54fdc6c0,%r10
  0x00000000036ad9cf: callq  *%r10
  0x00000000036ad9d2: mov    0x8(%rbx),%r10d    ; implicit exception: dispatches to 0x00000000036ada3d
  0x00000000036ad9d6: cmp    $0xf800c144,%r10d  ;   {metadata(&apos;com/springboot/cloud/auth/authentication/temptest/VisiBiltyDemo$1&apos;)}
  0x00000000036ad9dd: jne    0x00000000036ada15  ;*aload_0
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@2 (line 23)

  0x00000000036ad9df: jmp    0x00000000036ad9e9
  0x00000000036ad9e1: inc    %ebp               ; OopMap{rbx=Oop off=67}
                                                ;*goto
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@18 (line 24)

  0x00000000036ad9e3: test   %eax,-0x20bd9e9(%rip)        # 0x00000000015f0000
                                                ;*aload_0
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@2 (line 23)
                                                ;   {poll}
  0x00000000036ad9e9: mov    0xc(%rbx),%r10d    ;*getfield val$demo
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@3 (line 23)

  0x00000000036ad9ed: mov    0xc(%r12,%r10,8),%r11d  ;*getfield flag
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo::access$000@1 (line 13)
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@6 (line 23)
                                                ; implicit exception: dispatches to 0x00000000036ada25
  0x00000000036ad9f2: movzbl 0xc(%r12,%r11,8),%r11d  ;*getfield value
                                                ; - java.lang.Boolean::booleanValue@1 (line 132)
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@9 (line 23)
                                                ; implicit exception: dispatches to 0x00000000036ada31
  0x00000000036ad9f8: test   %r11d,%r11d
  0x00000000036ad9fb: jne    0x00000000036ad9e1  ;*ifeq
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@12 (line 23)

  0x00000000036ad9fd: mov    $0xffffff65,%edx
  0x00000000036ada02: mov    %rbx,0x20(%rsp)
  0x00000000036ada07: mov    %r11d,0x28(%rsp)
  0x00000000036ada0c: data16 xchg %ax,%ax
  0x00000000036ada0f: callq  0x00000000035d57a0  ; OopMap{[32]=Oop off=116}
                                                ;*ifeq
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@12 (line 23)
                                                ;   {runtime_call}
  0x00000000036ada14: int3   
  0x00000000036ada15: mov    $0xffffff9d,%edx
  0x00000000036ada1a: mov    %rbx,0x20(%rsp)
  0x00000000036ada1f: callq  0x00000000035d57a0  ; OopMap{[32]=Oop off=132}
                                                ;*aload_0
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@2 (line 23)
                                                ;   {runtime_call}
  0x00000000036ada24: int3                      ;*getfield flag
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo::access$000@1 (line 13)
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@6 (line 23)

  0x00000000036ada25: mov    $0xfffffff6,%edx
  0x00000000036ada2a: nop
  0x00000000036ada2b: callq  0x00000000035d57a0  ; OopMap{off=144}
                                                ;*getfield flag
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo::access$000@1 (line 13)
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@6 (line 23)
                                                ;   {runtime_call}
  0x00000000036ada30: int3                      ;*getfield flag
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo::access$000@1 (line 13)
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@6 (line 23)

  0x00000000036ada31: mov    $0xfffffff6,%edx
  0x00000000036ada36: nop
  0x00000000036ada37: callq  0x00000000035d57a0  ; OopMap{off=156}
                                                ;*invokevirtual booleanValue
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@9 (line 23)
                                                ;   {runtime_call}
  0x00000000036ada3c: int3   
  0x00000000036ada3d: mov    $0xffffff86,%edx
  0x00000000036ada42: nop
  0x00000000036ada43: callq  0x00000000035d57a0  ; OopMap{off=168}
                                                ;*aload_0
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@2 (line 23)
                                                ;   {runtime_call}
  0x00000000036ada48: int3                      ;*aload_0
                                                ; - com.springboot.cloud.auth.authentication.temptest.VisiBiltyDemo$1::run@2 (line 23)

  0x00000000036ada49: hlt    
  0x00000000036ada4a: hlt    
  0x00000000036ada4b: hlt    
  0x00000000036ada4c: hlt    
  0x00000000036ada4d: hlt    
  0x00000000036ada4e: hlt    
  0x00000000036ada4f: hlt    
  0x00000000036ada50: hlt    
  0x00000000036ada51: hlt    
  0x00000000036ada52: hlt    
  0x00000000036ada53: hlt    
  0x00000000036ada54: hlt    
  0x00000000036ada55: hlt    
  0x00000000036ada56: hlt    
  0x00000000036ada57: hlt    
  0x00000000036ada58: hlt    
  0x00000000036ada59: hlt    
  0x00000000036ada5a: hlt    
  0x00000000036ada5b: hlt    
  0x00000000036ada5c: hlt    
  0x00000000036ada5d: hlt    
  0x00000000036ada5e: hlt    
  0x00000000036ada5f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000036ada60: jmpq   0x000000000368dc20  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000036ada65: callq  0x00000000036ada6a
  0x00000000036ada6a: subq   $0x5,(%rsp)
  0x00000000036ada6f: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036ada74: hlt    
  0x00000000036ada75: hlt    
  0x00000000036ada76: hlt    
  0x00000000036ada77: hlt    
<nmethod compile_id='48' compile_kind='osr' compiler='C2' level='4' entry='0x00000000036ad9a0' size='1024' address='0x00000000036ad850' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='592' scopes_pcs_offset='712' dependencies_offset='984' nul_chk_table_offset='992' oops_offset='552' method='com/springboot/cloud/auth/authentication/temptest/VisiBiltyDemo$1 run ()V' bytes='29' count='1' backedge_count='2656341' iicount='1' stamp='1.057'/>
<make_not_entrant thread='16536' compile_id='45' compile_kind='osr' compiler='C1' level='3' stamp='1.057'/>
<writer thread='17528'/>
<task_queued compile_id='49' method='java/lang/String getBytes (Ljava/lang/String;)[B' bytes='27' count='256' iicount='256' level='3' stamp='1.059' comment='tiered' hot_count='256'/>
<task_queued compile_id='50' method='java/lang/StringCoding encode (Ljava/lang/String;[CII)[B' bytes='120' count='256' iicount='256' level='3' stamp='1.059' comment='tiered' hot_count='256'/>
<task_queued compile_id='51' method='java/lang/StringCoding$StringEncoder encode ([CII)[B' bytes='179' count='256' iicount='256' level='3' stamp='1.059' comment='tiered' hot_count='256'/>
<writer thread='7332'/>
Decoding compiled method 0x00000000036b0390:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c494398} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0x50]  (sp of caller)
  0x00000000036b0500: mov    0x8(%rdx),%r10d
  0x00000000036b0504: shl    $0x3,%r10
  0x00000000036b0508: cmp    %rax,%r10
  0x00000000036b050b: jne    0x00000000035d5f60  ;   {runtime_call}
  0x00000000036b0511: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000036b051c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000036b0520: mov    %eax,-0x6000(%rsp)
  0x00000000036b0527: push   %rbp
  0x00000000036b0528: sub    $0x40,%rsp
  0x00000000036b052c: movabs $0x1c7bb558,%r9    ;   {metadata(method data for {method} {0x000000001c494398} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/lang/String&apos;)}
  0x00000000036b0536: mov    0xdc(%r9),%edi
  0x00000000036b053d: add    $0x8,%edi
  0x00000000036b0540: mov    %edi,0xdc(%r9)
  0x00000000036b0547: movabs $0x1c494390,%r9    ;   {metadata({method} {0x000000001c494398} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/lang/String&apos;)}
  0x00000000036b0551: and    $0x1ff8,%edi
  0x00000000036b0557: cmp    $0x0,%edi
  0x00000000036b055a: je     0x00000000036b064e  ;*aload_1
                                                ; - java.lang.String::getBytes@0 (line 917)

  0x00000000036b0560: cmp    $0x0,%r8
  0x00000000036b0564: movabs $0x1c7bb558,%r9    ;   {metadata(method data for {method} {0x000000001c494398} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/lang/String&apos;)}
  0x00000000036b056e: movabs $0x108,%rdi
  0x00000000036b0578: jne    0x00000000036b0588
  0x00000000036b057e: movabs $0x118,%rdi
  0x00000000036b0588: mov    (%r9,%rdi,1),%rsi
  0x00000000036b058c: lea    0x1(%rsi),%rsi
  0x00000000036b0590: mov    %rsi,(%r9,%rdi,1)
  0x00000000036b0594: je     0x00000000036b05d8  ;*ifnonnull
                                                ; - java.lang.String::getBytes@1 (line 917)

  0x00000000036b059a: mov    0xc(%rdx),%r9d
  0x00000000036b059e: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.String::getBytes@14 (line 918)

  0x00000000036b05a2: mov    0xc(%r9),%edi      ;*arraylength
                                                ; - java.lang.String::getBytes@22 (line 918)
                                                ; implicit exception: dispatches to 0x00000000036b0665
  0x00000000036b05a6: movabs $0x1c7bb558,%rdx   ;   {metadata(method data for {method} {0x000000001c494398} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/lang/String&apos;)}
  0x00000000036b05b0: addq   $0x1,0x138(%rdx)
  0x00000000036b05b8: mov    %r8,%rdx
  0x00000000036b05bb: mov    %r9,%r8
  0x00000000036b05be: mov    $0x0,%r9d          ;*invokestatic encode
                                                ; - java.lang.String::getBytes@23 (line 918)

  0x00000000036b05c4: nop
  0x00000000036b05c5: nop
  0x00000000036b05c6: nop
  0x00000000036b05c7: callq  0x00000000035d6620  ; OopMap{off=204}
                                                ;*invokestatic encode
                                                ; - java.lang.String::getBytes@23 (line 918)
                                                ;   {static_call}
  0x00000000036b05cc: add    $0x40,%rsp
  0x00000000036b05d0: pop    %rbp
  0x00000000036b05d1: test   %eax,-0x20c04d7(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036b05d7: retq                      ;*areturn
                                                ; - java.lang.String::getBytes@26 (line 918)

  0x00000000036b05d8: jmpq   0x00000000036b0679  ;   {no_reloc}
  0x00000000036b05dd: add    %al,(%rax)
  0x00000000036b05df: add    %al,(%rax)
  0x00000000036b05e1: add    %cl,-0x75(%rcx)
  0x00000000036b05e4: rex.RXB (bad) 
  0x00000000036b05e6: lea    0x20(%rax),%rdi
  0x00000000036b05ea: cmp    0x70(%r15),%rdi
  0x00000000036b05ee: ja     0x00000000036b0683
  0x00000000036b05f4: mov    %rdi,0x60(%r15)
  0x00000000036b05f8: mov    0xa8(%rdx),%rcx
  0x00000000036b05ff: mov    %rcx,(%rax)
  0x00000000036b0602: mov    %rdx,%rcx
  0x00000000036b0605: shr    $0x3,%rcx
  0x00000000036b0609: mov    %ecx,0x8(%rax)
  0x00000000036b060c: xor    %rcx,%rcx
  0x00000000036b060f: mov    %ecx,0xc(%rax)
  0x00000000036b0612: xor    %rcx,%rcx
  0x00000000036b0615: mov    %rcx,0x10(%rax)
  0x00000000036b0619: mov    %rcx,0x18(%rax)    ;*new  ; - java.lang.String::getBytes@4 (line 917)

  0x00000000036b061d: mov    %rax,%rdx
  0x00000000036b0620: movabs $0x1c7bb558,%rsi   ;   {metadata(method data for {method} {0x000000001c494398} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/lang/String&apos;)}
  0x00000000036b062a: addq   $0x1,0x128(%rsi)
  0x00000000036b0632: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getBytes@8 (line 917)

  0x00000000036b0635: mov    %rax,0x28(%rsp)
  0x00000000036b063a: nop
  0x00000000036b063b: nop
  0x00000000036b063c: nop
  0x00000000036b063d: nop
  0x00000000036b063e: nop
  0x00000000036b063f: callq  0x00000000035d61a0  ; OopMap{[40]=Oop off=324}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getBytes@8 (line 917)
                                                ;   {optimized virtual_call}
  0x00000000036b0644: mov    0x28(%rsp),%rax
  0x00000000036b0649: jmpq   0x00000000036b06b8
  0x00000000036b064e: mov    %r9,0x8(%rsp)
  0x00000000036b0653: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036b065b: callq  0x00000000036919e0  ; OopMap{rdx=Oop r8=Oop off=352}
                                                ;*synchronization entry
                                                ; - java.lang.String::getBytes@-1 (line 917)
                                                ;   {runtime_call}
  0x00000000036b0660: jmpq   0x00000000036b0560
  0x00000000036b0665: callq  0x000000000368d080  ; OopMap{r8=Oop r9=Oop off=362}
                                                ;*arraylength
                                                ; - java.lang.String::getBytes@22 (line 918)
                                                ;   {runtime_call}
  0x00000000036b066a: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000036b0674: mov    $0xa050f00,%eax
  0x00000000036b0679: callq  0x0000000003690920  ; OopMap{off=382}
                                                ;*new  ; - java.lang.String::getBytes@4 (line 917)
                                                ;   {runtime_call}
  0x00000000036b067e: jmpq   0x00000000036b05d8
  0x00000000036b0683: mov    %rdx,%rdx
  0x00000000036b0686: callq  0x000000000368d300  ; OopMap{off=395}
                                                ;*new  ; - java.lang.String::getBytes@4 (line 917)
                                                ;   {runtime_call}
  0x00000000036b068b: jmp    0x00000000036b061d
  0x00000000036b068d: nop
  0x00000000036b068e: nop
  0x00000000036b068f: mov    0x2a8(%r15),%rax
  0x00000000036b0696: movabs $0x0,%r10
  0x00000000036b06a0: mov    %r10,0x2a8(%r15)
  0x00000000036b06a7: movabs $0x0,%r10
  0x00000000036b06b1: mov    %r10,0x2b0(%r15)
  0x00000000036b06b8: add    $0x40,%rsp
  0x00000000036b06bc: pop    %rbp
  0x00000000036b06bd: jmpq   0x000000000368c620  ;   {runtime_call}
  0x00000000036b06c2: hlt    
  0x00000000036b06c3: hlt    
  0x00000000036b06c4: hlt    
  0x00000000036b06c5: hlt    
  0x00000000036b06c6: hlt    
  0x00000000036b06c7: hlt    
  0x00000000036b06c8: hlt    
  0x00000000036b06c9: hlt    
  0x00000000036b06ca: hlt    
  0x00000000036b06cb: hlt    
  0x00000000036b06cc: hlt    
  0x00000000036b06cd: hlt    
  0x00000000036b06ce: hlt    
  0x00000000036b06cf: hlt    
  0x00000000036b06d0: hlt    
  0x00000000036b06d1: hlt    
  0x00000000036b06d2: hlt    
  0x00000000036b06d3: hlt    
  0x00000000036b06d4: hlt    
  0x00000000036b06d5: hlt    
  0x00000000036b06d6: hlt    
  0x00000000036b06d7: hlt    
  0x00000000036b06d8: hlt    
  0x00000000036b06d9: hlt    
  0x00000000036b06da: hlt    
  0x00000000036b06db: hlt    
  0x00000000036b06dc: hlt    
  0x00000000036b06dd: hlt    
  0x00000000036b06de: hlt    
  0x00000000036b06df: hlt    
[Stub Code]
  0x00000000036b06e0: nop                       ;   {no_reloc}
  0x00000000036b06e1: nop
  0x00000000036b06e2: nop
  0x00000000036b06e3: nop
  0x00000000036b06e4: nop
  0x00000000036b06e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b06ef: jmpq   0x00000000036b06ef  ;   {runtime_call}
  0x00000000036b06f4: nop
  0x00000000036b06f5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b06ff: jmpq   0x00000000036b06ff  ;   {runtime_call}
[Exception Handler]
  0x00000000036b0704: callq  0x000000000368f1a0  ;   {runtime_call}
  0x00000000036b0709: mov    %rsp,-0x28(%rsp)
  0x00000000036b070e: sub    $0x80,%rsp
  0x00000000036b0715: mov    %rax,0x78(%rsp)
  0x00000000036b071a: mov    %rcx,0x70(%rsp)
  0x00000000036b071f: mov    %rdx,0x68(%rsp)
  0x00000000036b0724: mov    %rbx,0x60(%rsp)
  0x00000000036b0729: mov    %rbp,0x50(%rsp)
  0x00000000036b072e: mov    %rsi,0x48(%rsp)
  0x00000000036b0733: mov    %rdi,0x40(%rsp)
  0x00000000036b0738: mov    %r8,0x38(%rsp)
  0x00000000036b073d: mov    %r9,0x30(%rsp)
  0x00000000036b0742: mov    %r10,0x28(%rsp)
  0x00000000036b0747: mov    %r11,0x20(%rsp)
  0x00000000036b074c: mov    %r12,0x18(%rsp)
  0x00000000036b0751: mov    %r13,0x10(%rsp)
  0x00000000036b0756: mov    %r14,0x8(%rsp)
  0x00000000036b075b: mov    %r15,(%rsp)
  0x00000000036b075f: movabs $0x553ec320,%rcx   ;   {external_word}
  0x00000000036b0769: movabs $0x36b0709,%rdx    ;   {internal_word}
  0x00000000036b0773: mov    %rsp,%r8
  0x00000000036b0776: and    $0xfffffffffffffff0,%rsp
  0x00000000036b077a: callq  0x00000000550a41d0  ;   {runtime_call}
  0x00000000036b077f: hlt    
[Deopt Handler Code]
  0x00000000036b0780: movabs $0x36b0780,%r10    ;   {section_word}
  0x00000000036b078a: push   %r10
  0x00000000036b078c: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036b0791: hlt    
  0x00000000036b0792: hlt    
  0x00000000036b0793: hlt    
  0x00000000036b0794: hlt    
  0x00000000036b0795: hlt    
  0x00000000036b0796: hlt    
  0x00000000036b0797: hlt    
<nmethod compile_id='49' compiler='C1' level='3' entry='0x00000000036b0500' size='1416' address='0x00000000036b0390' relocation_offset='288' insts_offset='368' stub_offset='848' scopes_data_offset='1040' scopes_pcs_offset='1136' dependencies_offset='1392' nul_chk_table_offset='1400' method='java/lang/String getBytes (Ljava/lang/String;)[B' bytes='27' count='256' iicount='256' stamp='1.069'/>
<writer thread='17528'/>
<task_queued compile_id='52' method='java/io/BufferedInputStream getBufIfOpen ()[B' bytes='21' count='256' iicount='256' level='3' stamp='1.071' comment='tiered' hot_count='256'/>
<task_queued compile_id='53' method='java/io/DataInputStream readUTF (Ljava/io/DataInput;)Ljava/lang/String;' bytes='501' count='183' backedge_count='3072' iicount='183' level='3' stamp='1.072' comment='tiered' hot_count='183'/>
<task_queued compile_id='54' method='java/io/BufferedInputStream read ()I' bytes='49' count='384' iicount='384' level='3' stamp='1.072' comment='tiered' hot_count='384'/>
<task_queued compile_id='55' method='java/io/BufferedInputStream read ([BII)I' bytes='113' count='384' iicount='384' level='3' stamp='1.073' comment='tiered' hot_count='384'/>
<task_queued compile_id='56' method='java/io/BufferedInputStream read1 ([BII)I' bytes='108' count='512' iicount='512' level='3' stamp='1.073' comment='tiered' hot_count='512'/>
<task_queued compile_id='57' method='java/io/DataInputStream readUTF ()Ljava/lang/String;' bytes='5' count='512' iicount='512' level='3' stamp='1.073' comment='tiered' hot_count='512'/>
<task_queued compile_id='58' method='java/io/DataInputStream readUnsignedShort ()I' bytes='39' count='512' iicount='512' level='3' stamp='1.073' comment='tiered' hot_count='512'/>
<task_queued compile_id='59' method='java/io/DataInputStream readFully ([BII)V' bytes='63' count='640' backedge_count='639' iicount='640' level='3' stamp='1.074' comment='tiered' hot_count='640'/>
<writer thread='7332'/>
Decoding compiled method 0x00000000036b1e90:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001c5c9bc8} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  # parm1:    r8:r8     = &apos;[C&apos;
  # parm2:    r9        = int
  # parm3:    rdi       = int
  #           [sp+0x130]  (sp of caller)
  0x00000000036b21e0: mov    %eax,-0x6000(%rsp)
  0x00000000036b21e7: push   %rbp
  0x00000000036b21e8: sub    $0x120,%rsp
  0x00000000036b21ef: movabs $0x1c7bb818,%rsi   ;   {metadata(method data for {method} {0x000000001c5c9bc8} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036b21f9: mov    0xdc(%rsi),%ebx
  0x00000000036b21ff: add    $0x8,%ebx
  0x00000000036b2202: mov    %ebx,0xdc(%rsi)
  0x00000000036b2208: movabs $0x1c5c9bc0,%rsi   ;   {metadata({method} {0x000000001c5c9bc8} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036b2212: and    $0x1ff8,%ebx
  0x00000000036b2218: cmp    $0x0,%ebx
  0x00000000036b221b: je     0x00000000036b3849  ;*getstatic encoder
                                                ; - java.lang.StringCoding::encode@0 (line 330)

  0x00000000036b2221: mov    %edi,0xbc(%rsp)
  0x00000000036b2228: mov    %r9d,0xb8(%rsp)
  0x00000000036b2230: mov    %r8,0xb0(%rsp)
  0x00000000036b2238: mov    %rdx,0xa8(%rsp)
  0x00000000036b2240: movabs $0x1c7bb818,%rsi   ;   {metadata(method data for {method} {0x000000001c5c9bc8} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036b224a: addq   $0x1,0x108(%rsi)
  0x00000000036b2252: movabs $0x1c7bfd28,%rsi   ;   {metadata(method data for {method} {0x000000001c5c9310} &apos;deref&apos; &apos;(Ljava/lang/ThreadLocal;)Ljava/lang/Object;&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036b225c: mov    0xdc(%rsi),%ebx
  0x00000000036b2262: add    $0x8,%ebx
  0x00000000036b2265: mov    %ebx,0xdc(%rsi)
  0x00000000036b226b: movabs $0x1c5c9308,%rsi   ;   {metadata({method} {0x000000001c5c9310} &apos;deref&apos; &apos;(Ljava/lang/ThreadLocal;)Ljava/lang/Object;&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036b2275: and    $0x7ffff8,%ebx
  0x00000000036b227b: cmp    $0x0,%ebx
  0x00000000036b227e: je     0x00000000036b3860
  0x00000000036b2284: movabs $0x76c146f70,%rsi  ;   {oop(a &apos;java/lang/ThreadLocal&apos;)}
  0x00000000036b228e: mov    %rsi,%rbx
  0x00000000036b2291: movabs $0x1c7bfd28,%rax   ;   {metadata(method data for {method} {0x000000001c5c9310} &apos;deref&apos; &apos;(Ljava/lang/ThreadLocal;)Ljava/lang/Object;&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036b229b: mov    0x8(%rbx),%ebx
  0x00000000036b229e: shl    $0x3,%rbx
  0x00000000036b22a2: cmp    0x110(%rax),%rbx
  0x00000000036b22a9: jne    0x00000000036b22b8
  0x00000000036b22ab: addq   $0x1,0x118(%rax)
  0x00000000036b22b3: jmpq   0x00000000036b231e
  0x00000000036b22b8: cmp    0x120(%rax),%rbx
  0x00000000036b22bf: jne    0x00000000036b22ce
  0x00000000036b22c1: addq   $0x1,0x128(%rax)
  0x00000000036b22c9: jmpq   0x00000000036b231e
  0x00000000036b22ce: cmpq   $0x0,0x110(%rax)
  0x00000000036b22d9: jne    0x00000000036b22f2
  0x00000000036b22db: mov    %rbx,0x110(%rax)
  0x00000000036b22e2: movq   $0x1,0x118(%rax)
  0x00000000036b22ed: jmpq   0x00000000036b231e
  0x00000000036b22f2: cmpq   $0x0,0x120(%rax)
  0x00000000036b22fd: jne    0x00000000036b2316
  0x00000000036b22ff: mov    %rbx,0x120(%rax)
  0x00000000036b2306: movq   $0x1,0x128(%rax)
  0x00000000036b2311: jmpq   0x00000000036b231e
  0x00000000036b2316: addq   $0x1,0x108(%rax)
  0x00000000036b231e: mov    %rsi,%rdx          ;*invokevirtual get
                                                ; - java.lang.StringCoding::deref@1 (line 63)
                                                ; - java.lang.StringCoding::encode@3 (line 330)

  0x00000000036b2321: nop
  0x00000000036b2322: nop
  0x00000000036b2323: nop
  0x00000000036b2324: nop
  0x00000000036b2325: nop
  0x00000000036b2326: nop
  0x00000000036b2327: callq  0x00000000035d61a0  ; OopMap{[168]=Oop [176]=Oop off=332}
                                                ;*invokevirtual get
                                                ; - java.lang.StringCoding::deref@1 (line 63)
                                                ; - java.lang.StringCoding::encode@3 (line 330)
                                                ;   {optimized virtual_call}
  0x00000000036b232c: cmp    $0x0,%rax
  0x00000000036b2330: jne    0x00000000036b234b
  0x00000000036b2332: movabs $0x1c7bfd28,%rsi   ;   {metadata(method data for {method} {0x000000001c5c9310} &apos;deref&apos; &apos;(Ljava/lang/ThreadLocal;)Ljava/lang/Object;&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036b233c: orl    $0x100,0x130(%rsi)
  0x00000000036b2346: jmpq   0x00000000036b240c
  0x00000000036b234b: movabs $0x7c0005b10,%rdi  ;   {metadata(&apos;java/lang/ref/SoftReference&apos;)}
  0x00000000036b2355: mov    0x8(%rax),%esi
  0x00000000036b2358: shl    $0x3,%rsi
  0x00000000036b235c: cmp    0x38(%rsi),%rdi
  0x00000000036b2360: jne    0x00000000036b23f0
  0x00000000036b2366: movabs $0x1c7bfd28,%rsi   ;   {metadata(method data for {method} {0x000000001c5c9310} &apos;deref&apos; &apos;(Ljava/lang/ThreadLocal;)Ljava/lang/Object;&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036b2370: mov    0x8(%rax),%edi
  0x00000000036b2373: shl    $0x3,%rdi
  0x00000000036b2377: cmp    0x140(%rsi),%rdi
  0x00000000036b237e: jne    0x00000000036b238d
  0x00000000036b2380: addq   $0x1,0x148(%rsi)
  0x00000000036b2388: jmpq   0x00000000036b240c
  0x00000000036b238d: cmp    0x150(%rsi),%rdi
  0x00000000036b2394: jne    0x00000000036b23a3
  0x00000000036b2396: addq   $0x1,0x158(%rsi)
  0x00000000036b239e: jmpq   0x00000000036b240c
  0x00000000036b23a3: cmpq   $0x0,0x140(%rsi)
  0x00000000036b23ae: jne    0x00000000036b23c7
  0x00000000036b23b0: mov    %rdi,0x140(%rsi)
  0x00000000036b23b7: movq   $0x1,0x148(%rsi)
  0x00000000036b23c2: jmpq   0x00000000036b240c
  0x00000000036b23c7: cmpq   $0x0,0x150(%rsi)
  0x00000000036b23d2: jne    0x00000000036b23eb
  0x00000000036b23d4: mov    %rdi,0x150(%rsi)
  0x00000000036b23db: movq   $0x1,0x158(%rsi)
  0x00000000036b23e6: jmpq   0x00000000036b240c
  0x00000000036b23eb: jmpq   0x00000000036b240c
  0x00000000036b23f0: movabs $0x1c7bfd28,%rsi   ;   {metadata(method data for {method} {0x000000001c5c9310} &apos;deref&apos; &apos;(Ljava/lang/ThreadLocal;)Ljava/lang/Object;&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036b23fa: subq   $0x1,0x138(%rsi)
  0x00000000036b2402: jmpq   0x00000000036b3877
  0x00000000036b2407: jmpq   0x00000000036b240c
  0x00000000036b240c: mov    %rax,%r8           ;*checkcast
                                                ; - java.lang.StringCoding::deref@4 (line 63)
                                                ; - java.lang.StringCoding::encode@3 (line 330)

  0x00000000036b240f: cmp    $0x0,%r8
  0x00000000036b2413: movabs $0x1c7bfd28,%rdx   ;   {metadata(method data for {method} {0x000000001c5c9310} &apos;deref&apos; &apos;(Ljava/lang/ThreadLocal;)Ljava/lang/Object;&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036b241d: movabs $0x168,%rsi
  0x00000000036b2427: jne    0x00000000036b2437
  0x00000000036b242d: movabs $0x178,%rsi
  0x00000000036b2437: mov    (%rdx,%rsi,1),%rdi
  0x00000000036b243b: lea    0x1(%rdi),%rdi
  0x00000000036b243f: mov    %rdi,(%rdx,%rsi,1)
  0x00000000036b2443: jne    0x00000000036b2458  ;*ifnonnull
                                                ; - java.lang.StringCoding::deref@9 (line 64)
                                                ; - java.lang.StringCoding::encode@3 (line 330)

  0x00000000036b2449: movabs $0x0,%r8           ;   {oop(NULL)}
  0x00000000036b2453: jmpq   0x00000000036b25c6  ;*checkcast
                                                ; - java.lang.StringCoding::encode@6 (line 330)

  0x00000000036b2458: cmp    (%r8),%rax         ;*invokevirtual get
                                                ; - java.lang.StringCoding::deref@15 (line 66)
                                                ; - java.lang.StringCoding::encode@3 (line 330)
                                                ; implicit exception: dispatches to 0x00000000036b3880
  0x00000000036b245b: mov    %r8,%rdx
  0x00000000036b245e: movabs $0x1c7bfd28,%rsi   ;   {metadata(method data for {method} {0x000000001c5c9310} &apos;deref&apos; &apos;(Ljava/lang/ThreadLocal;)Ljava/lang/Object;&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036b2468: mov    0x8(%rdx),%edx
  0x00000000036b246b: shl    $0x3,%rdx
  0x00000000036b246f: cmp    0x190(%rsi),%rdx
  0x00000000036b2476: jne    0x00000000036b2485
  0x00000000036b2478: addq   $0x1,0x198(%rsi)
  0x00000000036b2480: jmpq   0x00000000036b24eb
  0x00000000036b2485: cmp    0x1a0(%rsi),%rdx
  0x00000000036b248c: jne    0x00000000036b249b
  0x00000000036b248e: addq   $0x1,0x1a8(%rsi)
  0x00000000036b2496: jmpq   0x00000000036b24eb
  0x00000000036b249b: cmpq   $0x0,0x190(%rsi)
  0x00000000036b24a6: jne    0x00000000036b24bf
  0x00000000036b24a8: mov    %rdx,0x190(%rsi)
  0x00000000036b24af: movq   $0x1,0x198(%rsi)
  0x00000000036b24ba: jmpq   0x00000000036b24eb
  0x00000000036b24bf: cmpq   $0x0,0x1a0(%rsi)
  0x00000000036b24ca: jne    0x00000000036b24e3
  0x00000000036b24cc: mov    %rdx,0x1a0(%rsi)
  0x00000000036b24d3: movq   $0x1,0x1a8(%rsi)
  0x00000000036b24de: jmpq   0x00000000036b24eb
  0x00000000036b24e3: addq   $0x1,0x188(%rsi)
  0x00000000036b24eb: movabs $0x1c7c0580,%rdx   ;   {metadata(method data for {method} {0x000000001c4b8860} &apos;get&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/ref/SoftReference&apos;)}
  0x00000000036b24f5: mov    0xdc(%rdx),%esi
  0x00000000036b24fb: add    $0x8,%esi
  0x00000000036b24fe: mov    %esi,0xdc(%rdx)
  0x00000000036b2504: movabs $0x1c4b8858,%rdx   ;   {metadata({method} {0x000000001c4b8860} &apos;get&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/ref/SoftReference&apos;)}
  0x00000000036b250e: and    $0x7ffff8,%esi
  0x00000000036b2514: cmp    $0x0,%esi
  0x00000000036b2517: je     0x00000000036b3885
  0x00000000036b251d: mov    %r8,%rdx
  0x00000000036b2520: movabs $0x1c7c0580,%rsi   ;   {metadata(method data for {method} {0x000000001c4b8860} &apos;get&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/ref/SoftReference&apos;)}
  0x00000000036b252a: addq   $0x1,0x108(%rsi)
  0x00000000036b2532: mov    0xc(%r8),%edx
  0x00000000036b2536: shl    $0x3,%rdx          ;*invokespecial get
                                                ; - java.lang.ref.SoftReference::get@1 (line 112)
                                                ; - java.lang.StringCoding::deref@15 (line 66)
                                                ; - java.lang.StringCoding::encode@3 (line 330)

  0x00000000036b253a: cmp    $0x0,%rdx
  0x00000000036b253e: movabs $0x1c7c0580,%rsi   ;   {metadata(method data for {method} {0x000000001c4b8860} &apos;get&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/ref/SoftReference&apos;)}
  0x00000000036b2548: movabs $0x118,%rdi
  0x00000000036b2552: je     0x00000000036b2562
  0x00000000036b2558: movabs $0x128,%rdi
  0x00000000036b2562: mov    (%rsi,%rdi,1),%rbx
  0x00000000036b2566: lea    0x1(%rbx),%rbx
  0x00000000036b256a: mov    %rbx,(%rsi,%rdi,1)
  0x00000000036b256e: je     0x00000000036b25c3  ;*ifnull
                                                ; - java.lang.ref.SoftReference::get@6 (line 113)
                                                ; - java.lang.StringCoding::deref@15 (line 66)
                                                ; - java.lang.StringCoding::encode@3 (line 330)

  0x00000000036b2574: mov    0x20(%r8),%rsi     ;*getfield timestamp
                                                ; - java.lang.ref.SoftReference::get@10 (line 113)
                                                ; - java.lang.StringCoding::deref@15 (line 66)
                                                ; - java.lang.StringCoding::encode@3 (line 330)

  0x00000000036b2578: movabs $0x76c1018a0,%rdi  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/ref/SoftReference&apos;)}
  0x00000000036b2582: mov    0x68(%rdi),%rbx    ;*getstatic clock
                                                ; - java.lang.ref.SoftReference::get@13 (line 113)
                                                ; - java.lang.StringCoding::deref@15 (line 66)
                                                ; - java.lang.StringCoding::encode@3 (line 330)

  0x00000000036b2586: cmp    %rbx,%rsi
  0x00000000036b2589: movabs $0x1c7c0580,%rsi   ;   {metadata(method data for {method} {0x000000001c4b8860} &apos;get&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/ref/SoftReference&apos;)}
  0x00000000036b2593: movabs $0x148,%rdi
  0x00000000036b259d: jne    0x00000000036b25ad
  0x00000000036b25a3: movabs $0x138,%rdi
  0x00000000036b25ad: mov    (%rsi,%rdi,1),%rax
  0x00000000036b25b1: lea    0x1(%rax),%rax
  0x00000000036b25b5: mov    %rax,(%rsi,%rdi,1)
  0x00000000036b25b9: je     0x00000000036b25c3  ;*lcmp
                                                ; - java.lang.ref.SoftReference::get@16 (line 113)
                                                ; - java.lang.StringCoding::deref@15 (line 66)
                                                ; - java.lang.StringCoding::encode@3 (line 330)

  0x00000000036b25bf: mov    %rbx,0x20(%r8)     ;*putfield timestamp
                                                ; - java.lang.ref.SoftReference::get@24 (line 114)
                                                ; - java.lang.StringCoding::deref@15 (line 66)
                                                ; - java.lang.StringCoding::encode@3 (line 330)

  0x00000000036b25c3: mov    %rdx,%r8
  0x00000000036b25c6: mov    0xa8(%rsp),%rdx
  0x00000000036b25ce: cmp    $0x0,%r8
  0x00000000036b25d2: jne    0x00000000036b25ed
  0x00000000036b25d4: movabs $0x1c7bb818,%rdi   ;   {metadata(method data for {method} {0x000000001c5c9bc8} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036b25de: orl    $0x100,0x110(%rdi)
  0x00000000036b25e8: jmpq   0x00000000036b26af
  0x00000000036b25ed: movabs $0x7c002e220,%rbx  ;   {metadata(&apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036b25f7: mov    0x8(%r8),%esi
  0x00000000036b25fb: shl    $0x3,%rsi
  0x00000000036b25ff: cmp    %rsi,%rbx
  0x00000000036b2602: jne    0x00000000036b2693
  0x00000000036b2608: movabs $0x1c7bb818,%rdi   ;   {metadata(method data for {method} {0x000000001c5c9bc8} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036b2612: mov    0x8(%r8),%ebx
  0x00000000036b2616: shl    $0x3,%rbx
  0x00000000036b261a: cmp    0x120(%rdi),%rbx
  0x00000000036b2621: jne    0x00000000036b2630
  0x00000000036b2623: addq   $0x1,0x128(%rdi)
  0x00000000036b262b: jmpq   0x00000000036b26af
  0x00000000036b2630: cmp    0x130(%rdi),%rbx
  0x00000000036b2637: jne    0x00000000036b2646
  0x00000000036b2639: addq   $0x1,0x138(%rdi)
  0x00000000036b2641: jmpq   0x00000000036b26af
  0x00000000036b2646: cmpq   $0x0,0x120(%rdi)
  0x00000000036b2651: jne    0x00000000036b266a
  0x00000000036b2653: mov    %rbx,0x120(%rdi)
  0x00000000036b265a: movq   $0x1,0x128(%rdi)
  0x00000000036b2665: jmpq   0x00000000036b26af
  0x00000000036b266a: cmpq   $0x0,0x130(%rdi)
  0x00000000036b2675: jne    0x00000000036b268e
  0x00000000036b2677: mov    %rbx,0x130(%rdi)
  0x00000000036b267e: movq   $0x1,0x138(%rdi)
  0x00000000036b2689: jmpq   0x00000000036b26af
  0x00000000036b268e: jmpq   0x00000000036b26af
  0x00000000036b2693: movabs $0x1c7bb818,%rdi   ;   {metadata(method data for {method} {0x000000001c5c9bc8} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036b269d: subq   $0x1,0x118(%rdi)
  0x00000000036b26a5: jmpq   0x00000000036b389c
  0x00000000036b26aa: jmpq   0x00000000036b26af
  0x00000000036b26af: mov    %r8,%rsi           ;*checkcast
                                                ; - java.lang.StringCoding::encode@6 (line 330)

  0x00000000036b26b2: mov    %rsi,0xc0(%rsp)
  0x00000000036b26ba: cmp    $0x0,%rdx
  0x00000000036b26be: movabs $0x1c7bb818,%r8    ;   {metadata(method data for {method} {0x000000001c5c9bc8} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036b26c8: movabs $0x148,%rdi
  0x00000000036b26d2: jne    0x00000000036b26e2
  0x00000000036b26d8: movabs $0x158,%rdi
  0x00000000036b26e2: mov    (%r8,%rdi,1),%rbx
  0x00000000036b26e6: lea    0x1(%rbx),%rbx
  0x00000000036b26ea: mov    %rbx,(%r8,%rdi,1)
  0x00000000036b26ee: jne    0x00000000036b270f  ;*ifnonnull
                                                ; - java.lang.StringCoding::encode@12 (line 331)

  0x00000000036b26f4: movabs $0x1c7bb818,%r8    ;   {metadata(method data for {method} {0x000000001c5c9bc8} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036b26fe: incl   0x168(%r8)
  0x00000000036b2705: movabs $0x76c27c1a0,%rdx  ;*goto
                                                ; - java.lang.StringCoding::encode@17 (line 331)
                                                ;   {oop(&quot;ISO-8859-1&quot;)}
  0x00000000036b270f: cmp    $0x0,%rsi
  0x00000000036b2713: movabs $0x1c7bb818,%r8    ;   {metadata(method data for {method} {0x000000001c5c9bc8} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036b271d: movabs $0x180,%rdi
  0x00000000036b2727: je     0x00000000036b2737
  0x00000000036b272d: movabs $0x190,%rdi
  0x00000000036b2737: mov    (%r8,%rdi,1),%rbx
  0x00000000036b273b: lea    0x1(%rbx),%rbx
  0x00000000036b273f: mov    %rbx,(%r8,%rdi,1)
  0x00000000036b2743: jne    0x00000000036b2756  ;*ifnull
                                                ; - java.lang.StringCoding::encode@25 (line 332)

  0x00000000036b2749: mov    %rdx,0xc8(%rsp)
  0x00000000036b2751: jmpq   0x00000000036b2dba  ;*aconst_null
                                                ; - java.lang.StringCoding::encode@54 (line 334)

  0x00000000036b2756: cmp    (%rsi),%rax        ;*invokevirtual requestedCharsetName
                                                ; - java.lang.StringCoding::encode@32 (line 332)
                                                ; implicit exception: dispatches to 0x00000000036b38a5
  0x00000000036b2759: mov    %rsi,%r8
  0x00000000036b275c: movabs $0x1c7bb818,%rdi   ;   {metadata(method data for {method} {0x000000001c5c9bc8} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036b2766: mov    0x8(%r8),%r8d
  0x00000000036b276a: shl    $0x3,%r8
  0x00000000036b276e: cmp    0x1a8(%rdi),%r8
  0x00000000036b2775: jne    0x00000000036b2784
  0x00000000036b2777: addq   $0x1,0x1b0(%rdi)
  0x00000000036b277f: jmpq   0x00000000036b27ea
  0x00000000036b2784: cmp    0x1b8(%rdi),%r8
  0x00000000036b278b: jne    0x00000000036b279a
  0x00000000036b278d: addq   $0x1,0x1c0(%rdi)
  0x00000000036b2795: jmpq   0x00000000036b27ea
  0x00000000036b279a: cmpq   $0x0,0x1a8(%rdi)
  0x00000000036b27a5: jne    0x00000000036b27be
  0x00000000036b27a7: mov    %r8,0x1a8(%rdi)
  0x00000000036b27ae: movq   $0x1,0x1b0(%rdi)
  0x00000000036b27b9: jmpq   0x00000000036b27ea
  0x00000000036b27be: cmpq   $0x0,0x1b8(%rdi)
  0x00000000036b27c9: jne    0x00000000036b27e2
  0x00000000036b27cb: mov    %r8,0x1b8(%rdi)
  0x00000000036b27d2: movq   $0x1,0x1c0(%rdi)
  0x00000000036b27dd: jmpq   0x00000000036b27ea
  0x00000000036b27e2: addq   $0x1,0x1a0(%rdi)
  0x00000000036b27ea: mov    0x18(%rsi),%r8d
  0x00000000036b27ee: shl    $0x3,%r8           ;*getfield requestedCharsetName
                                                ; - java.lang.StringCoding$StringEncoder::requestedCharsetName@1 (line 295)
                                                ; - java.lang.StringCoding::encode@32 (line 332)

  0x00000000036b27f2: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x00000000036b38aa
  0x00000000036b27f5: mov    %rdx,%rdi
  0x00000000036b27f8: movabs $0x1c7bb818,%rbx   ;   {metadata(method data for {method} {0x000000001c5c9bc8} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036b2802: mov    0x8(%rdi),%edi
  0x00000000036b2805: shl    $0x3,%rdi
  0x00000000036b2809: cmp    0x1d8(%rbx),%rdi
  0x00000000036b2810: jne    0x00000000036b281f
  0x00000000036b2812: addq   $0x1,0x1e0(%rbx)
  0x00000000036b281a: jmpq   0x00000000036b2885
  0x00000000036b281f: cmp    0x1e8(%rbx),%rdi
  0x00000000036b2826: jne    0x00000000036b2835
  0x00000000036b2828: addq   $0x1,0x1f0(%rbx)
  0x00000000036b2830: jmpq   0x00000000036b2885
  0x00000000036b2835: cmpq   $0x0,0x1d8(%rbx)
  0x00000000036b2840: jne    0x00000000036b2859
  0x00000000036b2842: mov    %rdi,0x1d8(%rbx)
  0x00000000036b2849: movq   $0x1,0x1e0(%rbx)
  0x00000000036b2854: jmpq   0x00000000036b2885
  0x00000000036b2859: cmpq   $0x0,0x1e8(%rbx)
  0x00000000036b2864: jne    0x00000000036b287d
  0x00000000036b2866: mov    %rdi,0x1e8(%rbx)
  0x00000000036b286d: movq   $0x1,0x1f0(%rbx)
  0x00000000036b2878: jmpq   0x00000000036b2885
  0x00000000036b287d: addq   $0x1,0x1d0(%rbx)
  0x00000000036b2885: mov    %rdx,%rdi
  0x00000000036b2888: mov    %rdi,%rdx          ;*invokevirtual equals
                                                ; - java.lang.StringCoding::encode@35 (line 332)

  0x00000000036b288b: mov    %rdi,0xc8(%rsp)
  0x00000000036b2893: nop
  0x00000000036b2894: nop
  0x00000000036b2895: nop
  0x00000000036b2896: nop
  0x00000000036b2897: callq  0x00000000035d61a0  ; OopMap{[176]=Oop [192]=Oop [200]=Oop off=1724}
                                                ;*invokevirtual equals
                                                ; - java.lang.StringCoding::encode@35 (line 332)
                                                ;   {optimized virtual_call}
  0x00000000036b289c: cmp    $0x0,%eax
  0x00000000036b289f: movabs $0x1c7bb818,%rdx   ;   {metadata(method data for {method} {0x000000001c5c9bc8} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036b28a9: movabs $0x200,%rsi
  0x00000000036b28b3: jne    0x00000000036b28c3
  0x00000000036b28b9: movabs $0x210,%rsi
  0x00000000036b28c3: mov    (%rdx,%rsi,1),%rdi
  0x00000000036b28c7: lea    0x1(%rdi),%rdi
  0x00000000036b28cb: mov    %rdi,(%rdx,%rsi,1)  ;*ifne
                                                ; - java.lang.StringCoding::encode@38 (line 332)

  0x00000000036b28cf: mov    0xc0(%rsp),%rsi    ;*aload
                                                ; - java.lang.StringCoding::encode@111 (line 344)

  0x00000000036b28d7: jne    0x00000000036b37a2  ;*ifne
                                                ; - java.lang.StringCoding::encode@38 (line 332)

  0x00000000036b28dd: mov    %rsi,%rdx
  0x00000000036b28e0: movabs $0x1c7bb818,%rdi   ;   {metadata(method data for {method} {0x000000001c5c9bc8} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036b28ea: movabs $0x7c002e220,%r10  ;   {metadata(&apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036b28f4: mov    %r10,0x228(%rdi)
  0x00000000036b28fb: addq   $0x1,0x230(%rdi)
  0x00000000036b2903: movabs $0x1c7c2d70,%rdx   ;   {metadata(method data for {method} {0x000000001c616b68} &apos;charsetName&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036b290d: mov    0xdc(%rdx),%edi
  0x00000000036b2913: add    $0x8,%edi
  0x00000000036b2916: mov    %edi,0xdc(%rdx)
  0x00000000036b291c: movabs $0x1c616b60,%rdx   ;   {metadata({method} {0x000000001c616b68} &apos;charsetName&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036b2926: and    $0x7ffff8,%edi
  0x00000000036b292c: cmp    $0x0,%edi
  0x00000000036b292f: je     0x00000000036b38af
  0x00000000036b2935: mov    0x10(%rsi),%edi
  0x00000000036b2938: shl    $0x3,%rdi          ;*getfield cs
                                                ; - java.lang.StringCoding$StringEncoder::charsetName@1 (line 289)
                                                ; - java.lang.StringCoding::encode@45 (line 333)

  0x00000000036b293c: cmp    $0x0,%rdi
  0x00000000036b2940: jne    0x00000000036b295b
  0x00000000036b2942: movabs $0x1c7c2d70,%rax   ;   {metadata(method data for {method} {0x000000001c616b68} &apos;charsetName&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036b294c: orl    $0x100,0x100(%rax)
  0x00000000036b2956: jmpq   0x00000000036b2a37
  0x00000000036b295b: movabs $0x7c00239b8,%rcx  ;   {metadata(&apos;sun/nio/cs/HistoricallyNamedCharset&apos;)}
  0x00000000036b2965: mov    0x8(%rdi),%eax
  0x00000000036b2968: shl    $0x3,%rax
  0x00000000036b296c: cmp    0x18(%rax),%rcx
  0x00000000036b2970: je     0x00000000036b2991
  0x00000000036b2976: cmp    %rcx,%rax
  0x00000000036b2979: je     0x00000000036b2991
  0x00000000036b297f: push   %rax
  0x00000000036b2980: push   %rcx
  0x00000000036b2981: callq  0x000000000368f960  ;   {runtime_call}
  0x00000000036b2986: pop    %rax
  0x00000000036b2987: pop    %rax
  0x00000000036b2988: cmp    $0x0,%eax
  0x00000000036b298b: je     0x00000000036b2a1b
  0x00000000036b2991: movabs $0x1c7c2d70,%rax   ;   {metadata(method data for {method} {0x000000001c616b68} &apos;charsetName&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036b299b: mov    0x8(%rdi),%ecx
  0x00000000036b299e: shl    $0x3,%rcx
  0x00000000036b29a2: cmp    0x110(%rax),%rcx
  0x00000000036b29a9: jne    0x00000000036b29b8
  0x00000000036b29ab: addq   $0x1,0x118(%rax)
  0x00000000036b29b3: jmpq   0x00000000036b2a3c
  0x00000000036b29b8: cmp    0x120(%rax),%rcx
  0x00000000036b29bf: jne    0x00000000036b29ce
  0x00000000036b29c1: addq   $0x1,0x128(%rax)
  0x00000000036b29c9: jmpq   0x00000000036b2a3c
  0x00000000036b29ce: cmpq   $0x0,0x110(%rax)
  0x00000000036b29d9: jne    0x00000000036b29f2
  0x00000000036b29db: mov    %rcx,0x110(%rax)
  0x00000000036b29e2: movq   $0x1,0x118(%rax)
  0x00000000036b29ed: jmpq   0x00000000036b2a3c
  0x00000000036b29f2: cmpq   $0x0,0x120(%rax)
  0x00000000036b29fd: jne    0x00000000036b2a16
  0x00000000036b29ff: mov    %rcx,0x120(%rax)
  0x00000000036b2a06: movq   $0x1,0x128(%rax)
  0x00000000036b2a11: jmpq   0x00000000036b2a3c
  0x00000000036b2a16: jmpq   0x00000000036b2a3c
  0x00000000036b2a1b: movabs $0x1c7c2d70,%rax   ;   {metadata(method data for {method} {0x000000001c616b68} &apos;charsetName&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036b2a25: subq   $0x1,0x108(%rax)
  0x00000000036b2a2d: jmpq   0x00000000036b2a37
  0x00000000036b2a32: jmpq   0x00000000036b2a3c
  0x00000000036b2a37: xor    %rdx,%rdx
  0x00000000036b2a3a: jmp    0x00000000036b2a46
  0x00000000036b2a3c: movabs $0x1,%rdx          ;*instanceof
                                                ; - java.lang.StringCoding$StringEncoder::charsetName@4 (line 289)
                                                ; - java.lang.StringCoding::encode@45 (line 333)

  0x00000000036b2a46: cmp    $0x0,%edx
  0x00000000036b2a49: movabs $0x1c7c2d70,%rdx   ;   {metadata(method data for {method} {0x000000001c616b68} &apos;charsetName&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036b2a53: movabs $0x138,%rbx
  0x00000000036b2a5d: je     0x00000000036b2a6d
  0x00000000036b2a63: movabs $0x148,%rbx
  0x00000000036b2a6d: mov    (%rdx,%rbx,1),%rax
  0x00000000036b2a71: lea    0x1(%rax),%rax
  0x00000000036b2a75: mov    %rax,(%rdx,%rbx,1)
  0x00000000036b2a79: je     0x00000000036b2c29  ;*ifeq
                                                ; - java.lang.StringCoding$StringEncoder::charsetName@7 (line 289)
                                                ; - java.lang.StringCoding::encode@45 (line 333)

  0x00000000036b2a7f: cmp    $0x0,%rdi
  0x00000000036b2a83: jne    0x00000000036b2a9e
  0x00000000036b2a85: movabs $0x1c7c2d70,%rbx   ;   {metadata(method data for {method} {0x000000001c616b68} &apos;charsetName&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036b2a8f: orl    $0x100,0x150(%rbx)
  0x00000000036b2a99: jmpq   0x00000000036b2b7a
  0x00000000036b2a9e: movabs $0x7c00239b8,%rax  ;   {metadata(&apos;sun/nio/cs/HistoricallyNamedCharset&apos;)}
  0x00000000036b2aa8: mov    0x8(%rdi),%ebx
  0x00000000036b2aab: shl    $0x3,%rbx
  0x00000000036b2aaf: cmp    0x18(%rbx),%rax
  0x00000000036b2ab3: je     0x00000000036b2ad4
  0x00000000036b2ab9: cmp    %rax,%rbx
  0x00000000036b2abc: je     0x00000000036b2ad4
  0x00000000036b2ac2: push   %rbx
  0x00000000036b2ac3: push   %rax
  0x00000000036b2ac4: callq  0x000000000368f960  ;   {runtime_call}
  0x00000000036b2ac9: pop    %rbx
  0x00000000036b2aca: pop    %rbx
  0x00000000036b2acb: cmp    $0x0,%ebx
  0x00000000036b2ace: je     0x00000000036b2b5e
  0x00000000036b2ad4: movabs $0x1c7c2d70,%rbx   ;   {metadata(method data for {method} {0x000000001c616b68} &apos;charsetName&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036b2ade: mov    0x8(%rdi),%eax
  0x00000000036b2ae1: shl    $0x3,%rax
  0x00000000036b2ae5: cmp    0x160(%rbx),%rax
  0x00000000036b2aec: jne    0x00000000036b2afb
  0x00000000036b2aee: addq   $0x1,0x168(%rbx)
  0x00000000036b2af6: jmpq   0x00000000036b2b7a
  0x00000000036b2afb: cmp    0x170(%rbx),%rax
  0x00000000036b2b02: jne    0x00000000036b2b11
  0x00000000036b2b04: addq   $0x1,0x178(%rbx)
  0x00000000036b2b0c: jmpq   0x00000000036b2b7a
  0x00000000036b2b11: cmpq   $0x0,0x160(%rbx)
  0x00000000036b2b1c: jne    0x00000000036b2b35
  0x00000000036b2b1e: mov    %rax,0x160(%rbx)
  0x00000000036b2b25: movq   $0x1,0x168(%rbx)
  0x00000000036b2b30: jmpq   0x00000000036b2b7a
  0x00000000036b2b35: cmpq   $0x0,0x170(%rbx)
  0x00000000036b2b40: jne    0x00000000036b2b59
  0x00000000036b2b42: mov    %rax,0x170(%rbx)
  0x00000000036b2b49: movq   $0x1,0x178(%rbx)
  0x00000000036b2b54: jmpq   0x00000000036b2b7a
  0x00000000036b2b59: jmpq   0x00000000036b2b7a
  0x00000000036b2b5e: movabs $0x1c7c2d70,%rbx   ;   {metadata(method data for {method} {0x000000001c616b68} &apos;charsetName&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036b2b68: subq   $0x1,0x158(%rbx)
  0x00000000036b2b70: jmpq   0x00000000036b38c6
  0x00000000036b2b75: jmpq   0x00000000036b2b7a
  0x00000000036b2b7a: mov    %rdi,%rdx          ;*checkcast
                                                ; - java.lang.StringCoding$StringEncoder::charsetName@14 (line 290)
                                                ; - java.lang.StringCoding::encode@45 (line 333)

  0x00000000036b2b7d: cmp    (%rdx),%rax        ;*invokeinterface historicalName
                                                ; - java.lang.StringCoding$StringEncoder::charsetName@17 (line 290)
                                                ; - java.lang.StringCoding::encode@45 (line 333)
                                                ; implicit exception: dispatches to 0x00000000036b38cf
  0x00000000036b2b80: mov    %rdx,%rdi
  0x00000000036b2b83: movabs $0x1c7c2d70,%rbx   ;   {metadata(method data for {method} {0x000000001c616b68} &apos;charsetName&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036b2b8d: mov    0x8(%rdi),%edi
  0x00000000036b2b90: shl    $0x3,%rdi
  0x00000000036b2b94: cmp    0x190(%rbx),%rdi
  0x00000000036b2b9b: jne    0x00000000036b2baa
  0x00000000036b2b9d: addq   $0x1,0x198(%rbx)
  0x00000000036b2ba5: jmpq   0x00000000036b2c10
  0x00000000036b2baa: cmp    0x1a0(%rbx),%rdi
  0x00000000036b2bb1: jne    0x00000000036b2bc0
  0x00000000036b2bb3: addq   $0x1,0x1a8(%rbx)
  0x00000000036b2bbb: jmpq   0x00000000036b2c10
  0x00000000036b2bc0: cmpq   $0x0,0x190(%rbx)
  0x00000000036b2bcb: jne    0x00000000036b2be4
  0x00000000036b2bcd: mov    %rdi,0x190(%rbx)
  0x00000000036b2bd4: movq   $0x1,0x198(%rbx)
  0x00000000036b2bdf: jmpq   0x00000000036b2c10
  0x00000000036b2be4: cmpq   $0x0,0x1a0(%rbx)
  0x00000000036b2bef: jne    0x00000000036b2c08
  0x00000000036b2bf1: mov    %rdi,0x1a0(%rbx)
  0x00000000036b2bf8: movq   $0x1,0x1a8(%rbx)
  0x00000000036b2c03: jmpq   0x00000000036b2c10
  0x00000000036b2c08: addq   $0x1,0x188(%rbx)
  0x00000000036b2c10: nop
  0x00000000036b2c11: nop
  0x00000000036b2c12: nop
  0x00000000036b2c13: nop
  0x00000000036b2c14: nop
  0x00000000036b2c15: movabs $0xffffffffffffffff,%rax
  0x00000000036b2c1f: callq  0x00000000035d63e0  ; OopMap{[176]=Oop [200]=Oop [192]=Oop off=2628}
                                                ;*invokeinterface historicalName
                                                ; - java.lang.StringCoding$StringEncoder::charsetName@17 (line 290)
                                                ; - java.lang.StringCoding::encode@45 (line 333)
                                                ;   {virtual_call}
  0x00000000036b2c24: jmpq   0x00000000036b2cc8  ;*invokevirtual equals
                                                ; - java.lang.StringCoding::encode@48 (line 333)

  0x00000000036b2c29: cmp    (%rdi),%rax        ;*invokevirtual name
                                                ; - java.lang.StringCoding$StringEncoder::charsetName@27 (line 291)
                                                ; - java.lang.StringCoding::encode@45 (line 333)
                                                ; implicit exception: dispatches to 0x00000000036b38d4
  0x00000000036b2c2c: mov    %rdi,%r8
  0x00000000036b2c2f: movabs $0x1c7c2d70,%rdx   ;   {metadata(method data for {method} {0x000000001c616b68} &apos;charsetName&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036b2c39: mov    0x8(%r8),%r8d
  0x00000000036b2c3d: shl    $0x3,%r8
  0x00000000036b2c41: cmp    0x1c0(%rdx),%r8
  0x00000000036b2c48: jne    0x00000000036b2c57
  0x00000000036b2c4a: addq   $0x1,0x1c8(%rdx)
  0x00000000036b2c52: jmpq   0x00000000036b2cbd
  0x00000000036b2c57: cmp    0x1d0(%rdx),%r8
  0x00000000036b2c5e: jne    0x00000000036b2c6d
  0x00000000036b2c60: addq   $0x1,0x1d8(%rdx)
  0x00000000036b2c68: jmpq   0x00000000036b2cbd
  0x00000000036b2c6d: cmpq   $0x0,0x1c0(%rdx)
  0x00000000036b2c78: jne    0x00000000036b2c91
  0x00000000036b2c7a: mov    %r8,0x1c0(%rdx)
  0x00000000036b2c81: movq   $0x1,0x1c8(%rdx)
  0x00000000036b2c8c: jmpq   0x00000000036b2cbd
  0x00000000036b2c91: cmpq   $0x0,0x1d0(%rdx)
  0x00000000036b2c9c: jne    0x00000000036b2cb5
  0x00000000036b2c9e: mov    %r8,0x1d0(%rdx)
  0x00000000036b2ca5: movq   $0x1,0x1d8(%rdx)
  0x00000000036b2cb0: jmpq   0x00000000036b2cbd
  0x00000000036b2cb5: addq   $0x1,0x1b8(%rdx)
  0x00000000036b2cbd: mov    0xc(%rdi),%r8d
  0x00000000036b2cc1: shl    $0x3,%r8           ;*getfield name
                                                ; - java.nio.charset.Charset::name@1 (line 654)
                                                ; - java.lang.StringCoding$StringEncoder::charsetName@27 (line 291)
                                                ; - java.lang.StringCoding::encode@45 (line 333)

  0x00000000036b2cc5: mov    %r8,%rax
  0x00000000036b2cc8: mov    0xc8(%rsp),%rdx
  0x00000000036b2cd0: movabs $0x1c7bb818,%r8    ;   {metadata(method data for {method} {0x000000001c5c9bc8} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036b2cda: mov    0x8(%rdx),%edx
  0x00000000036b2cdd: shl    $0x3,%rdx
  0x00000000036b2ce1: cmp    0x258(%r8),%rdx
  0x00000000036b2ce8: jne    0x00000000036b2cf7
  0x00000000036b2cea: addq   $0x1,0x260(%r8)
  0x00000000036b2cf2: jmpq   0x00000000036b2d5d
  0x00000000036b2cf7: cmp    0x268(%r8),%rdx
  0x00000000036b2cfe: jne    0x00000000036b2d0d
  0x00000000036b2d00: addq   $0x1,0x270(%r8)
  0x00000000036b2d08: jmpq   0x00000000036b2d5d
  0x00000000036b2d0d: cmpq   $0x0,0x258(%r8)
  0x00000000036b2d18: jne    0x00000000036b2d31
  0x00000000036b2d1a: mov    %rdx,0x258(%r8)
  0x00000000036b2d21: movq   $0x1,0x260(%r8)
  0x00000000036b2d2c: jmpq   0x00000000036b2d5d
  0x00000000036b2d31: cmpq   $0x0,0x268(%r8)
  0x00000000036b2d3c: jne    0x00000000036b2d55
  0x00000000036b2d3e: mov    %rdx,0x268(%r8)
  0x00000000036b2d45: movq   $0x1,0x270(%r8)
  0x00000000036b2d50: jmpq   0x00000000036b2d5d
  0x00000000036b2d55: addq   $0x1,0x250(%r8)
  0x00000000036b2d5d: mov    %rax,%r8
  0x00000000036b2d60: mov    0xc8(%rsp),%rdx    ;*invokevirtual equals
                                                ; - java.lang.StringCoding::encode@48 (line 333)

  0x00000000036b2d68: nop
  0x00000000036b2d69: nop
  0x00000000036b2d6a: nop
  0x00000000036b2d6b: nop
  0x00000000036b2d6c: nop
  0x00000000036b2d6d: nop
  0x00000000036b2d6e: nop
  0x00000000036b2d6f: callq  0x00000000035d61a0  ; OopMap{[176]=Oop [200]=Oop [192]=Oop off=2964}
                                                ;*invokevirtual equals
                                                ; - java.lang.StringCoding::encode@48 (line 333)
                                                ;   {optimized virtual_call}
  0x00000000036b2d74: cmp    $0x0,%eax
  0x00000000036b2d77: movabs $0x1c7bb818,%rdx   ;   {metadata(method data for {method} {0x000000001c5c9bc8} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036b2d81: movabs $0x280,%rsi
  0x00000000036b2d8b: jne    0x00000000036b2d9b
  0x00000000036b2d91: movabs $0x290,%rsi
  0x00000000036b2d9b: mov    (%rdx,%rsi,1),%rdi
  0x00000000036b2d9f: lea    0x1(%rdi),%rdi
  0x00000000036b2da3: mov    %rdi,(%rdx,%rsi,1)
  0x00000000036b2da7: je     0x00000000036b2dba  ;*ifne
                                                ; - java.lang.StringCoding::encode@51 (line 333)

  0x00000000036b2dad: mov    0xc0(%rsp),%rsi
  0x00000000036b2db5: jmpq   0x00000000036b37a2  ;*aload
                                                ; - java.lang.StringCoding::encode@111 (line 344)

  0x00000000036b2dba: movabs $0x1c7bb818,%rdx   ;   {metadata(method data for {method} {0x000000001c5c9bc8} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036b2dc4: addq   $0x1,0x2a0(%rdx)
  0x00000000036b2dcc: movabs $0x1c7c37b0,%rdx   ;   {metadata(method data for {method} {0x000000001c5c9650} &apos;lookupCharset&apos; &apos;(Ljava/lang/String;)Ljava/nio/charset/Charset;&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036b2dd6: mov    0xdc(%rdx),%esi
  0x00000000036b2ddc: add    $0x8,%esi
  0x00000000036b2ddf: mov    %esi,0xdc(%rdx)
  0x00000000036b2de5: movabs $0x1c5c9648,%rdx   ;   {metadata({method} {0x000000001c5c9650} &apos;lookupCharset&apos; &apos;(Ljava/lang/String;)Ljava/nio/charset/Charset;&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036b2def: and    $0x7ffff8,%esi
  0x00000000036b2df5: cmp    $0x0,%esi
  0x00000000036b2df8: je     0x00000000036b38d9
  0x00000000036b2dfe: movabs $0x1c7c37b0,%rdx   ;   {metadata(method data for {method} {0x000000001c5c9650} &apos;lookupCharset&apos; &apos;(Ljava/lang/String;)Ljava/nio/charset/Charset;&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036b2e08: addq   $0x1,0x108(%rdx)
  0x00000000036b2e10: movabs $0x1c7c3f40,%rdx   ;   {metadata(method data for {method} {0x000000001c588560} &apos;isSupported&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/nio/charset/Charset&apos;)}
  0x00000000036b2e1a: mov    0xdc(%rdx),%esi
  0x00000000036b2e20: add    $0x8,%esi
  0x00000000036b2e23: mov    %esi,0xdc(%rdx)
  0x00000000036b2e29: movabs $0x1c588558,%rdx   ;   {metadata({method} {0x000000001c588560} &apos;isSupported&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/nio/charset/Charset&apos;)}
  0x00000000036b2e33: and    $0x7ffff8,%esi
  0x00000000036b2e39: cmp    $0x0,%esi
  0x00000000036b2e3c: je     0x00000000036b38f0
  0x00000000036b2e42: movabs $0x1c7c3f40,%rdx   ;   {metadata(method data for {method} {0x000000001c588560} &apos;isSupported&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/nio/charset/Charset&apos;)}
  0x00000000036b2e4c: addq   $0x1,0x108(%rdx)
  0x00000000036b2e54: mov    0xc8(%rsp),%rdx    ;*invokestatic lookup
                                                ; - java.nio.charset.Charset::isSupported@1 (line 505)
                                                ; - java.lang.StringCoding::lookupCharset@1 (line 99)
                                                ; - java.lang.StringCoding::encode@59 (line 336)

  0x00000000036b2e5c: nop
  0x00000000036b2e5d: nop
  0x00000000036b2e5e: nop
  0x00000000036b2e5f: callq  0x00000000035d6620  ; OopMap{[176]=Oop [200]=Oop off=3204}
                                                ;*invokestatic lookup
                                                ; - java.nio.charset.Charset::isSupported@1 (line 505)
                                                ; - java.lang.StringCoding::lookupCharset@1 (line 99)
                                                ; - java.lang.StringCoding::encode@59 (line 336)
                                                ;   {static_call}
  0x00000000036b2e64: cmp    $0x0,%rax
  0x00000000036b2e68: movabs $0x1c7c3f40,%rdx   ;   {metadata(method data for {method} {0x000000001c588560} &apos;isSupported&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/nio/charset/Charset&apos;)}
  0x00000000036b2e72: movabs $0x118,%rsi
  0x00000000036b2e7c: je     0x00000000036b2e8c
  0x00000000036b2e82: movabs $0x128,%rsi
  0x00000000036b2e8c: mov    (%rdx,%rsi,1),%rdi
  0x00000000036b2e90: lea    0x1(%rdi),%rdi
  0x00000000036b2e94: mov    %rdi,(%rdx,%rsi,1)
  0x00000000036b2e98: je     0x00000000036b2eb8  ;*ifnull
                                                ; - java.nio.charset.Charset::isSupported@4 (line 505)
                                                ; - java.lang.StringCoding::lookupCharset@1 (line 99)
                                                ; - java.lang.StringCoding::encode@59 (line 336)

  0x00000000036b2e9e: movabs $0x1c7c3f40,%rdx   ;   {metadata(method data for {method} {0x000000001c588560} &apos;isSupported&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/nio/charset/Charset&apos;)}
  0x00000000036b2ea8: incl   0x138(%rdx)
  0x00000000036b2eae: mov    $0x1,%edx
  0x00000000036b2eb3: jmpq   0x00000000036b2ebd  ;*goto
                                                ; - java.nio.charset.Charset::isSupported@8 (line 505)
                                                ; - java.lang.StringCoding::lookupCharset@1 (line 99)
                                                ; - java.lang.StringCoding::encode@59 (line 336)

  0x00000000036b2eb8: mov    $0x0,%edx          ;*ireturn
                                                ; - java.nio.charset.Charset::isSupported@12 (line 505)
                                                ; - java.lang.StringCoding::lookupCharset@1 (line 99)
                                                ; - java.lang.StringCoding::encode@59 (line 336)

  0x00000000036b2ebd: and    $0x1,%edx
  0x00000000036b2ec0: cmp    $0x0,%edx
  0x00000000036b2ec3: movabs $0x1c7c37b0,%rdx   ;   {metadata(method data for {method} {0x000000001c5c9650} &apos;lookupCharset&apos; &apos;(Ljava/lang/String;)Ljava/nio/charset/Charset;&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036b2ecd: movabs $0x118,%rsi
  0x00000000036b2ed7: je     0x00000000036b2ee7
  0x00000000036b2edd: movabs $0x128,%rsi
  0x00000000036b2ee7: mov    (%rdx,%rsi,1),%rdi
  0x00000000036b2eeb: lea    0x1(%rdi),%rdi
  0x00000000036b2eef: mov    %rdi,(%rdx,%rsi,1)
  0x00000000036b2ef3: je     0x00000000036b2f9e  ;*ifeq
                                                ; - java.lang.StringCoding::lookupCharset@4 (line 99)
                                                ; - java.lang.StringCoding::encode@59 (line 336)

  0x00000000036b2ef9: movabs $0x1c7c37b0,%rdx   ;   {metadata(method data for {method} {0x000000001c5c9650} &apos;lookupCharset&apos; &apos;(Ljava/lang/String;)Ljava/nio/charset/Charset;&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036b2f03: addq   $0x1,0x138(%rdx)
  0x00000000036b2f0b: movabs $0x1c7c5f40,%rdx   ;   {metadata(method data for {method} {0x000000001c588608} &apos;forName&apos; &apos;(Ljava/lang/String;)Ljava/nio/charset/Charset;&apos; in &apos;java/nio/charset/Charset&apos;)}
  0x00000000036b2f15: mov    0xdc(%rdx),%esi
  0x00000000036b2f1b: add    $0x8,%esi
  0x00000000036b2f1e: mov    %esi,0xdc(%rdx)
  0x00000000036b2f24: movabs $0x1c588600,%rdx   ;   {metadata({method} {0x000000001c588608} &apos;forName&apos; &apos;(Ljava/lang/String;)Ljava/nio/charset/Charset;&apos; in &apos;java/nio/charset/Charset&apos;)}
  0x00000000036b2f2e: and    $0x7ffff8,%esi
  0x00000000036b2f34: cmp    $0x0,%esi
  0x00000000036b2f37: je     0x00000000036b3907
  0x00000000036b2f3d: movabs $0x1c7c5f40,%rdx   ;   {metadata(method data for {method} {0x000000001c588608} &apos;forName&apos; &apos;(Ljava/lang/String;)Ljava/nio/charset/Charset;&apos; in &apos;java/nio/charset/Charset&apos;)}
  0x00000000036b2f47: addq   $0x1,0x108(%rdx)
  0x00000000036b2f4f: mov    0xc8(%rsp),%rdx    ;*invokestatic lookup
                                                ; - java.nio.charset.Charset::forName@1 (line 528)
                                                ; - java.lang.StringCoding::lookupCharset@8 (line 101)
                                                ; - java.lang.StringCoding::encode@59 (line 336)

  0x00000000036b2f57: callq  0x00000000035d6620  ; OopMap{[176]=Oop [200]=Oop off=3452}
                                                ;*invokestatic lookup
                                                ; - java.nio.charset.Charset::forName@1 (line 528)
                                                ; - java.lang.StringCoding::lookupCharset@8 (line 101)
                                                ; - java.lang.StringCoding::encode@59 (line 336)
                                                ;   {static_call}
  0x00000000036b2f5c: cmp    $0x0,%rax
  0x00000000036b2f60: movabs $0x1c7c5f40,%rdx   ;   {metadata(method data for {method} {0x000000001c588608} &apos;forName&apos; &apos;(Ljava/lang/String;)Ljava/nio/charset/Charset;&apos; in &apos;java/nio/charset/Charset&apos;)}
  0x00000000036b2f6a: movabs $0x118,%rsi
  0x00000000036b2f74: je     0x00000000036b2f84
  0x00000000036b2f7a: movabs $0x128,%rsi
  0x00000000036b2f84: mov    (%rdx,%rsi,1),%rdi
  0x00000000036b2f88: lea    0x1(%rdi),%rdi
  0x00000000036b2f8c: mov    %rdi,(%rdx,%rsi,1)
  0x00000000036b2f90: je     0x00000000036b30c9  ;*ifnull
                                                ; - java.nio.charset.Charset::forName@6 (line 529)
                                                ; - java.lang.StringCoding::lookupCharset@8 (line 101)
                                                ; - java.lang.StringCoding::encode@59 (line 336)

  0x00000000036b2f96: mov    %rax,%r8
  0x00000000036b2f99: jmpq   0x00000000036b2fa8
  0x00000000036b2f9e: movabs $0x0,%r8           ;*astore
                                                ; - java.lang.StringCoding::encode@62 (line 336)
                                                ;   {oop(NULL)}
  0x00000000036b2fa8: cmp    $0x0,%r8
  0x00000000036b2fac: movabs $0x1c7bb818,%rdx   ;   {metadata(method data for {method} {0x000000001c5c9bc8} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036b2fb6: movabs $0x2b0,%rsi
  0x00000000036b2fc0: je     0x00000000036b2fd0
  0x00000000036b2fc6: movabs $0x2c0,%rsi
  0x00000000036b2fd0: mov    (%rdx,%rsi,1),%rdi
  0x00000000036b2fd4: lea    0x1(%rdi),%rdi
  0x00000000036b2fd8: mov    %rdi,(%rdx,%rsi,1)
  0x00000000036b2fdc: jne    0x00000000036b2ff1  ;*ifnull
                                                ; - java.lang.StringCoding::encode@66 (line 337)

  0x00000000036b2fe2: movabs $0x0,%rsi          ;   {oop(NULL)}
  0x00000000036b2fec: jmpq   0x00000000036b30b4  ;*goto
                                                ; - java.lang.StringCoding::encode@83 (line 339)

  0x00000000036b2ff1: movabs $0x7c002e220,%rdx  ;   {metadata(&apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036b2ffb: mov    0x60(%r15),%rax
  0x00000000036b2fff: lea    0x20(%rax),%rdi
  0x00000000036b3003: cmp    0x70(%r15),%rdi
  0x00000000036b3007: ja     0x00000000036b391e
  0x00000000036b300d: mov    %rdi,0x60(%r15)
  0x00000000036b3011: mov    0xa8(%rdx),%rcx
  0x00000000036b3018: mov    %rcx,(%rax)
  0x00000000036b301b: mov    %rdx,%rcx
  0x00000000036b301e: shr    $0x3,%rcx
  0x00000000036b3022: mov    %ecx,0x8(%rax)
  0x00000000036b3025: xor    %rcx,%rcx
  0x00000000036b3028: mov    %ecx,0xc(%rax)
  0x00000000036b302b: xor    %rcx,%rcx
  0x00000000036b302e: mov    %rcx,0x10(%rax)
  0x00000000036b3032: mov    %rcx,0x18(%rax)    ;*new  ; - java.lang.StringCoding::encode@69 (line 338)

  0x00000000036b3036: mov    %rax,%r9
  0x00000000036b3039: movabs $0x1c7bb818,%rdx   ;   {metadata(method data for {method} {0x000000001c5c9bc8} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036b3043: addq   $0x1,0x2d0(%rdx)
  0x00000000036b304b: movabs $0x1c7c65e0,%r9    ;   {metadata(method data for {method} {0x000000001c616df8} &apos;&lt;init&gt;&apos; &apos;(Ljava/nio/charset/Charset;Ljava/lang/String;Ljava/lang/StringCoding$1;)V&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036b3055: mov    0xdc(%r9),%edx
  0x00000000036b305c: add    $0x8,%edx
  0x00000000036b305f: mov    %edx,0xdc(%r9)
  0x00000000036b3066: movabs $0x1c616df0,%r9    ;   {metadata({method} {0x000000001c616df8} &apos;&lt;init&gt;&apos; &apos;(Ljava/nio/charset/Charset;Ljava/lang/String;Ljava/lang/StringCoding$1;)V&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036b3070: and    $0x7ffff8,%edx
  0x00000000036b3076: cmp    $0x0,%edx
  0x00000000036b3079: je     0x00000000036b392b
  0x00000000036b307f: mov    %rax,%r9
  0x00000000036b3082: movabs $0x1c7c65e0,%rdx   ;   {metadata(method data for {method} {0x000000001c616df8} &apos;&lt;init&gt;&apos; &apos;(Ljava/nio/charset/Charset;Ljava/lang/String;Ljava/lang/StringCoding$1;)V&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036b308c: addq   $0x1,0x108(%rdx)
  0x00000000036b3094: mov    0xc8(%rsp),%r9
  0x00000000036b309c: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringCoding$StringEncoder::&lt;init&gt;@3 (line 273)
                                                ; - java.lang.StringCoding::encode@78 (line 338)

  0x00000000036b309f: mov    %rax,0xd0(%rsp)
  0x00000000036b30a7: callq  0x00000000035d61a0  ; OopMap{[176]=Oop [200]=Oop [208]=Oop off=3788}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringCoding$StringEncoder::&lt;init&gt;@3 (line 273)
                                                ; - java.lang.StringCoding::encode@78 (line 338)
                                                ;   {optimized virtual_call}
  0x00000000036b30ac: mov    0xd0(%rsp),%rsi
  0x00000000036b30b4: movabs $0x1c7bb818,%rdx   ;   {metadata(method data for {method} {0x000000001c5c9bc8} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036b30be: incl   0x2e0(%rdx)
  0x00000000036b30c4: jmpq   0x00000000036b31f1  ;*goto
                                                ; - java.lang.StringCoding::encode@83 (line 339)

  0x00000000036b30c9: nopl   0x0(%rax)
  0x00000000036b30d0: jmpq   0x00000000036b3951  ;   {no_reloc}
  0x00000000036b30d5: add    %al,(%rax)
  0x00000000036b30d7: add    %al,(%rax)
  0x00000000036b30d9: add    %ch,%cl
  0x00000000036b30db: jl     0x00000000036b30e5
  0x00000000036b30dd: add    %al,(%rax)         ;*new  ; - java.nio.charset.Charset::forName@11 (line 531)
                                                ; - java.lang.StringCoding::lookupCharset@8 (line 101)
                                                ; - java.lang.StringCoding::encode@59 (line 336)

  0x00000000036b30df: mov    %rax,%r8
  0x00000000036b30e2: movabs $0x1c7c5f40,%rdx   ;   {metadata(method data for {method} {0x000000001c588608} &apos;forName&apos; &apos;(Ljava/lang/String;)Ljava/nio/charset/Charset;&apos; in &apos;java/nio/charset/Charset&apos;)}
  0x00000000036b30ec: addq   $0x1,0x138(%rdx)
  0x00000000036b30f4: mov    0xc8(%rsp),%r8
  0x00000000036b30fc: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.nio.charset.Charset::forName@16 (line 531)
                                                ; - java.lang.StringCoding::lookupCharset@8 (line 101)
                                                ; - java.lang.StringCoding::encode@59 (line 336)

  0x00000000036b30ff: mov    %rax,0xd8(%rsp)
  0x00000000036b3107: callq  0x00000000035d61a0  ; OopMap{[176]=Oop [200]=Oop [216]=Oop off=3884}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.nio.charset.Charset::forName@16 (line 531)
                                                ; - java.lang.StringCoding::lookupCharset@8 (line 101)
                                                ; - java.lang.StringCoding::encode@59 (line 336)
                                                ;   {optimized virtual_call}
  0x00000000036b310c: mov    0xd8(%rsp),%rax    ; OopMap{[176]=Oop [200]=Oop rax=Oop off=3892}
                                                ;*athrow
                                                ; - java.nio.charset.Charset::forName@19 (line 531)
                                                ; - java.lang.StringCoding::lookupCharset@8 (line 101)
                                                ; - java.lang.StringCoding::encode@59 (line 336)

  0x00000000036b3114: movabs $0x36b3114,%rdx    ;   {section_word}
  0x00000000036b311e: callq  0x000000000368eda0  ;   {runtime_call}
  0x00000000036b3123: nop                       ;*athrow
                                                ; - java.nio.charset.Charset::forName@19 (line 531)
                                                ; - java.lang.StringCoding::lookupCharset@8 (line 101)
                                                ; - java.lang.StringCoding::encode@59 (line 336)

  0x00000000036b3124: mov    0x2a8(%r15),%rax
  0x00000000036b312b: xor    %r10,%r10
  0x00000000036b312e: mov    %r10,0x2a8(%r15)
  0x00000000036b3135: xor    %r10,%r10
  0x00000000036b3138: mov    %r10,0x2b0(%r15)
  0x00000000036b313f: mov    %rax,%r8
  0x00000000036b3142: nopw   0x0(%rax,%rax,1)
  0x00000000036b3148: jmpq   0x00000000036b3977  ;   {no_reloc}
  0x00000000036b314d: add    %al,(%rax)
  0x00000000036b314f: add    %al,(%rax)
  0x00000000036b3151: add    %cl,-0x75(%rcx)
  0x00000000036b3154: rex.RXB (bad) 
  0x00000000036b3156: lea    0x20(%rax),%rdi
  0x00000000036b315a: cmp    0x70(%r15),%rdi
  0x00000000036b315e: ja     0x00000000036b3981
  0x00000000036b3164: mov    %rdi,0x60(%r15)
  0x00000000036b3168: mov    0xa8(%rdx),%rcx
  0x00000000036b316f: mov    %rcx,(%rax)
  0x00000000036b3172: mov    %rdx,%rcx
  0x00000000036b3175: shr    $0x3,%rcx
  0x00000000036b3179: mov    %ecx,0x8(%rax)
  0x00000000036b317c: xor    %rcx,%rcx
  0x00000000036b317f: mov    %ecx,0xc(%rax)
  0x00000000036b3182: xor    %rcx,%rcx
  0x00000000036b3185: mov    %rcx,0x10(%rax)
  0x00000000036b3189: mov    %rcx,0x18(%rax)    ;*new  ; - java.lang.StringCoding::lookupCharset@13 (line 103)
                                                ; - java.lang.StringCoding::encode@59 (line 336)

  0x00000000036b318d: mov    %rax,%rdx
  0x00000000036b3190: movabs $0x1c7c37b0,%rsi   ;   {metadata(method data for {method} {0x000000001c5c9650} &apos;lookupCharset&apos; &apos;(Ljava/lang/String;)Ljava/nio/charset/Charset;&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036b319a: addq   $0x1,0x148(%rsi)
  0x00000000036b31a2: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringCoding::lookupCharset@18 (line 103)
                                                ; - java.lang.StringCoding::encode@59 (line 336)

  0x00000000036b31a5: mov    %rax,0xe0(%rsp)
  0x00000000036b31ad: nop
  0x00000000036b31ae: nop
  0x00000000036b31af: callq  0x00000000035d61a0  ; OopMap{[176]=Oop [200]=Oop [224]=Oop off=4052}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringCoding::lookupCharset@18 (line 103)
                                                ; - java.lang.StringCoding::encode@59 (line 336)
                                                ;   {optimized virtual_call}
  0x00000000036b31b4: mov    0xe0(%rsp),%rax    ; OopMap{[176]=Oop [200]=Oop rax=Oop off=4060}
                                                ;*athrow
                                                ; - java.lang.StringCoding::lookupCharset@21 (line 103)
                                                ; - java.lang.StringCoding::encode@59 (line 336)

  0x00000000036b31bc: movabs $0x36b31bc,%rdx    ;   {section_word}
  0x00000000036b31c6: callq  0x000000000368eda0  ;   {runtime_call}
  0x00000000036b31cb: nop                       ;*athrow
                                                ; - java.lang.StringCoding::lookupCharset@21 (line 103)
                                                ; - java.lang.StringCoding::encode@59 (line 336)

  0x00000000036b31cc: mov    0x2a8(%r15),%rax
  0x00000000036b31d3: xor    %r10,%r10
  0x00000000036b31d6: mov    %r10,0x2a8(%r15)
  0x00000000036b31dd: xor    %r10,%r10
  0x00000000036b31e0: mov    %r10,0x2b0(%r15)
  0x00000000036b31e7: movabs $0x0,%rsi          ;*aload
                                                ; - java.lang.StringCoding::encode@88 (line 340)
                                                ;   {oop(NULL)}
  0x00000000036b31f1: cmp    $0x0,%rsi
  0x00000000036b31f5: movabs $0x1c7bb818,%rdx   ;   {metadata(method data for {method} {0x000000001c5c9bc8} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036b31ff: movabs $0x2f8,%rdi
  0x00000000036b3209: jne    0x00000000036b3219
  0x00000000036b320f: movabs $0x308,%rdi
  0x00000000036b3219: mov    (%rdx,%rdi,1),%rax
  0x00000000036b321d: lea    0x1(%rax),%rax
  0x00000000036b3221: mov    %rax,(%rdx,%rdi,1)
  0x00000000036b3225: je     0x00000000036b37fb  ;*ifnonnull
                                                ; - java.lang.StringCoding::encode@90 (line 340)

  0x00000000036b322b: movabs $0x1c7bb818,%rdx   ;   {metadata(method data for {method} {0x000000001c5c9bc8} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036b3235: addq   $0x1,0x328(%rdx)
  0x00000000036b323d: movabs $0x1c7c6b18,%rdx   ;   {metadata(method data for {method} {0x000000001c5c93b0} &apos;set&apos; &apos;(Ljava/lang/ThreadLocal;Ljava/lang/Object;)V&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036b3247: mov    0xdc(%rdx),%edi
  0x00000000036b324d: add    $0x8,%edi
  0x00000000036b3250: mov    %edi,0xdc(%rdx)
  0x00000000036b3256: movabs $0x1c5c93a8,%rdx   ;   {metadata({method} {0x000000001c5c93b0} &apos;set&apos; &apos;(Ljava/lang/ThreadLocal;Ljava/lang/Object;)V&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036b3260: and    $0x7ffff8,%edi
  0x00000000036b3266: cmp    $0x0,%edi
  0x00000000036b3269: je     0x00000000036b398e
  0x00000000036b326f: movabs $0x7c0005b10,%rdx  ;   {metadata(&apos;java/lang/ref/SoftReference&apos;)}
  0x00000000036b3279: mov    %rsi,%rbx
  0x00000000036b327c: mov    0x60(%r15),%rax
  0x00000000036b3280: lea    0x28(%rax),%rdi
  0x00000000036b3284: cmp    0x70(%r15),%rdi
  0x00000000036b3288: ja     0x00000000036b39a5
  0x00000000036b328e: mov    %rdi,0x60(%r15)
  0x00000000036b3292: mov    0xa8(%rdx),%rcx
  0x00000000036b3299: mov    %rcx,(%rax)
  0x00000000036b329c: mov    %rdx,%rcx
  0x00000000036b329f: shr    $0x3,%rcx
  0x00000000036b32a3: mov    %ecx,0x8(%rax)
  0x00000000036b32a6: xor    %rcx,%rcx
  0x00000000036b32a9: mov    %ecx,0xc(%rax)
  0x00000000036b32ac: xor    %rcx,%rcx
  0x00000000036b32af: mov    %rcx,0x10(%rax)
  0x00000000036b32b3: mov    %rcx,0x18(%rax)
  0x00000000036b32b7: mov    %rcx,0x20(%rax)    ;*new  ; - java.lang.StringCoding::set@1 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)

  0x00000000036b32bb: mov    %rax,%r8
  0x00000000036b32be: movabs $0x1c7c6b18,%r9    ;   {metadata(method data for {method} {0x000000001c5c93b0} &apos;set&apos; &apos;(Ljava/lang/ThreadLocal;Ljava/lang/Object;)V&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036b32c8: addq   $0x1,0x108(%r9)
  0x00000000036b32d0: movabs $0x1c7c6ca8,%r8    ;   {metadata(method data for {method} {0x000000001c4b8710} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;)V&apos; in &apos;java/lang/ref/SoftReference&apos;)}
  0x00000000036b32da: mov    0xdc(%r8),%r9d
  0x00000000036b32e1: add    $0x8,%r9d
  0x00000000036b32e5: mov    %r9d,0xdc(%r8)
  0x00000000036b32ec: movabs $0x1c4b8708,%r8    ;   {metadata({method} {0x000000001c4b8710} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;)V&apos; in &apos;java/lang/ref/SoftReference&apos;)}
  0x00000000036b32f6: and    $0x7ffff8,%r9d
  0x00000000036b32fd: cmp    $0x0,%r9d
  0x00000000036b3301: je     0x00000000036b39b2
  0x00000000036b3307: mov    %rax,%r8
  0x00000000036b330a: movabs $0x1c7c6ca8,%r9    ;   {metadata(method data for {method} {0x000000001c4b8710} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;)V&apos; in &apos;java/lang/ref/SoftReference&apos;)}
  0x00000000036b3314: addq   $0x1,0x108(%r9)
  0x00000000036b331c: movabs $0x1c7c6de0,%r8    ;   {metadata(method data for {method} {0x000000001c4b82d8} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x00000000036b3326: mov    0xdc(%r8),%r9d
  0x00000000036b332d: add    $0x8,%r9d
  0x00000000036b3331: mov    %r9d,0xdc(%r8)
  0x00000000036b3338: movabs $0x1c4b82d0,%r8    ;   {metadata({method} {0x000000001c4b82d8} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x00000000036b3342: and    $0x7ffff8,%r9d
  0x00000000036b3349: cmp    $0x0,%r9d
  0x00000000036b334d: je     0x00000000036b39c9
  0x00000000036b3353: mov    %rax,%r8
  0x00000000036b3356: movabs $0x1c7c6de0,%r9    ;   {metadata(method data for {method} {0x000000001c4b82d8} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x00000000036b3360: addq   $0x1,0x108(%r9)
  0x00000000036b3368: mov    %rbx,%r8
  0x00000000036b336b: movabs $0x0,%r9           ;   {oop(NULL)}
  0x00000000036b3375: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.ref.Reference::&lt;init&gt;@3 (line 303)
                                                ; - java.lang.ref.SoftReference::&lt;init&gt;@2 (line 85)
                                                ; - java.lang.StringCoding::set@6 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)

  0x00000000036b3378: mov    %rbx,0xf0(%rsp)
  0x00000000036b3380: mov    %rax,0xe8(%rsp)
  0x00000000036b3388: nop
  0x00000000036b3389: nop
  0x00000000036b338a: nop
  0x00000000036b338b: nop
  0x00000000036b338c: nop
  0x00000000036b338d: nop
  0x00000000036b338e: nop
  0x00000000036b338f: callq  0x00000000035d61a0  ; OopMap{[176]=Oop [232]=Oop [240]=Oop off=4532}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.ref.Reference::&lt;init&gt;@3 (line 303)
                                                ; - java.lang.ref.SoftReference::&lt;init&gt;@2 (line 85)
                                                ; - java.lang.StringCoding::set@6 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)
                                                ;   {optimized virtual_call}
  0x00000000036b3394: movabs $0x76c1018a0,%r8   ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/ref/SoftReference&apos;)}
  0x00000000036b339e: mov    0x68(%r8),%r9      ;*getstatic clock
                                                ; - java.lang.ref.SoftReference::&lt;init&gt;@6 (line 86)
                                                ; - java.lang.StringCoding::set@6 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)

  0x00000000036b33a2: mov    0xe8(%rsp),%rbx
  0x00000000036b33aa: mov    %r9,0x20(%rbx)     ;*putfield timestamp
                                                ; - java.lang.ref.SoftReference::&lt;init&gt;@9 (line 86)
                                                ; - java.lang.StringCoding::set@6 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)

  0x00000000036b33ae: movabs $0x76c146f70,%r8   ;   {oop(a &apos;java/lang/ThreadLocal&apos;)}
  0x00000000036b33b8: mov    %r8,%r9
  0x00000000036b33bb: movabs $0x1c7c6b18,%rdx   ;   {metadata(method data for {method} {0x000000001c5c93b0} &apos;set&apos; &apos;(Ljava/lang/ThreadLocal;Ljava/lang/Object;)V&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036b33c5: mov    0x8(%r9),%r9d
  0x00000000036b33c9: shl    $0x3,%r9
  0x00000000036b33cd: cmp    0x120(%rdx),%r9
  0x00000000036b33d4: jne    0x00000000036b33e3
  0x00000000036b33d6: addq   $0x1,0x128(%rdx)
  0x00000000036b33de: jmpq   0x00000000036b3449
  0x00000000036b33e3: cmp    0x130(%rdx),%r9
  0x00000000036b33ea: jne    0x00000000036b33f9
  0x00000000036b33ec: addq   $0x1,0x138(%rdx)
  0x00000000036b33f4: jmpq   0x00000000036b3449
  0x00000000036b33f9: cmpq   $0x0,0x120(%rdx)
  0x00000000036b3404: jne    0x00000000036b341d
  0x00000000036b3406: mov    %r9,0x120(%rdx)
  0x00000000036b340d: movq   $0x1,0x128(%rdx)
  0x00000000036b3418: jmpq   0x00000000036b3449
  0x00000000036b341d: cmpq   $0x0,0x130(%rdx)
  0x00000000036b3428: jne    0x00000000036b3441
  0x00000000036b342a: mov    %r9,0x130(%rdx)
  0x00000000036b3431: movq   $0x1,0x138(%rdx)
  0x00000000036b343c: jmpq   0x00000000036b3449
  0x00000000036b3441: addq   $0x1,0x118(%rdx)
  0x00000000036b3449: movabs $0x1c7c7068,%r9    ;   {metadata(method data for {method} {0x000000001c593168} &apos;set&apos; &apos;(Ljava/lang/Object;)V&apos; in &apos;java/lang/ThreadLocal&apos;)}
  0x00000000036b3453: mov    0xdc(%r9),%edx
  0x00000000036b345a: add    $0x8,%edx
  0x00000000036b345d: mov    %edx,0xdc(%r9)
  0x00000000036b3464: movabs $0x1c593160,%r9    ;   {metadata({method} {0x000000001c593168} &apos;set&apos; &apos;(Ljava/lang/Object;)V&apos; in &apos;java/lang/ThreadLocal&apos;)}
  0x00000000036b346e: and    $0x7ffff8,%edx
  0x00000000036b3474: cmp    $0x0,%edx
  0x00000000036b3477: je     0x00000000036b39e0
  0x00000000036b347d: movabs $0x1c7c7068,%r9    ;   {metadata(method data for {method} {0x000000001c593168} &apos;set&apos; &apos;(Ljava/lang/Object;)V&apos; in &apos;java/lang/ThreadLocal&apos;)}
  0x00000000036b3487: addq   $0x1,0x108(%r9)
  0x00000000036b348f: mov    0x1d0(%r15),%r11   ;*invokestatic currentThread
                                                ; - java.lang.ThreadLocal::set@0 (line 200)
                                                ; - java.lang.StringCoding::set@9 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)

  0x00000000036b3496: movabs $0x1c7c7068,%r9    ;   {metadata(method data for {method} {0x000000001c593168} &apos;set&apos; &apos;(Ljava/lang/Object;)V&apos; in &apos;java/lang/ThreadLocal&apos;)}
  0x00000000036b34a0: mov    0x8(%r8),%r8d
  0x00000000036b34a4: shl    $0x3,%r8
  0x00000000036b34a8: cmp    0x120(%r9),%r8
  0x00000000036b34af: jne    0x00000000036b34be
  0x00000000036b34b1: addq   $0x1,0x128(%r9)
  0x00000000036b34b9: jmpq   0x00000000036b3524
  0x00000000036b34be: cmp    0x130(%r9),%r8
  0x00000000036b34c5: jne    0x00000000036b34d4
  0x00000000036b34c7: addq   $0x1,0x138(%r9)
  0x00000000036b34cf: jmpq   0x00000000036b3524
  0x00000000036b34d4: cmpq   $0x0,0x120(%r9)
  0x00000000036b34df: jne    0x00000000036b34f8
  0x00000000036b34e1: mov    %r8,0x120(%r9)
  0x00000000036b34e8: movq   $0x1,0x128(%r9)
  0x00000000036b34f3: jmpq   0x00000000036b3524
  0x00000000036b34f8: cmpq   $0x0,0x130(%r9)
  0x00000000036b3503: jne    0x00000000036b351c
  0x00000000036b3505: mov    %r8,0x130(%r9)
  0x00000000036b350c: movq   $0x1,0x138(%r9)
  0x00000000036b3517: jmpq   0x00000000036b3524
  0x00000000036b351c: addq   $0x1,0x118(%r9)
  0x00000000036b3524: movabs $0x1c6d8438,%r8    ;   {metadata(method data for {method} {0x000000001c5932a8} &apos;getMap&apos; &apos;(Ljava/lang/Thread;)Ljava/lang/ThreadLocal$ThreadLocalMap;&apos; in &apos;java/lang/ThreadLocal&apos;)}
  0x00000000036b352e: mov    0xdc(%r8),%r9d
  0x00000000036b3535: add    $0x8,%r9d
  0x00000000036b3539: mov    %r9d,0xdc(%r8)
  0x00000000036b3540: movabs $0x1c5932a0,%r8    ;   {metadata({method} {0x000000001c5932a8} &apos;getMap&apos; &apos;(Ljava/lang/Thread;)Ljava/lang/ThreadLocal$ThreadLocalMap;&apos; in &apos;java/lang/ThreadLocal&apos;)}
  0x00000000036b354a: and    $0x7ffff8,%r9d
  0x00000000036b3551: cmp    $0x0,%r9d
  0x00000000036b3555: je     0x00000000036b39f7
  0x00000000036b355b: mov    0x50(%r11),%edx    ; implicit exception: dispatches to 0x00000000036b3a0e
  0x00000000036b355f: shl    $0x3,%rdx          ;*getfield threadLocals
                                                ; - java.lang.ThreadLocal::getMap@1 (line 233)
                                                ; - java.lang.ThreadLocal::set@6 (line 201)
                                                ; - java.lang.StringCoding::set@9 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)

  0x00000000036b3563: cmp    $0x0,%rdx
  0x00000000036b3567: movabs $0x1c7c7068,%r8    ;   {metadata(method data for {method} {0x000000001c593168} &apos;set&apos; &apos;(Ljava/lang/Object;)V&apos; in &apos;java/lang/ThreadLocal&apos;)}
  0x00000000036b3571: movabs $0x148,%r9
  0x00000000036b357b: je     0x00000000036b358b
  0x00000000036b3581: movabs $0x158,%r9
  0x00000000036b358b: mov    (%r8,%r9,1),%rsi
  0x00000000036b358f: lea    0x1(%rsi),%rsi
  0x00000000036b3593: mov    %rsi,(%r8,%r9,1)
  0x00000000036b3597: je     0x00000000036b3629  ;*ifnull
                                                ; - java.lang.ThreadLocal::set@11 (line 202)
                                                ; - java.lang.StringCoding::set@9 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)

  0x00000000036b359d: movabs $0x1c7c7068,%r8    ;   {metadata(method data for {method} {0x000000001c593168} &apos;set&apos; &apos;(Ljava/lang/Object;)V&apos; in &apos;java/lang/ThreadLocal&apos;)}
  0x00000000036b35a7: addq   $0x1,0x168(%r8)
  0x00000000036b35af: movabs $0x1c7c7270,%r8    ;   {metadata(method data for {method} {0x000000001c5cbf68} &apos;access$100&apos; &apos;(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;Ljava/lang/Object;)V&apos; in &apos;java/lang/ThreadLocal$ThreadLocalMap&apos;)}
  0x00000000036b35b9: mov    0xdc(%r8),%r9d
  0x00000000036b35c0: add    $0x8,%r9d
  0x00000000036b35c4: mov    %r9d,0xdc(%r8)
  0x00000000036b35cb: movabs $0x1c5cbf60,%r8    ;   {metadata({method} {0x000000001c5cbf68} &apos;access$100&apos; &apos;(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;Ljava/lang/Object;)V&apos; in &apos;java/lang/ThreadLocal$ThreadLocalMap&apos;)}
  0x00000000036b35d5: and    $0x7ffff8,%r9d
  0x00000000036b35dc: cmp    $0x0,%r9d
  0x00000000036b35e0: je     0x00000000036b3a13
  0x00000000036b35e6: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x00000000036b3a2a
  0x00000000036b35e9: mov    %rdx,%r8
  0x00000000036b35ec: movabs $0x1c7c7270,%r9    ;   {metadata(method data for {method} {0x000000001c5cbf68} &apos;access$100&apos; &apos;(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;Ljava/lang/Object;)V&apos; in &apos;java/lang/ThreadLocal$ThreadLocalMap&apos;)}
  0x00000000036b35f6: addq   $0x1,0x108(%r9)
  0x00000000036b35fe: movabs $0x76c146f70,%r8   ;   {oop(a &apos;java/lang/ThreadLocal&apos;)}
  0x00000000036b3608: mov    %rbx,%r9           ;*invokespecial set
                                                ; - java.lang.ThreadLocal$ThreadLocalMap::access$100@3 (line 298)
                                                ; - java.lang.ThreadLocal::set@17 (line 203)
                                                ; - java.lang.StringCoding::set@9 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)

  0x00000000036b360b: nop
  0x00000000036b360c: nop
  0x00000000036b360d: nop
  0x00000000036b360e: nop
  0x00000000036b360f: callq  0x00000000035d61a0  ; OopMap{[176]=Oop [240]=Oop off=5172}
                                                ;*invokespecial set
                                                ; - java.lang.ThreadLocal$ThreadLocalMap::access$100@3 (line 298)
                                                ; - java.lang.ThreadLocal::set@17 (line 203)
                                                ; - java.lang.StringCoding::set@9 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)
                                                ;   {optimized virtual_call}
  0x00000000036b3614: movabs $0x1c7c7068,%rdx   ;   {metadata(method data for {method} {0x000000001c593168} &apos;set&apos; &apos;(Ljava/lang/Object;)V&apos; in &apos;java/lang/ThreadLocal&apos;)}
  0x00000000036b361e: incl   0x178(%rdx)
  0x00000000036b3624: jmpq   0x00000000036b379a  ;*goto
                                                ; - java.lang.ThreadLocal::set@20 (line 203)
                                                ; - java.lang.StringCoding::set@9 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)

  0x00000000036b3629: mov    %r11,0x100(%rsp)
  0x00000000036b3631: movabs $0x76c146f70,%r8   ;   {oop(a &apos;java/lang/ThreadLocal&apos;)}
  0x00000000036b363b: mov    %r8,%rdx
  0x00000000036b363e: movabs $0x1c7c7068,%rsi   ;   {metadata(method data for {method} {0x000000001c593168} &apos;set&apos; &apos;(Ljava/lang/Object;)V&apos; in &apos;java/lang/ThreadLocal&apos;)}
  0x00000000036b3648: mov    0x8(%rdx),%edx
  0x00000000036b364b: shl    $0x3,%rdx
  0x00000000036b364f: cmp    0x198(%rsi),%rdx
  0x00000000036b3656: jne    0x00000000036b3665
  0x00000000036b3658: addq   $0x1,0x1a0(%rsi)
  0x00000000036b3660: jmpq   0x00000000036b36cb
  0x00000000036b3665: cmp    0x1a8(%rsi),%rdx
  0x00000000036b366c: jne    0x00000000036b367b
  0x00000000036b366e: addq   $0x1,0x1b0(%rsi)
  0x00000000036b3676: jmpq   0x00000000036b36cb
  0x00000000036b367b: cmpq   $0x0,0x198(%rsi)
  0x00000000036b3686: jne    0x00000000036b369f
  0x00000000036b3688: mov    %rdx,0x198(%rsi)
  0x00000000036b368f: movq   $0x1,0x1a0(%rsi)
  0x00000000036b369a: jmpq   0x00000000036b36cb
  0x00000000036b369f: cmpq   $0x0,0x1a8(%rsi)
  0x00000000036b36aa: jne    0x00000000036b36c3
  0x00000000036b36ac: mov    %rdx,0x1a8(%rsi)
  0x00000000036b36b3: movq   $0x1,0x1b0(%rsi)
  0x00000000036b36be: jmpq   0x00000000036b36cb
  0x00000000036b36c3: addq   $0x1,0x190(%rsi)
  0x00000000036b36cb: movabs $0x1c7c7f58,%rdx   ;   {metadata(method data for {method} {0x000000001c593348} &apos;createMap&apos; &apos;(Ljava/lang/Thread;Ljava/lang/Object;)V&apos; in &apos;java/lang/ThreadLocal&apos;)}
  0x00000000036b36d5: mov    0xdc(%rdx),%esi
  0x00000000036b36db: add    $0x8,%esi
  0x00000000036b36de: mov    %esi,0xdc(%rdx)
  0x00000000036b36e4: movabs $0x1c593340,%rdx   ;   {metadata({method} {0x000000001c593348} &apos;createMap&apos; &apos;(Ljava/lang/Thread;Ljava/lang/Object;)V&apos; in &apos;java/lang/ThreadLocal&apos;)}
  0x00000000036b36ee: and    $0x7ffff8,%esi
  0x00000000036b36f4: cmp    $0x0,%esi
  0x00000000036b36f7: je     0x00000000036b3a2f
  0x00000000036b36fd: movabs $0x7c00243b8,%rdx  ;   {metadata(&apos;java/lang/ThreadLocal$ThreadLocalMap&apos;)}
  0x00000000036b3707: mov    0x60(%r15),%rax
  0x00000000036b370b: lea    0x18(%rax),%rdi
  0x00000000036b370f: cmp    0x70(%r15),%rdi
  0x00000000036b3713: ja     0x00000000036b3a46
  0x00000000036b3719: mov    %rdi,0x60(%r15)
  0x00000000036b371d: mov    0xa8(%rdx),%rcx
  0x00000000036b3724: mov    %rcx,(%rax)
  0x00000000036b3727: mov    %rdx,%rcx
  0x00000000036b372a: shr    $0x3,%rcx
  0x00000000036b372e: mov    %ecx,0x8(%rax)
  0x00000000036b3731: xor    %rcx,%rcx
  0x00000000036b3734: mov    %ecx,0xc(%rax)
  0x00000000036b3737: xor    %rcx,%rcx
  0x00000000036b373a: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.ThreadLocal::createMap@1 (line 244)
                                                ; - java.lang.ThreadLocal::set@26 (line 205)
                                                ; - java.lang.StringCoding::set@9 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)

  0x00000000036b373e: mov    %rax,%r9
  0x00000000036b3741: movabs $0x1c7c7f58,%rdx   ;   {metadata(method data for {method} {0x000000001c593348} &apos;createMap&apos; &apos;(Ljava/lang/Thread;Ljava/lang/Object;)V&apos; in &apos;java/lang/ThreadLocal&apos;)}
  0x00000000036b374b: addq   $0x1,0x108(%rdx)
  0x00000000036b3753: mov    %rbx,%r9
  0x00000000036b3756: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.ThreadLocal::createMap@7 (line 244)
                                                ; - java.lang.ThreadLocal::set@26 (line 205)
                                                ; - java.lang.StringCoding::set@9 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)

  0x00000000036b3759: mov    %rax,0xf8(%rsp)
  0x00000000036b3761: nop
  0x00000000036b3762: nop
  0x00000000036b3763: nop
  0x00000000036b3764: nop
  0x00000000036b3765: nop
  0x00000000036b3766: nop
  0x00000000036b3767: callq  0x00000000035d61a0  ; OopMap{[176]=Oop [240]=Oop [248]=Oop [256]=Oop off=5516}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.ThreadLocal::createMap@7 (line 244)
                                                ; - java.lang.ThreadLocal::set@26 (line 205)
                                                ; - java.lang.StringCoding::set@9 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)
                                                ;   {optimized virtual_call}
  0x00000000036b376c: mov    0xf8(%rsp),%rax
  0x00000000036b3774: mov    0x100(%rsp),%r11
  0x00000000036b377c: mov    %rax,%r10
  0x00000000036b377f: shr    $0x3,%r10
  0x00000000036b3783: mov    %r10d,0x50(%r11)
  0x00000000036b3787: shr    $0x9,%r11
  0x00000000036b378b: movabs $0xf32f000,%r8
  0x00000000036b3795: movb   $0x0,(%r11,%r8,1)  ;*putfield threadLocals
                                                ; - java.lang.ThreadLocal::createMap@10 (line 244)
                                                ; - java.lang.ThreadLocal::set@26 (line 205)
                                                ; - java.lang.StringCoding::set@9 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)

  0x00000000036b379a: mov    0xf0(%rsp),%rsi
  0x00000000036b37a2: mov    0xbc(%rsp),%edi
  0x00000000036b37a9: mov    0xb8(%rsp),%r9d
  0x00000000036b37b1: mov    0xb0(%rsp),%r8
  0x00000000036b37b9: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x00000000036b3a53
  0x00000000036b37bc: mov    %rsi,%rdx
  0x00000000036b37bf: movabs $0x1c7bb818,%rbx   ;   {metadata(method data for {method} {0x000000001c5c9bc8} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036b37c9: movabs $0x7c002e220,%r10  ;   {metadata(&apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036b37d3: mov    %r10,0x340(%rbx)
  0x00000000036b37da: addq   $0x1,0x348(%rbx)
  0x00000000036b37e2: mov    %rsi,%rdx          ;*invokevirtual encode
                                                ; - java.lang.StringCoding::encode@116 (line 344)

  0x00000000036b37e5: nop
  0x00000000036b37e6: nop
  0x00000000036b37e7: callq  0x00000000035d61a0  ; OopMap{off=5644}
                                                ;*invokevirtual encode
                                                ; - java.lang.StringCoding::encode@116 (line 344)
                                                ;   {optimized virtual_call}
  0x00000000036b37ec: add    $0x120,%rsp
  0x00000000036b37f3: pop    %rbp
  0x00000000036b37f4: test   %eax,-0x20c36fa(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036b37fa: retq                      ;*areturn
                                                ; - java.lang.StringCoding::encode@119 (line 344)

  0x00000000036b37fb: mov    0xc8(%rsp),%r8
  0x00000000036b3803: nopl   0x0(%rax,%rax,1)
  0x00000000036b3808: jmpq   0x00000000036b3a67  ;   {no_reloc}
  0x00000000036b380d: add    %al,(%rax)
  0x00000000036b380f: add    %al,(%rax)
  0x00000000036b3811: add    %ch,%cl
  0x00000000036b3813: pop    %rdx
  0x00000000036b3814: add    (%rax),%al
  0x00000000036b3816: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.StringCoding::encode@93 (line 341)

  0x00000000036b3819: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x000000001c5c9bc8} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036b381c: sbb    %bh,0x1c7b(%rax)
  0x00000000036b3822: add    %al,(%rax)
  0x00000000036b3824: addq   $0x1,0x318(%rsi)
  0x00000000036b382c: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringCoding::encode@99 (line 341)

  0x00000000036b382f: mov    %rax,0x108(%rsp)
  0x00000000036b3837: callq  0x00000000035d61a0  ; OopMap{[264]=Oop off=5724}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringCoding::encode@99 (line 341)
                                                ;   {optimized virtual_call}
  0x00000000036b383c: mov    0x108(%rsp),%rax
  0x00000000036b3844: jmpq   0x00000000036b3aa9
  0x00000000036b3849: mov    %rsi,0x8(%rsp)
  0x00000000036b384e: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036b3856: callq  0x00000000036919e0  ; OopMap{rdx=Oop r8=Oop off=5755}
                                                ;*synchronization entry
                                                ; - java.lang.StringCoding::encode@-1 (line 330)
                                                ;   {runtime_call}
  0x00000000036b385b: jmpq   0x00000000036b2221
  0x00000000036b3860: mov    %rsi,0x8(%rsp)
  0x00000000036b3865: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036b386d: callq  0x00000000036919e0  ; OopMap{[168]=Oop [176]=Oop off=5778}
                                                ;*synchronization entry
                                                ; - java.lang.StringCoding::deref@-1 (line 63)
                                                ; - java.lang.StringCoding::encode@3 (line 330)
                                                ;   {runtime_call}
  0x00000000036b3872: jmpq   0x00000000036b2284
  0x00000000036b3877: mov    %rax,(%rsp)
  0x00000000036b387b: callq  0x000000000368f500  ; OopMap{[168]=Oop [176]=Oop off=5792}
                                                ;*checkcast
                                                ; - java.lang.StringCoding::deref@4 (line 63)
                                                ; - java.lang.StringCoding::encode@3 (line 330)
                                                ;   {runtime_call}
  0x00000000036b3880: callq  0x000000000368d080  ; OopMap{[168]=Oop [176]=Oop r8=Oop off=5797}
                                                ;*invokevirtual get
                                                ; - java.lang.StringCoding::deref@15 (line 66)
                                                ; - java.lang.StringCoding::encode@3 (line 330)
                                                ;   {runtime_call}
  0x00000000036b3885: mov    %rdx,0x8(%rsp)
  0x00000000036b388a: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036b3892: callq  0x00000000036919e0  ; OopMap{[168]=Oop [176]=Oop r8=Oop off=5815}
                                                ;*synchronization entry
                                                ; - java.lang.ref.SoftReference::get@-1 (line 112)
                                                ; - java.lang.StringCoding::deref@15 (line 66)
                                                ; - java.lang.StringCoding::encode@3 (line 330)
                                                ;   {runtime_call}
  0x00000000036b3897: jmpq   0x00000000036b251d
  0x00000000036b389c: mov    %r8,(%rsp)
  0x00000000036b38a0: callq  0x000000000368f500  ; OopMap{[176]=Oop rdx=Oop off=5829}
                                                ;*checkcast
                                                ; - java.lang.StringCoding::encode@6 (line 330)
                                                ;   {runtime_call}
  0x00000000036b38a5: callq  0x000000000368d080  ; OopMap{[176]=Oop rdx=Oop rsi=Oop [192]=Oop off=5834}
                                                ;*invokevirtual requestedCharsetName
                                                ; - java.lang.StringCoding::encode@32 (line 332)
                                                ;   {runtime_call}
  0x00000000036b38aa: callq  0x000000000368d080  ; OopMap{[176]=Oop rdx=Oop rsi=Oop [192]=Oop r8=Oop off=5839}
                                                ;*invokevirtual equals
                                                ; - java.lang.StringCoding::encode@35 (line 332)
                                                ;   {runtime_call}
  0x00000000036b38af: mov    %rdx,0x8(%rsp)
  0x00000000036b38b4: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036b38bc: callq  0x00000000036919e0  ; OopMap{[176]=Oop rsi=Oop [192]=Oop [200]=Oop off=5857}
                                                ;*synchronization entry
                                                ; - java.lang.StringCoding$StringEncoder::charsetName@-1 (line 289)
                                                ; - java.lang.StringCoding::encode@45 (line 333)
                                                ;   {runtime_call}
  0x00000000036b38c1: jmpq   0x00000000036b2935
  0x00000000036b38c6: mov    %rdi,(%rsp)
  0x00000000036b38ca: callq  0x000000000368f500  ; OopMap{[176]=Oop [200]=Oop [192]=Oop off=5871}
                                                ;*checkcast
                                                ; - java.lang.StringCoding$StringEncoder::charsetName@14 (line 290)
                                                ; - java.lang.StringCoding::encode@45 (line 333)
                                                ;   {runtime_call}
  0x00000000036b38cf: callq  0x000000000368d080  ; OopMap{[176]=Oop [200]=Oop [192]=Oop rdx=Oop off=5876}
                                                ;*invokeinterface historicalName
                                                ; - java.lang.StringCoding$StringEncoder::charsetName@17 (line 290)
                                                ; - java.lang.StringCoding::encode@45 (line 333)
                                                ;   {runtime_call}
  0x00000000036b38d4: callq  0x000000000368d080  ; OopMap{[176]=Oop [200]=Oop [192]=Oop rdi=Oop off=5881}
                                                ;*invokevirtual name
                                                ; - java.lang.StringCoding$StringEncoder::charsetName@27 (line 291)
                                                ; - java.lang.StringCoding::encode@45 (line 333)
                                                ;   {runtime_call}
  0x00000000036b38d9: mov    %rdx,0x8(%rsp)
  0x00000000036b38de: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036b38e6: callq  0x00000000036919e0  ; OopMap{[176]=Oop [200]=Oop off=5899}
                                                ;*synchronization entry
                                                ; - java.lang.StringCoding::lookupCharset@-1 (line 99)
                                                ; - java.lang.StringCoding::encode@59 (line 336)
                                                ;   {runtime_call}
  0x00000000036b38eb: jmpq   0x00000000036b2dfe
  0x00000000036b38f0: mov    %rdx,0x8(%rsp)
  0x00000000036b38f5: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036b38fd: callq  0x00000000036919e0  ; OopMap{[176]=Oop [200]=Oop off=5922}
                                                ;*synchronization entry
                                                ; - java.nio.charset.Charset::isSupported@-1 (line 505)
                                                ; - java.lang.StringCoding::lookupCharset@1 (line 99)
                                                ; - java.lang.StringCoding::encode@59 (line 336)
                                                ;   {runtime_call}
  0x00000000036b3902: jmpq   0x00000000036b2e42
  0x00000000036b3907: mov    %rdx,0x8(%rsp)
  0x00000000036b390c: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036b3914: callq  0x00000000036919e0  ; OopMap{[176]=Oop [200]=Oop off=5945}
                                                ;*synchronization entry
                                                ; - java.nio.charset.Charset::forName@-1 (line 528)
                                                ; - java.lang.StringCoding::lookupCharset@8 (line 101)
                                                ; - java.lang.StringCoding::encode@59 (line 336)
                                                ;   {runtime_call}
  0x00000000036b3919: jmpq   0x00000000036b2f3d
  0x00000000036b391e: mov    %rdx,%rdx
  0x00000000036b3921: callq  0x000000000368d300  ; OopMap{[176]=Oop [200]=Oop r8=Oop off=5958}
                                                ;*new  ; - java.lang.StringCoding::encode@69 (line 338)
                                                ;   {runtime_call}
  0x00000000036b3926: jmpq   0x00000000036b3036
  0x00000000036b392b: mov    %r9,0x8(%rsp)
  0x00000000036b3930: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036b3938: callq  0x00000000036919e0  ; OopMap{[176]=Oop [200]=Oop r8=Oop rax=Oop off=5981}
                                                ;*synchronization entry
                                                ; - java.lang.StringCoding$StringEncoder::&lt;init&gt;@-1 (line 273)
                                                ; - java.lang.StringCoding::encode@78 (line 338)
                                                ;   {runtime_call}
  0x00000000036b393d: jmpq   0x00000000036b307f
  0x00000000036b3942: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000036b394c: mov    $0xa050f00,%eax
  0x00000000036b3951: callq  0x0000000003690920  ; OopMap{[176]=Oop [200]=Oop off=6006}
                                                ;*new  ; - java.nio.charset.Charset::forName@11 (line 531)
                                                ; - java.lang.StringCoding::lookupCharset@8 (line 101)
                                                ; - java.lang.StringCoding::encode@59 (line 336)
                                                ;   {runtime_call}
  0x00000000036b3956: jmpq   0x00000000036b30d0
  0x00000000036b395b: mov    %rdx,%rdx
  0x00000000036b395e: callq  0x000000000368d720  ; OopMap{[176]=Oop [200]=Oop off=6019}
                                                ;*new  ; - java.nio.charset.Charset::forName@11 (line 531)
                                                ; - java.lang.StringCoding::lookupCharset@8 (line 101)
                                                ; - java.lang.StringCoding::encode@59 (line 336)
                                                ;   {runtime_call}
  0x00000000036b3963: jmpq   0x00000000036b30df
  0x00000000036b3968: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000036b3972: mov    $0xa050f00,%eax
  0x00000000036b3977: callq  0x0000000003690920  ; OopMap{[176]=Oop [200]=Oop r8=Oop off=6044}
                                                ;*new  ; - java.lang.StringCoding::lookupCharset@13 (line 103)
                                                ; - java.lang.StringCoding::encode@59 (line 336)
                                                ;   {runtime_call}
  0x00000000036b397c: jmpq   0x00000000036b3148
  0x00000000036b3981: mov    %rdx,%rdx
  0x00000000036b3984: callq  0x000000000368d300  ; OopMap{[176]=Oop [200]=Oop r8=Oop off=6057}
                                                ;*new  ; - java.lang.StringCoding::lookupCharset@13 (line 103)
                                                ; - java.lang.StringCoding::encode@59 (line 336)
                                                ;   {runtime_call}
  0x00000000036b3989: jmpq   0x00000000036b318d
  0x00000000036b398e: mov    %rdx,0x8(%rsp)
  0x00000000036b3993: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036b399b: callq  0x00000000036919e0  ; OopMap{[176]=Oop rsi=Oop off=6080}
                                                ;*synchronization entry
                                                ; - java.lang.StringCoding::set@-1 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)
                                                ;   {runtime_call}
  0x00000000036b39a0: jmpq   0x00000000036b326f
  0x00000000036b39a5: mov    %rdx,%rdx
  0x00000000036b39a8: callq  0x000000000368d300  ; OopMap{[176]=Oop rbx=Oop off=6093}
                                                ;*new  ; - java.lang.StringCoding::set@1 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)
                                                ;   {runtime_call}
  0x00000000036b39ad: jmpq   0x00000000036b32bb
  0x00000000036b39b2: mov    %r8,0x8(%rsp)
  0x00000000036b39b7: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036b39bf: callq  0x00000000036919e0  ; OopMap{[176]=Oop rbx=Oop rax=Oop off=6116}
                                                ;*synchronization entry
                                                ; - java.lang.ref.SoftReference::&lt;init&gt;@-1 (line 85)
                                                ; - java.lang.StringCoding::set@6 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)
                                                ;   {runtime_call}
  0x00000000036b39c4: jmpq   0x00000000036b3307
  0x00000000036b39c9: mov    %r8,0x8(%rsp)
  0x00000000036b39ce: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036b39d6: callq  0x00000000036919e0  ; OopMap{[176]=Oop rbx=Oop rax=Oop off=6139}
                                                ;*synchronization entry
                                                ; - java.lang.ref.Reference::&lt;init&gt;@-1 (line 303)
                                                ; - java.lang.ref.SoftReference::&lt;init&gt;@2 (line 85)
                                                ; - java.lang.StringCoding::set@6 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)
                                                ;   {runtime_call}
  0x00000000036b39db: jmpq   0x00000000036b3353
  0x00000000036b39e0: mov    %r9,0x8(%rsp)
  0x00000000036b39e5: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036b39ed: callq  0x00000000036919e0  ; OopMap{[176]=Oop [240]=Oop rbx=Oop r8=Oop off=6162}
                                                ;*synchronization entry
                                                ; - java.lang.ThreadLocal::set@-1 (line 200)
                                                ; - java.lang.StringCoding::set@9 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)
                                                ;   {runtime_call}
  0x00000000036b39f2: jmpq   0x00000000036b347d
  0x00000000036b39f7: mov    %r8,0x8(%rsp)
  0x00000000036b39fc: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036b3a04: callq  0x00000000036919e0  ; OopMap{[176]=Oop [240]=Oop rbx=Oop r11=Oop off=6185}
                                                ;*synchronization entry
                                                ; - java.lang.ThreadLocal::getMap@-1 (line 233)
                                                ; - java.lang.ThreadLocal::set@6 (line 201)
                                                ; - java.lang.StringCoding::set@9 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)
                                                ;   {runtime_call}
  0x00000000036b3a09: jmpq   0x00000000036b355b
  0x00000000036b3a0e: callq  0x000000000368d080  ; OopMap{[176]=Oop [240]=Oop rbx=Oop r11=Oop off=6195}
                                                ;*getfield threadLocals
                                                ; - java.lang.ThreadLocal::getMap@1 (line 233)
                                                ; - java.lang.ThreadLocal::set@6 (line 201)
                                                ; - java.lang.StringCoding::set@9 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)
                                                ;   {runtime_call}
  0x00000000036b3a13: mov    %r8,0x8(%rsp)
  0x00000000036b3a18: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036b3a20: callq  0x00000000036919e0  ; OopMap{[176]=Oop [240]=Oop rbx=Oop rdx=Oop off=6213}
                                                ;*synchronization entry
                                                ; - java.lang.ThreadLocal$ThreadLocalMap::access$100@-1 (line 298)
                                                ; - java.lang.ThreadLocal::set@17 (line 203)
                                                ; - java.lang.StringCoding::set@9 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)
                                                ;   {runtime_call}
  0x00000000036b3a25: jmpq   0x00000000036b35e6
  0x00000000036b3a2a: callq  0x000000000368d080  ; OopMap{[176]=Oop [240]=Oop rbx=Oop rdx=Oop off=6223}
                                                ;*invokespecial set
                                                ; - java.lang.ThreadLocal$ThreadLocalMap::access$100@3 (line 298)
                                                ; - java.lang.ThreadLocal::set@17 (line 203)
                                                ; - java.lang.StringCoding::set@9 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)
                                                ;   {runtime_call}
  0x00000000036b3a2f: mov    %rdx,0x8(%rsp)
  0x00000000036b3a34: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036b3a3c: callq  0x00000000036919e0  ; OopMap{[176]=Oop [240]=Oop [256]=Oop rbx=Oop r8=Oop off=6241}
                                                ;*synchronization entry
                                                ; - java.lang.ThreadLocal::createMap@-1 (line 244)
                                                ; - java.lang.ThreadLocal::set@26 (line 205)
                                                ; - java.lang.StringCoding::set@9 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)
                                                ;   {runtime_call}
  0x00000000036b3a41: jmpq   0x00000000036b36fd
  0x00000000036b3a46: mov    %rdx,%rdx
  0x00000000036b3a49: callq  0x000000000368d300  ; OopMap{[176]=Oop [240]=Oop [256]=Oop rbx=Oop r8=Oop off=6254}
                                                ;*new  ; - java.lang.ThreadLocal::createMap@1 (line 244)
                                                ; - java.lang.ThreadLocal::set@26 (line 205)
                                                ; - java.lang.StringCoding::set@9 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)
                                                ;   {runtime_call}
  0x00000000036b3a4e: jmpq   0x00000000036b373e
  0x00000000036b3a53: callq  0x000000000368d080  ; OopMap{rsi=Oop r8=Oop off=6264}
                                                ;*invokevirtual encode
                                                ; - java.lang.StringCoding::encode@116 (line 344)
                                                ;   {runtime_call}
  0x00000000036b3a58: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000036b3a62: mov    $0xa050f00,%eax
  0x00000000036b3a67: callq  0x0000000003690920  ; OopMap{r8=Oop off=6284}
                                                ;*new  ; - java.lang.StringCoding::encode@93 (line 341)
                                                ;   {runtime_call}
  0x00000000036b3a6c: jmpq   0x00000000036b3808
  0x00000000036b3a71: mov    %rdx,%rdx
  0x00000000036b3a74: callq  0x000000000368d720  ; OopMap{r8=Oop off=6297}
                                                ;*new  ; - java.lang.StringCoding::encode@93 (line 341)
                                                ;   {runtime_call}
  0x00000000036b3a79: jmpq   0x00000000036b3817
  0x00000000036b3a7e: nop
  0x00000000036b3a7f: nop
  0x00000000036b3a80: mov    0x2a8(%r15),%rax
  0x00000000036b3a87: movabs $0x0,%r10
  0x00000000036b3a91: mov    %r10,0x2a8(%r15)
  0x00000000036b3a98: movabs $0x0,%r10
  0x00000000036b3aa2: mov    %r10,0x2b0(%r15)
  0x00000000036b3aa9: add    $0x120,%rsp
  0x00000000036b3ab0: pop    %rbp
  0x00000000036b3ab1: jmpq   0x000000000368c620  ;   {runtime_call}
  0x00000000036b3ab6: hlt    
  0x00000000036b3ab7: hlt    
  0x00000000036b3ab8: hlt    
  0x00000000036b3ab9: hlt    
  0x00000000036b3aba: hlt    
  0x00000000036b3abb: hlt    
  0x00000000036b3abc: hlt    
  0x00000000036b3abd: hlt    
  0x00000000036b3abe: hlt    
  0x00000000036b3abf: hlt    
[Stub Code]
  0x00000000036b3ac0: nop                       ;   {no_reloc}
  0x00000000036b3ac1: nop
  0x00000000036b3ac2: nop
  0x00000000036b3ac3: nop
  0x00000000036b3ac4: nop
  0x00000000036b3ac5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b3acf: jmpq   0x00000000036b3acf  ;   {runtime_call}
  0x00000000036b3ad4: nop
  0x00000000036b3ad5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b3adf: jmpq   0x00000000036b3adf  ;   {runtime_call}
  0x00000000036b3ae4: nop
  0x00000000036b3ae5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b3aef: jmpq   0x00000000036b3aef  ;   {runtime_call}
  0x00000000036b3af4: nop
  0x00000000036b3af5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b3aff: jmpq   0x00000000036b3aff  ;   {runtime_call}
  0x00000000036b3b04: nop
  0x00000000036b3b05: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b3b0f: jmpq   0x00000000036b3b0f  ;   {runtime_call}
  0x00000000036b3b14: nop
  0x00000000036b3b15: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b3b1f: jmpq   0x00000000036b3b1f  ;   {runtime_call}
  0x00000000036b3b24: nop
  0x00000000036b3b25: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b3b2f: jmpq   0x00000000036b3b2f  ;   {runtime_call}
  0x00000000036b3b34: nop
  0x00000000036b3b35: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b3b3f: jmpq   0x00000000036b3b3f  ;   {runtime_call}
  0x00000000036b3b44: nop
  0x00000000036b3b45: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b3b4f: jmpq   0x00000000036b3b4f  ;   {runtime_call}
  0x00000000036b3b54: nop
  0x00000000036b3b55: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b3b5f: jmpq   0x00000000036b3b5f  ;   {runtime_call}
  0x00000000036b3b64: nop
  0x00000000036b3b65: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b3b6f: jmpq   0x00000000036b3b6f  ;   {runtime_call}
  0x00000000036b3b74: nop
  0x00000000036b3b75: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b3b7f: jmpq   0x00000000036b3b7f  ;   {runtime_call}
  0x00000000036b3b84: nop
  0x00000000036b3b85: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b3b8f: jmpq   0x00000000036b3b8f  ;   {runtime_call}
  0x00000000036b3b94: nop
  0x00000000036b3b95: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b3b9f: jmpq   0x00000000036b3b9f  ;   {runtime_call}
[Exception Handler]
  0x00000000036b3ba4: callq  0x000000000368f1a0  ;   {runtime_call}
  0x00000000036b3ba9: mov    %rsp,-0x28(%rsp)
  0x00000000036b3bae: sub    $0x80,%rsp
  0x00000000036b3bb5: mov    %rax,0x78(%rsp)
  0x00000000036b3bba: mov    %rcx,0x70(%rsp)
  0x00000000036b3bbf: mov    %rdx,0x68(%rsp)
  0x00000000036b3bc4: mov    %rbx,0x60(%rsp)
  0x00000000036b3bc9: mov    %rbp,0x50(%rsp)
  0x00000000036b3bce: mov    %rsi,0x48(%rsp)
  0x00000000036b3bd3: mov    %rdi,0x40(%rsp)
  0x00000000036b3bd8: mov    %r8,0x38(%rsp)
  0x00000000036b3bdd: mov    %r9,0x30(%rsp)
  0x00000000036b3be2: mov    %r10,0x28(%rsp)
  0x00000000036b3be7: mov    %r11,0x20(%rsp)
  0x00000000036b3bec: mov    %r12,0x18(%rsp)
  0x00000000036b3bf1: mov    %r13,0x10(%rsp)
  0x00000000036b3bf6: mov    %r14,0x8(%rsp)
  0x00000000036b3bfb: mov    %r15,(%rsp)
  0x00000000036b3bff: movabs $0x553ec320,%rcx   ;   {external_word}
  0x00000000036b3c09: movabs $0x36b3ba9,%rdx    ;   {internal_word}
  0x00000000036b3c13: mov    %rsp,%r8
  0x00000000036b3c16: and    $0xfffffffffffffff0,%rsp
  0x00000000036b3c1a: callq  0x00000000550a41d0  ;   {runtime_call}
  0x00000000036b3c1f: hlt    
[Deopt Handler Code]
  0x00000000036b3c20: movabs $0x36b3c20,%r10    ;   {section_word}
  0x00000000036b3c2a: push   %r10
  0x00000000036b3c2c: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036b3c31: hlt    
  0x00000000036b3c32: hlt    
  0x00000000036b3c33: hlt    
  0x00000000036b3c34: hlt    
  0x00000000036b3c35: hlt    
  0x00000000036b3c36: hlt    
  0x00000000036b3c37: hlt    
<nmethod compile_id='50' compiler='C1' level='3' entry='0x00000000036b21e0' size='11736' address='0x00000000036b1e90' relocation_offset='288' insts_offset='848' stub_offset='7216' scopes_data_offset='7760' scopes_pcs_offset='9312' dependencies_offset='11296' handler_table_offset='11312' nul_chk_table_offset='11664' oops_offset='7592' method='java/lang/StringCoding encode (Ljava/lang/String;[CII)[B' bytes='120' count='256' iicount='256' stamp='1.162'/>
<writer thread='17528'/>
<task_queued compile_id='60' method='java/io/DataInputStream readShort ()S' bytes='40' count='640' iicount='640' level='3' stamp='1.162' comment='tiered' hot_count='640'/>
<task_queued compile_id='61' method='java/util/HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='1408' backedge_count='147' iicount='1408' level='3' stamp='1.165' comment='tiered' hot_count='1408'/>
<task_queued compile_id='62' method='java/util/HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='13' count='1408' iicount='1408' level='3' stamp='1.165' comment='tiered' hot_count='1408'/>
<task_queued compile_id='63' method='java/util/HashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='13' count='896' iicount='896' level='3' stamp='1.165' comment='tiered' hot_count='896'/>
<task_queued compile_id='64' method='java/util/HashMap afterNodeInsertion (Z)V' bytes='1' count='896' iicount='896' level='3' stamp='1.165' comment='tiered' hot_count='896'/>
<task_queued compile_id='65' method='java/util/HashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='26' count='1408' iicount='1408' level='3' stamp='1.165' comment='tiered' hot_count='1408'/>
<task_queued compile_id='66' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='4608' iicount='4608' level='3' stamp='1.166' comment='tiered' hot_count='4608'/>
<writer thread='7332'/>
Decoding compiled method 0x00000000036b4c90:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;
  # parm0:    rdx:rdx   = &apos;java/io/DataInput&apos;
  #           [sp+0x110]  (sp of caller)
  0x00000000036b5060: mov    %eax,-0x6000(%rsp)
  0x00000000036b5067: push   %rbp
  0x00000000036b5068: sub    $0x100,%rsp
  0x00000000036b506f: movabs $0x1c7c73b0,%rsi   ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b5079: mov    0xdc(%rsi),%edi
  0x00000000036b507f: add    $0x8,%edi
  0x00000000036b5082: mov    %edi,0xdc(%rsi)
  0x00000000036b5088: movabs $0x1c7c5ec8,%rsi   ;   {metadata({method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b5092: and    $0x1ff8,%edi
  0x00000000036b5098: cmp    $0x0,%edi
  0x00000000036b509b: je     0x00000000036b6c09  ;*aload_0
                                                ; - java.io.DataInputStream::readUTF@0 (line 589)

  0x00000000036b50a1: cmp    $0x0,%rdx
  0x00000000036b50a5: je     0x00000000036b50cb
  0x00000000036b50ab: movabs $0x7c0063210,%rax  ;   {metadata(&apos;java/io/DataInputStream&apos;)}
  0x00000000036b50b5: mov    0x8(%rdx),%ebx
  0x00000000036b50b8: shl    $0x3,%rbx
  0x00000000036b50bc: cmp    0x40(%rbx),%rax
  0x00000000036b50c0: jne    0x00000000036b6c20
  0x00000000036b50c6: jmpq   0x00000000036b50cb
  0x00000000036b50cb: mov    %rdx,%rsi
  0x00000000036b50ce: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x00000000036b6c25
  0x00000000036b50d1: mov    %rdx,%rsi
  0x00000000036b50d4: movabs $0x1c7c73b0,%rdi   ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b50de: addq   $0x1,0x118(%rdi)
  0x00000000036b50e6: mov    %rdx,%rsi
  0x00000000036b50e9: mov    %rsi,%rdx          ;*invokeinterface readUnsignedShort
                                                ; - java.io.DataInputStream::readUTF@1 (line 589)

  0x00000000036b50ec: mov    %rsi,0x68(%rsp)
  0x00000000036b50f1: nop
  0x00000000036b50f2: nop
  0x00000000036b50f3: nop
  0x00000000036b50f4: nop
  0x00000000036b50f5: nop
  0x00000000036b50f6: nop
  0x00000000036b50f7: callq  0x00000000035d61a0  ; OopMap{[104]=Oop off=156}
                                                ;*invokeinterface readUnsignedShort
                                                ; - java.io.DataInputStream::readUTF@1 (line 589)
                                                ;   {optimized virtual_call}
  0x00000000036b50fc: mov    0x68(%rsp),%r11
  0x00000000036b5101: cmp    $0x0,%r11
  0x00000000036b5105: jne    0x00000000036b5120
  0x00000000036b5107: movabs $0x1c7c73b0,%rsi   ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b5111: orl    $0x100,0x130(%rsi)
  0x00000000036b511b: jmpq   0x00000000036b51e2
  0x00000000036b5120: movabs $0x7c0063210,%rdi  ;   {metadata(&apos;java/io/DataInputStream&apos;)}
  0x00000000036b512a: mov    0x8(%r11),%edx
  0x00000000036b512e: shl    $0x3,%rdx
  0x00000000036b5132: cmp    %rdx,%rdi
  0x00000000036b5135: jne    0x00000000036b51c6
  0x00000000036b513b: movabs $0x1c7c73b0,%rsi   ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b5145: mov    0x8(%r11),%edi
  0x00000000036b5149: shl    $0x3,%rdi
  0x00000000036b514d: cmp    0x140(%rsi),%rdi
  0x00000000036b5154: jne    0x00000000036b5163
  0x00000000036b5156: addq   $0x1,0x148(%rsi)
  0x00000000036b515e: jmpq   0x00000000036b51e7
  0x00000000036b5163: cmp    0x150(%rsi),%rdi
  0x00000000036b516a: jne    0x00000000036b5179
  0x00000000036b516c: addq   $0x1,0x158(%rsi)
  0x00000000036b5174: jmpq   0x00000000036b51e7
  0x00000000036b5179: cmpq   $0x0,0x140(%rsi)
  0x00000000036b5184: jne    0x00000000036b519d
  0x00000000036b5186: mov    %rdi,0x140(%rsi)
  0x00000000036b518d: movq   $0x1,0x148(%rsi)
  0x00000000036b5198: jmpq   0x00000000036b51e7
  0x00000000036b519d: cmpq   $0x0,0x150(%rsi)
  0x00000000036b51a8: jne    0x00000000036b51c1
  0x00000000036b51aa: mov    %rdi,0x150(%rsi)
  0x00000000036b51b1: movq   $0x1,0x158(%rsi)
  0x00000000036b51bc: jmpq   0x00000000036b51e7
  0x00000000036b51c1: jmpq   0x00000000036b51e7
  0x00000000036b51c6: movabs $0x1c7c73b0,%rsi   ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b51d0: subq   $0x1,0x138(%rsi)
  0x00000000036b51d8: jmpq   0x00000000036b51e2
  0x00000000036b51dd: jmpq   0x00000000036b51e7
  0x00000000036b51e2: xor    %rbx,%rbx
  0x00000000036b51e5: jmp    0x00000000036b51f1
  0x00000000036b51e7: movabs $0x1,%rbx          ;*instanceof
                                                ; - java.io.DataInputStream::readUTF@12 (line 592)

  0x00000000036b51f1: cmp    $0x0,%ebx
  0x00000000036b51f4: movabs $0x1c7c73b0,%rbx   ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b51fe: movabs $0x168,%rdx
  0x00000000036b5208: je     0x00000000036b5218
  0x00000000036b520e: movabs $0x178,%rdx
  0x00000000036b5218: mov    (%rbx,%rdx,1),%rsi
  0x00000000036b521c: lea    0x1(%rsi),%rsi
  0x00000000036b5220: mov    %rsi,(%rbx,%rdx,1)
  0x00000000036b5224: je     0x00000000036b54b3  ;*ifeq
                                                ; - java.io.DataInputStream::readUTF@15 (line 592)

  0x00000000036b522a: cmp    $0x0,%r11
  0x00000000036b522e: jne    0x00000000036b5249
  0x00000000036b5230: movabs $0x1c7c73b0,%rdx   ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b523a: orl    $0x100,0x180(%rdx)
  0x00000000036b5244: jmpq   0x00000000036b530b
  0x00000000036b5249: movabs $0x7c0063210,%rsi  ;   {metadata(&apos;java/io/DataInputStream&apos;)}
  0x00000000036b5253: mov    0x8(%r11),%ebx
  0x00000000036b5257: shl    $0x3,%rbx
  0x00000000036b525b: cmp    %rbx,%rsi
  0x00000000036b525e: jne    0x00000000036b52ef
  0x00000000036b5264: movabs $0x1c7c73b0,%rdx   ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b526e: mov    0x8(%r11),%esi
  0x00000000036b5272: shl    $0x3,%rsi
  0x00000000036b5276: cmp    0x190(%rdx),%rsi
  0x00000000036b527d: jne    0x00000000036b528c
  0x00000000036b527f: addq   $0x1,0x198(%rdx)
  0x00000000036b5287: jmpq   0x00000000036b530b
  0x00000000036b528c: cmp    0x1a0(%rdx),%rsi
  0x00000000036b5293: jne    0x00000000036b52a2
  0x00000000036b5295: addq   $0x1,0x1a8(%rdx)
  0x00000000036b529d: jmpq   0x00000000036b530b
  0x00000000036b52a2: cmpq   $0x0,0x190(%rdx)
  0x00000000036b52ad: jne    0x00000000036b52c6
  0x00000000036b52af: mov    %rsi,0x190(%rdx)
  0x00000000036b52b6: movq   $0x1,0x198(%rdx)
  0x00000000036b52c1: jmpq   0x00000000036b530b
  0x00000000036b52c6: cmpq   $0x0,0x1a0(%rdx)
  0x00000000036b52d1: jne    0x00000000036b52ea
  0x00000000036b52d3: mov    %rsi,0x1a0(%rdx)
  0x00000000036b52da: movq   $0x1,0x1a8(%rdx)
  0x00000000036b52e5: jmpq   0x00000000036b530b
  0x00000000036b52ea: jmpq   0x00000000036b530b
  0x00000000036b52ef: movabs $0x1c7c73b0,%rdx   ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b52f9: subq   $0x1,0x188(%rdx)
  0x00000000036b5301: jmpq   0x00000000036b6c2a
  0x00000000036b5306: jmpq   0x00000000036b530b
  0x00000000036b530b: mov    %r11,%r8           ;*checkcast
                                                ; - java.io.DataInputStream::readUTF@19 (line 593)

  0x00000000036b530e: mov    0x10(%r8),%ebx     ; implicit exception: dispatches to 0x00000000036b6c33
  0x00000000036b5312: shl    $0x3,%rbx          ;*getfield bytearr
                                                ; - java.io.DataInputStream::readUTF@26 (line 594)

  0x00000000036b5316: mov    0xc(%rbx),%ebx     ;*arraylength
                                                ; - java.io.DataInputStream::readUTF@29 (line 594)
                                                ; implicit exception: dispatches to 0x00000000036b6c38
  0x00000000036b5319: cmp    %eax,%ebx
  0x00000000036b531b: movabs $0x1c7c73b0,%rbx   ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b5325: movabs $0x1b8,%rdx
  0x00000000036b532f: jge    0x00000000036b533f
  0x00000000036b5335: movabs $0x1c8,%rdx
  0x00000000036b533f: mov    (%rbx,%rdx,1),%rsi
  0x00000000036b5343: lea    0x1(%rsi),%rsi
  0x00000000036b5347: mov    %rsi,(%rbx,%rdx,1)
  0x00000000036b534b: jl     0x00000000036b5359  ;*if_icmpge
                                                ; - java.io.DataInputStream::readUTF@31 (line 594)

  0x00000000036b5351: mov    %rax,%r13
  0x00000000036b5354: jmpq   0x00000000036b548e  ;*aload
                                                ; - java.io.DataInputStream::readUTF@54 (line 598)

  0x00000000036b5359: mov    %rax,%r9
  0x00000000036b535c: shl    %r9d
  0x00000000036b535f: mov    %r9,%rbx
  0x00000000036b5362: movabs $0x7c00007a8,%rdx  ;   {metadata({type array byte})}
  0x00000000036b536c: mov    %rax,%r13
  0x00000000036b536f: movslq %ebx,%rbx
  0x00000000036b5372: mov    %rbx,%rdi
  0x00000000036b5375: cmp    $0xffffff,%rbx
  0x00000000036b537c: ja     0x00000000036b6c3d
  0x00000000036b5382: movabs $0x17,%rsi
  0x00000000036b538c: lea    (%rsi,%rbx,1),%rsi
  0x00000000036b5390: and    $0xfffffffffffffff8,%rsi
  0x00000000036b5394: mov    0x60(%r15),%rax
  0x00000000036b5398: lea    (%rax,%rsi,1),%rsi
  0x00000000036b539c: cmp    0x70(%r15),%rsi
  0x00000000036b53a0: ja     0x00000000036b6c3d
  0x00000000036b53a6: mov    %rsi,0x60(%r15)
  0x00000000036b53aa: sub    %rax,%rsi
  0x00000000036b53ad: movq   $0x1,(%rax)
  0x00000000036b53b4: mov    %rdx,%rcx
  0x00000000036b53b7: shr    $0x3,%rcx
  0x00000000036b53bb: mov    %ecx,0x8(%rax)
  0x00000000036b53be: mov    %ebx,0xc(%rax)
  0x00000000036b53c1: sub    $0x10,%rsi
  0x00000000036b53c5: je     0x00000000036b53dc
  0x00000000036b53cb: xor    %rbx,%rbx
  0x00000000036b53ce: shr    $0x3,%rsi
  0x00000000036b53d2: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000000036b53d7: dec    %rsi
  0x00000000036b53da: jne    0x00000000036b53d2  ;*newarray
                                                ; - java.io.DataInputStream::readUTF@39 (line 595)

  0x00000000036b53dc: mov    %rax,%r10
  0x00000000036b53df: shr    $0x3,%r10
  0x00000000036b53e3: mov    %r10d,0x10(%r8)
  0x00000000036b53e7: mov    %r8,%rbx
  0x00000000036b53ea: shr    $0x9,%rbx
  0x00000000036b53ee: movabs $0xf32f000,%r14
  0x00000000036b53f8: movb   $0x0,(%rbx,%r14,1)  ;*putfield bytearr
                                                ; - java.io.DataInputStream::readUTF@41 (line 595)

  0x00000000036b53fd: mov    %r9,%rbx
  0x00000000036b5400: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000000036b540a: movslq %ebx,%rbx
  0x00000000036b540d: mov    %rbx,%rdi
  0x00000000036b5410: cmp    $0xffffff,%rbx
  0x00000000036b5417: ja     0x00000000036b6c47
  0x00000000036b541d: movabs $0x17,%rsi
  0x00000000036b5427: lea    (%rsi,%rbx,2),%rsi
  0x00000000036b542b: and    $0xfffffffffffffff8,%rsi
  0x00000000036b542f: mov    0x60(%r15),%rax
  0x00000000036b5433: lea    (%rax,%rsi,1),%rsi
  0x00000000036b5437: cmp    0x70(%r15),%rsi
  0x00000000036b543b: ja     0x00000000036b6c47
  0x00000000036b5441: mov    %rsi,0x60(%r15)
  0x00000000036b5445: sub    %rax,%rsi
  0x00000000036b5448: movq   $0x1,(%rax)
  0x00000000036b544f: mov    %rdx,%rcx
  0x00000000036b5452: shr    $0x3,%rcx
  0x00000000036b5456: mov    %ecx,0x8(%rax)
  0x00000000036b5459: mov    %ebx,0xc(%rax)
  0x00000000036b545c: sub    $0x10,%rsi
  0x00000000036b5460: je     0x00000000036b5477
  0x00000000036b5466: xor    %rbx,%rbx
  0x00000000036b5469: shr    $0x3,%rsi
  0x00000000036b546d: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000000036b5472: dec    %rsi
  0x00000000036b5475: jne    0x00000000036b546d  ;*newarray
                                                ; - java.io.DataInputStream::readUTF@49 (line 596)

  0x00000000036b5477: mov    %rax,%r10
  0x00000000036b547a: shr    $0x3,%r10
  0x00000000036b547e: mov    %r10d,0x14(%r8)
  0x00000000036b5482: mov    %r8,%rbx
  0x00000000036b5485: shr    $0x9,%rbx
  0x00000000036b5489: movb   $0x0,(%rbx,%r14,1)  ;*putfield chararr
                                                ; - java.io.DataInputStream::readUTF@51 (line 596)

  0x00000000036b548e: mov    0x14(%r8),%ebx
  0x00000000036b5492: shl    $0x3,%rbx          ;*getfield chararr
                                                ; - java.io.DataInputStream::readUTF@56 (line 598)

  0x00000000036b5496: mov    0x10(%r8),%edx
  0x00000000036b549a: shl    $0x3,%rdx          ;*getfield bytearr
                                                ; - java.io.DataInputStream::readUTF@62 (line 599)

  0x00000000036b549e: movabs $0x1c7c73b0,%rsi   ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b54a8: incl   0x1d8(%rsi)
  0x00000000036b54ae: jmpq   0x00000000036b55b3  ;*goto
                                                ; - java.io.DataInputStream::readUTF@66 (line 600)

  0x00000000036b54b3: mov    %rax,%r13
  0x00000000036b54b6: mov    %r13,%rbx
  0x00000000036b54b9: movabs $0x7c00007a8,%rdx  ;   {metadata({type array byte})}
  0x00000000036b54c3: movslq %ebx,%rbx
  0x00000000036b54c6: mov    %rbx,%rdi
  0x00000000036b54c9: cmp    $0xffffff,%rbx
  0x00000000036b54d0: ja     0x00000000036b6c51
  0x00000000036b54d6: movabs $0x17,%rsi
  0x00000000036b54e0: lea    (%rsi,%rbx,1),%rsi
  0x00000000036b54e4: and    $0xfffffffffffffff8,%rsi
  0x00000000036b54e8: mov    0x60(%r15),%rax
  0x00000000036b54ec: lea    (%rax,%rsi,1),%rsi
  0x00000000036b54f0: cmp    0x70(%r15),%rsi
  0x00000000036b54f4: ja     0x00000000036b6c51
  0x00000000036b54fa: mov    %rsi,0x60(%r15)
  0x00000000036b54fe: sub    %rax,%rsi
  0x00000000036b5501: movq   $0x1,(%rax)
  0x00000000036b5508: mov    %rdx,%rcx
  0x00000000036b550b: shr    $0x3,%rcx
  0x00000000036b550f: mov    %ecx,0x8(%rax)
  0x00000000036b5512: mov    %ebx,0xc(%rax)
  0x00000000036b5515: sub    $0x10,%rsi
  0x00000000036b5519: je     0x00000000036b5530
  0x00000000036b551f: xor    %rbx,%rbx
  0x00000000036b5522: shr    $0x3,%rsi
  0x00000000036b5526: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000000036b552b: dec    %rsi
  0x00000000036b552e: jne    0x00000000036b5526
  0x00000000036b5530: mov    %rax,%r8           ;*newarray
                                                ; - java.io.DataInputStream::readUTF@70 (line 601)

  0x00000000036b5533: mov    %r13,%rbx
  0x00000000036b5536: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000000036b5540: movslq %ebx,%rbx
  0x00000000036b5543: mov    %rbx,%rdi
  0x00000000036b5546: cmp    $0xffffff,%rbx
  0x00000000036b554d: ja     0x00000000036b6c5b
  0x00000000036b5553: movabs $0x17,%rsi
  0x00000000036b555d: lea    (%rsi,%rbx,2),%rsi
  0x00000000036b5561: and    $0xfffffffffffffff8,%rsi
  0x00000000036b5565: mov    0x60(%r15),%rax
  0x00000000036b5569: lea    (%rax,%rsi,1),%rsi
  0x00000000036b556d: cmp    0x70(%r15),%rsi
  0x00000000036b5571: ja     0x00000000036b6c5b
  0x00000000036b5577: mov    %rsi,0x60(%r15)
  0x00000000036b557b: sub    %rax,%rsi
  0x00000000036b557e: movq   $0x1,(%rax)
  0x00000000036b5585: mov    %rdx,%rcx
  0x00000000036b5588: shr    $0x3,%rcx
  0x00000000036b558c: mov    %ecx,0x8(%rax)
  0x00000000036b558f: mov    %ebx,0xc(%rax)
  0x00000000036b5592: sub    $0x10,%rsi
  0x00000000036b5596: je     0x00000000036b55ad
  0x00000000036b559c: xor    %rbx,%rbx
  0x00000000036b559f: shr    $0x3,%rsi
  0x00000000036b55a3: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000000036b55a8: dec    %rsi
  0x00000000036b55ab: jne    0x00000000036b55a3  ;*newarray
                                                ; - java.io.DataInputStream::readUTF@74 (line 602)

  0x00000000036b55ad: mov    %rax,%rbx
  0x00000000036b55b0: mov    %r8,%rdx           ;*iconst_0
                                                ; - java.io.DataInputStream::readUTF@77 (line 606)

  0x00000000036b55b3: mov    %rbx,0x80(%rsp)
  0x00000000036b55bb: cmp    $0x0,%r11
  0x00000000036b55bf: je     0x00000000036b55e6
  0x00000000036b55c5: movabs $0x7c0063210,%rsi  ;   {metadata(&apos;java/io/DataInputStream&apos;)}
  0x00000000036b55cf: mov    0x8(%r11),%edi
  0x00000000036b55d3: shl    $0x3,%rdi
  0x00000000036b55d7: cmp    0x40(%rdi),%rsi
  0x00000000036b55db: jne    0x00000000036b6c65
  0x00000000036b55e1: jmpq   0x00000000036b55e6
  0x00000000036b55e6: mov    %r11,%r8
  0x00000000036b55e9: mov    %r11,%r8
  0x00000000036b55ec: movabs $0x1c7c73b0,%r9    ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b55f6: addq   $0x1,0x200(%r9)
  0x00000000036b55fe: mov    %rdx,%r8
  0x00000000036b5601: mov    $0x0,%r9d
  0x00000000036b5607: mov    %r13,%rdi
  0x00000000036b560a: mov    %rdx,0x78(%rsp)
  0x00000000036b560f: mov    %r11,%rdx          ;*invokeinterface readFully
                                                ; - java.io.DataInputStream::readUTF@87 (line 609)

  0x00000000036b5612: mov    %r13d,0x70(%rsp)
  0x00000000036b5617: callq  0x00000000035d61a0  ; OopMap{[120]=Oop [128]=Oop off=1468}
                                                ;*invokeinterface readFully
                                                ; - java.io.DataInputStream::readUTF@87 (line 609)
                                                ;   {optimized virtual_call}
  0x00000000036b561c: mov    $0x0,%edx
  0x00000000036b5621: mov    $0x0,%esi
  0x00000000036b5626: mov    0x80(%rsp),%rbx
  0x00000000036b562e: mov    0x78(%rsp),%rdi
  0x00000000036b5633: mov    0x70(%rsp),%eax
  0x00000000036b5637: jmpq   0x00000000036b56f5  ;*iload
                                                ; - java.io.DataInputStream::readUTF@92 (line 611)

  0x00000000036b563c: nopl   0x0(%rax)
  0x00000000036b5640: movslq %esi,%rcx
  0x00000000036b5643: cmp    0xc(%rdi),%esi     ; implicit exception: dispatches to 0x00000000036b6c6a
  0x00000000036b5646: jae    0x00000000036b6c74
  0x00000000036b564c: movsbl 0x10(%rdi,%rcx,1),%ecx  ;*baload
                                                ; - java.io.DataInputStream::readUTF@101 (line 612)

  0x00000000036b5651: and    $0xff,%ecx
  0x00000000036b5657: cmp    $0x7f,%ecx
  0x00000000036b565a: movabs $0x1c7c73b0,%r8    ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b5664: movabs $0x240,%r9
  0x00000000036b566e: jle    0x00000000036b567e
  0x00000000036b5674: movabs $0x250,%r9
  0x00000000036b567e: mov    (%r8,%r9,1),%r11
  0x00000000036b5682: lea    0x1(%r11),%r11
  0x00000000036b5686: mov    %r11,(%r8,%r9,1)
  0x00000000036b568a: jg     0x00000000036b5735  ;*if_icmple
                                                ; - java.io.DataInputStream::readUTF@112 (line 613)

  0x00000000036b5690: inc    %esi
  0x00000000036b5692: mov    %rdx,%r8
  0x00000000036b5695: inc    %r8d
  0x00000000036b5698: movslq %edx,%r9
  0x00000000036b569b: cmp    0xc(%rbx),%edx     ; implicit exception: dispatches to 0x00000000036b6c7d
  0x00000000036b569e: jae    0x00000000036b6c87
  0x00000000036b56a4: mov    %cx,0x10(%rbx,%r9,2)  ;*castore
                                                ; - java.io.DataInputStream::readUTF@130 (line 615)

  0x00000000036b56aa: movabs $0x1c7c73b0,%rdx   ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b56b4: mov    0xe0(%rdx),%ecx
  0x00000000036b56ba: add    $0x8,%ecx
  0x00000000036b56bd: mov    %ecx,0xe0(%rdx)
  0x00000000036b56c3: movabs $0x1c7c5ec8,%rdx   ;   {metadata({method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b56cd: and    $0xfff8,%ecx
  0x00000000036b56d3: cmp    $0x0,%ecx
  0x00000000036b56d6: je     0x00000000036b6c90  ; OopMap{rbx=Oop rdi=Oop off=1660}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@131 (line 615)

  0x00000000036b56dc: test   %eax,-0x20c55e2(%rip)        # 0x00000000015f0100
                                                ;   {poll}
  0x00000000036b56e2: movabs $0x1c7c73b0,%rdx   ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b56ec: incl   0x278(%rdx)
  0x00000000036b56f2: mov    %r8,%rdx           ;*goto
                                                ; - java.io.DataInputStream::readUTF@131 (line 615)

  0x00000000036b56f5: cmp    %eax,%esi
  0x00000000036b56f7: movabs $0x1c7c73b0,%rcx   ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b5701: movabs $0x220,%r8
  0x00000000036b570b: jge    0x00000000036b571b
  0x00000000036b5711: movabs $0x230,%r8
  0x00000000036b571b: mov    (%rcx,%r8,1),%r9
  0x00000000036b571f: lea    0x1(%r9),%r9
  0x00000000036b5723: mov    %r9,(%rcx,%r8,1)
  0x00000000036b5727: jl     0x00000000036b5640  ;*if_icmpge
                                                ; - java.io.DataInputStream::readUTF@95 (line 611)

  0x00000000036b572d: mov    %rdx,%r11
  0x00000000036b5730: jmpq   0x00000000036b5748  ;*iload
                                                ; - java.io.DataInputStream::readUTF@134 (line 618)

  0x00000000036b5735: movabs $0x1c7c73b0,%rcx   ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b573f: incl   0x260(%rcx)
  0x00000000036b5745: mov    %rdx,%r11          ;*goto
                                                ; - java.io.DataInputStream::readUTF@115 (line 613)

  0x00000000036b5748: cmp    %eax,%esi
  0x00000000036b574a: movabs $0x1c7c73b0,%rdx   ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b5754: movabs $0x290,%rcx
  0x00000000036b575e: jge    0x00000000036b576e
  0x00000000036b5764: movabs $0x2a0,%rcx
  0x00000000036b576e: mov    (%rdx,%rcx,1),%r8
  0x00000000036b5772: lea    0x1(%r8),%r8
  0x00000000036b5776: mov    %r8,(%rdx,%rcx,1)
  0x00000000036b577a: jge    0x00000000036b5adb  ;*if_icmpge
                                                ; - java.io.DataInputStream::readUTF@137 (line 618)

  0x00000000036b5780: movslq %esi,%rdx
  0x00000000036b5783: cmp    0xc(%rdi),%esi     ; implicit exception: dispatches to 0x00000000036b6ca7
  0x00000000036b5786: jae    0x00000000036b6cb1
  0x00000000036b578c: movsbl 0x10(%rdi,%rdx,1),%edx  ;*baload
                                                ; - java.io.DataInputStream::readUTF@143 (line 619)

  0x00000000036b5791: and    $0xff,%edx
  0x00000000036b5797: mov    %rdx,%rcx
  0x00000000036b579a: sar    $0x4,%ecx
  0x00000000036b579d: cmp    $0x0,%ecx
  0x00000000036b57a0: jl     0x00000000036b57af
  0x00000000036b57a6: cmp    $0x7,%ecx
  0x00000000036b57a9: jle    0x00000000036b5a60
  0x00000000036b57af: cmp    $0xc,%ecx
  0x00000000036b57b2: je     0x00000000036b57cf
  0x00000000036b57b8: cmp    $0xd,%ecx
  0x00000000036b57bb: je     0x00000000036b57cf
  0x00000000036b57c1: cmp    $0xe,%ecx
  0x00000000036b57c4: je     0x00000000036b586d
  0x00000000036b57ca: jmpq   0x00000000036b5acf  ;*tableswitch
                                                ; - java.io.DataInputStream::readUTF@154 (line 620)

  0x00000000036b57cf: add    $0x2,%esi
  0x00000000036b57d2: cmp    %eax,%esi
  0x00000000036b57d4: movabs $0x1c7c73b0,%rcx   ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b57de: movabs $0x3d8,%r8
  0x00000000036b57e8: jle    0x00000000036b57f8
  0x00000000036b57ee: movabs $0x3e8,%r8
  0x00000000036b57f8: mov    (%rcx,%r8,1),%r9
  0x00000000036b57fc: lea    0x1(%r9),%r9
  0x00000000036b5800: mov    %r9,(%rcx,%r8,1)
  0x00000000036b5804: jg     0x00000000036b6bb1  ;*if_icmple
                                                ; - java.io.DataInputStream::readUTF@250 (line 629)

  0x00000000036b580a: mov    %rsi,%rcx
  0x00000000036b580d: dec    %ecx
  0x00000000036b580f: movslq %ecx,%r8
  0x00000000036b5812: cmp    0xc(%rdi),%ecx
  0x00000000036b5815: jae    0x00000000036b6cba
  0x00000000036b581b: movsbl 0x10(%rdi,%r8,1),%ecx  ;*baload
                                                ; - java.io.DataInputStream::readUTF@268 (line 632)

  0x00000000036b5821: mov    %rcx,%r8
  0x00000000036b5824: and    $0xc0,%r8d
  0x00000000036b582b: cmp    $0x80,%r8d
  0x00000000036b5832: movabs $0x1c7c73b0,%r8    ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b583c: movabs $0x408,%r9
  0x00000000036b5846: je     0x00000000036b5856
  0x00000000036b584c: movabs $0x418,%r9
  0x00000000036b5856: mov    (%r8,%r9,1),%r13
  0x00000000036b585a: lea    0x1(%r13),%r13
  0x00000000036b585e: mov    %r13,(%r8,%r9,1)
  0x00000000036b5862: je     0x00000000036b59ec
  0x00000000036b5868: jmpq   0x00000000036b6661  ;*if_icmpeq
                                                ; - java.io.DataInputStream::readUTF@280 (line 633)

  0x00000000036b586d: add    $0x3,%esi
  0x00000000036b5870: cmp    %eax,%esi
  0x00000000036b5872: movabs $0x1c7c73b0,%rcx   ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b587c: movabs $0x4f0,%r8
  0x00000000036b5886: jle    0x00000000036b5896
  0x00000000036b588c: movabs $0x500,%r8
  0x00000000036b5896: mov    (%rcx,%r8,1),%r9
  0x00000000036b589a: lea    0x1(%r9),%r9
  0x00000000036b589e: mov    %r9,(%rcx,%r8,1)
  0x00000000036b58a2: jg     0x00000000036b6609  ;*if_icmple
                                                ; - java.io.DataInputStream::readUTF@342 (line 642)

  0x00000000036b58a8: mov    %rsi,%rcx
  0x00000000036b58ab: sub    $0x2,%ecx
  0x00000000036b58ae: movslq %ecx,%r8
  0x00000000036b58b1: cmp    0xc(%rdi),%ecx
  0x00000000036b58b4: jae    0x00000000036b6cc3
  0x00000000036b58ba: movsbl 0x10(%rdi,%r8,1),%ecx  ;*baload
                                                ; - java.io.DataInputStream::readUTF@360 (line 645)

  0x00000000036b58c0: mov    %rsi,%r9
  0x00000000036b58c3: dec    %r9d
  0x00000000036b58c6: mov    %r9d,0x74(%rsp)
  0x00000000036b58cb: movslq %r9d,%r8
  0x00000000036b58ce: cmp    0xc(%rdi),%r9d
  0x00000000036b58d2: jae    0x00000000036b6ccc
  0x00000000036b58d8: movsbl 0x10(%rdi,%r8,1),%r8d  ;*baload
                                                ; - java.io.DataInputStream::readUTF@368 (line 646)

  0x00000000036b58de: mov    %rcx,%r13
  0x00000000036b58e1: and    $0xc0,%r13d
  0x00000000036b58e8: cmp    $0x80,%r13d
  0x00000000036b58ef: movabs $0x1c7c73b0,%r13   ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b58f9: movabs $0x520,%r14
  0x00000000036b5903: jne    0x00000000036b5913
  0x00000000036b5909: movabs $0x530,%r14
  0x00000000036b5913: mov    0x0(%r13,%r14,1),%r9
  0x00000000036b5918: lea    0x1(%r9),%r9
  0x00000000036b591c: mov    %r9,0x0(%r13,%r14,1)
  0x00000000036b5921: jne    0x00000000036b60b9  ;*if_icmpne
                                                ; - java.io.DataInputStream::readUTF@380 (line 647)

  0x00000000036b5927: mov    %r8,%r9
  0x00000000036b592a: and    $0xc0,%r9d
  0x00000000036b5931: cmp    $0x80,%r9d
  0x00000000036b5938: movabs $0x1c7c73b0,%r9    ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b5942: movabs $0x540,%r13
  0x00000000036b594c: je     0x00000000036b595c
  0x00000000036b5952: movabs $0x550,%r13
  0x00000000036b595c: mov    (%r9,%r13,1),%r14
  0x00000000036b5960: lea    0x1(%r14),%r14
  0x00000000036b5964: mov    %r14,(%r9,%r13,1)
  0x00000000036b5968: jne    0x00000000036b60b9  ;*if_icmpeq
                                                ; - java.io.DataInputStream::readUTF@392 (line 647)

  0x00000000036b596e: mov    %r11,%r9
  0x00000000036b5971: inc    %r9d
  0x00000000036b5974: and    $0xf,%edx
  0x00000000036b5977: shl    $0xc,%edx
  0x00000000036b597a: and    $0x3f,%ecx
  0x00000000036b597d: shl    $0x6,%ecx
  0x00000000036b5980: or     %rcx,%rdx
  0x00000000036b5983: and    $0x3f,%r8d
  0x00000000036b5987: or     %r8,%rdx
  0x00000000036b598a: movslq %r11d,%rcx
  0x00000000036b598d: cmp    0xc(%rbx),%r11d    ; implicit exception: dispatches to 0x00000000036b6cd5
  0x00000000036b5991: jae    0x00000000036b6cdf
  0x00000000036b5997: mov    %dx,0x10(%rbx,%rcx,2)  ;*castore
                                                ; - java.io.DataInputStream::readUTF@457 (line 650)

  0x00000000036b599c: movabs $0x1c7c73b0,%rdx   ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b59a6: mov    0xe0(%rdx),%ecx
  0x00000000036b59ac: add    $0x8,%ecx
  0x00000000036b59af: mov    %ecx,0xe0(%rdx)
  0x00000000036b59b5: movabs $0x1c7c5ec8,%rdx   ;   {metadata({method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b59bf: and    $0xfff8,%ecx
  0x00000000036b59c5: cmp    $0x0,%ecx
  0x00000000036b59c8: je     0x00000000036b6ce8  ; OopMap{rbx=Oop rdi=Oop off=2414}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@458 (line 653)

  0x00000000036b59ce: test   %eax,-0x20c58d4(%rip)        # 0x00000000015f0100
                                                ;   {poll}
  0x00000000036b59d4: movabs $0x1c7c73b0,%rdx   ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b59de: incl   0x610(%rdx)
  0x00000000036b59e4: mov    %r9,%r11
  0x00000000036b59e7: jmpq   0x00000000036b5748  ;*goto
                                                ; - java.io.DataInputStream::readUTF@458 (line 653)

  0x00000000036b59ec: mov    %r11,%r8
  0x00000000036b59ef: inc    %r8d
  0x00000000036b59f2: and    $0x1f,%edx
  0x00000000036b59f5: shl    $0x6,%edx
  0x00000000036b59f8: and    $0x3f,%ecx
  0x00000000036b59fb: or     %rcx,%rdx
  0x00000000036b59fe: movslq %r11d,%rcx
  0x00000000036b5a01: cmp    0xc(%rbx),%r11d    ; implicit exception: dispatches to 0x00000000036b6cff
  0x00000000036b5a05: jae    0x00000000036b6d09
  0x00000000036b5a0b: mov    %dx,0x10(%rbx,%rcx,2)  ;*castore
                                                ; - java.io.DataInputStream::readUTF@332 (line 636)

  0x00000000036b5a10: movabs $0x1c7c73b0,%rdx   ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b5a1a: mov    0xe0(%rdx),%ecx
  0x00000000036b5a20: add    $0x8,%ecx
  0x00000000036b5a23: mov    %ecx,0xe0(%rdx)
  0x00000000036b5a29: movabs $0x1c7c5ec8,%rdx   ;   {metadata({method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b5a33: and    $0xfff8,%ecx
  0x00000000036b5a39: cmp    $0x0,%ecx
  0x00000000036b5a3c: je     0x00000000036b6d12  ; OopMap{rbx=Oop rdi=Oop off=2530}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@333 (line 638)

  0x00000000036b5a42: test   %eax,-0x20c5948(%rip)        # 0x00000000015f0100
                                                ;   {poll}
  0x00000000036b5a48: movabs $0x1c7c73b0,%rdx   ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b5a52: incl   0x4d8(%rdx)
  0x00000000036b5a58: mov    %r8,%r11
  0x00000000036b5a5b: jmpq   0x00000000036b5748  ;*goto
                                                ; - java.io.DataInputStream::readUTF@333 (line 638)

  0x00000000036b5a60: inc    %esi
  0x00000000036b5a62: mov    %r11,%rcx
  0x00000000036b5a65: inc    %ecx
  0x00000000036b5a67: movslq %r11d,%r8
  0x00000000036b5a6a: cmp    0xc(%rbx),%r11d    ; implicit exception: dispatches to 0x00000000036b6d29
  0x00000000036b5a6e: jae    0x00000000036b6d33
  0x00000000036b5a74: mov    %dx,0x10(%rbx,%r8,2)  ;*castore
                                                ; - java.io.DataInputStream::readUTF@240 (line 624)

  0x00000000036b5a7a: movabs $0x1c7c73b0,%rdx   ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b5a84: mov    0xe0(%rdx),%r8d
  0x00000000036b5a8b: add    $0x8,%r8d
  0x00000000036b5a8f: mov    %r8d,0xe0(%rdx)
  0x00000000036b5a96: movabs $0x1c7c5ec8,%rdx   ;   {metadata({method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b5aa0: and    $0xfff8,%r8d
  0x00000000036b5aa7: cmp    $0x0,%r8d
  0x00000000036b5aab: je     0x00000000036b6d3c  ; OopMap{rbx=Oop rdi=Oop off=2641}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@241 (line 625)

  0x00000000036b5ab1: test   %eax,-0x20c59b7(%rip)        # 0x00000000015f0100
                                                ;   {poll}
  0x00000000036b5ab7: movabs $0x1c7c73b0,%rdx   ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b5ac1: incl   0x3c0(%rdx)
  0x00000000036b5ac7: mov    %rcx,%r11
  0x00000000036b5aca: jmpq   0x00000000036b5748  ;*goto
                                                ; - java.io.DataInputStream::readUTF@241 (line 625)

  0x00000000036b5acf: mov    %esi,0x98(%rsp)
  0x00000000036b5ad6: jmpq   0x00000000036b5b6b  ;*new
                                                ; - java.io.DataInputStream::readUTF@461 (line 656)

  0x00000000036b5adb: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000000036b5ae5: mov    0x60(%r15),%rax
  0x00000000036b5ae9: lea    0x18(%rax),%rdi
  0x00000000036b5aed: cmp    0x70(%r15),%rdi
  0x00000000036b5af1: ja     0x00000000036b6d53
  0x00000000036b5af7: mov    %rdi,0x60(%r15)
  0x00000000036b5afb: mov    0xa8(%rdx),%rcx
  0x00000000036b5b02: mov    %rcx,(%rax)
  0x00000000036b5b05: mov    %rdx,%rcx
  0x00000000036b5b08: shr    $0x3,%rcx
  0x00000000036b5b0c: mov    %ecx,0x8(%rax)
  0x00000000036b5b0f: xor    %rcx,%rcx
  0x00000000036b5b12: mov    %ecx,0xc(%rax)
  0x00000000036b5b15: xor    %rcx,%rcx
  0x00000000036b5b18: mov    %rcx,0x10(%rax)    ;*new  ; - java.io.DataInputStream::readUTF@489 (line 661)

  0x00000000036b5b1c: mov    %rax,%r8
  0x00000000036b5b1f: movabs $0x1c7c73b0,%r9    ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b5b29: addq   $0x1,0x6d8(%r9)
  0x00000000036b5b31: mov    %rbx,%r8
  0x00000000036b5b34: mov    $0x0,%r9d
  0x00000000036b5b3a: mov    %r11,%rdi
  0x00000000036b5b3d: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@497 (line 661)

  0x00000000036b5b40: mov    %rax,0x88(%rsp)
  0x00000000036b5b48: nop
  0x00000000036b5b49: nop
  0x00000000036b5b4a: nop
  0x00000000036b5b4b: nop
  0x00000000036b5b4c: nop
  0x00000000036b5b4d: nop
  0x00000000036b5b4e: nop
  0x00000000036b5b4f: callq  0x00000000035d61a0  ; OopMap{[136]=Oop off=2804}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@497 (line 661)
                                                ;   {optimized virtual_call}
  0x00000000036b5b54: mov    0x88(%rsp),%rax
  0x00000000036b5b5c: add    $0x100,%rsp
  0x00000000036b5b63: pop    %rbp
  0x00000000036b5b64: test   %eax,-0x20c5a6a(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036b5b6a: retq                      ;*areturn
                                                ; - java.io.DataInputStream::readUTF@500 (line 661)

  0x00000000036b5b6b: nopl   0x0(%rax,%rax,1)
  0x00000000036b5b70: jmpq   0x00000000036b6d6f  ;   {no_reloc}
  0x00000000036b5b75: add    %al,(%rax)
  0x00000000036b5b77: add    %al,(%rax)
  0x00000000036b5b79: add    %ch,%cl
  0x00000000036b5b7b: cli    
  0x00000000036b5b7c: adc    %eax,(%rax)
  0x00000000036b5b7e: add    %dl,0x1210e9(%rax)  ;*new
                                                ; - java.io.DataInputStream::readUTF@461 (line 656)
                                                ;   {no_reloc}
  0x00000000036b5b84: add    %al,(%rax)
  0x00000000036b5b86: add    %al,(%rax)
  0x00000000036b5b88: add    %al,(%rax)
  0x00000000036b5b8a: mov    %rax,0xa0(%rsp)
  0x00000000036b5b92: mov    0x60(%r15),%rax
  0x00000000036b5b96: lea    0x18(%rax),%rdi
  0x00000000036b5b9a: cmp    0x70(%r15),%rdi
  0x00000000036b5b9e: ja     0x00000000036b6d9f
  0x00000000036b5ba4: mov    %rdi,0x60(%r15)
  0x00000000036b5ba8: mov    0xa8(%rdx),%rcx
  0x00000000036b5baf: mov    %rcx,(%rax)
  0x00000000036b5bb2: mov    %rdx,%rcx
  0x00000000036b5bb5: shr    $0x3,%rcx
  0x00000000036b5bb9: mov    %ecx,0x8(%rax)
  0x00000000036b5bbc: xor    %rcx,%rcx
  0x00000000036b5bbf: mov    %ecx,0xc(%rax)
  0x00000000036b5bc2: xor    %rcx,%rcx
  0x00000000036b5bc5: mov    %rcx,0x10(%rax)    ;*new  ; - java.io.DataInputStream::readUTF@465 (line 656)

  0x00000000036b5bc9: mov    %rax,%rbx
  0x00000000036b5bcc: movabs $0x1c7c73b0,%rdx   ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b5bd6: addq   $0x1,0x628(%rdx)
  0x00000000036b5bde: movabs $0x1c6d2158,%rbx   ;   {metadata(method data for {method} {0x000000001c5076d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000036b5be8: mov    0xdc(%rbx),%edx
  0x00000000036b5bee: add    $0x8,%edx
  0x00000000036b5bf1: mov    %edx,0xdc(%rbx)
  0x00000000036b5bf7: movabs $0x1c5076d0,%rbx   ;   {metadata({method} {0x000000001c5076d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000036b5c01: and    $0x7ffff8,%edx
  0x00000000036b5c07: cmp    $0x0,%edx
  0x00000000036b5c0a: je     0x00000000036b6dac
  0x00000000036b5c10: mov    %rax,%rbx
  0x00000000036b5c13: movabs $0x1c6d2158,%rdx   ;   {metadata(method data for {method} {0x000000001c5076d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000036b5c1d: addq   $0x1,0x108(%rdx)
  0x00000000036b5c25: movabs $0x1c6c9f78,%rbx   ;   {metadata(method data for {method} {0x000000001c503a08} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036b5c2f: mov    0xdc(%rbx),%edx
  0x00000000036b5c35: add    $0x8,%edx
  0x00000000036b5c38: mov    %edx,0xdc(%rbx)
  0x00000000036b5c3e: movabs $0x1c503a00,%rbx   ;   {metadata({method} {0x000000001c503a08} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036b5c48: and    $0x7ffff8,%edx
  0x00000000036b5c4e: cmp    $0x0,%edx
  0x00000000036b5c51: je     0x00000000036b6dc3
  0x00000000036b5c57: mov    %rax,%rbx
  0x00000000036b5c5a: movabs $0x1c6c9f78,%rdx   ;   {metadata(method data for {method} {0x000000001c503a08} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036b5c64: addq   $0x1,0x108(%rdx)
  0x00000000036b5c6c: movabs $0x1c5c3748,%rbx   ;   {metadata(method data for {method} {0x000000001c490488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000036b5c76: mov    0xdc(%rbx),%edx
  0x00000000036b5c7c: add    $0x8,%edx
  0x00000000036b5c7f: mov    %edx,0xdc(%rbx)
  0x00000000036b5c85: movabs $0x1c490480,%rbx   ;   {metadata({method} {0x000000001c490488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000036b5c8f: and    $0x7ffff8,%edx
  0x00000000036b5c95: cmp    $0x0,%edx
  0x00000000036b5c98: je     0x00000000036b6dda
  0x00000000036b5c9e: mov    $0x10,%ebx
  0x00000000036b5ca3: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000000036b5cad: mov    %rax,%r13
  0x00000000036b5cb0: movslq %ebx,%rbx
  0x00000000036b5cb3: mov    %rbx,%rdi
  0x00000000036b5cb6: cmp    $0xffffff,%rbx
  0x00000000036b5cbd: ja     0x00000000036b6df1
  0x00000000036b5cc3: movabs $0x17,%rsi
  0x00000000036b5ccd: lea    (%rsi,%rbx,2),%rsi
  0x00000000036b5cd1: and    $0xfffffffffffffff8,%rsi
  0x00000000036b5cd5: mov    0x60(%r15),%rax
  0x00000000036b5cd9: lea    (%rax,%rsi,1),%rsi
  0x00000000036b5cdd: cmp    0x70(%r15),%rsi
  0x00000000036b5ce1: ja     0x00000000036b6df1
  0x00000000036b5ce7: mov    %rsi,0x60(%r15)
  0x00000000036b5ceb: sub    %rax,%rsi
  0x00000000036b5cee: movq   $0x1,(%rax)
  0x00000000036b5cf5: mov    %rdx,%rcx
  0x00000000036b5cf8: shr    $0x3,%rcx
  0x00000000036b5cfc: mov    %ecx,0x8(%rax)
  0x00000000036b5cff: mov    %ebx,0xc(%rax)
  0x00000000036b5d02: sub    $0x10,%rsi
  0x00000000036b5d06: je     0x00000000036b5d1d
  0x00000000036b5d0c: xor    %rbx,%rbx
  0x00000000036b5d0f: shr    $0x3,%rsi
  0x00000000036b5d13: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000000036b5d18: dec    %rsi
  0x00000000036b5d1b: jne    0x00000000036b5d13  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)

  0x00000000036b5d1d: mov    %rax,%r10
  0x00000000036b5d20: shr    $0x3,%r10
  0x00000000036b5d24: mov    %r10d,0x10(%r13)
  0x00000000036b5d28: mov    %r13,%rax
  0x00000000036b5d2b: shr    $0x9,%rax
  0x00000000036b5d2f: movabs $0xf32f000,%r8
  0x00000000036b5d39: movb   $0x0,(%rax,%r8,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)

  0x00000000036b5d3e: mov    %r13,%rax
  0x00000000036b5d41: movabs $0x1c7c73b0,%r8    ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b5d4b: mov    0x8(%rax),%eax
  0x00000000036b5d4e: shl    $0x3,%rax
  0x00000000036b5d52: cmp    0x640(%r8),%rax
  0x00000000036b5d59: jne    0x00000000036b5d68
  0x00000000036b5d5b: addq   $0x1,0x648(%r8)
  0x00000000036b5d63: jmpq   0x00000000036b5dce
  0x00000000036b5d68: cmp    0x650(%r8),%rax
  0x00000000036b5d6f: jne    0x00000000036b5d7e
  0x00000000036b5d71: addq   $0x1,0x658(%r8)
  0x00000000036b5d79: jmpq   0x00000000036b5dce
  0x00000000036b5d7e: cmpq   $0x0,0x640(%r8)
  0x00000000036b5d89: jne    0x00000000036b5da2
  0x00000000036b5d8b: mov    %rax,0x640(%r8)
  0x00000000036b5d92: movq   $0x1,0x648(%r8)
  0x00000000036b5d9d: jmpq   0x00000000036b5dce
  0x00000000036b5da2: cmpq   $0x0,0x650(%r8)
  0x00000000036b5dad: jne    0x00000000036b5dc6
  0x00000000036b5daf: mov    %rax,0x650(%r8)
  0x00000000036b5db6: movq   $0x1,0x658(%r8)
  0x00000000036b5dc1: jmpq   0x00000000036b5dce
  0x00000000036b5dc6: addq   $0x1,0x638(%r8)
  0x00000000036b5dce: movabs $0x1c683cc0,%r8    ;   {metadata(method data for {method} {0x000000001c5079f0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000036b5dd8: mov    0xdc(%r8),%edx
  0x00000000036b5ddf: add    $0x8,%edx
  0x00000000036b5de2: mov    %edx,0xdc(%r8)
  0x00000000036b5de9: movabs $0x1c5079e8,%r8    ;   {metadata({method} {0x000000001c5079f0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000036b5df3: and    $0x7ffff8,%edx
  0x00000000036b5df9: cmp    $0x0,%edx
  0x00000000036b5dfc: je     0x00000000036b6dfb
  0x00000000036b5e02: mov    %r13,%rax
  0x00000000036b5e05: movabs $0x1c683cc0,%r8    ;   {metadata(method data for {method} {0x000000001c5079f0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000036b5e0f: addq   $0x1,0x108(%r8)
  0x00000000036b5e17: movabs $0x76ca4e2b8,%r8   ;   {oop(&quot;malformed input around byte &quot;)}
  0x00000000036b5e21: mov    %r13,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@474 (line 656)

  0x00000000036b5e24: mov    %r13,0x90(%rsp)
  0x00000000036b5e2c: nop
  0x00000000036b5e2d: nop
  0x00000000036b5e2e: nop
  0x00000000036b5e2f: callq  0x00000000035d61a0  ; OopMap{[144]=Oop [160]=Oop off=3540}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@474 (line 656)
                                                ;   {optimized virtual_call}
  0x00000000036b5e34: mov    0x90(%rsp),%rax
  0x00000000036b5e3c: movabs $0x1c7c73b0,%r8    ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b5e46: mov    0x8(%rax),%eax
  0x00000000036b5e49: shl    $0x3,%rax
  0x00000000036b5e4d: cmp    0x670(%r8),%rax
  0x00000000036b5e54: jne    0x00000000036b5e63
  0x00000000036b5e56: addq   $0x1,0x678(%r8)
  0x00000000036b5e5e: jmpq   0x00000000036b5ec9
  0x00000000036b5e63: cmp    0x680(%r8),%rax
  0x00000000036b5e6a: jne    0x00000000036b5e79
  0x00000000036b5e6c: addq   $0x1,0x688(%r8)
  0x00000000036b5e74: jmpq   0x00000000036b5ec9
  0x00000000036b5e79: cmpq   $0x0,0x670(%r8)
  0x00000000036b5e84: jne    0x00000000036b5e9d
  0x00000000036b5e86: mov    %rax,0x670(%r8)
  0x00000000036b5e8d: movq   $0x1,0x678(%r8)
  0x00000000036b5e98: jmpq   0x00000000036b5ec9
  0x00000000036b5e9d: cmpq   $0x0,0x680(%r8)
  0x00000000036b5ea8: jne    0x00000000036b5ec1
  0x00000000036b5eaa: mov    %rax,0x680(%r8)
  0x00000000036b5eb1: movq   $0x1,0x688(%r8)
  0x00000000036b5ebc: jmpq   0x00000000036b5ec9
  0x00000000036b5ec1: addq   $0x1,0x668(%r8)
  0x00000000036b5ec9: movabs $0x1c7c93d8,%r8    ;   {metadata(method data for {method} {0x000000001c507eb0} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000036b5ed3: mov    0xdc(%r8),%edx
  0x00000000036b5eda: add    $0x8,%edx
  0x00000000036b5edd: mov    %edx,0xdc(%r8)
  0x00000000036b5ee4: movabs $0x1c507ea8,%r8    ;   {metadata({method} {0x000000001c507eb0} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000036b5eee: and    $0x7ffff8,%edx
  0x00000000036b5ef4: cmp    $0x0,%edx
  0x00000000036b5ef7: je     0x00000000036b6e12
  0x00000000036b5efd: mov    0x90(%rsp),%rax
  0x00000000036b5f05: movabs $0x1c7c93d8,%r8    ;   {metadata(method data for {method} {0x000000001c507eb0} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000036b5f0f: addq   $0x1,0x108(%r8)
  0x00000000036b5f17: mov    0x98(%rsp),%r8d
  0x00000000036b5f1f: mov    0x90(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@479 (line 656)

  0x00000000036b5f27: callq  0x00000000035d61a0  ; OopMap{[144]=Oop [160]=Oop off=3788}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@479 (line 656)
                                                ;   {optimized virtual_call}
  0x00000000036b5f2c: mov    0x90(%rsp),%rax
  0x00000000036b5f34: movabs $0x1c7c73b0,%rdx   ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b5f3e: mov    0x8(%rax),%eax
  0x00000000036b5f41: shl    $0x3,%rax
  0x00000000036b5f45: cmp    0x6a0(%rdx),%rax
  0x00000000036b5f4c: jne    0x00000000036b5f5b
  0x00000000036b5f4e: addq   $0x1,0x6a8(%rdx)
  0x00000000036b5f56: jmpq   0x00000000036b5fc1
  0x00000000036b5f5b: cmp    0x6b0(%rdx),%rax
  0x00000000036b5f62: jne    0x00000000036b5f71
  0x00000000036b5f64: addq   $0x1,0x6b8(%rdx)
  0x00000000036b5f6c: jmpq   0x00000000036b5fc1
  0x00000000036b5f71: cmpq   $0x0,0x6a0(%rdx)
  0x00000000036b5f7c: jne    0x00000000036b5f95
  0x00000000036b5f7e: mov    %rax,0x6a0(%rdx)
  0x00000000036b5f85: movq   $0x1,0x6a8(%rdx)
  0x00000000036b5f90: jmpq   0x00000000036b5fc1
  0x00000000036b5f95: cmpq   $0x0,0x6b0(%rdx)
  0x00000000036b5fa0: jne    0x00000000036b5fb9
  0x00000000036b5fa2: mov    %rax,0x6b0(%rdx)
  0x00000000036b5fa9: movq   $0x1,0x6b8(%rdx)
  0x00000000036b5fb4: jmpq   0x00000000036b5fc1
  0x00000000036b5fb9: addq   $0x1,0x698(%rdx)
  0x00000000036b5fc1: movabs $0x1c6d1450,%rdx   ;   {metadata(method data for {method} {0x000000001c508da0} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000036b5fcb: mov    0xdc(%rdx),%esi
  0x00000000036b5fd1: add    $0x8,%esi
  0x00000000036b5fd4: mov    %esi,0xdc(%rdx)
  0x00000000036b5fda: movabs $0x1c508d98,%rdx   ;   {metadata({method} {0x000000001c508da0} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000036b5fe4: and    $0x7ffff8,%esi
  0x00000000036b5fea: cmp    $0x0,%esi
  0x00000000036b5fed: je     0x00000000036b6e29
  0x00000000036b5ff3: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000000036b5ffd: mov    0x60(%r15),%rax
  0x00000000036b6001: lea    0x18(%rax),%rdi
  0x00000000036b6005: cmp    0x70(%r15),%rdi
  0x00000000036b6009: ja     0x00000000036b6e40
  0x00000000036b600f: mov    %rdi,0x60(%r15)
  0x00000000036b6013: mov    0xa8(%rdx),%rcx
  0x00000000036b601a: mov    %rcx,(%rax)
  0x00000000036b601d: mov    %rdx,%rcx
  0x00000000036b6020: shr    $0x3,%rcx
  0x00000000036b6024: mov    %ecx,0x8(%rax)
  0x00000000036b6027: xor    %rcx,%rcx
  0x00000000036b602a: mov    %ecx,0xc(%rax)
  0x00000000036b602d: xor    %rcx,%rcx
  0x00000000036b6030: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)

  0x00000000036b6034: mov    0x90(%rsp),%r8
  0x00000000036b603c: mov    0x10(%r8),%r9d
  0x00000000036b6040: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)

  0x00000000036b6044: mov    0xc(%r8),%edi      ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)

  0x00000000036b6048: mov    %rax,%r8
  0x00000000036b604b: movabs $0x1c6d1450,%rdx   ;   {metadata(method data for {method} {0x000000001c508da0} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000036b6055: addq   $0x1,0x108(%rdx)
  0x00000000036b605d: mov    %r9,%r8
  0x00000000036b6060: mov    $0x0,%r9d
  0x00000000036b6066: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)

  0x00000000036b6069: mov    %rax,0xa8(%rsp)
  0x00000000036b6071: nop
  0x00000000036b6072: nop
  0x00000000036b6073: nop
  0x00000000036b6074: nop
  0x00000000036b6075: nop
  0x00000000036b6076: nop
  0x00000000036b6077: callq  0x00000000035d61a0  ; OopMap{[160]=Oop [168]=Oop off=4124}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)
                                                ;   {optimized virtual_call}
  0x00000000036b607c: mov    0xa0(%rsp),%rax
  0x00000000036b6084: movabs $0x1c7c73b0,%r8    ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b608e: addq   $0x1,0x6c8(%r8)
  0x00000000036b6096: mov    0xa8(%rsp),%r8
  0x00000000036b609e: mov    0xa0(%rsp),%rdx    ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@485 (line 656)

  0x00000000036b60a6: nop
  0x00000000036b60a7: callq  0x00000000035d61a0  ; OopMap{[160]=Oop off=4172}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@485 (line 656)
                                                ;   {optimized virtual_call}
  0x00000000036b60ac: mov    0xa0(%rsp),%rax
  0x00000000036b60b4: jmpq   0x00000000036b709e  ;*athrow
                                                ; - java.io.DataInputStream::readUTF@488 (line 656)

  0x00000000036b60b9: mov    %esi,0x9c(%rsp)
  0x00000000036b60c0: jmpq   0x00000000036b6e5c  ;   {no_reloc}
  0x00000000036b60c5: add    %al,(%rax)
  0x00000000036b60c7: add    %al,(%rax)
  0x00000000036b60c9: add    %ch,%cl
  0x00000000036b60cb: xchg   %eax,%edi
  0x00000000036b60cc: or     $0xe9900000,%eax   ;*new  ; - java.io.DataInputStream::readUTF@395 (line 648)
                                                ;   {no_reloc}
  0x00000000036b60d1: lods   %ds:(%rsi),%eax
  0x00000000036b60d2: or     $0x0,%eax
  0x00000000036b60d7: add    %al,(%rax)
  0x00000000036b60d9: add    %cl,-0x77(%rax)
  0x00000000036b60dc: test   %ah,(%rax,%rdi,4)
  0x00000000036b60df: add    %al,(%rax)
  0x00000000036b60e1: add    %cl,-0x75(%rcx)
  0x00000000036b60e4: rex.RXB (bad) 
  0x00000000036b60e6: lea    0x18(%rax),%rdi
  0x00000000036b60ea: cmp    0x70(%r15),%rdi
  0x00000000036b60ee: ja     0x00000000036b6e8c
  0x00000000036b60f4: mov    %rdi,0x60(%r15)
  0x00000000036b60f8: mov    0xa8(%rdx),%rcx
  0x00000000036b60ff: mov    %rcx,(%rax)
  0x00000000036b6102: mov    %rdx,%rcx
  0x00000000036b6105: shr    $0x3,%rcx
  0x00000000036b6109: mov    %ecx,0x8(%rax)
  0x00000000036b610c: xor    %rcx,%rcx
  0x00000000036b610f: mov    %ecx,0xc(%rax)
  0x00000000036b6112: xor    %rcx,%rcx
  0x00000000036b6115: mov    %rcx,0x10(%rax)    ;*new  ; - java.io.DataInputStream::readUTF@399 (line 648)

  0x00000000036b6119: mov    %rax,%rbx
  0x00000000036b611c: movabs $0x1c7c73b0,%rdx   ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b6126: addq   $0x1,0x560(%rdx)
  0x00000000036b612e: movabs $0x1c6d2158,%rbx   ;   {metadata(method data for {method} {0x000000001c5076d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000036b6138: mov    0xdc(%rbx),%edx
  0x00000000036b613e: add    $0x8,%edx
  0x00000000036b6141: mov    %edx,0xdc(%rbx)
  0x00000000036b6147: movabs $0x1c5076d0,%rbx   ;   {metadata({method} {0x000000001c5076d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000036b6151: and    $0x7ffff8,%edx
  0x00000000036b6157: cmp    $0x0,%edx
  0x00000000036b615a: je     0x00000000036b6e99
  0x00000000036b6160: mov    %rax,%rbx
  0x00000000036b6163: movabs $0x1c6d2158,%rdx   ;   {metadata(method data for {method} {0x000000001c5076d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000036b616d: addq   $0x1,0x108(%rdx)
  0x00000000036b6175: movabs $0x1c6c9f78,%rbx   ;   {metadata(method data for {method} {0x000000001c503a08} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036b617f: mov    0xdc(%rbx),%edx
  0x00000000036b6185: add    $0x8,%edx
  0x00000000036b6188: mov    %edx,0xdc(%rbx)
  0x00000000036b618e: movabs $0x1c503a00,%rbx   ;   {metadata({method} {0x000000001c503a08} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036b6198: and    $0x7ffff8,%edx
  0x00000000036b619e: cmp    $0x0,%edx
  0x00000000036b61a1: je     0x00000000036b6eb0
  0x00000000036b61a7: mov    %rax,%rbx
  0x00000000036b61aa: movabs $0x1c6c9f78,%rdx   ;   {metadata(method data for {method} {0x000000001c503a08} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036b61b4: addq   $0x1,0x108(%rdx)
  0x00000000036b61bc: movabs $0x1c5c3748,%rbx   ;   {metadata(method data for {method} {0x000000001c490488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000036b61c6: mov    0xdc(%rbx),%edx
  0x00000000036b61cc: add    $0x8,%edx
  0x00000000036b61cf: mov    %edx,0xdc(%rbx)
  0x00000000036b61d5: movabs $0x1c490480,%rbx   ;   {metadata({method} {0x000000001c490488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000036b61df: and    $0x7ffff8,%edx
  0x00000000036b61e5: cmp    $0x0,%edx
  0x00000000036b61e8: je     0x00000000036b6ec7
  0x00000000036b61ee: mov    $0x10,%ebx
  0x00000000036b61f3: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000000036b61fd: mov    %rax,%r14
  0x00000000036b6200: movslq %ebx,%rbx
  0x00000000036b6203: mov    %rbx,%rdi
  0x00000000036b6206: cmp    $0xffffff,%rbx
  0x00000000036b620d: ja     0x00000000036b6ede
  0x00000000036b6213: movabs $0x17,%rsi
  0x00000000036b621d: lea    (%rsi,%rbx,2),%rsi
  0x00000000036b6221: and    $0xfffffffffffffff8,%rsi
  0x00000000036b6225: mov    0x60(%r15),%rax
  0x00000000036b6229: lea    (%rax,%rsi,1),%rsi
  0x00000000036b622d: cmp    0x70(%r15),%rsi
  0x00000000036b6231: ja     0x00000000036b6ede
  0x00000000036b6237: mov    %rsi,0x60(%r15)
  0x00000000036b623b: sub    %rax,%rsi
  0x00000000036b623e: movq   $0x1,(%rax)
  0x00000000036b6245: mov    %rdx,%rcx
  0x00000000036b6248: shr    $0x3,%rcx
  0x00000000036b624c: mov    %ecx,0x8(%rax)
  0x00000000036b624f: mov    %ebx,0xc(%rax)
  0x00000000036b6252: sub    $0x10,%rsi
  0x00000000036b6256: je     0x00000000036b626d
  0x00000000036b625c: xor    %rbx,%rbx
  0x00000000036b625f: shr    $0x3,%rsi
  0x00000000036b6263: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000000036b6268: dec    %rsi
  0x00000000036b626b: jne    0x00000000036b6263  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)

  0x00000000036b626d: mov    %rax,%r10
  0x00000000036b6270: shr    $0x3,%r10
  0x00000000036b6274: mov    %r10d,0x10(%r14)
  0x00000000036b6278: mov    %r14,%rax
  0x00000000036b627b: shr    $0x9,%rax
  0x00000000036b627f: movabs $0xf32f000,%r8
  0x00000000036b6289: movb   $0x0,(%rax,%r8,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)

  0x00000000036b628e: mov    %r14,%rax
  0x00000000036b6291: movabs $0x1c7c73b0,%r8    ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b629b: mov    0x8(%rax),%eax
  0x00000000036b629e: shl    $0x3,%rax
  0x00000000036b62a2: cmp    0x578(%r8),%rax
  0x00000000036b62a9: jne    0x00000000036b62b8
  0x00000000036b62ab: addq   $0x1,0x580(%r8)
  0x00000000036b62b3: jmpq   0x00000000036b631e
  0x00000000036b62b8: cmp    0x588(%r8),%rax
  0x00000000036b62bf: jne    0x00000000036b62ce
  0x00000000036b62c1: addq   $0x1,0x590(%r8)
  0x00000000036b62c9: jmpq   0x00000000036b631e
  0x00000000036b62ce: cmpq   $0x0,0x578(%r8)
  0x00000000036b62d9: jne    0x00000000036b62f2
  0x00000000036b62db: mov    %rax,0x578(%r8)
  0x00000000036b62e2: movq   $0x1,0x580(%r8)
  0x00000000036b62ed: jmpq   0x00000000036b631e
  0x00000000036b62f2: cmpq   $0x0,0x588(%r8)
  0x00000000036b62fd: jne    0x00000000036b6316
  0x00000000036b62ff: mov    %rax,0x588(%r8)
  0x00000000036b6306: movq   $0x1,0x590(%r8)
  0x00000000036b6311: jmpq   0x00000000036b631e
  0x00000000036b6316: addq   $0x1,0x570(%r8)
  0x00000000036b631e: movabs $0x1c683cc0,%r8    ;   {metadata(method data for {method} {0x000000001c5079f0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000036b6328: mov    0xdc(%r8),%edx
  0x00000000036b632f: add    $0x8,%edx
  0x00000000036b6332: mov    %edx,0xdc(%r8)
  0x00000000036b6339: movabs $0x1c5079e8,%r8    ;   {metadata({method} {0x000000001c5079f0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000036b6343: and    $0x7ffff8,%edx
  0x00000000036b6349: cmp    $0x0,%edx
  0x00000000036b634c: je     0x00000000036b6ee8
  0x00000000036b6352: mov    %r14,%rax
  0x00000000036b6355: movabs $0x1c683cc0,%r8    ;   {metadata(method data for {method} {0x000000001c5079f0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000036b635f: addq   $0x1,0x108(%r8)
  0x00000000036b6367: movabs $0x76ca4e2b8,%r8   ;   {oop(&quot;malformed input around byte &quot;)}
  0x00000000036b6371: mov    %r14,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@408 (line 648)

  0x00000000036b6374: mov    %r14,0xb0(%rsp)
  0x00000000036b637c: nop
  0x00000000036b637d: nop
  0x00000000036b637e: nop
  0x00000000036b637f: callq  0x00000000035d61a0  ; OopMap{[176]=Oop [184]=Oop off=4900}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@408 (line 648)
                                                ;   {optimized virtual_call}
  0x00000000036b6384: mov    0xb0(%rsp),%rax
  0x00000000036b638c: movabs $0x1c7c73b0,%r8    ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b6396: mov    0x8(%rax),%eax
  0x00000000036b6399: shl    $0x3,%rax
  0x00000000036b639d: cmp    0x5a8(%r8),%rax
  0x00000000036b63a4: jne    0x00000000036b63b3
  0x00000000036b63a6: addq   $0x1,0x5b0(%r8)
  0x00000000036b63ae: jmpq   0x00000000036b6419
  0x00000000036b63b3: cmp    0x5b8(%r8),%rax
  0x00000000036b63ba: jne    0x00000000036b63c9
  0x00000000036b63bc: addq   $0x1,0x5c0(%r8)
  0x00000000036b63c4: jmpq   0x00000000036b6419
  0x00000000036b63c9: cmpq   $0x0,0x5a8(%r8)
  0x00000000036b63d4: jne    0x00000000036b63ed
  0x00000000036b63d6: mov    %rax,0x5a8(%r8)
  0x00000000036b63dd: movq   $0x1,0x5b0(%r8)
  0x00000000036b63e8: jmpq   0x00000000036b6419
  0x00000000036b63ed: cmpq   $0x0,0x5b8(%r8)
  0x00000000036b63f8: jne    0x00000000036b6411
  0x00000000036b63fa: mov    %rax,0x5b8(%r8)
  0x00000000036b6401: movq   $0x1,0x5c0(%r8)
  0x00000000036b640c: jmpq   0x00000000036b6419
  0x00000000036b6411: addq   $0x1,0x5a0(%r8)
  0x00000000036b6419: movabs $0x1c7c93d8,%r8    ;   {metadata(method data for {method} {0x000000001c507eb0} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000036b6423: mov    0xdc(%r8),%edx
  0x00000000036b642a: add    $0x8,%edx
  0x00000000036b642d: mov    %edx,0xdc(%r8)
  0x00000000036b6434: movabs $0x1c507ea8,%r8    ;   {metadata({method} {0x000000001c507eb0} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000036b643e: and    $0x7ffff8,%edx
  0x00000000036b6444: cmp    $0x0,%edx
  0x00000000036b6447: je     0x00000000036b6eff
  0x00000000036b644d: mov    0xb0(%rsp),%rax
  0x00000000036b6455: movabs $0x1c7c93d8,%r8    ;   {metadata(method data for {method} {0x000000001c507eb0} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000036b645f: addq   $0x1,0x108(%r8)
  0x00000000036b6467: mov    0x74(%rsp),%r8d
  0x00000000036b646c: mov    0xb0(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@415 (line 648)

  0x00000000036b6474: nop
  0x00000000036b6475: nop
  0x00000000036b6476: nop
  0x00000000036b6477: callq  0x00000000035d61a0  ; OopMap{[176]=Oop [184]=Oop off=5148}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@415 (line 648)
                                                ;   {optimized virtual_call}
  0x00000000036b647c: mov    0xb0(%rsp),%rax
  0x00000000036b6484: movabs $0x1c7c73b0,%rdx   ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b648e: mov    0x8(%rax),%eax
  0x00000000036b6491: shl    $0x3,%rax
  0x00000000036b6495: cmp    0x5d8(%rdx),%rax
  0x00000000036b649c: jne    0x00000000036b64ab
  0x00000000036b649e: addq   $0x1,0x5e0(%rdx)
  0x00000000036b64a6: jmpq   0x00000000036b6511
  0x00000000036b64ab: cmp    0x5e8(%rdx),%rax
  0x00000000036b64b2: jne    0x00000000036b64c1
  0x00000000036b64b4: addq   $0x1,0x5f0(%rdx)
  0x00000000036b64bc: jmpq   0x00000000036b6511
  0x00000000036b64c1: cmpq   $0x0,0x5d8(%rdx)
  0x00000000036b64cc: jne    0x00000000036b64e5
  0x00000000036b64ce: mov    %rax,0x5d8(%rdx)
  0x00000000036b64d5: movq   $0x1,0x5e0(%rdx)
  0x00000000036b64e0: jmpq   0x00000000036b6511
  0x00000000036b64e5: cmpq   $0x0,0x5e8(%rdx)
  0x00000000036b64f0: jne    0x00000000036b6509
  0x00000000036b64f2: mov    %rax,0x5e8(%rdx)
  0x00000000036b64f9: movq   $0x1,0x5f0(%rdx)
  0x00000000036b6504: jmpq   0x00000000036b6511
  0x00000000036b6509: addq   $0x1,0x5d0(%rdx)
  0x00000000036b6511: movabs $0x1c6d1450,%rdx   ;   {metadata(method data for {method} {0x000000001c508da0} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000036b651b: mov    0xdc(%rdx),%esi
  0x00000000036b6521: add    $0x8,%esi
  0x00000000036b6524: mov    %esi,0xdc(%rdx)
  0x00000000036b652a: movabs $0x1c508d98,%rdx   ;   {metadata({method} {0x000000001c508da0} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000036b6534: and    $0x7ffff8,%esi
  0x00000000036b653a: cmp    $0x0,%esi
  0x00000000036b653d: je     0x00000000036b6f16
  0x00000000036b6543: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000000036b654d: mov    0x60(%r15),%rax
  0x00000000036b6551: lea    0x18(%rax),%rdi
  0x00000000036b6555: cmp    0x70(%r15),%rdi
  0x00000000036b6559: ja     0x00000000036b6f2d
  0x00000000036b655f: mov    %rdi,0x60(%r15)
  0x00000000036b6563: mov    0xa8(%rdx),%rcx
  0x00000000036b656a: mov    %rcx,(%rax)
  0x00000000036b656d: mov    %rdx,%rcx
  0x00000000036b6570: shr    $0x3,%rcx
  0x00000000036b6574: mov    %ecx,0x8(%rax)
  0x00000000036b6577: xor    %rcx,%rcx
  0x00000000036b657a: mov    %ecx,0xc(%rax)
  0x00000000036b657d: xor    %rcx,%rcx
  0x00000000036b6580: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)

  0x00000000036b6584: mov    0xb0(%rsp),%r8
  0x00000000036b658c: mov    0x10(%r8),%r9d
  0x00000000036b6590: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)

  0x00000000036b6594: mov    0xc(%r8),%edi      ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)

  0x00000000036b6598: mov    %rax,%r8
  0x00000000036b659b: movabs $0x1c6d1450,%rdx   ;   {metadata(method data for {method} {0x000000001c508da0} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000036b65a5: addq   $0x1,0x108(%rdx)
  0x00000000036b65ad: mov    %r9,%r8
  0x00000000036b65b0: mov    $0x0,%r9d
  0x00000000036b65b6: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)

  0x00000000036b65b9: mov    %rax,0xc0(%rsp)
  0x00000000036b65c1: nop
  0x00000000036b65c2: nop
  0x00000000036b65c3: nop
  0x00000000036b65c4: nop
  0x00000000036b65c5: nop
  0x00000000036b65c6: nop
  0x00000000036b65c7: callq  0x00000000035d61a0  ; OopMap{[184]=Oop [192]=Oop off=5484}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)
                                                ;   {optimized virtual_call}
  0x00000000036b65cc: mov    0xb8(%rsp),%rax
  0x00000000036b65d4: movabs $0x1c7c73b0,%r8    ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b65de: addq   $0x1,0x600(%r8)
  0x00000000036b65e6: mov    0xc0(%rsp),%r8
  0x00000000036b65ee: mov    0xb8(%rsp),%rdx    ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@421 (line 648)

  0x00000000036b65f6: nop
  0x00000000036b65f7: callq  0x00000000035d61a0  ; OopMap{[184]=Oop off=5532}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@421 (line 648)
                                                ;   {optimized virtual_call}
  0x00000000036b65fc: mov    0xb8(%rsp),%rax
  0x00000000036b6604: jmpq   0x00000000036b709e  ;*athrow
                                                ; - java.io.DataInputStream::readUTF@424 (line 648)

  0x00000000036b6609: nopl   0x0(%rax)
  0x00000000036b6610: jmpq   0x00000000036b6f49  ;   {no_reloc}
  0x00000000036b6615: add    %al,(%rax)
  0x00000000036b6617: add    %al,(%rax)
  0x00000000036b6619: add    %ch,%cl
  0x00000000036b661b: xor    $0x9,%al
  0x00000000036b661d: add    %al,(%rax)         ;*new  ; - java.io.DataInputStream::readUTF@345 (line 643)

  0x00000000036b661f: mov    %rax,%r8
  0x00000000036b6622: movabs $0x1c7c73b0,%rdx   ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b662c: addq   $0x1,0x510(%rdx)
  0x00000000036b6634: movabs $0x76ca4e238,%r8   ;   {oop(&quot;malformed input: partial character at end&quot;)}
  0x00000000036b663e: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@351 (line 643)

  0x00000000036b6641: mov    %rax,0xc8(%rsp)
  0x00000000036b6649: nop
  0x00000000036b664a: nop
  0x00000000036b664b: nop
  0x00000000036b664c: nop
  0x00000000036b664d: nop
  0x00000000036b664e: nop
  0x00000000036b664f: callq  0x00000000035d61a0  ; OopMap{[200]=Oop off=5620}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@351 (line 643)
                                                ;   {optimized virtual_call}
  0x00000000036b6654: mov    0xc8(%rsp),%rax
  0x00000000036b665c: jmpq   0x00000000036b709e  ;*athrow
                                                ; - java.io.DataInputStream::readUTF@354 (line 643)

  0x00000000036b6661: mov    %esi,0xd8(%rsp)
  0x00000000036b6668: jmpq   0x00000000036b6f6f  ;   {no_reloc}
  0x00000000036b666d: add    %al,(%rax)
  0x00000000036b666f: add    %al,(%rax)
  0x00000000036b6671: add    %ch,%cl
  0x00000000036b6673: add    (%rcx),%cl
  0x00000000036b6675: add    %al,(%rax)         ;*new  ; - java.io.DataInputStream::readUTF@283 (line 634)

  0x00000000036b6677: nop
  0x00000000036b6678: jmpq   0x00000000036b6f95  ;   {no_reloc}
  0x00000000036b667d: add    %al,(%rax)
  0x00000000036b667f: add    %al,(%rax)
  0x00000000036b6681: add    %cl,-0x77(%rax)
  0x00000000036b6684: test   %ah,(%rax,%riz,8)
  0x00000000036b6687: add    %al,(%rax)
  0x00000000036b6689: add    %cl,-0x75(%rcx)
  0x00000000036b668c: rex.RXB (bad) 
  0x00000000036b668e: lea    0x18(%rax),%rdi
  0x00000000036b6692: cmp    0x70(%r15),%rdi
  0x00000000036b6696: ja     0x00000000036b6f9f
  0x00000000036b669c: mov    %rdi,0x60(%r15)
  0x00000000036b66a0: mov    0xa8(%rdx),%rcx
  0x00000000036b66a7: mov    %rcx,(%rax)
  0x00000000036b66aa: mov    %rdx,%rcx
  0x00000000036b66ad: shr    $0x3,%rcx
  0x00000000036b66b1: mov    %ecx,0x8(%rax)
  0x00000000036b66b4: xor    %rcx,%rcx
  0x00000000036b66b7: mov    %ecx,0xc(%rax)
  0x00000000036b66ba: xor    %rcx,%rcx
  0x00000000036b66bd: mov    %rcx,0x10(%rax)    ;*new  ; - java.io.DataInputStream::readUTF@287 (line 634)

  0x00000000036b66c1: mov    %rax,%rbx
  0x00000000036b66c4: movabs $0x1c7c73b0,%rdx   ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b66ce: addq   $0x1,0x428(%rdx)
  0x00000000036b66d6: movabs $0x1c6d2158,%rbx   ;   {metadata(method data for {method} {0x000000001c5076d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000036b66e0: mov    0xdc(%rbx),%edx
  0x00000000036b66e6: add    $0x8,%edx
  0x00000000036b66e9: mov    %edx,0xdc(%rbx)
  0x00000000036b66ef: movabs $0x1c5076d0,%rbx   ;   {metadata({method} {0x000000001c5076d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000036b66f9: and    $0x7ffff8,%edx
  0x00000000036b66ff: cmp    $0x0,%edx
  0x00000000036b6702: je     0x00000000036b6fac
  0x00000000036b6708: mov    %rax,%rbx
  0x00000000036b670b: movabs $0x1c6d2158,%rdx   ;   {metadata(method data for {method} {0x000000001c5076d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000036b6715: addq   $0x1,0x108(%rdx)
  0x00000000036b671d: movabs $0x1c6c9f78,%rbx   ;   {metadata(method data for {method} {0x000000001c503a08} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036b6727: mov    0xdc(%rbx),%edx
  0x00000000036b672d: add    $0x8,%edx
  0x00000000036b6730: mov    %edx,0xdc(%rbx)
  0x00000000036b6736: movabs $0x1c503a00,%rbx   ;   {metadata({method} {0x000000001c503a08} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036b6740: and    $0x7ffff8,%edx
  0x00000000036b6746: cmp    $0x0,%edx
  0x00000000036b6749: je     0x00000000036b6fc3
  0x00000000036b674f: mov    %rax,%rbx
  0x00000000036b6752: movabs $0x1c6c9f78,%rdx   ;   {metadata(method data for {method} {0x000000001c503a08} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036b675c: addq   $0x1,0x108(%rdx)
  0x00000000036b6764: movabs $0x1c5c3748,%rbx   ;   {metadata(method data for {method} {0x000000001c490488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000036b676e: mov    0xdc(%rbx),%edx
  0x00000000036b6774: add    $0x8,%edx
  0x00000000036b6777: mov    %edx,0xdc(%rbx)
  0x00000000036b677d: movabs $0x1c490480,%rbx   ;   {metadata({method} {0x000000001c490488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000036b6787: and    $0x7ffff8,%edx
  0x00000000036b678d: cmp    $0x0,%edx
  0x00000000036b6790: je     0x00000000036b6fda
  0x00000000036b6796: mov    $0x10,%ebx
  0x00000000036b679b: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000000036b67a5: mov    %rax,%r13
  0x00000000036b67a8: movslq %ebx,%rbx
  0x00000000036b67ab: mov    %rbx,%rdi
  0x00000000036b67ae: cmp    $0xffffff,%rbx
  0x00000000036b67b5: ja     0x00000000036b6ff1
  0x00000000036b67bb: movabs $0x17,%rsi
  0x00000000036b67c5: lea    (%rsi,%rbx,2),%rsi
  0x00000000036b67c9: and    $0xfffffffffffffff8,%rsi
  0x00000000036b67cd: mov    0x60(%r15),%rax
  0x00000000036b67d1: lea    (%rax,%rsi,1),%rsi
  0x00000000036b67d5: cmp    0x70(%r15),%rsi
  0x00000000036b67d9: ja     0x00000000036b6ff1
  0x00000000036b67df: mov    %rsi,0x60(%r15)
  0x00000000036b67e3: sub    %rax,%rsi
  0x00000000036b67e6: movq   $0x1,(%rax)
  0x00000000036b67ed: mov    %rdx,%rcx
  0x00000000036b67f0: shr    $0x3,%rcx
  0x00000000036b67f4: mov    %ecx,0x8(%rax)
  0x00000000036b67f7: mov    %ebx,0xc(%rax)
  0x00000000036b67fa: sub    $0x10,%rsi
  0x00000000036b67fe: je     0x00000000036b6815
  0x00000000036b6804: xor    %rbx,%rbx
  0x00000000036b6807: shr    $0x3,%rsi
  0x00000000036b680b: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000000036b6810: dec    %rsi
  0x00000000036b6813: jne    0x00000000036b680b  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)

  0x00000000036b6815: mov    %rax,%r10
  0x00000000036b6818: shr    $0x3,%r10
  0x00000000036b681c: mov    %r10d,0x10(%r13)
  0x00000000036b6820: mov    %r13,%rax
  0x00000000036b6823: shr    $0x9,%rax
  0x00000000036b6827: movabs $0xf32f000,%r8
  0x00000000036b6831: movb   $0x0,(%rax,%r8,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)

  0x00000000036b6836: mov    %r13,%rax
  0x00000000036b6839: movabs $0x1c7c73b0,%r8    ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b6843: mov    0x8(%rax),%eax
  0x00000000036b6846: shl    $0x3,%rax
  0x00000000036b684a: cmp    0x440(%r8),%rax
  0x00000000036b6851: jne    0x00000000036b6860
  0x00000000036b6853: addq   $0x1,0x448(%r8)
  0x00000000036b685b: jmpq   0x00000000036b68c6
  0x00000000036b6860: cmp    0x450(%r8),%rax
  0x00000000036b6867: jne    0x00000000036b6876
  0x00000000036b6869: addq   $0x1,0x458(%r8)
  0x00000000036b6871: jmpq   0x00000000036b68c6
  0x00000000036b6876: cmpq   $0x0,0x440(%r8)
  0x00000000036b6881: jne    0x00000000036b689a
  0x00000000036b6883: mov    %rax,0x440(%r8)
  0x00000000036b688a: movq   $0x1,0x448(%r8)
  0x00000000036b6895: jmpq   0x00000000036b68c6
  0x00000000036b689a: cmpq   $0x0,0x450(%r8)
  0x00000000036b68a5: jne    0x00000000036b68be
  0x00000000036b68a7: mov    %rax,0x450(%r8)
  0x00000000036b68ae: movq   $0x1,0x458(%r8)
  0x00000000036b68b9: jmpq   0x00000000036b68c6
  0x00000000036b68be: addq   $0x1,0x438(%r8)
  0x00000000036b68c6: movabs $0x1c683cc0,%r8    ;   {metadata(method data for {method} {0x000000001c5079f0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000036b68d0: mov    0xdc(%r8),%edx
  0x00000000036b68d7: add    $0x8,%edx
  0x00000000036b68da: mov    %edx,0xdc(%r8)
  0x00000000036b68e1: movabs $0x1c5079e8,%r8    ;   {metadata({method} {0x000000001c5079f0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000036b68eb: and    $0x7ffff8,%edx
  0x00000000036b68f1: cmp    $0x0,%edx
  0x00000000036b68f4: je     0x00000000036b6ffb
  0x00000000036b68fa: mov    %r13,%rax
  0x00000000036b68fd: movabs $0x1c683cc0,%r8    ;   {metadata(method data for {method} {0x000000001c5079f0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000036b6907: addq   $0x1,0x108(%r8)
  0x00000000036b690f: movabs $0x76ca4e2b8,%r8   ;   {oop(&quot;malformed input around byte &quot;)}
  0x00000000036b6919: mov    %r13,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@296 (line 634)

  0x00000000036b691c: mov    %r13,0xd0(%rsp)
  0x00000000036b6924: nop
  0x00000000036b6925: nop
  0x00000000036b6926: nop
  0x00000000036b6927: callq  0x00000000035d61a0  ; OopMap{[208]=Oop [224]=Oop off=6348}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@296 (line 634)
                                                ;   {optimized virtual_call}
  0x00000000036b692c: mov    0xd0(%rsp),%rax
  0x00000000036b6934: movabs $0x1c7c73b0,%r8    ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b693e: mov    0x8(%rax),%eax
  0x00000000036b6941: shl    $0x3,%rax
  0x00000000036b6945: cmp    0x470(%r8),%rax
  0x00000000036b694c: jne    0x00000000036b695b
  0x00000000036b694e: addq   $0x1,0x478(%r8)
  0x00000000036b6956: jmpq   0x00000000036b69c1
  0x00000000036b695b: cmp    0x480(%r8),%rax
  0x00000000036b6962: jne    0x00000000036b6971
  0x00000000036b6964: addq   $0x1,0x488(%r8)
  0x00000000036b696c: jmpq   0x00000000036b69c1
  0x00000000036b6971: cmpq   $0x0,0x470(%r8)
  0x00000000036b697c: jne    0x00000000036b6995
  0x00000000036b697e: mov    %rax,0x470(%r8)
  0x00000000036b6985: movq   $0x1,0x478(%r8)
  0x00000000036b6990: jmpq   0x00000000036b69c1
  0x00000000036b6995: cmpq   $0x0,0x480(%r8)
  0x00000000036b69a0: jne    0x00000000036b69b9
  0x00000000036b69a2: mov    %rax,0x480(%r8)
  0x00000000036b69a9: movq   $0x1,0x488(%r8)
  0x00000000036b69b4: jmpq   0x00000000036b69c1
  0x00000000036b69b9: addq   $0x1,0x468(%r8)
  0x00000000036b69c1: movabs $0x1c7c93d8,%r8    ;   {metadata(method data for {method} {0x000000001c507eb0} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000036b69cb: mov    0xdc(%r8),%edx
  0x00000000036b69d2: add    $0x8,%edx
  0x00000000036b69d5: mov    %edx,0xdc(%r8)
  0x00000000036b69dc: movabs $0x1c507ea8,%r8    ;   {metadata({method} {0x000000001c507eb0} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000036b69e6: and    $0x7ffff8,%edx
  0x00000000036b69ec: cmp    $0x0,%edx
  0x00000000036b69ef: je     0x00000000036b7012
  0x00000000036b69f5: mov    0xd0(%rsp),%rax
  0x00000000036b69fd: movabs $0x1c7c93d8,%r8    ;   {metadata(method data for {method} {0x000000001c507eb0} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000036b6a07: addq   $0x1,0x108(%r8)
  0x00000000036b6a0f: mov    0xd8(%rsp),%r8d
  0x00000000036b6a17: mov    0xd0(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@301 (line 634)

  0x00000000036b6a1f: callq  0x00000000035d61a0  ; OopMap{[208]=Oop [224]=Oop off=6596}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@301 (line 634)
                                                ;   {optimized virtual_call}
  0x00000000036b6a24: mov    0xd0(%rsp),%rax
  0x00000000036b6a2c: movabs $0x1c7c73b0,%rdx   ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b6a36: mov    0x8(%rax),%eax
  0x00000000036b6a39: shl    $0x3,%rax
  0x00000000036b6a3d: cmp    0x4a0(%rdx),%rax
  0x00000000036b6a44: jne    0x00000000036b6a53
  0x00000000036b6a46: addq   $0x1,0x4a8(%rdx)
  0x00000000036b6a4e: jmpq   0x00000000036b6ab9
  0x00000000036b6a53: cmp    0x4b0(%rdx),%rax
  0x00000000036b6a5a: jne    0x00000000036b6a69
  0x00000000036b6a5c: addq   $0x1,0x4b8(%rdx)
  0x00000000036b6a64: jmpq   0x00000000036b6ab9
  0x00000000036b6a69: cmpq   $0x0,0x4a0(%rdx)
  0x00000000036b6a74: jne    0x00000000036b6a8d
  0x00000000036b6a76: mov    %rax,0x4a0(%rdx)
  0x00000000036b6a7d: movq   $0x1,0x4a8(%rdx)
  0x00000000036b6a88: jmpq   0x00000000036b6ab9
  0x00000000036b6a8d: cmpq   $0x0,0x4b0(%rdx)
  0x00000000036b6a98: jne    0x00000000036b6ab1
  0x00000000036b6a9a: mov    %rax,0x4b0(%rdx)
  0x00000000036b6aa1: movq   $0x1,0x4b8(%rdx)
  0x00000000036b6aac: jmpq   0x00000000036b6ab9
  0x00000000036b6ab1: addq   $0x1,0x498(%rdx)
  0x00000000036b6ab9: movabs $0x1c6d1450,%rdx   ;   {metadata(method data for {method} {0x000000001c508da0} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000036b6ac3: mov    0xdc(%rdx),%esi
  0x00000000036b6ac9: add    $0x8,%esi
  0x00000000036b6acc: mov    %esi,0xdc(%rdx)
  0x00000000036b6ad2: movabs $0x1c508d98,%rdx   ;   {metadata({method} {0x000000001c508da0} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000036b6adc: and    $0x7ffff8,%esi
  0x00000000036b6ae2: cmp    $0x0,%esi
  0x00000000036b6ae5: je     0x00000000036b7029
  0x00000000036b6aeb: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000000036b6af5: mov    0x60(%r15),%rax
  0x00000000036b6af9: lea    0x18(%rax),%rdi
  0x00000000036b6afd: cmp    0x70(%r15),%rdi
  0x00000000036b6b01: ja     0x00000000036b7040
  0x00000000036b6b07: mov    %rdi,0x60(%r15)
  0x00000000036b6b0b: mov    0xa8(%rdx),%rcx
  0x00000000036b6b12: mov    %rcx,(%rax)
  0x00000000036b6b15: mov    %rdx,%rcx
  0x00000000036b6b18: shr    $0x3,%rcx
  0x00000000036b6b1c: mov    %ecx,0x8(%rax)
  0x00000000036b6b1f: xor    %rcx,%rcx
  0x00000000036b6b22: mov    %ecx,0xc(%rax)
  0x00000000036b6b25: xor    %rcx,%rcx
  0x00000000036b6b28: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)

  0x00000000036b6b2c: mov    0xd0(%rsp),%r8
  0x00000000036b6b34: mov    0x10(%r8),%r9d
  0x00000000036b6b38: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)

  0x00000000036b6b3c: mov    0xc(%r8),%edi      ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)

  0x00000000036b6b40: mov    %rax,%r8
  0x00000000036b6b43: movabs $0x1c6d1450,%rdx   ;   {metadata(method data for {method} {0x000000001c508da0} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000036b6b4d: addq   $0x1,0x108(%rdx)
  0x00000000036b6b55: mov    %r9,%r8
  0x00000000036b6b58: mov    $0x0,%r9d
  0x00000000036b6b5e: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)

  0x00000000036b6b61: mov    %rax,0xe8(%rsp)
  0x00000000036b6b69: nop
  0x00000000036b6b6a: nop
  0x00000000036b6b6b: nop
  0x00000000036b6b6c: nop
  0x00000000036b6b6d: nop
  0x00000000036b6b6e: nop
  0x00000000036b6b6f: callq  0x00000000035d61a0  ; OopMap{[224]=Oop [232]=Oop off=6932}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)
                                                ;   {optimized virtual_call}
  0x00000000036b6b74: mov    0xe0(%rsp),%rax
  0x00000000036b6b7c: movabs $0x1c7c73b0,%r8    ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b6b86: addq   $0x1,0x4c8(%r8)
  0x00000000036b6b8e: mov    0xe8(%rsp),%r8
  0x00000000036b6b96: mov    0xe0(%rsp),%rdx    ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@307 (line 634)

  0x00000000036b6b9e: nop
  0x00000000036b6b9f: callq  0x00000000035d61a0  ; OopMap{[224]=Oop off=6980}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@307 (line 634)
                                                ;   {optimized virtual_call}
  0x00000000036b6ba4: mov    0xe0(%rsp),%rax
  0x00000000036b6bac: jmpq   0x00000000036b709e  ;*athrow
                                                ; - java.io.DataInputStream::readUTF@310 (line 634)

  0x00000000036b6bb1: nopl   0x0(%rax)
  0x00000000036b6bb8: jmpq   0x00000000036b705c  ;   {no_reloc}
  0x00000000036b6bbd: add    %al,(%rax)
  0x00000000036b6bbf: add    %al,(%rax)
  0x00000000036b6bc1: add    %ch,%cl
  0x00000000036b6bc3: lahf   
  0x00000000036b6bc4: add    $0x0,%al
  0x00000000036b6bc6: add    %cl,-0x40(%rbx,%rcx,4)  ;*new
                                                ; - java.io.DataInputStream::readUTF@253 (line 630)

  0x00000000036b6bca: movabs $0x1c7c73b0,%rdx   ;   {metadata(method data for {method} {0x000000001c7c5ed0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036b6bd4: addq   $0x1,0x3f8(%rdx)
  0x00000000036b6bdc: movabs $0x76ca4e238,%r8   ;   {oop(&quot;malformed input: partial character at end&quot;)}
  0x00000000036b6be6: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@259 (line 630)

  0x00000000036b6be9: mov    %rax,0xf0(%rsp)
  0x00000000036b6bf1: nop
  0x00000000036b6bf2: nop
  0x00000000036b6bf3: nop
  0x00000000036b6bf4: nop
  0x00000000036b6bf5: nop
  0x00000000036b6bf6: nop
  0x00000000036b6bf7: callq  0x00000000035d61a0  ; OopMap{[240]=Oop off=7068}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@259 (line 630)
                                                ;   {optimized virtual_call}
  0x00000000036b6bfc: mov    0xf0(%rsp),%rax
  0x00000000036b6c04: jmpq   0x00000000036b709e
  0x00000000036b6c09: mov    %rsi,0x8(%rsp)
  0x00000000036b6c0e: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036b6c16: callq  0x00000000036919e0  ; OopMap{rdx=Oop off=7099}
                                                ;*synchronization entry
                                                ; - java.io.DataInputStream::readUTF@-1 (line 589)
                                                ;   {runtime_call}
  0x00000000036b6c1b: jmpq   0x00000000036b50a1
  0x00000000036b6c20: callq  0x000000000368f740  ; OopMap{rdx=Oop off=7109}
                                                ;*invokeinterface readUnsignedShort
                                                ; - java.io.DataInputStream::readUTF@1 (line 589)
                                                ;   {runtime_call}
  0x00000000036b6c25: callq  0x000000000368d080  ; OopMap{rdx=Oop off=7114}
                                                ;*invokeinterface readUnsignedShort
                                                ; - java.io.DataInputStream::readUTF@1 (line 589)
                                                ;   {runtime_call}
  0x00000000036b6c2a: mov    %r11,(%rsp)
  0x00000000036b6c2e: callq  0x000000000368f500  ; OopMap{r11=Oop off=7123}
                                                ;*checkcast
                                                ; - java.io.DataInputStream::readUTF@19 (line 593)
                                                ;   {runtime_call}
  0x00000000036b6c33: callq  0x000000000368d080  ; OopMap{r11=Oop r8=Oop off=7128}
                                                ;*getfield bytearr
                                                ; - java.io.DataInputStream::readUTF@26 (line 594)
                                                ;   {runtime_call}
  0x00000000036b6c38: callq  0x000000000368d080  ; OopMap{r11=Oop r8=Oop off=7133}
                                                ;*arraylength
                                                ; - java.io.DataInputStream::readUTF@29 (line 594)
                                                ;   {runtime_call}
  0x00000000036b6c3d: callq  0x000000000368e200  ; OopMap{r11=Oop r8=Oop off=7138}
                                                ;*newarray
                                                ; - java.io.DataInputStream::readUTF@39 (line 595)
                                                ;   {runtime_call}
  0x00000000036b6c42: jmpq   0x00000000036b53dc
  0x00000000036b6c47: callq  0x000000000368e200  ; OopMap{r11=Oop r8=Oop off=7148}
                                                ;*newarray
                                                ; - java.io.DataInputStream::readUTF@49 (line 596)
                                                ;   {runtime_call}
  0x00000000036b6c4c: jmpq   0x00000000036b5477
  0x00000000036b6c51: callq  0x000000000368e200  ; OopMap{r11=Oop off=7158}
                                                ;*newarray
                                                ; - java.io.DataInputStream::readUTF@70 (line 601)
                                                ;   {runtime_call}
  0x00000000036b6c56: jmpq   0x00000000036b5530
  0x00000000036b6c5b: callq  0x000000000368e200  ; OopMap{r11=Oop r8=Oop off=7168}
                                                ;*newarray
                                                ; - java.io.DataInputStream::readUTF@74 (line 602)
                                                ;   {runtime_call}
  0x00000000036b6c60: jmpq   0x00000000036b55ad
  0x00000000036b6c65: callq  0x000000000368f740  ; OopMap{r11=Oop rdx=Oop [128]=Oop off=7178}
                                                ;*invokeinterface readFully
                                                ; - java.io.DataInputStream::readUTF@87 (line 609)
                                                ;   {runtime_call}
  0x00000000036b6c6a: callq  0x000000000368d080  ; OopMap{rbx=Oop rdi=Oop off=7183}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@101 (line 612)
                                                ;   {runtime_call}
  0x00000000036b6c6f: callq  0x000000000368d080  ; OopMap{rbx=Oop rdi=Oop off=7188}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@101 (line 612)
                                                ;   {runtime_call}
  0x00000000036b6c74: mov    %rsi,(%rsp)
  0x00000000036b6c78: callq  0x000000000368c9c0  ; OopMap{rbx=Oop rdi=Oop off=7197}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@101 (line 612)
                                                ;   {runtime_call}
  0x00000000036b6c7d: callq  0x000000000368d080  ; OopMap{rbx=Oop rdi=Oop off=7202}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@130 (line 615)
                                                ;   {runtime_call}
  0x00000000036b6c82: callq  0x000000000368d080  ; OopMap{rbx=Oop rdi=Oop off=7207}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@130 (line 615)
                                                ;   {runtime_call}
  0x00000000036b6c87: mov    %rdx,(%rsp)
  0x00000000036b6c8b: callq  0x000000000368c9c0  ; OopMap{rbx=Oop rdi=Oop off=7216}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@130 (line 615)
                                                ;   {runtime_call}
  0x00000000036b6c90: mov    %rdx,0x8(%rsp)
  0x00000000036b6c95: movq   $0x83,(%rsp)
  0x00000000036b6c9d: callq  0x00000000036919e0  ; OopMap{rbx=Oop rdi=Oop off=7234}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@131 (line 615)
                                                ;   {runtime_call}
  0x00000000036b6ca2: jmpq   0x00000000036b56dc
  0x00000000036b6ca7: callq  0x000000000368d080  ; OopMap{rbx=Oop rdi=Oop off=7244}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@143 (line 619)
                                                ;   {runtime_call}
  0x00000000036b6cac: callq  0x000000000368d080  ; OopMap{rbx=Oop rdi=Oop off=7249}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@143 (line 619)
                                                ;   {runtime_call}
  0x00000000036b6cb1: mov    %rsi,(%rsp)
  0x00000000036b6cb5: callq  0x000000000368c9c0  ; OopMap{rbx=Oop rdi=Oop off=7258}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@143 (line 619)
                                                ;   {runtime_call}
  0x00000000036b6cba: mov    %rcx,(%rsp)
  0x00000000036b6cbe: callq  0x000000000368c9c0  ; OopMap{rbx=Oop rdi=Oop off=7267}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@268 (line 632)
                                                ;   {runtime_call}
  0x00000000036b6cc3: mov    %rcx,(%rsp)
  0x00000000036b6cc7: callq  0x000000000368c9c0  ; OopMap{rbx=Oop rdi=Oop off=7276}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@360 (line 645)
                                                ;   {runtime_call}
  0x00000000036b6ccc: mov    %r9,(%rsp)
  0x00000000036b6cd0: callq  0x000000000368c9c0  ; OopMap{rbx=Oop rdi=Oop off=7285}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@368 (line 646)
                                                ;   {runtime_call}
  0x00000000036b6cd5: callq  0x000000000368d080  ; OopMap{rbx=Oop rdi=Oop off=7290}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@457 (line 650)
                                                ;   {runtime_call}
  0x00000000036b6cda: callq  0x000000000368d080  ; OopMap{rbx=Oop rdi=Oop off=7295}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@457 (line 650)
                                                ;   {runtime_call}
  0x00000000036b6cdf: mov    %r11,(%rsp)
  0x00000000036b6ce3: callq  0x000000000368c9c0  ; OopMap{rbx=Oop rdi=Oop off=7304}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@457 (line 650)
                                                ;   {runtime_call}
  0x00000000036b6ce8: mov    %rdx,0x8(%rsp)
  0x00000000036b6ced: movq   $0x1ca,(%rsp)
  0x00000000036b6cf5: callq  0x00000000036919e0  ; OopMap{rbx=Oop rdi=Oop off=7322}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@458 (line 653)
                                                ;   {runtime_call}
  0x00000000036b6cfa: jmpq   0x00000000036b59ce
  0x00000000036b6cff: callq  0x000000000368d080  ; OopMap{rbx=Oop rdi=Oop off=7332}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@332 (line 636)
                                                ;   {runtime_call}
  0x00000000036b6d04: callq  0x000000000368d080  ; OopMap{rbx=Oop rdi=Oop off=7337}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@332 (line 636)
                                                ;   {runtime_call}
  0x00000000036b6d09: mov    %r11,(%rsp)
  0x00000000036b6d0d: callq  0x000000000368c9c0  ; OopMap{rbx=Oop rdi=Oop off=7346}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@332 (line 636)
                                                ;   {runtime_call}
  0x00000000036b6d12: mov    %rdx,0x8(%rsp)
  0x00000000036b6d17: movq   $0x14d,(%rsp)
  0x00000000036b6d1f: callq  0x00000000036919e0  ; OopMap{rbx=Oop rdi=Oop off=7364}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@333 (line 638)
                                                ;   {runtime_call}
  0x00000000036b6d24: jmpq   0x00000000036b5a42
  0x00000000036b6d29: callq  0x000000000368d080  ; OopMap{rbx=Oop rdi=Oop off=7374}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@240 (line 624)
                                                ;   {runtime_call}
  0x00000000036b6d2e: callq  0x000000000368d080  ; OopMap{rbx=Oop rdi=Oop off=7379}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@240 (line 624)
                                                ;   {runtime_call}
  0x00000000036b6d33: mov    %r11,(%rsp)
  0x00000000036b6d37: callq  0x000000000368c9c0  ; OopMap{rbx=Oop rdi=Oop off=7388}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@240 (line 624)
                                                ;   {runtime_call}
  0x00000000036b6d3c: mov    %rdx,0x8(%rsp)
  0x00000000036b6d41: movq   $0xf1,(%rsp)
  0x00000000036b6d49: callq  0x00000000036919e0  ; OopMap{rbx=Oop rdi=Oop off=7406}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@241 (line 625)
                                                ;   {runtime_call}
  0x00000000036b6d4e: jmpq   0x00000000036b5ab1
  0x00000000036b6d53: mov    %rdx,%rdx
  0x00000000036b6d56: callq  0x000000000368d300  ; OopMap{rbx=Oop off=7419}
                                                ;*new  ; - java.io.DataInputStream::readUTF@489 (line 661)
                                                ;   {runtime_call}
  0x00000000036b6d5b: jmpq   0x00000000036b5b1c
  0x00000000036b6d60: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000036b6d6a: mov    $0xa050f00,%eax
  0x00000000036b6d6f: callq  0x0000000003690920  ; OopMap{off=7444}
                                                ;*new  ; - java.io.DataInputStream::readUTF@461 (line 656)
                                                ;   {runtime_call}
  0x00000000036b6d74: jmpq   0x00000000036b5b70
  0x00000000036b6d79: mov    %rdx,%rdx
  0x00000000036b6d7c: callq  0x000000000368d720  ; OopMap{off=7457}
                                                ;*new  ; - java.io.DataInputStream::readUTF@461 (line 656)
                                                ;   {runtime_call}
  0x00000000036b6d81: jmpq   0x00000000036b5b7f
  0x00000000036b6d86: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000036b6d90: mov    $0xa050f00,%eax
  0x00000000036b6d95: callq  0x0000000003690920  ; OopMap{rax=Oop off=7482}
                                                ;*new  ; - java.io.DataInputStream::readUTF@465 (line 656)
                                                ;   {runtime_call}
  0x00000000036b6d9a: jmpq   0x00000000036b5b80
  0x00000000036b6d9f: mov    %rdx,%rdx
  0x00000000036b6da2: callq  0x000000000368d300  ; OopMap{[160]=Oop off=7495}
                                                ;*new  ; - java.io.DataInputStream::readUTF@465 (line 656)
                                                ;   {runtime_call}
  0x00000000036b6da7: jmpq   0x00000000036b5bc9
  0x00000000036b6dac: mov    %rbx,0x8(%rsp)
  0x00000000036b6db1: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036b6db9: callq  0x00000000036919e0  ; OopMap{[160]=Oop rax=Oop off=7518}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)
                                                ;   {runtime_call}
  0x00000000036b6dbe: jmpq   0x00000000036b5c10
  0x00000000036b6dc3: mov    %rbx,0x8(%rsp)
  0x00000000036b6dc8: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036b6dd0: callq  0x00000000036919e0  ; OopMap{[160]=Oop rax=Oop off=7541}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)
                                                ;   {runtime_call}
  0x00000000036b6dd5: jmpq   0x00000000036b5c57
  0x00000000036b6dda: mov    %rbx,0x8(%rsp)
  0x00000000036b6ddf: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036b6de7: callq  0x00000000036919e0  ; OopMap{[160]=Oop rax=Oop off=7564}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)
                                                ;   {runtime_call}
  0x00000000036b6dec: jmpq   0x00000000036b5c9e
  0x00000000036b6df1: callq  0x000000000368e200  ; OopMap{[160]=Oop r13=Oop off=7574}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)
                                                ;   {runtime_call}
  0x00000000036b6df6: jmpq   0x00000000036b5d1d
  0x00000000036b6dfb: mov    %r8,0x8(%rsp)
  0x00000000036b6e00: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036b6e08: callq  0x00000000036919e0  ; OopMap{[160]=Oop r13=Oop off=7597}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.io.DataInputStream::readUTF@474 (line 656)
                                                ;   {runtime_call}
  0x00000000036b6e0d: jmpq   0x00000000036b5e02
  0x00000000036b6e12: mov    %r8,0x8(%rsp)
  0x00000000036b6e17: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036b6e1f: callq  0x00000000036919e0  ; OopMap{[144]=Oop [160]=Oop off=7620}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.io.DataInputStream::readUTF@479 (line 656)
                                                ;   {runtime_call}
  0x00000000036b6e24: jmpq   0x00000000036b5efd
  0x00000000036b6e29: mov    %rdx,0x8(%rsp)
  0x00000000036b6e2e: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036b6e36: callq  0x00000000036919e0  ; OopMap{[144]=Oop [160]=Oop off=7643}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)
                                                ;   {runtime_call}
  0x00000000036b6e3b: jmpq   0x00000000036b5ff3
  0x00000000036b6e40: mov    %rdx,%rdx
  0x00000000036b6e43: callq  0x000000000368d300  ; OopMap{[144]=Oop [160]=Oop off=7656}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)
                                                ;   {runtime_call}
  0x00000000036b6e48: jmpq   0x00000000036b6034
  0x00000000036b6e4d: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000036b6e57: mov    $0xa050f00,%eax
  0x00000000036b6e5c: callq  0x0000000003690920  ; OopMap{off=7681}
                                                ;*new  ; - java.io.DataInputStream::readUTF@395 (line 648)
                                                ;   {runtime_call}
  0x00000000036b6e61: jmpq   0x00000000036b60c0
  0x00000000036b6e66: mov    %rdx,%rdx
  0x00000000036b6e69: callq  0x000000000368d720  ; OopMap{off=7694}
                                                ;*new  ; - java.io.DataInputStream::readUTF@395 (line 648)
                                                ;   {runtime_call}
  0x00000000036b6e6e: jmpq   0x00000000036b60cf
  0x00000000036b6e73: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000036b6e7d: mov    $0xa050f00,%eax
  0x00000000036b6e82: callq  0x0000000003690920  ; OopMap{rax=Oop off=7719}
                                                ;*new  ; - java.io.DataInputStream::readUTF@399 (line 648)
                                                ;   {runtime_call}
  0x00000000036b6e87: jmpq   0x00000000036b60d0
  0x00000000036b6e8c: mov    %rdx,%rdx
  0x00000000036b6e8f: callq  0x000000000368d300  ; OopMap{[184]=Oop off=7732}
                                                ;*new  ; - java.io.DataInputStream::readUTF@399 (line 648)
                                                ;   {runtime_call}
  0x00000000036b6e94: jmpq   0x00000000036b6119
  0x00000000036b6e99: mov    %rbx,0x8(%rsp)
  0x00000000036b6e9e: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036b6ea6: callq  0x00000000036919e0  ; OopMap{[184]=Oop rax=Oop off=7755}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)
                                                ;   {runtime_call}
  0x00000000036b6eab: jmpq   0x00000000036b6160
  0x00000000036b6eb0: mov    %rbx,0x8(%rsp)
  0x00000000036b6eb5: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036b6ebd: callq  0x00000000036919e0  ; OopMap{[184]=Oop rax=Oop off=7778}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)
                                                ;   {runtime_call}
  0x00000000036b6ec2: jmpq   0x00000000036b61a7
  0x00000000036b6ec7: mov    %rbx,0x8(%rsp)
  0x00000000036b6ecc: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036b6ed4: callq  0x00000000036919e0  ; OopMap{[184]=Oop rax=Oop off=7801}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)
                                                ;   {runtime_call}
  0x00000000036b6ed9: jmpq   0x00000000036b61ee
  0x00000000036b6ede: callq  0x000000000368e200  ; OopMap{[184]=Oop r14=Oop off=7811}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)
                                                ;   {runtime_call}
  0x00000000036b6ee3: jmpq   0x00000000036b626d
  0x00000000036b6ee8: mov    %r8,0x8(%rsp)
  0x00000000036b6eed: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036b6ef5: callq  0x00000000036919e0  ; OopMap{[184]=Oop r14=Oop off=7834}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.io.DataInputStream::readUTF@408 (line 648)
                                                ;   {runtime_call}
  0x00000000036b6efa: jmpq   0x00000000036b6352
  0x00000000036b6eff: mov    %r8,0x8(%rsp)
  0x00000000036b6f04: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036b6f0c: callq  0x00000000036919e0  ; OopMap{[176]=Oop [184]=Oop off=7857}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.io.DataInputStream::readUTF@415 (line 648)
                                                ;   {runtime_call}
  0x00000000036b6f11: jmpq   0x00000000036b644d
  0x00000000036b6f16: mov    %rdx,0x8(%rsp)
  0x00000000036b6f1b: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036b6f23: callq  0x00000000036919e0  ; OopMap{[176]=Oop [184]=Oop off=7880}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)
                                                ;   {runtime_call}
  0x00000000036b6f28: jmpq   0x00000000036b6543
  0x00000000036b6f2d: mov    %rdx,%rdx
  0x00000000036b6f30: callq  0x000000000368d300  ; OopMap{[176]=Oop [184]=Oop off=7893}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)
                                                ;   {runtime_call}
  0x00000000036b6f35: jmpq   0x00000000036b6584
  0x00000000036b6f3a: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000036b6f44: mov    $0xa050f00,%eax
  0x00000000036b6f49: callq  0x0000000003690920  ; OopMap{off=7918}
                                                ;*new  ; - java.io.DataInputStream::readUTF@345 (line 643)
                                                ;   {runtime_call}
  0x00000000036b6f4e: jmpq   0x00000000036b6610
  0x00000000036b6f53: mov    %rdx,%rdx
  0x00000000036b6f56: callq  0x000000000368d720  ; OopMap{off=7931}
                                                ;*new  ; - java.io.DataInputStream::readUTF@345 (line 643)
                                                ;   {runtime_call}
  0x00000000036b6f5b: jmpq   0x00000000036b661f
  0x00000000036b6f60: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000036b6f6a: mov    $0xa050f00,%eax
  0x00000000036b6f6f: callq  0x0000000003690920  ; OopMap{off=7956}
                                                ;*new  ; - java.io.DataInputStream::readUTF@283 (line 634)
                                                ;   {runtime_call}
  0x00000000036b6f74: jmpq   0x00000000036b6668
  0x00000000036b6f79: mov    %rdx,%rdx
  0x00000000036b6f7c: callq  0x000000000368d720  ; OopMap{off=7969}
                                                ;*new  ; - java.io.DataInputStream::readUTF@283 (line 634)
                                                ;   {runtime_call}
  0x00000000036b6f81: jmpq   0x00000000036b6677
  0x00000000036b6f86: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000036b6f90: mov    $0xa050f00,%eax
  0x00000000036b6f95: callq  0x0000000003690920  ; OopMap{rax=Oop off=7994}
                                                ;*new  ; - java.io.DataInputStream::readUTF@287 (line 634)
                                                ;   {runtime_call}
  0x00000000036b6f9a: jmpq   0x00000000036b6678
  0x00000000036b6f9f: mov    %rdx,%rdx
  0x00000000036b6fa2: callq  0x000000000368d300  ; OopMap{[224]=Oop off=8007}
                                                ;*new  ; - java.io.DataInputStream::readUTF@287 (line 634)
                                                ;   {runtime_call}
  0x00000000036b6fa7: jmpq   0x00000000036b66c1
  0x00000000036b6fac: mov    %rbx,0x8(%rsp)
  0x00000000036b6fb1: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036b6fb9: callq  0x00000000036919e0  ; OopMap{[224]=Oop rax=Oop off=8030}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)
                                                ;   {runtime_call}
  0x00000000036b6fbe: jmpq   0x00000000036b6708
  0x00000000036b6fc3: mov    %rbx,0x8(%rsp)
  0x00000000036b6fc8: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036b6fd0: callq  0x00000000036919e0  ; OopMap{[224]=Oop rax=Oop off=8053}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)
                                                ;   {runtime_call}
  0x00000000036b6fd5: jmpq   0x00000000036b674f
  0x00000000036b6fda: mov    %rbx,0x8(%rsp)
  0x00000000036b6fdf: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036b6fe7: callq  0x00000000036919e0  ; OopMap{[224]=Oop rax=Oop off=8076}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)
                                                ;   {runtime_call}
  0x00000000036b6fec: jmpq   0x00000000036b6796
  0x00000000036b6ff1: callq  0x000000000368e200  ; OopMap{[224]=Oop r13=Oop off=8086}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)
                                                ;   {runtime_call}
  0x00000000036b6ff6: jmpq   0x00000000036b6815
  0x00000000036b6ffb: mov    %r8,0x8(%rsp)
  0x00000000036b7000: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036b7008: callq  0x00000000036919e0  ; OopMap{[224]=Oop r13=Oop off=8109}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.io.DataInputStream::readUTF@296 (line 634)
                                                ;   {runtime_call}
  0x00000000036b700d: jmpq   0x00000000036b68fa
  0x00000000036b7012: mov    %r8,0x8(%rsp)
  0x00000000036b7017: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036b701f: callq  0x00000000036919e0  ; OopMap{[208]=Oop [224]=Oop off=8132}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.io.DataInputStream::readUTF@301 (line 634)
                                                ;   {runtime_call}
  0x00000000036b7024: jmpq   0x00000000036b69f5
  0x00000000036b7029: mov    %rdx,0x8(%rsp)
  0x00000000036b702e: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036b7036: callq  0x00000000036919e0  ; OopMap{[208]=Oop [224]=Oop off=8155}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)
                                                ;   {runtime_call}
  0x00000000036b703b: jmpq   0x00000000036b6aeb
  0x00000000036b7040: mov    %rdx,%rdx
  0x00000000036b7043: callq  0x000000000368d300  ; OopMap{[208]=Oop [224]=Oop off=8168}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)
                                                ;   {runtime_call}
  0x00000000036b7048: jmpq   0x00000000036b6b2c
  0x00000000036b704d: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000036b7057: mov    $0xa050f00,%eax
  0x00000000036b705c: callq  0x0000000003690920  ; OopMap{off=8193}
                                                ;*new  ; - java.io.DataInputStream::readUTF@253 (line 630)
                                                ;   {runtime_call}
  0x00000000036b7061: jmpq   0x00000000036b6bb8
  0x00000000036b7066: mov    %rdx,%rdx
  0x00000000036b7069: callq  0x000000000368d720  ; OopMap{off=8206}
                                                ;*new  ; - java.io.DataInputStream::readUTF@253 (line 630)
                                                ;   {runtime_call}
  0x00000000036b706e: jmpq   0x00000000036b6bc7
  0x00000000036b7073: nop
  0x00000000036b7074: nop
  0x00000000036b7075: mov    0x2a8(%r15),%rax
  0x00000000036b707c: movabs $0x0,%r10
  0x00000000036b7086: mov    %r10,0x2a8(%r15)
  0x00000000036b708d: movabs $0x0,%r10
  0x00000000036b7097: mov    %r10,0x2b0(%r15)
  0x00000000036b709e: add    $0x100,%rsp
  0x00000000036b70a5: pop    %rbp
  0x00000000036b70a6: jmpq   0x000000000368c620  ;   {runtime_call}
  0x00000000036b70ab: hlt    
  0x00000000036b70ac: hlt    
  0x00000000036b70ad: hlt    
  0x00000000036b70ae: hlt    
  0x00000000036b70af: hlt    
  0x00000000036b70b0: hlt    
  0x00000000036b70b1: hlt    
  0x00000000036b70b2: hlt    
  0x00000000036b70b3: hlt    
  0x00000000036b70b4: hlt    
  0x00000000036b70b5: hlt    
  0x00000000036b70b6: hlt    
  0x00000000036b70b7: hlt    
  0x00000000036b70b8: hlt    
  0x00000000036b70b9: hlt    
  0x00000000036b70ba: hlt    
  0x00000000036b70bb: hlt    
  0x00000000036b70bc: hlt    
  0x00000000036b70bd: hlt    
  0x00000000036b70be: hlt    
  0x00000000036b70bf: hlt    
[Stub Code]
  0x00000000036b70c0: nop                       ;   {no_reloc}
  0x00000000036b70c1: nop
  0x00000000036b70c2: nop
  0x00000000036b70c3: nop
  0x00000000036b70c4: nop
  0x00000000036b70c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b70cf: jmpq   0x00000000036b70cf  ;   {runtime_call}
  0x00000000036b70d4: nop
  0x00000000036b70d5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b70df: jmpq   0x00000000036b70df  ;   {runtime_call}
  0x00000000036b70e4: nop
  0x00000000036b70e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b70ef: jmpq   0x00000000036b70ef  ;   {runtime_call}
  0x00000000036b70f4: nop
  0x00000000036b70f5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b70ff: jmpq   0x00000000036b70ff  ;   {runtime_call}
  0x00000000036b7104: nop
  0x00000000036b7105: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b710f: jmpq   0x00000000036b710f  ;   {runtime_call}
  0x00000000036b7114: nop
  0x00000000036b7115: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b711f: jmpq   0x00000000036b711f  ;   {runtime_call}
  0x00000000036b7124: nop
  0x00000000036b7125: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b712f: jmpq   0x00000000036b712f  ;   {runtime_call}
  0x00000000036b7134: nop
  0x00000000036b7135: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b713f: jmpq   0x00000000036b713f  ;   {runtime_call}
  0x00000000036b7144: nop
  0x00000000036b7145: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b714f: jmpq   0x00000000036b714f  ;   {runtime_call}
  0x00000000036b7154: nop
  0x00000000036b7155: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b715f: jmpq   0x00000000036b715f  ;   {runtime_call}
  0x00000000036b7164: nop
  0x00000000036b7165: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b716f: jmpq   0x00000000036b716f  ;   {runtime_call}
  0x00000000036b7174: nop
  0x00000000036b7175: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b717f: jmpq   0x00000000036b717f  ;   {runtime_call}
  0x00000000036b7184: nop
  0x00000000036b7185: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b718f: jmpq   0x00000000036b718f  ;   {runtime_call}
  0x00000000036b7194: nop
  0x00000000036b7195: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b719f: jmpq   0x00000000036b719f  ;   {runtime_call}
  0x00000000036b71a4: nop
  0x00000000036b71a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b71af: jmpq   0x00000000036b71af  ;   {runtime_call}
  0x00000000036b71b4: nop
  0x00000000036b71b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b71bf: jmpq   0x00000000036b71bf  ;   {runtime_call}
  0x00000000036b71c4: nop
  0x00000000036b71c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b71cf: jmpq   0x00000000036b71cf  ;   {runtime_call}
[Exception Handler]
  0x00000000036b71d4: callq  0x000000000368f1a0  ;   {runtime_call}
  0x00000000036b71d9: mov    %rsp,-0x28(%rsp)
  0x00000000036b71de: sub    $0x80,%rsp
  0x00000000036b71e5: mov    %rax,0x78(%rsp)
  0x00000000036b71ea: mov    %rcx,0x70(%rsp)
  0x00000000036b71ef: mov    %rdx,0x68(%rsp)
  0x00000000036b71f4: mov    %rbx,0x60(%rsp)
  0x00000000036b71f9: mov    %rbp,0x50(%rsp)
  0x00000000036b71fe: mov    %rsi,0x48(%rsp)
  0x00000000036b7203: mov    %rdi,0x40(%rsp)
  0x00000000036b7208: mov    %r8,0x38(%rsp)
  0x00000000036b720d: mov    %r9,0x30(%rsp)
  0x00000000036b7212: mov    %r10,0x28(%rsp)
  0x00000000036b7217: mov    %r11,0x20(%rsp)
  0x00000000036b721c: mov    %r12,0x18(%rsp)
  0x00000000036b7221: mov    %r13,0x10(%rsp)
  0x00000000036b7226: mov    %r14,0x8(%rsp)
  0x00000000036b722b: mov    %r15,(%rsp)
  0x00000000036b722f: movabs $0x553ec320,%rcx   ;   {external_word}
  0x00000000036b7239: movabs $0x36b71d9,%rdx    ;   {internal_word}
  0x00000000036b7243: mov    %rsp,%r8
  0x00000000036b7246: and    $0xfffffffffffffff0,%rsp
  0x00000000036b724a: callq  0x00000000550a41d0  ;   {runtime_call}
  0x00000000036b724f: hlt    
[Deopt Handler Code]
  0x00000000036b7250: movabs $0x36b7250,%r10    ;   {section_word}
  0x00000000036b725a: push   %r10
  0x00000000036b725c: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036b7261: hlt    
  0x00000000036b7262: hlt    
  0x00000000036b7263: hlt    
  0x00000000036b7264: hlt    
  0x00000000036b7265: hlt    
  0x00000000036b7266: hlt    
  0x00000000036b7267: hlt    
<nmethod compile_id='53' compiler='C1' level='3' entry='0x00000000036b5060' size='15216' address='0x00000000036b4c90' relocation_offset='288' insts_offset='976' stub_offset='9264' scopes_data_offset='9784' scopes_pcs_offset='12032' dependencies_offset='15072' nul_chk_table_offset='15088' oops_offset='9688' method='java/io/DataInputStream readUTF (Ljava/io/DataInput;)Ljava/lang/String;' bytes='501' count='602' backedge_count='8609' iicount='602' stamp='1.286'/>
Decoding compiled method 0x00000000036af690:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c7c51a0} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;
  # this:     rdx:rdx   = &apos;java/io/DataInputStream&apos;
  # parm0:    r8:r8     = &apos;[B&apos;
  # parm1:    r9        = int
  # parm2:    rdi       = int
  #           [sp+0x80]  (sp of caller)
  0x00000000036af840: mov    0x8(%rdx),%r10d
  0x00000000036af844: shl    $0x3,%r10
  0x00000000036af848: cmp    %rax,%r10
  0x00000000036af84b: jne    0x00000000035d5f60  ;   {runtime_call}
  0x00000000036af851: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000036af85c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000036af860: mov    %eax,-0x6000(%rsp)
  0x00000000036af867: push   %rbp
  0x00000000036af868: sub    $0x70,%rsp
  0x00000000036af86c: mov    %rdx,0x38(%rsp)
  0x00000000036af871: mov    %r8,0x48(%rsp)
  0x00000000036af876: mov    %r9d,0x40(%rsp)
  0x00000000036af87b: mov    %edi,0x34(%rsp)
  0x00000000036af87f: movabs $0x1c7c8f90,%rsi   ;   {metadata(method data for {method} {0x000000001c7c51a0} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036af889: mov    0xdc(%rsi),%ebx
  0x00000000036af88f: add    $0x8,%ebx
  0x00000000036af892: mov    %ebx,0xdc(%rsi)
  0x00000000036af898: movabs $0x1c7c5198,%rsi   ;   {metadata({method} {0x000000001c7c51a0} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036af8a2: and    $0x1ff8,%ebx
  0x00000000036af8a8: cmp    $0x0,%ebx
  0x00000000036af8ab: je     0x00000000036afb26  ;*iload_3
                                                ; - java.io.DataInputStream::readFully@0 (line 191)

  0x00000000036af8b1: cmp    $0x0,%edi
  0x00000000036af8b4: movabs $0x1c7c8f90,%rsi   ;   {metadata(method data for {method} {0x000000001c7c51a0} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036af8be: movabs $0x108,%rbx
  0x00000000036af8c8: jge    0x00000000036af8d8
  0x00000000036af8ce: movabs $0x118,%rbx
  0x00000000036af8d8: mov    (%rsi,%rbx,1),%rax
  0x00000000036af8dc: lea    0x1(%rax),%rax
  0x00000000036af8e0: mov    %rax,(%rsi,%rbx,1)
  0x00000000036af8e4: jl     0x00000000036afae6  ;*ifge
                                                ; - java.io.DataInputStream::readFully@1 (line 191)

  0x00000000036af8ea: mov    $0x0,%esi
  0x00000000036af8ef: jmpq   0x00000000036afa5f  ;*iload
                                                ; - java.io.DataInputStream::readFully@15 (line 194)

  0x00000000036af8f4: nopl   0x0(%rax)
  0x00000000036af8f8: mov    0xc(%rdx),%ebx
  0x00000000036af8fb: shl    $0x3,%rbx          ;*getfield in
                                                ; - java.io.DataInputStream::readFully@22 (line 195)

  0x00000000036af8ff: cmp    (%rbx),%rax        ; implicit exception: dispatches to 0x00000000036afb3d
  0x00000000036af902: mov    %rbx,%rax
  0x00000000036af905: movabs $0x1c7c8f90,%rcx   ;   {metadata(method data for {method} {0x000000001c7c51a0} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036af90f: mov    0x8(%rax),%eax
  0x00000000036af912: shl    $0x3,%rax
  0x00000000036af916: cmp    0x160(%rcx),%rax
  0x00000000036af91d: jne    0x00000000036af92c
  0x00000000036af91f: addq   $0x1,0x168(%rcx)
  0x00000000036af927: jmpq   0x00000000036af992
  0x00000000036af92c: cmp    0x170(%rcx),%rax
  0x00000000036af933: jne    0x00000000036af942
  0x00000000036af935: addq   $0x1,0x178(%rcx)
  0x00000000036af93d: jmpq   0x00000000036af992
  0x00000000036af942: cmpq   $0x0,0x160(%rcx)
  0x00000000036af94d: jne    0x00000000036af966
  0x00000000036af94f: mov    %rax,0x160(%rcx)
  0x00000000036af956: movq   $0x1,0x168(%rcx)
  0x00000000036af961: jmpq   0x00000000036af992
  0x00000000036af966: cmpq   $0x0,0x170(%rcx)
  0x00000000036af971: jne    0x00000000036af98a
  0x00000000036af973: mov    %rax,0x170(%rcx)
  0x00000000036af97a: movq   $0x1,0x178(%rcx)
  0x00000000036af985: jmpq   0x00000000036af992
  0x00000000036af98a: addq   $0x1,0x158(%rcx)
  0x00000000036af992: mov    %rsi,%rax
  0x00000000036af995: add    %r9d,%eax
  0x00000000036af998: mov    %rdi,%rcx
  0x00000000036af99b: sub    %esi,%ecx
  0x00000000036af99d: mov    %r8,%r11
  0x00000000036af9a0: mov    %r11,%r8
  0x00000000036af9a3: mov    %rax,%r9
  0x00000000036af9a6: mov    %rcx,%rdi
  0x00000000036af9a9: mov    %rbx,%rdx          ;*invokevirtual read
                                                ; - java.io.DataInputStream::readFully@34 (line 195)

  0x00000000036af9ac: mov    %esi,0x30(%rsp)
  0x00000000036af9b0: nop
  0x00000000036af9b1: nop
  0x00000000036af9b2: nop
  0x00000000036af9b3: nop
  0x00000000036af9b4: nop
  0x00000000036af9b5: movabs $0xffffffffffffffff,%rax
  0x00000000036af9bf: callq  0x00000000035d63e0  ; OopMap{[56]=Oop [72]=Oop off=388}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readFully@34 (line 195)
                                                ;   {virtual_call}
  0x00000000036af9c4: cmp    $0x0,%eax
  0x00000000036af9c7: movabs $0x1c7c8f90,%rdx   ;   {metadata(method data for {method} {0x000000001c7c51a0} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036af9d1: movabs $0x188,%rsi
  0x00000000036af9db: jge    0x00000000036af9eb
  0x00000000036af9e1: movabs $0x198,%rsi
  0x00000000036af9eb: mov    (%rdx,%rsi,1),%rdi
  0x00000000036af9ef: lea    0x1(%rdi),%rdi
  0x00000000036af9f3: mov    %rdi,(%rdx,%rsi,1)
  0x00000000036af9f7: jl     0x00000000036afaa3  ;*ifge
                                                ; - java.io.DataInputStream::readFully@41 (line 196)

  0x00000000036af9fd: add    0x30(%rsp),%eax
  0x00000000036afa01: movabs $0x1c7c8f90,%rdx   ;   {metadata(method data for {method} {0x000000001c7c51a0} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036afa0b: mov    0xe0(%rdx),%esi
  0x00000000036afa11: add    $0x8,%esi
  0x00000000036afa14: mov    %esi,0xe0(%rdx)
  0x00000000036afa1a: movabs $0x1c7c5198,%rdx   ;   {metadata({method} {0x000000001c7c51a0} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036afa24: and    $0xfff8,%esi
  0x00000000036afa2a: cmp    $0x0,%esi
  0x00000000036afa2d: je     0x00000000036afb42  ; OopMap{[56]=Oop [72]=Oop off=499}
                                                ;*goto
                                                ; - java.io.DataInputStream::readFully@59 (line 199)

  0x00000000036afa33: test   %eax,-0x20bf939(%rip)        # 0x00000000015f0100
                                                ;   {poll}
  0x00000000036afa39: movabs $0x1c7c8f90,%rdx   ;   {metadata(method data for {method} {0x000000001c7c51a0} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036afa43: incl   0x1b8(%rdx)
  0x00000000036afa49: mov    %rax,%rsi          ;*goto
                                                ; - java.io.DataInputStream::readFully@59 (line 199)

  0x00000000036afa4c: mov    0x34(%rsp),%edi
  0x00000000036afa50: mov    0x40(%rsp),%r9d
  0x00000000036afa55: mov    0x48(%rsp),%r8
  0x00000000036afa5a: mov    0x38(%rsp),%rdx
  0x00000000036afa5f: cmp    %edi,%esi
  0x00000000036afa61: movabs $0x1c7c8f90,%rbx   ;   {metadata(method data for {method} {0x000000001c7c51a0} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036afa6b: movabs $0x138,%rax
  0x00000000036afa75: jge    0x00000000036afa85
  0x00000000036afa7b: movabs $0x148,%rax
  0x00000000036afa85: mov    (%rbx,%rax,1),%rcx
  0x00000000036afa89: lea    0x1(%rcx),%rcx
  0x00000000036afa8d: mov    %rcx,(%rbx,%rax,1)
  0x00000000036afa91: jl     0x00000000036af8f8  ;*if_icmpge
                                                ; - java.io.DataInputStream::readFully@18 (line 194)

  0x00000000036afa97: add    $0x70,%rsp
  0x00000000036afa9b: pop    %rbp
  0x00000000036afa9c: test   %eax,-0x20bf9a2(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036afaa2: retq                      ;*return
                                                ; - java.io.DataInputStream::readFully@62 (line 200)

  0x00000000036afaa3: nopl   0x0(%rax,%rax,1)
  0x00000000036afaa8: jmpq   0x00000000036afb68  ;   {no_reloc}
  0x00000000036afaad: add    %al,(%rax)
  0x00000000036afaaf: add    %al,(%rax)
  0x00000000036afab1: add    %ch,%cl
  0x00000000036afab3: mov    $0x48000000,%ebx   ;*new  ; - java.io.DataInputStream::readFully@44 (line 197)

  0x00000000036afab8: mov    %eax,%edx
  0x00000000036afaba: movabs $0x1c7c8f90,%rsi   ;   {metadata(method data for {method} {0x000000001c7c51a0} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036afac4: addq   $0x1,0x1a8(%rsi)
  0x00000000036afacc: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readFully@48 (line 197)

  0x00000000036afacf: mov    %rax,0x50(%rsp)
  0x00000000036afad4: nop
  0x00000000036afad5: nop
  0x00000000036afad6: nop
  0x00000000036afad7: callq  0x00000000035d61a0  ; OopMap{[80]=Oop off=668}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readFully@48 (line 197)
                                                ;   {optimized virtual_call}
  0x00000000036afadc: mov    0x50(%rsp),%rax
  0x00000000036afae1: jmpq   0x00000000036afbd0  ;*athrow
                                                ; - java.io.DataInputStream::readFully@51 (line 197)

  0x00000000036afae6: xchg   %ax,%ax
  0x00000000036afae8: jmpq   0x00000000036afb8e  ;   {no_reloc}
  0x00000000036afaed: add    %al,(%rax)
  0x00000000036afaef: add    %al,(%rax)
  0x00000000036afaf1: add    %ch,%cl
  0x00000000036afaf3: movabs 0xbe48d08b48000000,%eax  ;*new
                                                ; - java.io.DataInputStream::readFully@4 (line 192)
                                                ;   {metadata(method data for {method} {0x000000001c7c51a0} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000036afafc: nop
  0x00000000036afafd: (bad)  
  0x00000000036afafe: jl     0x00000000036afb1c
  0x00000000036afb00: add    %al,(%rax)
  0x00000000036afb02: add    %al,(%rax)
  0x00000000036afb04: addq   $0x1,0x128(%rsi)
  0x00000000036afb0c: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readFully@8 (line 192)

  0x00000000036afb0f: mov    %rax,0x58(%rsp)
  0x00000000036afb14: nop
  0x00000000036afb15: nop
  0x00000000036afb16: nop
  0x00000000036afb17: callq  0x00000000035d61a0  ; OopMap{[88]=Oop off=732}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readFully@8 (line 192)
                                                ;   {optimized virtual_call}
  0x00000000036afb1c: mov    0x58(%rsp),%rax
  0x00000000036afb21: jmpq   0x00000000036afbd0
  0x00000000036afb26: mov    %rsi,0x8(%rsp)
  0x00000000036afb2b: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036afb33: callq  0x00000000036919e0  ; OopMap{rdx=Oop [56]=Oop r8=Oop [72]=Oop off=760}
                                                ;*synchronization entry
                                                ; - java.io.DataInputStream::readFully@-1 (line 191)
                                                ;   {runtime_call}
  0x00000000036afb38: jmpq   0x00000000036af8b1
  0x00000000036afb3d: callq  0x000000000368d080  ; OopMap{rdx=Oop [56]=Oop r8=Oop [72]=Oop rbx=Oop off=770}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readFully@34 (line 195)
                                                ;   {runtime_call}
  0x00000000036afb42: mov    %rdx,0x8(%rsp)
  0x00000000036afb47: movq   $0x3b,(%rsp)
  0x00000000036afb4f: callq  0x00000000036919e0  ; OopMap{[56]=Oop [72]=Oop off=788}
                                                ;*goto
                                                ; - java.io.DataInputStream::readFully@59 (line 199)
                                                ;   {runtime_call}
  0x00000000036afb54: jmpq   0x00000000036afa33
  0x00000000036afb59: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000036afb63: mov    $0xa050f00,%eax
  0x00000000036afb68: callq  0x0000000003690920  ; OopMap{off=813}
                                                ;*new  ; - java.io.DataInputStream::readFully@44 (line 197)
                                                ;   {runtime_call}
  0x00000000036afb6d: jmpq   0x00000000036afaa8
  0x00000000036afb72: mov    %rdx,%rdx
  0x00000000036afb75: callq  0x000000000368d720  ; OopMap{off=826}
                                                ;*new  ; - java.io.DataInputStream::readFully@44 (line 197)
                                                ;   {runtime_call}
  0x00000000036afb7a: jmpq   0x00000000036afab7
  0x00000000036afb7f: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000036afb89: mov    $0xa050f00,%eax
  0x00000000036afb8e: callq  0x0000000003690920  ; OopMap{off=851}
                                                ;*new  ; - java.io.DataInputStream::readFully@4 (line 192)
                                                ;   {runtime_call}
  0x00000000036afb93: jmpq   0x00000000036afae8
  0x00000000036afb98: mov    %rdx,%rdx
  0x00000000036afb9b: callq  0x000000000368d720  ; OopMap{off=864}
                                                ;*new  ; - java.io.DataInputStream::readFully@4 (line 192)
                                                ;   {runtime_call}
  0x00000000036afba0: jmpq   0x00000000036afaf7
  0x00000000036afba5: nop
  0x00000000036afba6: nop
  0x00000000036afba7: mov    0x2a8(%r15),%rax
  0x00000000036afbae: movabs $0x0,%r10
  0x00000000036afbb8: mov    %r10,0x2a8(%r15)
  0x00000000036afbbf: movabs $0x0,%r10
  0x00000000036afbc9: mov    %r10,0x2b0(%r15)
  0x00000000036afbd0: add    $0x70,%rsp
  0x00000000036afbd4: pop    %rbp
  0x00000000036afbd5: jmpq   0x000000000368c620  ;   {runtime_call}
  0x00000000036afbda: hlt    
  0x00000000036afbdb: hlt    
  0x00000000036afbdc: hlt    
  0x00000000036afbdd: hlt    
  0x00000000036afbde: hlt    
  0x00000000036afbdf: hlt    
[Stub Code]
  0x00000000036afbe0: nop                       ;   {no_reloc}
  0x00000000036afbe1: nop
  0x00000000036afbe2: nop
  0x00000000036afbe3: nop
  0x00000000036afbe4: nop
  0x00000000036afbe5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036afbef: jmpq   0x00000000036afbef  ;   {runtime_call}
  0x00000000036afbf4: nop
  0x00000000036afbf5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036afbff: jmpq   0x00000000036afbff  ;   {runtime_call}
  0x00000000036afc04: nop
  0x00000000036afc05: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036afc0f: jmpq   0x00000000036afc0f  ;   {runtime_call}
[Exception Handler]
  0x00000000036afc14: callq  0x000000000368f1a0  ;   {runtime_call}
  0x00000000036afc19: mov    %rsp,-0x28(%rsp)
  0x00000000036afc1e: sub    $0x80,%rsp
  0x00000000036afc25: mov    %rax,0x78(%rsp)
  0x00000000036afc2a: mov    %rcx,0x70(%rsp)
  0x00000000036afc2f: mov    %rdx,0x68(%rsp)
  0x00000000036afc34: mov    %rbx,0x60(%rsp)
  0x00000000036afc39: mov    %rbp,0x50(%rsp)
  0x00000000036afc3e: mov    %rsi,0x48(%rsp)
  0x00000000036afc43: mov    %rdi,0x40(%rsp)
  0x00000000036afc48: mov    %r8,0x38(%rsp)
  0x00000000036afc4d: mov    %r9,0x30(%rsp)
  0x00000000036afc52: mov    %r10,0x28(%rsp)
  0x00000000036afc57: mov    %r11,0x20(%rsp)
  0x00000000036afc5c: mov    %r12,0x18(%rsp)
  0x00000000036afc61: mov    %r13,0x10(%rsp)
  0x00000000036afc66: mov    %r14,0x8(%rsp)
  0x00000000036afc6b: mov    %r15,(%rsp)
  0x00000000036afc6f: movabs $0x553ec320,%rcx   ;   {external_word}
  0x00000000036afc79: movabs $0x36afc19,%rdx    ;   {internal_word}
  0x00000000036afc83: mov    %rsp,%r8
  0x00000000036afc86: and    $0xfffffffffffffff0,%rsp
  0x00000000036afc8a: callq  0x00000000550a41d0  ;   {runtime_call}
  0x00000000036afc8f: hlt    
[Deopt Handler Code]
  0x00000000036afc90: movabs $0x36afc90,%r10    ;   {section_word}
  0x00000000036afc9a: push   %r10
  0x00000000036afc9c: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036afca1: hlt    
  0x00000000036afca2: hlt    
  0x00000000036afca3: hlt    
  0x00000000036afca4: hlt    
  0x00000000036afca5: hlt    
  0x00000000036afca6: hlt    
  0x00000000036afca7: hlt    
<nmethod compile_id='59' compiler='C1' level='3' entry='0x00000000036af840' size='2232' address='0x00000000036af690' relocation_offset='288' insts_offset='432' stub_offset='1360' scopes_data_offset='1568' scopes_pcs_offset='1776' dependencies_offset='2208' nul_chk_table_offset='2216' method='java/io/DataInputStream readFully ([BII)V' bytes='63' count='989' backedge_count='989' iicount='989' stamp='1.306'/>
Decoding compiled method 0x00000000036b8810:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;
  # this:     rdx:rdx   = &apos;java/util/HashMap&apos;
  # parm0:    r8        = int
  # parm1:    r9:r9     = &apos;java/lang/Object&apos;
  # parm2:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm3:    rsi       = boolean
  # parm4:    rcx       = boolean
  #           [sp+0xb0]  (sp of caller)
  0x00000000036b8a80: mov    0x8(%rdx),%r10d
  0x00000000036b8a84: shl    $0x3,%r10
  0x00000000036b8a88: cmp    %rax,%r10
  0x00000000036b8a8b: jne    0x00000000035d5f60  ;   {runtime_call}
  0x00000000036b8a91: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000036b8a9c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000036b8aa0: mov    %eax,-0x6000(%rsp)
  0x00000000036b8aa7: push   %rbp
  0x00000000036b8aa8: sub    $0xa0,%rsp
  0x00000000036b8aaf: mov    %rdx,0x48(%rsp)
  0x00000000036b8ab4: mov    %r8d,0x40(%rsp)
  0x00000000036b8ab9: mov    %r9,0x50(%rsp)
  0x00000000036b8abe: movabs $0x1c696ca0,%rbx   ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b8ac8: mov    0xdc(%rbx),%eax
  0x00000000036b8ace: add    $0x8,%eax
  0x00000000036b8ad1: mov    %eax,0xdc(%rbx)
  0x00000000036b8ad7: movabs $0x1c578a38,%rbx   ;   {metadata({method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b8ae1: and    $0x1ff8,%eax
  0x00000000036b8ae7: cmp    $0x0,%eax
  0x00000000036b8aea: je     0x00000000036b9b5d  ;*aload_0
                                                ; - java.util.HashMap::putVal@0 (line 628)

  0x00000000036b8af0: mov    0x24(%rdx),%ebx
  0x00000000036b8af3: shl    $0x3,%rbx          ;*getfield table
                                                ; - java.util.HashMap::putVal@1 (line 628)

  0x00000000036b8af7: cmp    $0x0,%rbx
  0x00000000036b8afb: movabs $0x1c696ca0,%rax   ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b8b05: movabs $0x108,%r11
  0x00000000036b8b0f: je     0x00000000036b8b1f
  0x00000000036b8b15: movabs $0x118,%r11
  0x00000000036b8b1f: mov    (%rax,%r11,1),%r13
  0x00000000036b8b23: lea    0x1(%r13),%r13
  0x00000000036b8b27: mov    %r13,(%rax,%r11,1)
  0x00000000036b8b2b: je     0x00000000036b8b7f  ;*ifnull
                                                ; - java.util.HashMap::putVal@7 (line 628)

  0x00000000036b8b31: mov    0xc(%rbx),%eax     ;*arraylength
                                                ; - java.util.HashMap::putVal@12 (line 628)
                                                ; implicit exception: dispatches to 0x00000000036b9b74
  0x00000000036b8b34: cmp    $0x0,%eax
  0x00000000036b8b37: movabs $0x1c696ca0,%r11   ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b8b41: movabs $0x128,%r13
  0x00000000036b8b4b: jne    0x00000000036b8b5b
  0x00000000036b8b51: movabs $0x138,%r13
  0x00000000036b8b5b: mov    (%r11,%r13,1),%r14
  0x00000000036b8b5f: lea    0x1(%r14),%r14
  0x00000000036b8b63: mov    %r14,(%r11,%r13,1)
  0x00000000036b8b67: je     0x00000000036b8b7f  ;*ifne
                                                ; - java.util.HashMap::putVal@16 (line 628)

  0x00000000036b8b6d: mov    %ecx,0x60(%rsp)
  0x00000000036b8b71: mov    %esi,0x44(%rsp)
  0x00000000036b8b75: mov    %rdi,0x58(%rsp)
  0x00000000036b8b7a: jmpq   0x00000000036b8c39  ;*aload
                                                ; - java.util.HashMap::putVal@29 (line 630)

  0x00000000036b8b7f: mov    %ecx,0x60(%rsp)
  0x00000000036b8b83: mov    %esi,0x44(%rsp)
  0x00000000036b8b87: mov    %rdi,0x58(%rsp)
  0x00000000036b8b8c: mov    %rdx,%rbx
  0x00000000036b8b8f: movabs $0x1c696ca0,%rax   ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b8b99: mov    0x8(%rbx),%ebx
  0x00000000036b8b9c: shl    $0x3,%rbx
  0x00000000036b8ba0: cmp    0x150(%rax),%rbx
  0x00000000036b8ba7: jne    0x00000000036b8bb6
  0x00000000036b8ba9: addq   $0x1,0x158(%rax)
  0x00000000036b8bb1: jmpq   0x00000000036b8c1c
  0x00000000036b8bb6: cmp    0x160(%rax),%rbx
  0x00000000036b8bbd: jne    0x00000000036b8bcc
  0x00000000036b8bbf: addq   $0x1,0x168(%rax)
  0x00000000036b8bc7: jmpq   0x00000000036b8c1c
  0x00000000036b8bcc: cmpq   $0x0,0x150(%rax)
  0x00000000036b8bd7: jne    0x00000000036b8bf0
  0x00000000036b8bd9: mov    %rbx,0x150(%rax)
  0x00000000036b8be0: movq   $0x1,0x158(%rax)
  0x00000000036b8beb: jmpq   0x00000000036b8c1c
  0x00000000036b8bf0: cmpq   $0x0,0x160(%rax)
  0x00000000036b8bfb: jne    0x00000000036b8c14
  0x00000000036b8bfd: mov    %rbx,0x160(%rax)
  0x00000000036b8c04: movq   $0x1,0x168(%rax)
  0x00000000036b8c0f: jmpq   0x00000000036b8c1c
  0x00000000036b8c14: addq   $0x1,0x148(%rax)
  0x00000000036b8c1c: mov    %rdx,%rbx
  0x00000000036b8c1f: mov    %rbx,%rdx          ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@20 (line 629)

  0x00000000036b8c22: nop
  0x00000000036b8c23: nop
  0x00000000036b8c24: nop
  0x00000000036b8c25: nop
  0x00000000036b8c26: nop
  0x00000000036b8c27: callq  0x00000000035d61a0  ; OopMap{[88]=Oop [80]=Oop [72]=Oop off=428}
                                                ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@20 (line 629)
                                                ;   {optimized virtual_call}
  0x00000000036b8c2c: mov    %rax,%r8           ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@20 (line 629)

  0x00000000036b8c2f: mov    0xc(%r8),%r9d      ;*arraylength
                                                ; - java.util.HashMap::putVal@26 (line 629)
                                                ; implicit exception: dispatches to 0x00000000036b9b79
  0x00000000036b8c33: mov    %r9,%rax
  0x00000000036b8c36: mov    %r8,%rbx           ;*aload
                                                ; - java.util.HashMap::putVal@29 (line 630)

  0x00000000036b8c39: dec    %eax
  0x00000000036b8c3b: and    0x40(%rsp),%eax
  0x00000000036b8c3f: movslq %eax,%r8
  0x00000000036b8c42: cmp    0xc(%rbx),%eax     ; implicit exception: dispatches to 0x00000000036b9b7e
  0x00000000036b8c45: jae    0x00000000036b9b88
  0x00000000036b8c4b: mov    0x10(%rbx,%r8,4),%esi
  0x00000000036b8c50: shl    $0x3,%rsi          ;*aaload
                                                ; - java.util.HashMap::putVal@40 (line 630)

  0x00000000036b8c54: cmp    $0x0,%rsi
  0x00000000036b8c58: movabs $0x1c696ca0,%r8    ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b8c62: movabs $0x178,%r9
  0x00000000036b8c6c: jne    0x00000000036b8c7c
  0x00000000036b8c72: movabs $0x188,%r9
  0x00000000036b8c7c: mov    (%r8,%r9,1),%rdi
  0x00000000036b8c80: lea    0x1(%rdi),%rdi
  0x00000000036b8c84: mov    %rdi,(%r8,%r9,1)
  0x00000000036b8c88: jne    0x00000000036b8eb4  ;*ifnonnull
                                                ; - java.util.HashMap::putVal@44 (line 630)

  0x00000000036b8c8e: mov    %eax,0x64(%rsp)
  0x00000000036b8c92: mov    %rbx,0x68(%rsp)
  0x00000000036b8c97: mov    0x48(%rsp),%rdx
  0x00000000036b8c9c: movabs $0x1c696ca0,%r8    ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b8ca6: mov    0x8(%rdx),%edx
  0x00000000036b8ca9: shl    $0x3,%rdx
  0x00000000036b8cad: cmp    0x1a0(%r8),%rdx
  0x00000000036b8cb4: jne    0x00000000036b8cc3
  0x00000000036b8cb6: addq   $0x1,0x1a8(%r8)
  0x00000000036b8cbe: jmpq   0x00000000036b8d29
  0x00000000036b8cc3: cmp    0x1b0(%r8),%rdx
  0x00000000036b8cca: jne    0x00000000036b8cd9
  0x00000000036b8ccc: addq   $0x1,0x1b8(%r8)
  0x00000000036b8cd4: jmpq   0x00000000036b8d29
  0x00000000036b8cd9: cmpq   $0x0,0x1a0(%r8)
  0x00000000036b8ce4: jne    0x00000000036b8cfd
  0x00000000036b8ce6: mov    %rdx,0x1a0(%r8)
  0x00000000036b8ced: movq   $0x1,0x1a8(%r8)
  0x00000000036b8cf8: jmpq   0x00000000036b8d29
  0x00000000036b8cfd: cmpq   $0x0,0x1b0(%r8)
  0x00000000036b8d08: jne    0x00000000036b8d21
  0x00000000036b8d0a: mov    %rdx,0x1b0(%r8)
  0x00000000036b8d11: movq   $0x1,0x1b8(%r8)
  0x00000000036b8d1c: jmpq   0x00000000036b8d29
  0x00000000036b8d21: addq   $0x1,0x198(%r8)
  0x00000000036b8d29: mov    0x40(%rsp),%r8d
  0x00000000036b8d2e: mov    0x50(%rsp),%r9
  0x00000000036b8d33: mov    0x58(%rsp),%rdi
  0x00000000036b8d38: movabs $0x0,%rsi          ;   {oop(NULL)}
  0x00000000036b8d42: mov    0x48(%rsp),%rdx    ;*invokevirtual newNode
                                                ; - java.util.HashMap::putVal@56 (line 631)

  0x00000000036b8d47: nop
  0x00000000036b8d48: nop
  0x00000000036b8d49: nop
  0x00000000036b8d4a: nop
  0x00000000036b8d4b: nop
  0x00000000036b8d4c: nop
  0x00000000036b8d4d: movabs $0xffffffffffffffff,%rax
  0x00000000036b8d57: callq  0x00000000035d63e0  ; OopMap{[72]=Oop [104]=Oop off=732}
                                                ;*invokevirtual newNode
                                                ; - java.util.HashMap::putVal@56 (line 631)
                                                ;   {virtual_call}
  0x00000000036b8d5c: mov    0x64(%rsp),%r8d
  0x00000000036b8d61: movslq %r8d,%rdx
  0x00000000036b8d64: mov    0x68(%rsp),%rbx
  0x00000000036b8d69: lea    0x10(%rbx,%rdx,4),%rdx
  0x00000000036b8d6e: cmp    0xc(%rbx),%r8d
  0x00000000036b8d72: jae    0x00000000036b9b91
  0x00000000036b8d78: cmp    $0x0,%rax
  0x00000000036b8d7c: jne    0x00000000036b8d97
  0x00000000036b8d7e: movabs $0x1c696ca0,%rsi   ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b8d88: orl    $0x100,0x1c0(%rsi)
  0x00000000036b8d92: jmpq   0x00000000036b8e81
  0x00000000036b8d97: mov    0x8(%rbx),%r8d     ; implicit exception: dispatches to 0x00000000036b9b9a
  0x00000000036b8d9b: shl    $0x3,%r8
  0x00000000036b8d9f: mov    0x8(%rax),%esi
  0x00000000036b8da2: shl    $0x3,%rsi
  0x00000000036b8da6: mov    0xf0(%r8),%r8
  0x00000000036b8dad: cmp    %r8,%rsi
  0x00000000036b8db0: je     0x00000000036b8de2
  0x00000000036b8db6: mov    0xc(%r8),%edi
  0x00000000036b8dba: cmp    (%rsi,%rdi,1),%r8
  0x00000000036b8dbe: je     0x00000000036b8de2
  0x00000000036b8dc4: cmp    $0x18,%edi
  0x00000000036b8dc7: jne    0x00000000036b8e6a
  0x00000000036b8dcd: push   %rsi
  0x00000000036b8dce: push   %r8
  0x00000000036b8dd0: callq  0x000000000368f960  ;   {runtime_call}
  0x00000000036b8dd5: pop    %rsi
  0x00000000036b8dd6: pop    %r8
  0x00000000036b8dd8: cmp    $0x0,%r8d
  0x00000000036b8ddc: je     0x00000000036b8e6a
  0x00000000036b8de2: movabs $0x1c696ca0,%rsi   ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b8dec: mov    0x8(%rax),%r8d
  0x00000000036b8df0: shl    $0x3,%r8
  0x00000000036b8df4: cmp    0x1d0(%rsi),%r8
  0x00000000036b8dfb: jne    0x00000000036b8e0a
  0x00000000036b8dfd: addq   $0x1,0x1d8(%rsi)
  0x00000000036b8e05: jmpq   0x00000000036b8e81
  0x00000000036b8e0a: cmp    0x1e0(%rsi),%r8
  0x00000000036b8e11: jne    0x00000000036b8e20
  0x00000000036b8e13: addq   $0x1,0x1e8(%rsi)
  0x00000000036b8e1b: jmpq   0x00000000036b8e81
  0x00000000036b8e20: cmpq   $0x0,0x1d0(%rsi)
  0x00000000036b8e2b: jne    0x00000000036b8e44
  0x00000000036b8e2d: mov    %r8,0x1d0(%rsi)
  0x00000000036b8e34: movq   $0x1,0x1d8(%rsi)
  0x00000000036b8e3f: jmpq   0x00000000036b8e81
  0x00000000036b8e44: cmpq   $0x0,0x1e0(%rsi)
  0x00000000036b8e4f: jne    0x00000000036b8e68
  0x00000000036b8e51: mov    %r8,0x1e0(%rsi)
  0x00000000036b8e58: movq   $0x1,0x1e8(%rsi)
  0x00000000036b8e63: jmpq   0x00000000036b8e81
  0x00000000036b8e68: jmp    0x00000000036b8e81
  0x00000000036b8e6a: movabs $0x1c696ca0,%rsi   ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b8e74: subq   $0x1,0x1c8(%rsi)
  0x00000000036b8e7c: jmpq   0x00000000036b9b9f
  0x00000000036b8e81: mov    %rax,%r10
  0x00000000036b8e84: shr    $0x3,%r10
  0x00000000036b8e88: mov    %r10d,(%rdx)
  0x00000000036b8e8b: shr    $0x9,%rdx
  0x00000000036b8e8f: movabs $0xf32f000,%r8
  0x00000000036b8e99: movb   $0x0,(%rdx,%r8,1)  ;*aastore
                                                ; - java.util.HashMap::putVal@59 (line 631)

  0x00000000036b8e9e: movabs $0x1c696ca0,%r8    ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b8ea8: incl   0x1f8(%r8)
  0x00000000036b8eaf: jmpq   0x00000000036b9828  ;*goto
                                                ; - java.util.HashMap::putVal@60 (line 631)

  0x00000000036b8eb4: mov    0xc(%rsi),%r8d     ;*getfield hash
                                                ; - java.util.HashMap::putVal@65 (line 634)
                                                ; implicit exception: dispatches to 0x00000000036b9ba8
  0x00000000036b8eb8: cmp    0x40(%rsp),%r8d
  0x00000000036b8ebd: movabs $0x1c696ca0,%r8    ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b8ec7: movabs $0x210,%rdx
  0x00000000036b8ed1: jne    0x00000000036b8ee1
  0x00000000036b8ed7: movabs $0x220,%rdx
  0x00000000036b8ee1: mov    (%r8,%rdx,1),%rdi
  0x00000000036b8ee5: lea    0x1(%rdi),%rdi
  0x00000000036b8ee9: mov    %rdi,(%r8,%rdx,1)
  0x00000000036b8eed: je     0x00000000036b8efd  ;*if_icmpne
                                                ; - java.util.HashMap::putVal@69 (line 634)

  0x00000000036b8ef3: mov    %rbx,0x68(%rsp)
  0x00000000036b8ef8: jmpq   0x00000000036b907a  ;*aload
                                                ; - java.util.HashMap::putVal@104 (line 637)

  0x00000000036b8efd: mov    0x50(%rsp),%r9
  0x00000000036b8f02: mov    0x10(%rsi),%r8d
  0x00000000036b8f06: shl    $0x3,%r8           ;*getfield key
                                                ; - java.util.HashMap::putVal@74 (line 634)

  0x00000000036b8f0a: cmp    %r9,%r8
  0x00000000036b8f0d: movabs $0x1c696ca0,%rdx   ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b8f17: movabs $0x230,%rdi
  0x00000000036b8f21: je     0x00000000036b8f31
  0x00000000036b8f27: movabs $0x240,%rdi
  0x00000000036b8f31: mov    (%rdx,%rdi,1),%rax
  0x00000000036b8f35: lea    0x1(%rax),%rax
  0x00000000036b8f39: mov    %rax,(%rdx,%rdi,1)
  0x00000000036b8f3d: je     0x00000000036b97da  ;*if_acmpeq
                                                ; - java.util.HashMap::putVal@81 (line 634)

  0x00000000036b8f43: cmp    $0x0,%r9
  0x00000000036b8f47: movabs $0x1c696ca0,%rdx   ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b8f51: movabs $0x250,%rdi
  0x00000000036b8f5b: je     0x00000000036b8f6b
  0x00000000036b8f61: movabs $0x260,%rdi
  0x00000000036b8f6b: mov    (%rdx,%rdi,1),%rax
  0x00000000036b8f6f: lea    0x1(%rax),%rax
  0x00000000036b8f73: mov    %rax,(%rdx,%rdi,1)
  0x00000000036b8f77: jne    0x00000000036b8f87  ;*ifnull
                                                ; - java.util.HashMap::putVal@85 (line 634)

  0x00000000036b8f7d: mov    %rbx,0x68(%rsp)
  0x00000000036b8f82: jmpq   0x00000000036b907a  ;*aload
                                                ; - java.util.HashMap::putVal@104 (line 637)

  0x00000000036b8f87: mov    %rsi,0x70(%rsp)
  0x00000000036b8f8c: mov    %rbx,0x68(%rsp)
  0x00000000036b8f91: cmp    (%r9),%rax         ; implicit exception: dispatches to 0x00000000036b9bad
  0x00000000036b8f94: mov    %r9,%rdx
  0x00000000036b8f97: movabs $0x1c696ca0,%rdi   ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b8fa1: mov    0x8(%rdx),%edx
  0x00000000036b8fa4: shl    $0x3,%rdx
  0x00000000036b8fa8: cmp    0x278(%rdi),%rdx
  0x00000000036b8faf: jne    0x00000000036b8fbe
  0x00000000036b8fb1: addq   $0x1,0x280(%rdi)
  0x00000000036b8fb9: jmpq   0x00000000036b9024
  0x00000000036b8fbe: cmp    0x288(%rdi),%rdx
  0x00000000036b8fc5: jne    0x00000000036b8fd4
  0x00000000036b8fc7: addq   $0x1,0x290(%rdi)
  0x00000000036b8fcf: jmpq   0x00000000036b9024
  0x00000000036b8fd4: cmpq   $0x0,0x278(%rdi)
  0x00000000036b8fdf: jne    0x00000000036b8ff8
  0x00000000036b8fe1: mov    %rdx,0x278(%rdi)
  0x00000000036b8fe8: movq   $0x1,0x280(%rdi)
  0x00000000036b8ff3: jmpq   0x00000000036b9024
  0x00000000036b8ff8: cmpq   $0x0,0x288(%rdi)
  0x00000000036b9003: jne    0x00000000036b901c
  0x00000000036b9005: mov    %rdx,0x288(%rdi)
  0x00000000036b900c: movq   $0x1,0x290(%rdi)
  0x00000000036b9017: jmpq   0x00000000036b9024
  0x00000000036b901c: addq   $0x1,0x270(%rdi)
  0x00000000036b9024: mov    %r9,%rdx           ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@91 (line 635)

  0x00000000036b9027: nop
  0x00000000036b9028: nop
  0x00000000036b9029: nop
  0x00000000036b902a: nop
  0x00000000036b902b: nop
  0x00000000036b902c: nop
  0x00000000036b902d: movabs $0xffffffffffffffff,%rax
  0x00000000036b9037: callq  0x00000000035d63e0  ; OopMap{[72]=Oop [88]=Oop [80]=Oop [112]=Oop [104]=Oop off=1468}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@91 (line 635)
                                                ;   {virtual_call}
  0x00000000036b903c: cmp    $0x0,%eax
  0x00000000036b903f: movabs $0x1c696ca0,%r8    ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b9049: movabs $0x2a0,%r9
  0x00000000036b9053: je     0x00000000036b9063
  0x00000000036b9059: movabs $0x2b0,%r9
  0x00000000036b9063: mov    (%r8,%r9,1),%rdi
  0x00000000036b9067: lea    0x1(%rdi),%rdi
  0x00000000036b906b: mov    %rdi,(%r8,%r9,1)
  0x00000000036b906f: mov    0x70(%rsp),%rsi
  0x00000000036b9074: jne    0x00000000036b97da  ;*ifeq
                                                ; - java.util.HashMap::putVal@94 (line 635)

  0x00000000036b907a: cmp    $0x0,%rsi
  0x00000000036b907e: jne    0x00000000036b9099
  0x00000000036b9080: movabs $0x1c696ca0,%rdi   ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b908a: orl    $0x100,0x2d0(%rdi)
  0x00000000036b9094: jmpq   0x00000000036b915a
  0x00000000036b9099: movabs $0x7c0039780,%rcx  ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x00000000036b90a3: mov    0x8(%rsi),%r9d
  0x00000000036b90a7: shl    $0x3,%r9
  0x00000000036b90ab: cmp    %r9,%rcx
  0x00000000036b90ae: jne    0x00000000036b913e
  0x00000000036b90b4: movabs $0x1c696ca0,%rdi   ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b90be: mov    0x8(%rsi),%ecx
  0x00000000036b90c1: shl    $0x3,%rcx
  0x00000000036b90c5: cmp    0x2e0(%rdi),%rcx
  0x00000000036b90cc: jne    0x00000000036b90db
  0x00000000036b90ce: addq   $0x1,0x2e8(%rdi)
  0x00000000036b90d6: jmpq   0x00000000036b915f
  0x00000000036b90db: cmp    0x2f0(%rdi),%rcx
  0x00000000036b90e2: jne    0x00000000036b90f1
  0x00000000036b90e4: addq   $0x1,0x2f8(%rdi)
  0x00000000036b90ec: jmpq   0x00000000036b915f
  0x00000000036b90f1: cmpq   $0x0,0x2e0(%rdi)
  0x00000000036b90fc: jne    0x00000000036b9115
  0x00000000036b90fe: mov    %rcx,0x2e0(%rdi)
  0x00000000036b9105: movq   $0x1,0x2e8(%rdi)
  0x00000000036b9110: jmpq   0x00000000036b915f
  0x00000000036b9115: cmpq   $0x0,0x2f0(%rdi)
  0x00000000036b9120: jne    0x00000000036b9139
  0x00000000036b9122: mov    %rcx,0x2f0(%rdi)
  0x00000000036b9129: movq   $0x1,0x2f8(%rdi)
  0x00000000036b9134: jmpq   0x00000000036b915f
  0x00000000036b9139: jmpq   0x00000000036b915f
  0x00000000036b913e: movabs $0x1c696ca0,%rdi   ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b9148: subq   $0x1,0x2d8(%rdi)
  0x00000000036b9150: jmpq   0x00000000036b915a
  0x00000000036b9155: jmpq   0x00000000036b915f
  0x00000000036b915a: xor    %r8,%r8
  0x00000000036b915d: jmp    0x00000000036b9169
  0x00000000036b915f: movabs $0x1,%r8           ;*instanceof
                                                ; - java.util.HashMap::putVal@106 (line 637)

  0x00000000036b9169: cmp    $0x0,%r8d
  0x00000000036b916d: movabs $0x1c696ca0,%r8    ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b9177: movabs $0x308,%r9
  0x00000000036b9181: je     0x00000000036b9191
  0x00000000036b9187: movabs $0x318,%r9
  0x00000000036b9191: mov    (%r8,%r9,1),%rdi
  0x00000000036b9195: lea    0x1(%rdi),%rdi
  0x00000000036b9199: mov    %rdi,(%r8,%r9,1)
  0x00000000036b919d: je     0x00000000036b9352  ;*ifeq
                                                ; - java.util.HashMap::putVal@109 (line 637)

  0x00000000036b91a3: cmp    $0x0,%rsi
  0x00000000036b91a7: jne    0x00000000036b91c3
  0x00000000036b91a9: movabs $0x1c696ca0,%r9    ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b91b3: orl    $0x100,0x320(%r9)
  0x00000000036b91be: jmpq   0x00000000036b9284
  0x00000000036b91c3: movabs $0x7c0039780,%rdi  ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x00000000036b91cd: mov    0x8(%rsi),%r8d
  0x00000000036b91d1: shl    $0x3,%r8
  0x00000000036b91d5: cmp    %r8,%rdi
  0x00000000036b91d8: jne    0x00000000036b9268
  0x00000000036b91de: movabs $0x1c696ca0,%r9    ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b91e8: mov    0x8(%rsi),%edi
  0x00000000036b91eb: shl    $0x3,%rdi
  0x00000000036b91ef: cmp    0x330(%r9),%rdi
  0x00000000036b91f6: jne    0x00000000036b9205
  0x00000000036b91f8: addq   $0x1,0x338(%r9)
  0x00000000036b9200: jmpq   0x00000000036b9284
  0x00000000036b9205: cmp    0x340(%r9),%rdi
  0x00000000036b920c: jne    0x00000000036b921b
  0x00000000036b920e: addq   $0x1,0x348(%r9)
  0x00000000036b9216: jmpq   0x00000000036b9284
  0x00000000036b921b: cmpq   $0x0,0x330(%r9)
  0x00000000036b9226: jne    0x00000000036b923f
  0x00000000036b9228: mov    %rdi,0x330(%r9)
  0x00000000036b922f: movq   $0x1,0x338(%r9)
  0x00000000036b923a: jmpq   0x00000000036b9284
  0x00000000036b923f: cmpq   $0x0,0x340(%r9)
  0x00000000036b924a: jne    0x00000000036b9263
  0x00000000036b924c: mov    %rdi,0x340(%r9)
  0x00000000036b9253: movq   $0x1,0x348(%r9)
  0x00000000036b925e: jmpq   0x00000000036b9284
  0x00000000036b9263: jmpq   0x00000000036b9284
  0x00000000036b9268: movabs $0x1c696ca0,%r9    ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b9272: subq   $0x1,0x328(%r9)
  0x00000000036b927a: jmpq   0x00000000036b9bb2
  0x00000000036b927f: jmpq   0x00000000036b9284
  0x00000000036b9284: mov    %rsi,%rdx          ;*checkcast
                                                ; - java.util.HashMap::putVal@114 (line 638)

  0x00000000036b9287: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x00000000036b9bbb
  0x00000000036b928a: mov    %rdx,%r8
  0x00000000036b928d: movabs $0x1c696ca0,%r9    ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b9297: mov    0x8(%r8),%r8d
  0x00000000036b929b: shl    $0x3,%r8
  0x00000000036b929f: cmp    0x360(%r9),%r8
  0x00000000036b92a6: jne    0x00000000036b92b5
  0x00000000036b92a8: addq   $0x1,0x368(%r9)
  0x00000000036b92b0: jmpq   0x00000000036b931b
  0x00000000036b92b5: cmp    0x370(%r9),%r8
  0x00000000036b92bc: jne    0x00000000036b92cb
  0x00000000036b92be: addq   $0x1,0x378(%r9)
  0x00000000036b92c6: jmpq   0x00000000036b931b
  0x00000000036b92cb: cmpq   $0x0,0x360(%r9)
  0x00000000036b92d6: jne    0x00000000036b92ef
  0x00000000036b92d8: mov    %r8,0x360(%r9)
  0x00000000036b92df: movq   $0x1,0x368(%r9)
  0x00000000036b92ea: jmpq   0x00000000036b931b
  0x00000000036b92ef: cmpq   $0x0,0x370(%r9)
  0x00000000036b92fa: jne    0x00000000036b9313
  0x00000000036b92fc: mov    %r8,0x370(%r9)
  0x00000000036b9303: movq   $0x1,0x378(%r9)
  0x00000000036b930e: jmpq   0x00000000036b931b
  0x00000000036b9313: addq   $0x1,0x358(%r9)
  0x00000000036b931b: mov    0x48(%rsp),%r8
  0x00000000036b9320: mov    0x68(%rsp),%r9
  0x00000000036b9325: mov    0x40(%rsp),%edi
  0x00000000036b9329: mov    0x50(%rsp),%rsi
  0x00000000036b932e: mov    0x58(%rsp),%rcx    ;*invokevirtual putTreeVal
                                                ; - java.util.HashMap::putVal@123 (line 638)

  0x00000000036b9333: nop
  0x00000000036b9334: nop
  0x00000000036b9335: nop
  0x00000000036b9336: nop
  0x00000000036b9337: callq  0x00000000035d61a0  ; OopMap{[72]=Oop [88]=Oop off=2236}
                                                ;*invokevirtual putTreeVal
                                                ; - java.util.HashMap::putVal@123 (line 638)
                                                ;   {optimized virtual_call}
  0x00000000036b933c: movabs $0x1c696ca0,%r8    ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b9346: incl   0x388(%r8)
  0x00000000036b934d: jmpq   0x00000000036b97ee  ;*goto
                                                ; - java.util.HashMap::putVal@128 (line 638)

  0x00000000036b9352: mov    $0x0,%edi          ;*aload
                                                ; - java.util.HashMap::putVal@134 (line 641)

  0x00000000036b9357: nop
  0x00000000036b9358: mov    %edi,0x78(%rsp)
  0x00000000036b935c: mov    0x50(%rsp),%r9
  0x00000000036b9361: mov    0x40(%rsp),%r8d
  0x00000000036b9366: mov    0x18(%rsi),%ebx    ; implicit exception: dispatches to 0x00000000036b9bc0
  0x00000000036b9369: shl    $0x3,%rbx          ;*getfield next
                                                ; - java.util.HashMap::putVal@136 (line 641)

  0x00000000036b936d: mov    %rbx,0x80(%rsp)
  0x00000000036b9375: cmp    $0x0,%rbx
  0x00000000036b9379: movabs $0x1c696ca0,%rdx   ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b9383: movabs $0x3a0,%rax
  0x00000000036b938d: jne    0x00000000036b939d
  0x00000000036b9393: movabs $0x3b0,%rax
  0x00000000036b939d: mov    (%rdx,%rax,1),%rcx
  0x00000000036b93a1: lea    0x1(%rcx),%rcx
  0x00000000036b93a5: mov    %rcx,(%rdx,%rax,1)
  0x00000000036b93a9: je     0x00000000036b95d9  ;*ifnonnull
                                                ; - java.util.HashMap::putVal@142 (line 641)

  0x00000000036b93af: mov    0xc(%rbx),%edx     ;*getfield hash
                                                ; - java.util.HashMap::putVal@177 (line 647)
                                                ; implicit exception: dispatches to 0x00000000036b9bc5
  0x00000000036b93b2: cmp    %r8d,%edx
  0x00000000036b93b5: movabs $0x1c696ca0,%rdx   ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b93bf: movabs $0x458,%rsi
  0x00000000036b93c9: jne    0x00000000036b93d9
  0x00000000036b93cf: movabs $0x468,%rsi
  0x00000000036b93d9: mov    (%rdx,%rsi,1),%rax
  0x00000000036b93dd: lea    0x1(%rax),%rax
  0x00000000036b93e1: mov    %rax,(%rdx,%rsi,1)
  0x00000000036b93e5: jne    0x00000000036b954d  ;*if_icmpne
                                                ; - java.util.HashMap::putVal@181 (line 647)

  0x00000000036b93eb: mov    0x10(%rbx),%edx
  0x00000000036b93ee: shl    $0x3,%rdx          ;*getfield key
                                                ; - java.util.HashMap::putVal@186 (line 647)

  0x00000000036b93f2: cmp    %r9,%rdx
  0x00000000036b93f5: movabs $0x1c696ca0,%rsi   ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b93ff: movabs $0x478,%rax
  0x00000000036b9409: je     0x00000000036b9419
  0x00000000036b940f: movabs $0x488,%rax
  0x00000000036b9419: mov    (%rsi,%rax,1),%rcx
  0x00000000036b941d: lea    0x1(%rcx),%rcx
  0x00000000036b9421: mov    %rcx,(%rsi,%rax,1)
  0x00000000036b9425: je     0x00000000036b95ae  ;*if_acmpeq
                                                ; - java.util.HashMap::putVal@193 (line 647)

  0x00000000036b942b: cmp    $0x0,%r9
  0x00000000036b942f: movabs $0x1c696ca0,%rsi   ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b9439: movabs $0x498,%rax
  0x00000000036b9443: je     0x00000000036b9453
  0x00000000036b9449: movabs $0x4a8,%rax
  0x00000000036b9453: mov    (%rsi,%rax,1),%rcx
  0x00000000036b9457: lea    0x1(%rcx),%rcx
  0x00000000036b945b: mov    %rcx,(%rsi,%rax,1)
  0x00000000036b945f: je     0x00000000036b954d  ;*ifnull
                                                ; - java.util.HashMap::putVal@197 (line 647)

  0x00000000036b9465: cmp    (%r9),%rax         ; implicit exception: dispatches to 0x00000000036b9bca
  0x00000000036b9468: mov    %r9,%rsi
  0x00000000036b946b: movabs $0x1c696ca0,%rax   ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b9475: mov    0x8(%rsi),%esi
  0x00000000036b9478: shl    $0x3,%rsi
  0x00000000036b947c: cmp    0x4c0(%rax),%rsi
  0x00000000036b9483: jne    0x00000000036b9492
  0x00000000036b9485: addq   $0x1,0x4c8(%rax)
  0x00000000036b948d: jmpq   0x00000000036b94f8
  0x00000000036b9492: cmp    0x4d0(%rax),%rsi
  0x00000000036b9499: jne    0x00000000036b94a8
  0x00000000036b949b: addq   $0x1,0x4d8(%rax)
  0x00000000036b94a3: jmpq   0x00000000036b94f8
  0x00000000036b94a8: cmpq   $0x0,0x4c0(%rax)
  0x00000000036b94b3: jne    0x00000000036b94cc
  0x00000000036b94b5: mov    %rsi,0x4c0(%rax)
  0x00000000036b94bc: movq   $0x1,0x4c8(%rax)
  0x00000000036b94c7: jmpq   0x00000000036b94f8
  0x00000000036b94cc: cmpq   $0x0,0x4d0(%rax)
  0x00000000036b94d7: jne    0x00000000036b94f0
  0x00000000036b94d9: mov    %rsi,0x4d0(%rax)
  0x00000000036b94e0: movq   $0x1,0x4d8(%rax)
  0x00000000036b94eb: jmpq   0x00000000036b94f8
  0x00000000036b94f0: addq   $0x1,0x4b8(%rax)
  0x00000000036b94f8: mov    %rdx,%r8
  0x00000000036b94fb: mov    %r9,%rdx           ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@203 (line 648)

  0x00000000036b94fe: nop
  0x00000000036b94ff: nop
  0x00000000036b9500: nop
  0x00000000036b9501: nop
  0x00000000036b9502: nop
  0x00000000036b9503: nop
  0x00000000036b9504: nop
  0x00000000036b9505: movabs $0xffffffffffffffff,%rax
  0x00000000036b950f: callq  0x00000000035d63e0  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop off=2708}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@203 (line 648)
                                                ;   {virtual_call}
  0x00000000036b9514: cmp    $0x0,%eax
  0x00000000036b9517: movabs $0x1c696ca0,%r8    ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b9521: movabs $0x4e8,%r9
  0x00000000036b952b: je     0x00000000036b953b
  0x00000000036b9531: movabs $0x4f8,%r9
  0x00000000036b953b: mov    (%r8,%r9,1),%rdi
  0x00000000036b953f: lea    0x1(%rdi),%rdi
  0x00000000036b9543: mov    %rdi,(%r8,%r9,1)
  0x00000000036b9547: jne    0x00000000036b95bb  ;*ifeq
                                                ; - java.util.HashMap::putVal@206 (line 648)

  0x00000000036b954d: mov    0x78(%rsp),%edi
  0x00000000036b9551: inc    %edi
  0x00000000036b9553: movabs $0x1c696ca0,%r8    ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b955d: mov    0xe0(%r8),%r9d
  0x00000000036b9564: add    $0x8,%r9d
  0x00000000036b9568: mov    %r9d,0xe0(%r8)
  0x00000000036b956f: movabs $0x1c578a38,%r8    ;   {metadata({method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b9579: and    $0xfff8,%r9d
  0x00000000036b9580: cmp    $0x0,%r9d
  0x00000000036b9584: je     0x00000000036b9bcf  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop off=2826}
                                                ;*goto
                                                ; - java.util.HashMap::putVal@219 (line 640)

  0x00000000036b958a: test   %eax,-0x20c9490(%rip)        # 0x00000000015f0100
                                                ;   {poll}
  0x00000000036b9590: movabs $0x1c696ca0,%r8    ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b959a: incl   0x520(%r8)
  0x00000000036b95a1: mov    0x80(%rsp),%rsi
  0x00000000036b95a9: jmpq   0x00000000036b9358  ;*goto
                                                ; - java.util.HashMap::putVal@219 (line 640)

  0x00000000036b95ae: mov    0x80(%rsp),%rax
  0x00000000036b95b6: jmpq   0x00000000036b97ee  ;*aload
                                                ; - java.util.HashMap::putVal@222 (line 653)

  0x00000000036b95bb: movabs $0x1c696ca0,%r8    ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b95c5: incl   0x508(%r8)
  0x00000000036b95cc: mov    0x80(%rsp),%rax
  0x00000000036b95d4: jmpq   0x00000000036b97ee  ;*goto
                                                ; - java.util.HashMap::putVal@209 (line 649)

  0x00000000036b95d9: mov    %rsi,0x88(%rsp)
  0x00000000036b95e1: mov    0x48(%rsp),%rdx
  0x00000000036b95e6: movabs $0x1c696ca0,%r8    ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b95f0: mov    0x8(%rdx),%edx
  0x00000000036b95f3: shl    $0x3,%rdx
  0x00000000036b95f7: cmp    0x3c8(%r8),%rdx
  0x00000000036b95fe: jne    0x00000000036b960d
  0x00000000036b9600: addq   $0x1,0x3d0(%r8)
  0x00000000036b9608: jmpq   0x00000000036b9673
  0x00000000036b960d: cmp    0x3d8(%r8),%rdx
  0x00000000036b9614: jne    0x00000000036b9623
  0x00000000036b9616: addq   $0x1,0x3e0(%r8)
  0x00000000036b961e: jmpq   0x00000000036b9673
  0x00000000036b9623: cmpq   $0x0,0x3c8(%r8)
  0x00000000036b962e: jne    0x00000000036b9647
  0x00000000036b9630: mov    %rdx,0x3c8(%r8)
  0x00000000036b9637: movq   $0x1,0x3d0(%r8)
  0x00000000036b9642: jmpq   0x00000000036b9673
  0x00000000036b9647: cmpq   $0x0,0x3d8(%r8)
  0x00000000036b9652: jne    0x00000000036b966b
  0x00000000036b9654: mov    %rdx,0x3d8(%r8)
  0x00000000036b965b: movq   $0x1,0x3e0(%r8)
  0x00000000036b9666: jmpq   0x00000000036b9673
  0x00000000036b966b: addq   $0x1,0x3c0(%r8)
  0x00000000036b9673: mov    0x40(%rsp),%r8d
  0x00000000036b9678: mov    0x58(%rsp),%rdi
  0x00000000036b967d: movabs $0x0,%rsi          ;   {oop(NULL)}
  0x00000000036b9687: mov    0x48(%rsp),%rdx    ;*invokevirtual newNode
                                                ; - java.util.HashMap::putVal@152 (line 642)

  0x00000000036b968c: nop
  0x00000000036b968d: movabs $0xffffffffffffffff,%rax
  0x00000000036b9697: callq  0x00000000035d63e0  ; OopMap{[72]=Oop [88]=Oop [128]=Oop [104]=Oop [136]=Oop off=3100}
                                                ;*invokevirtual newNode
                                                ; - java.util.HashMap::putVal@152 (line 642)
                                                ;   {virtual_call}
  0x00000000036b969c: mov    0x88(%rsp),%rsi
  0x00000000036b96a4: mov    %rax,%r10
  0x00000000036b96a7: shr    $0x3,%r10
  0x00000000036b96ab: mov    %r10d,0x18(%rsi)
  0x00000000036b96af: shr    $0x9,%rsi
  0x00000000036b96b3: movabs $0xf32f000,%r8
  0x00000000036b96bd: movb   $0x0,(%rsi,%r8,1)  ;*putfield next
                                                ; - java.util.HashMap::putVal@155 (line 642)

  0x00000000036b96c2: mov    0x78(%rsp),%edi
  0x00000000036b96c6: cmp    $0x7,%edi
  0x00000000036b96c9: movabs $0x1c696ca0,%r8    ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b96d3: movabs $0x3f0,%r9
  0x00000000036b96dd: jl     0x00000000036b96ed
  0x00000000036b96e3: movabs $0x400,%r9
  0x00000000036b96ed: mov    (%r8,%r9,1),%rdx
  0x00000000036b96f1: lea    0x1(%rdx),%rdx
  0x00000000036b96f5: mov    %rdx,(%r8,%r9,1)
  0x00000000036b96f9: jge    0x00000000036b970c  ;*if_icmplt
                                                ; - java.util.HashMap::putVal@162 (line 643)

  0x00000000036b96ff: mov    0x80(%rsp),%rax
  0x00000000036b9707: jmpq   0x00000000036b97ee  ;*aload
                                                ; - java.util.HashMap::putVal@222 (line 653)

  0x00000000036b970c: mov    0x68(%rsp),%rbx
  0x00000000036b9711: mov    0x40(%rsp),%r9d
  0x00000000036b9716: mov    0x48(%rsp),%rdx
  0x00000000036b971b: movabs $0x1c696ca0,%r8    ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b9725: mov    0x8(%rdx),%edx
  0x00000000036b9728: shl    $0x3,%rdx
  0x00000000036b972c: cmp    0x418(%r8),%rdx
  0x00000000036b9733: jne    0x00000000036b9742
  0x00000000036b9735: addq   $0x1,0x420(%r8)
  0x00000000036b973d: jmpq   0x00000000036b97a8
  0x00000000036b9742: cmp    0x428(%r8),%rdx
  0x00000000036b9749: jne    0x00000000036b9758
  0x00000000036b974b: addq   $0x1,0x430(%r8)
  0x00000000036b9753: jmpq   0x00000000036b97a8
  0x00000000036b9758: cmpq   $0x0,0x418(%r8)
  0x00000000036b9763: jne    0x00000000036b977c
  0x00000000036b9765: mov    %rdx,0x418(%r8)
  0x00000000036b976c: movq   $0x1,0x420(%r8)
  0x00000000036b9777: jmpq   0x00000000036b97a8
  0x00000000036b977c: cmpq   $0x0,0x428(%r8)
  0x00000000036b9787: jne    0x00000000036b97a0
  0x00000000036b9789: mov    %rdx,0x428(%r8)
  0x00000000036b9790: movq   $0x1,0x430(%r8)
  0x00000000036b979b: jmpq   0x00000000036b97a8
  0x00000000036b97a0: addq   $0x1,0x410(%r8)
  0x00000000036b97a8: mov    %rbx,%r8
  0x00000000036b97ab: mov    0x48(%rsp),%rdx    ;*invokevirtual treeifyBin
                                                ; - java.util.HashMap::putVal@169 (line 644)

  0x00000000036b97b0: nop
  0x00000000036b97b1: nop
  0x00000000036b97b2: nop
  0x00000000036b97b3: nop
  0x00000000036b97b4: nop
  0x00000000036b97b5: nop
  0x00000000036b97b6: nop
  0x00000000036b97b7: callq  0x00000000035d61a0  ; OopMap{[72]=Oop [88]=Oop [128]=Oop off=3388}
                                                ;*invokevirtual treeifyBin
                                                ; - java.util.HashMap::putVal@169 (line 644)
                                                ;   {optimized virtual_call}
  0x00000000036b97bc: movabs $0x1c696ca0,%r8    ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b97c6: incl   0x440(%r8)
  0x00000000036b97cd: mov    0x80(%rsp),%rax
  0x00000000036b97d5: jmpq   0x00000000036b97ee  ;*goto
                                                ; - java.util.HashMap::putVal@172 (line 644)

  0x00000000036b97da: movabs $0x1c696ca0,%r8    ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b97e4: incl   0x2c0(%r8)
  0x00000000036b97eb: mov    %rsi,%rax          ;*goto
                                                ; - java.util.HashMap::putVal@101 (line 636)

  0x00000000036b97ee: cmp    $0x0,%rax
  0x00000000036b97f2: movabs $0x1c696ca0,%r8    ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b97fc: movabs $0x538,%rdx
  0x00000000036b9806: je     0x00000000036b9816
  0x00000000036b980c: movabs $0x548,%rdx
  0x00000000036b9816: mov    (%r8,%rdx,1),%rsi
  0x00000000036b981a: lea    0x1(%rsi),%rsi
  0x00000000036b981e: mov    %rsi,(%r8,%rdx,1)
  0x00000000036b9822: jne    0x00000000036b9888  ;*ifnull
                                                ; - java.util.HashMap::putVal@224 (line 653)

  0x00000000036b9828: mov    0x48(%rsp),%rdx
  0x00000000036b982d: mov    0x18(%rdx),%r8d    ;*getfield modCount
                                                ; - java.util.HashMap::putVal@261 (line 661)

  0x00000000036b9831: inc    %r8d
  0x00000000036b9834: mov    %r8d,0x18(%rdx)    ;*putfield modCount
                                                ; - java.util.HashMap::putVal@266 (line 661)

  0x00000000036b9838: mov    0x14(%rdx),%r8d    ;*getfield size
                                                ; - java.util.HashMap::putVal@271 (line 662)

  0x00000000036b983c: inc    %r8d
  0x00000000036b983f: mov    %r8d,0x14(%rdx)    ;*putfield size
                                                ; - java.util.HashMap::putVal@277 (line 662)

  0x00000000036b9843: mov    0x1c(%rdx),%esi    ;*getfield threshold
                                                ; - java.util.HashMap::putVal@281 (line 662)

  0x00000000036b9846: cmp    %esi,%r8d
  0x00000000036b9849: movabs $0x1c696ca0,%r8    ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b9853: movabs $0x5c8,%rsi
  0x00000000036b985d: jle    0x00000000036b986d
  0x00000000036b9863: movabs $0x5d8,%rsi
  0x00000000036b986d: mov    (%r8,%rsi,1),%rdi
  0x00000000036b9871: lea    0x1(%rdi),%rdi
  0x00000000036b9875: mov    %rdi,(%r8,%rsi,1)
  0x00000000036b9879: jg     0x00000000036b99f3  ;*if_icmple
                                                ; - java.util.HashMap::putVal@284 (line 662)

  0x00000000036b987f: mov    0x60(%rsp),%ecx
  0x00000000036b9883: jmpq   0x00000000036b9a9d  ;*aload_0
                                                ; - java.util.HashMap::putVal@292 (line 664)

  0x00000000036b9888: mov    0x44(%rsp),%esi
  0x00000000036b988c: mov    0x48(%rsp),%rdx
  0x00000000036b9891: mov    0x14(%rax),%edi    ; implicit exception: dispatches to 0x00000000036b9be6
  0x00000000036b9894: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.util.HashMap::putVal@229 (line 654)

  0x00000000036b9898: cmp    $0x0,%esi
  0x00000000036b989b: movabs $0x1c696ca0,%r8    ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b98a5: movabs $0x558,%rsi
  0x00000000036b98af: je     0x00000000036b98bf
  0x00000000036b98b5: movabs $0x568,%rsi
  0x00000000036b98bf: mov    (%r8,%rsi,1),%rbx
  0x00000000036b98c3: lea    0x1(%rbx),%rbx
  0x00000000036b98c7: mov    %rbx,(%r8,%rsi,1)
  0x00000000036b98cb: je     0x00000000036b990b  ;*ifeq
                                                ; - java.util.HashMap::putVal@236 (line 655)

  0x00000000036b98d1: cmp    $0x0,%rdi
  0x00000000036b98d5: movabs $0x1c696ca0,%r8    ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b98df: movabs $0x578,%rsi
  0x00000000036b98e9: jne    0x00000000036b98f9
  0x00000000036b98ef: movabs $0x588,%rsi
  0x00000000036b98f9: mov    (%r8,%rsi,1),%rbx
  0x00000000036b98fd: lea    0x1(%rbx),%rbx
  0x00000000036b9901: mov    %rbx,(%r8,%rsi,1)
  0x00000000036b9905: jne    0x00000000036b9931  ;*ifnonnull
                                                ; - java.util.HashMap::putVal@241 (line 655)

  0x00000000036b990b: mov    0x58(%rsp),%r8
  0x00000000036b9910: mov    %r8,%r10
  0x00000000036b9913: shr    $0x3,%r10
  0x00000000036b9917: mov    %r10d,0x14(%rax)
  0x00000000036b991b: mov    %rax,%r8
  0x00000000036b991e: shr    $0x9,%r8
  0x00000000036b9922: movabs $0xf32f000,%rsi
  0x00000000036b992c: movb   $0x0,(%r8,%rsi,1)  ;*putfield value
                                                ; - java.util.HashMap::putVal@247 (line 656)

  0x00000000036b9931: mov    %rdi,0x90(%rsp)
  0x00000000036b9939: mov    %rdx,%r8
  0x00000000036b993c: movabs $0x1c696ca0,%rsi   ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b9946: mov    0x8(%r8),%r8d
  0x00000000036b994a: shl    $0x3,%r8
  0x00000000036b994e: cmp    0x5a0(%rsi),%r8
  0x00000000036b9955: jne    0x00000000036b9964
  0x00000000036b9957: addq   $0x1,0x5a8(%rsi)
  0x00000000036b995f: jmpq   0x00000000036b99ca
  0x00000000036b9964: cmp    0x5b0(%rsi),%r8
  0x00000000036b996b: jne    0x00000000036b997a
  0x00000000036b996d: addq   $0x1,0x5b8(%rsi)
  0x00000000036b9975: jmpq   0x00000000036b99ca
  0x00000000036b997a: cmpq   $0x0,0x5a0(%rsi)
  0x00000000036b9985: jne    0x00000000036b999e
  0x00000000036b9987: mov    %r8,0x5a0(%rsi)
  0x00000000036b998e: movq   $0x1,0x5a8(%rsi)
  0x00000000036b9999: jmpq   0x00000000036b99ca
  0x00000000036b999e: cmpq   $0x0,0x5b0(%rsi)
  0x00000000036b99a9: jne    0x00000000036b99c2
  0x00000000036b99ab: mov    %r8,0x5b0(%rsi)
  0x00000000036b99b2: movq   $0x1,0x5b8(%rsi)
  0x00000000036b99bd: jmpq   0x00000000036b99ca
  0x00000000036b99c2: addq   $0x1,0x598(%rsi)
  0x00000000036b99ca: mov    %rax,%r8           ;*invokevirtual afterNodeAccess
                                                ; - java.util.HashMap::putVal@253 (line 657)

  0x00000000036b99cd: movabs $0xffffffffffffffff,%rax
  0x00000000036b99d7: callq  0x00000000035d63e0  ; OopMap{[144]=Oop off=3932}
                                                ;*invokevirtual afterNodeAccess
                                                ; - java.util.HashMap::putVal@253 (line 657)
                                                ;   {virtual_call}
  0x00000000036b99dc: mov    0x90(%rsp),%rax
  0x00000000036b99e4: add    $0xa0,%rsp
  0x00000000036b99eb: pop    %rbp
  0x00000000036b99ec: test   %eax,-0x20c98f2(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036b99f2: retq                      ;*areturn
                                                ; - java.util.HashMap::putVal@258 (line 658)

  0x00000000036b99f3: mov    %rdx,%rsi
  0x00000000036b99f6: movabs $0x1c696ca0,%rdi   ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b9a00: mov    0x8(%rsi),%esi
  0x00000000036b9a03: shl    $0x3,%rsi
  0x00000000036b9a07: cmp    0x5f0(%rdi),%rsi
  0x00000000036b9a0e: jne    0x00000000036b9a1d
  0x00000000036b9a10: addq   $0x1,0x5f8(%rdi)
  0x00000000036b9a18: jmpq   0x00000000036b9a83
  0x00000000036b9a1d: cmp    0x600(%rdi),%rsi
  0x00000000036b9a24: jne    0x00000000036b9a33
  0x00000000036b9a26: addq   $0x1,0x608(%rdi)
  0x00000000036b9a2e: jmpq   0x00000000036b9a83
  0x00000000036b9a33: cmpq   $0x0,0x5f0(%rdi)
  0x00000000036b9a3e: jne    0x00000000036b9a57
  0x00000000036b9a40: mov    %rsi,0x5f0(%rdi)
  0x00000000036b9a47: movq   $0x1,0x5f8(%rdi)
  0x00000000036b9a52: jmpq   0x00000000036b9a83
  0x00000000036b9a57: cmpq   $0x0,0x600(%rdi)
  0x00000000036b9a62: jne    0x00000000036b9a7b
  0x00000000036b9a64: mov    %rsi,0x600(%rdi)
  0x00000000036b9a6b: movq   $0x1,0x608(%rdi)
  0x00000000036b9a76: jmpq   0x00000000036b9a83
  0x00000000036b9a7b: addq   $0x1,0x5e8(%rdi)
  0x00000000036b9a83: mov    %rdx,%rsi
  0x00000000036b9a86: mov    %rsi,%rdx          ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@288 (line 663)

  0x00000000036b9a89: nop
  0x00000000036b9a8a: nop
  0x00000000036b9a8b: nop
  0x00000000036b9a8c: nop
  0x00000000036b9a8d: nop
  0x00000000036b9a8e: nop
  0x00000000036b9a8f: callq  0x00000000035d61a0  ; OopMap{[72]=Oop off=4116}
                                                ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@288 (line 663)
                                                ;   {optimized virtual_call}
  0x00000000036b9a94: mov    0x60(%rsp),%ecx
  0x00000000036b9a98: mov    0x48(%rsp),%rdx
  0x00000000036b9a9d: mov    %rdx,%r8
  0x00000000036b9aa0: movabs $0x1c696ca0,%rsi   ;   {metadata(method data for {method} {0x000000001c578a40} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036b9aaa: mov    0x8(%r8),%r8d
  0x00000000036b9aae: shl    $0x3,%r8
  0x00000000036b9ab2: cmp    0x620(%rsi),%r8
  0x00000000036b9ab9: jne    0x00000000036b9ac8
  0x00000000036b9abb: addq   $0x1,0x628(%rsi)
  0x00000000036b9ac3: jmpq   0x00000000036b9b2e
  0x00000000036b9ac8: cmp    0x630(%rsi),%r8
  0x00000000036b9acf: jne    0x00000000036b9ade
  0x00000000036b9ad1: addq   $0x1,0x638(%rsi)
  0x00000000036b9ad9: jmpq   0x00000000036b9b2e
  0x00000000036b9ade: cmpq   $0x0,0x620(%rsi)
  0x00000000036b9ae9: jne    0x00000000036b9b02
  0x00000000036b9aeb: mov    %r8,0x620(%rsi)
  0x00000000036b9af2: movq   $0x1,0x628(%rsi)
  0x00000000036b9afd: jmpq   0x00000000036b9b2e
  0x00000000036b9b02: cmpq   $0x0,0x630(%rsi)
  0x00000000036b9b0d: jne    0x00000000036b9b26
  0x00000000036b9b0f: mov    %r8,0x630(%rsi)
  0x00000000036b9b16: movq   $0x1,0x638(%rsi)
  0x00000000036b9b21: jmpq   0x00000000036b9b2e
  0x00000000036b9b26: addq   $0x1,0x618(%rsi)
  0x00000000036b9b2e: mov    %rcx,%r8           ;*invokevirtual afterNodeInsertion
                                                ; - java.util.HashMap::putVal@295 (line 664)

  0x00000000036b9b31: nop
  0x00000000036b9b32: nop
  0x00000000036b9b33: nop
  0x00000000036b9b34: nop
  0x00000000036b9b35: movabs $0xffffffffffffffff,%rax
  0x00000000036b9b3f: callq  0x00000000035d63e0  ; OopMap{off=4292}
                                                ;*invokevirtual afterNodeInsertion
                                                ; - java.util.HashMap::putVal@295 (line 664)
                                                ;   {virtual_call}
  0x00000000036b9b44: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00000000036b9b4e: add    $0xa0,%rsp
  0x00000000036b9b55: pop    %rbp
  0x00000000036b9b56: test   %eax,-0x20c9a5c(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036b9b5c: retq   
  0x00000000036b9b5d: mov    %rbx,0x8(%rsp)
  0x00000000036b9b62: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036b9b6a: callq  0x00000000036919e0  ; OopMap{rdx=Oop [72]=Oop r9=Oop [80]=Oop rdi=Oop off=4335}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::putVal@-1 (line 628)
                                                ;   {runtime_call}
  0x00000000036b9b6f: jmpq   0x00000000036b8af0
  0x00000000036b9b74: callq  0x000000000368d080  ; OopMap{rdx=Oop [72]=Oop r9=Oop [80]=Oop rdi=Oop rbx=Oop off=4345}
                                                ;*arraylength
                                                ; - java.util.HashMap::putVal@12 (line 628)
                                                ;   {runtime_call}
  0x00000000036b9b79: callq  0x000000000368d080  ; OopMap{[88]=Oop [80]=Oop [72]=Oop r8=Oop off=4350}
                                                ;*arraylength
                                                ; - java.util.HashMap::putVal@26 (line 629)
                                                ;   {runtime_call}
  0x00000000036b9b7e: callq  0x000000000368d080  ; OopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop off=4355}
                                                ;*aaload
                                                ; - java.util.HashMap::putVal@40 (line 630)
                                                ;   {runtime_call}
  0x00000000036b9b83: callq  0x000000000368d080  ; OopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop off=4360}
                                                ;*aaload
                                                ; - java.util.HashMap::putVal@40 (line 630)
                                                ;   {runtime_call}
  0x00000000036b9b88: mov    %rax,(%rsp)
  0x00000000036b9b8c: callq  0x000000000368c9c0  ; OopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop off=4369}
                                                ;*aaload
                                                ; - java.util.HashMap::putVal@40 (line 630)
                                                ;   {runtime_call}
  0x00000000036b9b91: mov    %r8,(%rsp)
  0x00000000036b9b95: callq  0x000000000368c9c0  ; OopMap{[72]=Oop rax=Oop rbx=Oop off=4378}
                                                ;*aastore
                                                ; - java.util.HashMap::putVal@59 (line 631)
                                                ;   {runtime_call}
  0x00000000036b9b9a: callq  0x000000000368d080  ; OopMap{[72]=Oop rax=Oop off=4383}
                                                ;*aastore
                                                ; - java.util.HashMap::putVal@59 (line 631)
                                                ;   {runtime_call}
  0x00000000036b9b9f: mov    %rax,(%rsp)
  0x00000000036b9ba3: callq  0x000000000368f2c0  ; OopMap{[72]=Oop rax=Oop off=4392}
                                                ;*aastore
                                                ; - java.util.HashMap::putVal@59 (line 631)
                                                ;   {runtime_call}
  0x00000000036b9ba8: callq  0x000000000368d080  ; OopMap{[72]=Oop rsi=Oop [88]=Oop [80]=Oop rbx=Oop off=4397}
                                                ;*getfield hash
                                                ; - java.util.HashMap::putVal@65 (line 634)
                                                ;   {runtime_call}
  0x00000000036b9bad: callq  0x000000000368d080  ; OopMap{[72]=Oop [88]=Oop r9=Oop [80]=Oop [104]=Oop [112]=Oop r8=Oop off=4402}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@91 (line 635)
                                                ;   {runtime_call}
  0x00000000036b9bb2: mov    %rsi,(%rsp)
  0x00000000036b9bb6: callq  0x000000000368f500  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop off=4411}
                                                ;*checkcast
                                                ; - java.util.HashMap::putVal@114 (line 638)
                                                ;   {runtime_call}
  0x00000000036b9bbb: callq  0x000000000368d080  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop rdx=Oop off=4416}
                                                ;*invokevirtual putTreeVal
                                                ; - java.util.HashMap::putVal@123 (line 638)
                                                ;   {runtime_call}
  0x00000000036b9bc0: callq  0x000000000368d080  ; OopMap{[72]=Oop [88]=Oop [104]=Oop rsi=Oop r9=Oop [80]=Oop off=4421}
                                                ;*getfield next
                                                ; - java.util.HashMap::putVal@136 (line 641)
                                                ;   {runtime_call}
  0x00000000036b9bc5: callq  0x000000000368d080  ; OopMap{[72]=Oop [88]=Oop [104]=Oop r9=Oop [80]=Oop rbx=Oop [128]=Oop off=4426}
                                                ;*getfield hash
                                                ; - java.util.HashMap::putVal@177 (line 647)
                                                ;   {runtime_call}
  0x00000000036b9bca: callq  0x000000000368d080  ; OopMap{[72]=Oop [88]=Oop [104]=Oop r9=Oop [80]=Oop [128]=Oop rdx=Oop off=4431}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@203 (line 648)
                                                ;   {runtime_call}
  0x00000000036b9bcf: mov    %r8,0x8(%rsp)
  0x00000000036b9bd4: movq   $0xdb,(%rsp)
  0x00000000036b9bdc: callq  0x00000000036919e0  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop off=4449}
                                                ;*goto
                                                ; - java.util.HashMap::putVal@219 (line 640)
                                                ;   {runtime_call}
  0x00000000036b9be1: jmpq   0x00000000036b958a
  0x00000000036b9be6: callq  0x000000000368d080  ; OopMap{rdx=Oop [72]=Oop [88]=Oop rax=Oop off=4459}
                                                ;*getfield value
                                                ; - java.util.HashMap::putVal@229 (line 654)
                                                ;   {runtime_call}
  0x00000000036b9beb: nop
  0x00000000036b9bec: nop
  0x00000000036b9bed: mov    0x2a8(%r15),%rax
  0x00000000036b9bf4: movabs $0x0,%r10
  0x00000000036b9bfe: mov    %r10,0x2a8(%r15)
  0x00000000036b9c05: movabs $0x0,%r10
  0x00000000036b9c0f: mov    %r10,0x2b0(%r15)
  0x00000000036b9c16: add    $0xa0,%rsp
  0x00000000036b9c1d: pop    %rbp
  0x00000000036b9c1e: jmpq   0x000000000368c620  ;   {runtime_call}
  0x00000000036b9c23: hlt    
  0x00000000036b9c24: hlt    
  0x00000000036b9c25: hlt    
  0x00000000036b9c26: hlt    
  0x00000000036b9c27: hlt    
  0x00000000036b9c28: hlt    
  0x00000000036b9c29: hlt    
  0x00000000036b9c2a: hlt    
  0x00000000036b9c2b: hlt    
  0x00000000036b9c2c: hlt    
  0x00000000036b9c2d: hlt    
  0x00000000036b9c2e: hlt    
  0x00000000036b9c2f: hlt    
  0x00000000036b9c30: hlt    
  0x00000000036b9c31: hlt    
  0x00000000036b9c32: hlt    
  0x00000000036b9c33: hlt    
  0x00000000036b9c34: hlt    
  0x00000000036b9c35: hlt    
  0x00000000036b9c36: hlt    
  0x00000000036b9c37: hlt    
  0x00000000036b9c38: hlt    
  0x00000000036b9c39: hlt    
  0x00000000036b9c3a: hlt    
  0x00000000036b9c3b: hlt    
  0x00000000036b9c3c: hlt    
  0x00000000036b9c3d: hlt    
  0x00000000036b9c3e: hlt    
  0x00000000036b9c3f: hlt    
[Stub Code]
  0x00000000036b9c40: nop                       ;   {no_reloc}
  0x00000000036b9c41: nop
  0x00000000036b9c42: nop
  0x00000000036b9c43: nop
  0x00000000036b9c44: nop
  0x00000000036b9c45: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b9c4f: jmpq   0x00000000036b9c4f  ;   {runtime_call}
  0x00000000036b9c54: nop
  0x00000000036b9c55: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b9c5f: jmpq   0x00000000036b9c5f  ;   {runtime_call}
  0x00000000036b9c64: nop
  0x00000000036b9c65: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b9c6f: jmpq   0x00000000036b9c6f  ;   {runtime_call}
  0x00000000036b9c74: nop
  0x00000000036b9c75: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b9c7f: jmpq   0x00000000036b9c7f  ;   {runtime_call}
  0x00000000036b9c84: nop
  0x00000000036b9c85: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b9c8f: jmpq   0x00000000036b9c8f  ;   {runtime_call}
  0x00000000036b9c94: nop
  0x00000000036b9c95: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b9c9f: jmpq   0x00000000036b9c9f  ;   {runtime_call}
  0x00000000036b9ca4: nop
  0x00000000036b9ca5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b9caf: jmpq   0x00000000036b9caf  ;   {runtime_call}
  0x00000000036b9cb4: nop
  0x00000000036b9cb5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b9cbf: jmpq   0x00000000036b9cbf  ;   {runtime_call}
  0x00000000036b9cc4: nop
  0x00000000036b9cc5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b9ccf: jmpq   0x00000000036b9ccf  ;   {runtime_call}
  0x00000000036b9cd4: nop
  0x00000000036b9cd5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036b9cdf: jmpq   0x00000000036b9cdf  ;   {runtime_call}
[Exception Handler]
  0x00000000036b9ce4: callq  0x000000000368f1a0  ;   {runtime_call}
  0x00000000036b9ce9: mov    %rsp,-0x28(%rsp)
  0x00000000036b9cee: sub    $0x80,%rsp
  0x00000000036b9cf5: mov    %rax,0x78(%rsp)
  0x00000000036b9cfa: mov    %rcx,0x70(%rsp)
  0x00000000036b9cff: mov    %rdx,0x68(%rsp)
  0x00000000036b9d04: mov    %rbx,0x60(%rsp)
  0x00000000036b9d09: mov    %rbp,0x50(%rsp)
  0x00000000036b9d0e: mov    %rsi,0x48(%rsp)
  0x00000000036b9d13: mov    %rdi,0x40(%rsp)
  0x00000000036b9d18: mov    %r8,0x38(%rsp)
  0x00000000036b9d1d: mov    %r9,0x30(%rsp)
  0x00000000036b9d22: mov    %r10,0x28(%rsp)
  0x00000000036b9d27: mov    %r11,0x20(%rsp)
  0x00000000036b9d2c: mov    %r12,0x18(%rsp)
  0x00000000036b9d31: mov    %r13,0x10(%rsp)
  0x00000000036b9d36: mov    %r14,0x8(%rsp)
  0x00000000036b9d3b: mov    %r15,(%rsp)
  0x00000000036b9d3f: movabs $0x553ec320,%rcx   ;   {external_word}
  0x00000000036b9d49: movabs $0x36b9ce9,%rdx    ;   {internal_word}
  0x00000000036b9d53: mov    %rsp,%r8
  0x00000000036b9d56: and    $0xfffffffffffffff0,%rsp
  0x00000000036b9d5a: callq  0x00000000550a41d0  ;   {runtime_call}
  0x00000000036b9d5f: hlt    
[Deopt Handler Code]
  0x00000000036b9d60: movabs $0x36b9d60,%r10    ;   {section_word}
  0x00000000036b9d6a: push   %r10
  0x00000000036b9d6c: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036b9d71: hlt    
  0x00000000036b9d72: hlt    
  0x00000000036b9d73: hlt    
  0x00000000036b9d74: hlt    
  0x00000000036b9d75: hlt    
  0x00000000036b9d76: hlt    
  0x00000000036b9d77: hlt    
<nmethod compile_id='61' compiler='C1' level='3' entry='0x00000000036b8a80' size='8144' address='0x00000000036b8810' relocation_offset='288' insts_offset='624' stub_offset='5168' scopes_data_offset='5488' scopes_pcs_offset='6496' dependencies_offset='8032' nul_chk_table_offset='8040' method='java/util/HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='1599' backedge_count='179' iicount='1599' stamp='1.372'/>
<writer thread='17528'/>
<task_queued compile_id='67' method='java/lang/String indexOf (Ljava/lang/String;I)I' bytes='25' count='640' iicount='640' level='3' stamp='1.375' comment='tiered' hot_count='640'/>
<task_queued compile_id='68' method='java/io/WinNTFileSystem normalize (Ljava/lang/String;)Ljava/lang/String;' bytes='143' count='1329' backedge_count='54272' iicount='1329' stamp='1.375' comment='tiered' hot_count='1329'/>
<task_queued compile_id='69' method='java/lang/Character toLowerCase (I)I' bytes='9' count='30208' iicount='30208' stamp='1.376' comment='tiered' hot_count='30208'/>
<task_queued compile_id='70' method='sun/nio/cs/UTF_8$Decoder decodeArrayLoop (Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;' bytes='691' count='504' backedge_count='15695' iicount='504' level='3' stamp='1.376' comment='tiered' hot_count='504'/>
<task_queued compile_id='71' method='java/io/BufferedReader readLine (Z)Ljava/lang/String;' bytes='304' count='619' backedge_count='13312' iicount='619' level='3' stamp='1.377' comment='tiered' hot_count='619'/>
<task_queued compile_id='72' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='41216' iicount='41216' stamp='1.377' comment='tiered' hot_count='41216'/>
<task_queued compile_id='73' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='29568' iicount='29568' stamp='1.377' comment='tiered' hot_count='29568'/>
<task_queued compile_id='74' method='java/io/BufferedReader readLine ()Ljava/lang/String;' bytes='6' count='640' iicount='640' level='3' stamp='1.377' comment='tiered' hot_count='640'/>
<task_queued compile_id='75' method='java/io/BufferedReader ensureOpen ()V' bytes='18' count='640' iicount='640' level='3' stamp='1.377' comment='tiered' hot_count='640'/>
<task_queued compile_id='76' method='java/util/ArrayList add (Ljava/lang/Object;)Z' bytes='29' count='640' iicount='640' level='3' stamp='1.378' comment='tiered' hot_count='640'/>
<task_queued compile_id='77' method='java/util/ArrayList ensureCapacityInternal (I)V' bytes='13' count='640' iicount='640' level='3' stamp='1.378' comment='tiered' hot_count='640'/>
<task_queued compile_id='78' method='java/util/ArrayList calculateCapacity ([Ljava/lang/Object;I)I' bytes='16' count='640' iicount='640' level='3' stamp='1.378' comment='tiered' hot_count='640'/>
<task_queued compile_id='79' method='java/util/ArrayList ensureExplicitCapacity (I)V' bytes='26' count='640' iicount='640' level='3' stamp='1.378' comment='tiered' hot_count='640'/>
<task_queued compile_id='80' method='java/io/File getPath ()Ljava/lang/String;' bytes='5' count='1152' iicount='1152' level='1' stamp='1.379' comment='tiered' hot_count='1152'/>
<writer thread='7332'/>
Decoding compiled method 0x00000000036ba810:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c616d60} &apos;encode&apos; &apos;([CII)[B&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;
  # this:     rdx:rdx   = &apos;java/lang/StringCoding$StringEncoder&apos;
  # parm0:    r8:r8     = &apos;[C&apos;
  # parm1:    r9        = int
  # parm2:    rdi       = int
  #           [sp+0x150]  (sp of caller)
  0x00000000036bab60: mov    0x8(%rdx),%r10d
  0x00000000036bab64: shl    $0x3,%r10
  0x00000000036bab68: cmp    %rax,%r10
  0x00000000036bab6b: jne    0x00000000035d5f60  ;   {runtime_call}
  0x00000000036bab71: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000036bab7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000036bab80: mov    %eax,-0x6000(%rsp)
  0x00000000036bab87: push   %rbp
  0x00000000036bab88: sub    $0x140,%rsp
  0x00000000036bab8f: mov    %rdx,0xd0(%rsp)
  0x00000000036bab97: mov    %r8,0xf0(%rsp)
  0x00000000036bab9f: mov    %r9d,0xe8(%rsp)
  0x00000000036baba7: mov    %edi,0xec(%rsp)
  0x00000000036babae: movabs $0x1c7c8260,%rbx   ;   {metadata(method data for {method} {0x000000001c616d60} &apos;encode&apos; &apos;([CII)[B&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036babb8: mov    0xdc(%rbx),%esi
  0x00000000036babbe: add    $0x8,%esi
  0x00000000036babc1: mov    %esi,0xdc(%rbx)
  0x00000000036babc7: movabs $0x1c616d58,%rbx   ;   {metadata({method} {0x000000001c616d60} &apos;encode&apos; &apos;([CII)[B&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036babd1: and    $0x1ff8,%esi
  0x00000000036babd7: cmp    $0x0,%esi
  0x00000000036babda: je     0x00000000036bc319  ;*iload_3
                                                ; - java.lang.StringCoding$StringEncoder::encode@0 (line 299)

  0x00000000036babe0: mov    0x14(%rdx),%r11d
  0x00000000036babe4: shl    $0x3,%r11          ;*getfield ce
                                                ; - java.lang.StringCoding$StringEncoder::encode@2 (line 299)

  0x00000000036babe8: cmp    (%r11),%rax        ;*invokevirtual maxBytesPerChar
                                                ; - java.lang.StringCoding$StringEncoder::encode@5 (line 299)
                                                ; implicit exception: dispatches to 0x00000000036bc330
  0x00000000036babeb: mov    %r11,%rbx
  0x00000000036babee: movabs $0x1c7c8260,%rsi   ;   {metadata(method data for {method} {0x000000001c616d60} &apos;encode&apos; &apos;([CII)[B&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036babf8: mov    0x8(%rbx),%ebx
  0x00000000036babfb: shl    $0x3,%rbx
  0x00000000036babff: cmp    0x110(%rsi),%rbx
  0x00000000036bac06: jne    0x00000000036bac15
  0x00000000036bac08: addq   $0x1,0x118(%rsi)
  0x00000000036bac10: jmpq   0x00000000036bac7b
  0x00000000036bac15: cmp    0x120(%rsi),%rbx
  0x00000000036bac1c: jne    0x00000000036bac2b
  0x00000000036bac1e: addq   $0x1,0x128(%rsi)
  0x00000000036bac26: jmpq   0x00000000036bac7b
  0x00000000036bac2b: cmpq   $0x0,0x110(%rsi)
  0x00000000036bac36: jne    0x00000000036bac4f
  0x00000000036bac38: mov    %rbx,0x110(%rsi)
  0x00000000036bac3f: movq   $0x1,0x118(%rsi)
  0x00000000036bac4a: jmpq   0x00000000036bac7b
  0x00000000036bac4f: cmpq   $0x0,0x120(%rsi)
  0x00000000036bac5a: jne    0x00000000036bac73
  0x00000000036bac5c: mov    %rbx,0x120(%rsi)
  0x00000000036bac63: movq   $0x1,0x128(%rsi)
  0x00000000036bac6e: jmpq   0x00000000036bac7b
  0x00000000036bac73: addq   $0x1,0x108(%rsi)
  0x00000000036bac7b: movabs $0x1c6d4838,%rbx   ;   {metadata(method data for {method} {0x000000001c5f5b08} &apos;maxBytesPerChar&apos; &apos;()F&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00000000036bac85: mov    0xdc(%rbx),%esi
  0x00000000036bac8b: add    $0x8,%esi
  0x00000000036bac8e: mov    %esi,0xdc(%rbx)
  0x00000000036bac94: movabs $0x1c5f5b00,%rbx   ;   {metadata({method} {0x000000001c5f5b08} &apos;maxBytesPerChar&apos; &apos;()F&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00000000036bac9e: and    $0x7ffff8,%esi
  0x00000000036baca4: cmp    $0x0,%esi
  0x00000000036baca7: je     0x00000000036bc335
  0x00000000036bacad: vmovss 0x10(%r11),%xmm0   ;*getfield maxBytesPerChar
                                                ; - java.nio.charset.CharsetEncoder::maxBytesPerChar@1 (line 465)
                                                ; - java.lang.StringCoding$StringEncoder::encode@5 (line 299)

  0x00000000036bacb3: movabs $0x1c7c8260,%rbx   ;   {metadata(method data for {method} {0x000000001c616d60} &apos;encode&apos; &apos;([CII)[B&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036bacbd: addq   $0x1,0x138(%rbx)
  0x00000000036bacc5: movabs $0x1c7e3920,%rbx   ;   {metadata(method data for {method} {0x000000001c5c9ee0} &apos;access$000&apos; &apos;(IF)I&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036baccf: mov    0xdc(%rbx),%esi
  0x00000000036bacd5: add    $0x8,%esi
  0x00000000036bacd8: mov    %esi,0xdc(%rbx)
  0x00000000036bacde: movabs $0x1c5c9ed8,%rbx   ;   {metadata({method} {0x000000001c5c9ee0} &apos;access$000&apos; &apos;(IF)I&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036bace8: and    $0x7ffff8,%esi
  0x00000000036bacee: cmp    $0x0,%esi
  0x00000000036bacf1: je     0x00000000036bc34c
  0x00000000036bacf7: movabs $0x1c7e3920,%rbx   ;   {metadata(method data for {method} {0x000000001c5c9ee0} &apos;access$000&apos; &apos;(IF)I&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036bad01: addq   $0x1,0x108(%rbx)
  0x00000000036bad09: movabs $0x1c7e3a80,%rbx   ;   {metadata(method data for {method} {0x000000001c5c9598} &apos;scale&apos; &apos;(IF)I&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036bad13: mov    0xdc(%rbx),%esi
  0x00000000036bad19: add    $0x8,%esi
  0x00000000036bad1c: mov    %esi,0xdc(%rbx)
  0x00000000036bad22: movabs $0x1c5c9590,%rbx   ;   {metadata({method} {0x000000001c5c9598} &apos;scale&apos; &apos;(IF)I&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036bad2c: and    $0x7ffff8,%esi
  0x00000000036bad32: cmp    $0x0,%esi
  0x00000000036bad35: je     0x00000000036bc363
  0x00000000036bad3b: vcvtsi2sd %edi,%xmm1,%xmm1
  0x00000000036bad3f: vcvtss2sd %xmm0,%xmm0,%xmm0
  0x00000000036bad43: vmulsd %xmm0,%xmm1,%xmm1
  0x00000000036bad47: vcvttsd2si %xmm1,%ebx
  0x00000000036bad4b: cmp    $0x80000000,%ebx
  0x00000000036bad51: je     0x00000000036bc37a
  0x00000000036bad57: movabs $0x7c00007a8,%rdx  ;   {metadata({type array byte})}
  0x00000000036bad61: mov    %rdi,%r14
  0x00000000036bad64: movslq %ebx,%rbx
  0x00000000036bad67: mov    %rbx,%rdi
  0x00000000036bad6a: cmp    $0xffffff,%rbx
  0x00000000036bad71: ja     0x00000000036bc393
  0x00000000036bad77: movabs $0x17,%rsi
  0x00000000036bad81: lea    (%rsi,%rbx,1),%rsi
  0x00000000036bad85: and    $0xfffffffffffffff8,%rsi
  0x00000000036bad89: mov    0x60(%r15),%rax
  0x00000000036bad8d: lea    (%rax,%rsi,1),%rsi
  0x00000000036bad91: cmp    0x70(%r15),%rsi
  0x00000000036bad95: ja     0x00000000036bc393
  0x00000000036bad9b: mov    %rsi,0x60(%r15)
  0x00000000036bad9f: sub    %rax,%rsi
  0x00000000036bada2: movq   $0x1,(%rax)
  0x00000000036bada9: mov    %rdx,%rcx
  0x00000000036badac: shr    $0x3,%rcx
  0x00000000036badb0: mov    %ecx,0x8(%rax)
  0x00000000036badb3: mov    %ebx,0xc(%rax)
  0x00000000036badb6: sub    $0x10,%rsi
  0x00000000036badba: je     0x00000000036badd1
  0x00000000036badc0: xor    %rbx,%rbx
  0x00000000036badc3: shr    $0x3,%rsi
  0x00000000036badc7: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000000036badcc: dec    %rsi
  0x00000000036badcf: jne    0x00000000036badc7  ;*newarray
                                                ; - java.lang.StringCoding$StringEncoder::encode@15 (line 300)

  0x00000000036badd1: mov    %rax,0xd8(%rsp)
  0x00000000036badd9: cmp    $0x0,%r14d
  0x00000000036baddd: movabs $0x1c7c8260,%rdi   ;   {metadata(method data for {method} {0x000000001c616d60} &apos;encode&apos; &apos;([CII)[B&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036bade7: movabs $0x148,%rsi
  0x00000000036badf1: jne    0x00000000036bae01
  0x00000000036badf7: movabs $0x158,%rsi
  0x00000000036bae01: mov    (%rdi,%rsi,1),%rdx
  0x00000000036bae05: lea    0x1(%rdx),%rdx
  0x00000000036bae09: mov    %rdx,(%rdi,%rsi,1)
  0x00000000036bae0d: je     0x00000000036bc1a6  ;*ifne
                                                ; - java.lang.StringCoding$StringEncoder::encode@20 (line 301)

  0x00000000036bae13: cmp    $0x0,%r11
  0x00000000036bae17: jne    0x00000000036bae32
  0x00000000036bae19: movabs $0x1c7c8260,%rdx   ;   {metadata(method data for {method} {0x000000001c616d60} &apos;encode&apos; &apos;([CII)[B&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036bae23: orl    $0x100,0x160(%rdx)
  0x00000000036bae2d: jmpq   0x00000000036baf10
  0x00000000036bae32: movabs $0x7c002ac18,%rbx  ;   {metadata(&apos;sun/nio/cs/ArrayEncoder&apos;)}
  0x00000000036bae3c: mov    0x8(%r11),%edx
  0x00000000036bae40: shl    $0x3,%rdx
  0x00000000036bae44: cmp    0x18(%rdx),%rbx
  0x00000000036bae48: je     0x00000000036bae69
  0x00000000036bae4e: cmp    %rbx,%rdx
  0x00000000036bae51: je     0x00000000036bae69
  0x00000000036bae57: push   %rdx
  0x00000000036bae58: push   %rbx
  0x00000000036bae59: callq  0x000000000368f960  ;   {runtime_call}
  0x00000000036bae5e: pop    %rdx
  0x00000000036bae5f: pop    %rdx
  0x00000000036bae60: cmp    $0x0,%edx
  0x00000000036bae63: je     0x00000000036baef4
  0x00000000036bae69: movabs $0x1c7c8260,%rdx   ;   {metadata(method data for {method} {0x000000001c616d60} &apos;encode&apos; &apos;([CII)[B&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036bae73: mov    0x8(%r11),%ebx
  0x00000000036bae77: shl    $0x3,%rbx
  0x00000000036bae7b: cmp    0x170(%rdx),%rbx
  0x00000000036bae82: jne    0x00000000036bae91
  0x00000000036bae84: addq   $0x1,0x178(%rdx)
  0x00000000036bae8c: jmpq   0x00000000036baf15
  0x00000000036bae91: cmp    0x180(%rdx),%rbx
  0x00000000036bae98: jne    0x00000000036baea7
  0x00000000036bae9a: addq   $0x1,0x188(%rdx)
  0x00000000036baea2: jmpq   0x00000000036baf15
  0x00000000036baea7: cmpq   $0x0,0x170(%rdx)
  0x00000000036baeb2: jne    0x00000000036baecb
  0x00000000036baeb4: mov    %rbx,0x170(%rdx)
  0x00000000036baebb: movq   $0x1,0x178(%rdx)
  0x00000000036baec6: jmpq   0x00000000036baf15
  0x00000000036baecb: cmpq   $0x0,0x180(%rdx)
  0x00000000036baed6: jne    0x00000000036baeef
  0x00000000036baed8: mov    %rbx,0x180(%rdx)
  0x00000000036baedf: movq   $0x1,0x188(%rdx)
  0x00000000036baeea: jmpq   0x00000000036baf15
  0x00000000036baeef: jmpq   0x00000000036baf15
  0x00000000036baef4: movabs $0x1c7c8260,%rdx   ;   {metadata(method data for {method} {0x000000001c616d60} &apos;encode&apos; &apos;([CII)[B&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036baefe: subq   $0x1,0x168(%rdx)
  0x00000000036baf06: jmpq   0x00000000036baf10
  0x00000000036baf0b: jmpq   0x00000000036baf15
  0x00000000036baf10: xor    %rdi,%rdi
  0x00000000036baf13: jmp    0x00000000036baf1f
  0x00000000036baf15: movabs $0x1,%rdi          ;*instanceof
                                                ; - java.lang.StringCoding$StringEncoder::encode@30 (line 303)

  0x00000000036baf1f: cmp    $0x0,%edi
  0x00000000036baf22: movabs $0x1c7c8260,%rdi   ;   {metadata(method data for {method} {0x000000001c616d60} &apos;encode&apos; &apos;([CII)[B&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036baf2c: movabs $0x198,%rsi
  0x00000000036baf36: je     0x00000000036baf46
  0x00000000036baf3c: movabs $0x1a8,%rsi
  0x00000000036baf46: mov    (%rdi,%rsi,1),%rdx
  0x00000000036baf4a: lea    0x1(%rdx),%rdx
  0x00000000036baf4e: mov    %rdx,(%rdi,%rsi,1)
  0x00000000036baf52: je     0x00000000036bb4c6  ;*ifeq
                                                ; - java.lang.StringCoding$StringEncoder::encode@33 (line 303)

  0x00000000036baf58: cmp    $0x0,%r11
  0x00000000036baf5c: jne    0x00000000036baf77
  0x00000000036baf5e: movabs $0x1c7c8260,%rsi   ;   {metadata(method data for {method} {0x000000001c616d60} &apos;encode&apos; &apos;([CII)[B&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036baf68: orl    $0x100,0x1b0(%rsi)
  0x00000000036baf72: jmpq   0x00000000036bb055
  0x00000000036baf77: movabs $0x7c002ac18,%rcx  ;   {metadata(&apos;sun/nio/cs/ArrayEncoder&apos;)}
  0x00000000036baf81: mov    0x8(%r11),%esi
  0x00000000036baf85: shl    $0x3,%rsi
  0x00000000036baf89: cmp    0x18(%rsi),%rcx
  0x00000000036baf8d: je     0x00000000036bafae
  0x00000000036baf93: cmp    %rcx,%rsi
  0x00000000036baf96: je     0x00000000036bafae
  0x00000000036baf9c: push   %rsi
  0x00000000036baf9d: push   %rcx
  0x00000000036baf9e: callq  0x000000000368f960  ;   {runtime_call}
  0x00000000036bafa3: pop    %rsi
  0x00000000036bafa4: pop    %rsi
  0x00000000036bafa5: cmp    $0x0,%esi
  0x00000000036bafa8: je     0x00000000036bb039
  0x00000000036bafae: movabs $0x1c7c8260,%rsi   ;   {metadata(method data for {method} {0x000000001c616d60} &apos;encode&apos; &apos;([CII)[B&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036bafb8: mov    0x8(%r11),%ecx
  0x00000000036bafbc: shl    $0x3,%rcx
  0x00000000036bafc0: cmp    0x1c0(%rsi),%rcx
  0x00000000036bafc7: jne    0x00000000036bafd6
  0x00000000036bafc9: addq   $0x1,0x1c8(%rsi)
  0x00000000036bafd1: jmpq   0x00000000036bb055
  0x00000000036bafd6: cmp    0x1d0(%rsi),%rcx
  0x00000000036bafdd: jne    0x00000000036bafec
  0x00000000036bafdf: addq   $0x1,0x1d8(%rsi)
  0x00000000036bafe7: jmpq   0x00000000036bb055
  0x00000000036bafec: cmpq   $0x0,0x1c0(%rsi)
  0x00000000036baff7: jne    0x00000000036bb010
  0x00000000036baff9: mov    %rcx,0x1c0(%rsi)
  0x00000000036bb000: movq   $0x1,0x1c8(%rsi)
  0x00000000036bb00b: jmpq   0x00000000036bb055
  0x00000000036bb010: cmpq   $0x0,0x1d0(%rsi)
  0x00000000036bb01b: jne    0x00000000036bb034
  0x00000000036bb01d: mov    %rcx,0x1d0(%rsi)
  0x00000000036bb024: movq   $0x1,0x1d8(%rsi)
  0x00000000036bb02f: jmpq   0x00000000036bb055
  0x00000000036bb034: jmpq   0x00000000036bb055
  0x00000000036bb039: movabs $0x1c7c8260,%rsi   ;   {metadata(method data for {method} {0x000000001c616d60} &apos;encode&apos; &apos;([CII)[B&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036bb043: subq   $0x1,0x1b8(%rsi)
  0x00000000036bb04b: jmpq   0x00000000036bc39d
  0x00000000036bb050: jmpq   0x00000000036bb055
  0x00000000036bb055: mov    %r11,%rbx          ;*checkcast
                                                ; - java.lang.StringCoding$StringEncoder::encode@40 (line 304)

  0x00000000036bb058: cmp    (%rbx),%rax        ; implicit exception: dispatches to 0x00000000036bc3a6
  0x00000000036bb05b: mov    %rbx,%rdi
  0x00000000036bb05e: movabs $0x1c7c8260,%rsi   ;   {metadata(method data for {method} {0x000000001c616d60} &apos;encode&apos; &apos;([CII)[B&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036bb068: mov    0x8(%rdi),%edi
  0x00000000036bb06b: shl    $0x3,%rdi
  0x00000000036bb06f: cmp    0x1f0(%rsi),%rdi
  0x00000000036bb076: jne    0x00000000036bb085
  0x00000000036bb078: addq   $0x1,0x1f8(%rsi)
  0x00000000036bb080: jmpq   0x00000000036bb0eb
  0x00000000036bb085: cmp    0x200(%rsi),%rdi
  0x00000000036bb08c: jne    0x00000000036bb09b
  0x00000000036bb08e: addq   $0x1,0x208(%rsi)
  0x00000000036bb096: jmpq   0x00000000036bb0eb
  0x00000000036bb09b: cmpq   $0x0,0x1f0(%rsi)
  0x00000000036bb0a6: jne    0x00000000036bb0bf
  0x00000000036bb0a8: mov    %rdi,0x1f0(%rsi)
  0x00000000036bb0af: movq   $0x1,0x1f8(%rsi)
  0x00000000036bb0ba: jmpq   0x00000000036bb0eb
  0x00000000036bb0bf: cmpq   $0x0,0x200(%rsi)
  0x00000000036bb0ca: jne    0x00000000036bb0e3
  0x00000000036bb0cc: mov    %rdi,0x200(%rsi)
  0x00000000036bb0d3: movq   $0x1,0x208(%rsi)
  0x00000000036bb0de: jmpq   0x00000000036bb0eb
  0x00000000036bb0e3: addq   $0x1,0x1e8(%rsi)
  0x00000000036bb0eb: mov    %r14,%rdi
  0x00000000036bb0ee: mov    %rax,%rsi
  0x00000000036bb0f1: mov    %rbx,%rdx          ;*invokeinterface encode
                                                ; - java.lang.StringCoding$StringEncoder::encode@48 (line 304)

  0x00000000036bb0f4: nop
  0x00000000036bb0f5: movabs $0xffffffffffffffff,%rax
  0x00000000036bb0ff: callq  0x00000000035d63e0  ; OopMap{[208]=Oop [216]=Oop off=1444}
                                                ;*invokeinterface encode
                                                ; - java.lang.StringCoding$StringEncoder::encode@48 (line 304)
                                                ;   {virtual_call}
  0x00000000036bb104: mov    %rax,%r8           ;*invokeinterface encode
                                                ; - java.lang.StringCoding$StringEncoder::encode@48 (line 304)

  0x00000000036bb107: mov    0xd0(%rsp),%rdx
  0x00000000036bb10f: mov    0x10(%rdx),%ebx
  0x00000000036bb112: shl    $0x3,%rbx          ;*getfield cs
                                                ; - java.lang.StringCoding$StringEncoder::encode@60 (line 305)

  0x00000000036bb116: movsbl 0xc(%rdx),%edx     ;*getfield isTrusted
                                                ; - java.lang.StringCoding$StringEncoder::encode@64 (line 305)

  0x00000000036bb11a: movabs $0x1c7c8260,%rsi   ;   {metadata(method data for {method} {0x000000001c616d60} &apos;encode&apos; &apos;([CII)[B&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036bb124: addq   $0x1,0x218(%rsi)
  0x00000000036bb12c: movabs $0x1c7e40b0,%rsi   ;   {metadata(method data for {method} {0x000000001c5ca010} &apos;access$300&apos; &apos;([BILjava/nio/charset/Charset;Z)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036bb136: mov    0xdc(%rsi),%edi
  0x00000000036bb13c: add    $0x8,%edi
  0x00000000036bb13f: mov    %edi,0xdc(%rsi)
  0x00000000036bb145: movabs $0x1c5ca008,%rsi   ;   {metadata({method} {0x000000001c5ca010} &apos;access$300&apos; &apos;([BILjava/nio/charset/Charset;Z)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036bb14f: and    $0x7ffff8,%edi
  0x00000000036bb155: cmp    $0x0,%edi
  0x00000000036bb158: je     0x00000000036bc3ab
  0x00000000036bb15e: movabs $0x1c7e40b0,%rbx   ;   {metadata(method data for {method} {0x000000001c5ca010} &apos;access$300&apos; &apos;([BILjava/nio/charset/Charset;Z)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036bb168: addq   $0x1,0x108(%rbx)
  0x00000000036bb170: movabs $0x1c7e4500,%rbx   ;   {metadata(method data for {method} {0x000000001c5c9458} &apos;safeTrim&apos; &apos;([BILjava/nio/charset/Charset;Z)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036bb17a: mov    0xdc(%rbx),%esi
  0x00000000036bb180: add    $0x8,%esi
  0x00000000036bb183: mov    %esi,0xdc(%rbx)
  0x00000000036bb189: movabs $0x1c5c9450,%rbx   ;   {metadata({method} {0x000000001c5c9458} &apos;safeTrim&apos; &apos;([BILjava/nio/charset/Charset;Z)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036bb193: and    $0x7ffff8,%esi
  0x00000000036bb199: cmp    $0x0,%esi
  0x00000000036bb19c: je     0x00000000036bc3c2
  0x00000000036bb1a2: mov    0xd8(%rsp),%rax
  0x00000000036bb1aa: mov    0xc(%rax),%r9d     ;*arraylength
                                                ; - java.lang.StringCoding::safeTrim@2 (line 76)
                                                ; - java.lang.StringCoding::access$300@4 (line 50)
                                                ; - java.lang.StringCoding$StringEncoder::encode@67 (line 305)

  0x00000000036bb1ae: cmp    %r9d,%r8d
  0x00000000036bb1b1: movabs $0x1c7e4500,%rbx   ;   {metadata(method data for {method} {0x000000001c5c9458} &apos;safeTrim&apos; &apos;([BILjava/nio/charset/Charset;Z)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036bb1bb: movabs $0x108,%rsi
  0x00000000036bb1c5: jne    0x00000000036bb1d5
  0x00000000036bb1cb: movabs $0x118,%rsi
  0x00000000036bb1d5: mov    (%rbx,%rsi,1),%rdi
  0x00000000036bb1d9: lea    0x1(%rdi),%rdi
  0x00000000036bb1dd: mov    %rdi,(%rbx,%rsi,1)
  0x00000000036bb1e1: jne    0x00000000036bb2af  ;*if_icmpne
                                                ; - java.lang.StringCoding::safeTrim@3 (line 76)
                                                ; - java.lang.StringCoding::access$300@4 (line 50)
                                                ; - java.lang.StringCoding$StringEncoder::encode@67 (line 305)

  0x00000000036bb1e7: cmp    $0x0,%edx
  0x00000000036bb1ea: movabs $0x1c7e4500,%rbx   ;   {metadata(method data for {method} {0x000000001c5c9458} &apos;safeTrim&apos; &apos;([BILjava/nio/charset/Charset;Z)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036bb1f4: movabs $0x128,%rdx
  0x00000000036bb1fe: jne    0x00000000036bb20e
  0x00000000036bb204: movabs $0x138,%rdx
  0x00000000036bb20e: mov    (%rbx,%rdx,1),%rsi
  0x00000000036bb212: lea    0x1(%rsi),%rsi
  0x00000000036bb216: mov    %rsi,(%rbx,%rdx,1)
  0x00000000036bb21a: jne    0x00000000036bb4b1  ;*ifne
                                                ; - java.lang.StringCoding::safeTrim@7 (line 76)
                                                ; - java.lang.StringCoding::access$300@4 (line 50)
                                                ; - java.lang.StringCoding$StringEncoder::encode@67 (line 305)

  0x00000000036bb220: movabs $0x1c7e4500,%rbx   ;   {metadata(method data for {method} {0x000000001c5c9458} &apos;safeTrim&apos; &apos;([BILjava/nio/charset/Charset;Z)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036bb22a: addq   $0x1,0x148(%rbx)
  0x00000000036bb232: movabs $0x1c6839a0,%rbx   ;   {metadata(method data for {method} {0x000000001c4a9508} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x00000000036bb23c: mov    0xdc(%rbx),%edx
  0x00000000036bb242: add    $0x8,%edx
  0x00000000036bb245: mov    %edx,0xdc(%rbx)
  0x00000000036bb24b: movabs $0x1c4a9500,%rbx   ;   {metadata({method} {0x000000001c4a9508} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x00000000036bb255: and    $0x7ffff8,%edx
  0x00000000036bb25b: cmp    $0x0,%edx
  0x00000000036bb25e: je     0x00000000036bc3d9
  0x00000000036bb264: movabs $0x76c100c78,%rbx  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00000000036bb26e: mov    0x74(%rbx),%ebx
  0x00000000036bb271: shl    $0x3,%rbx          ;*getstatic security
                                                ; - java.lang.System::getSecurityManager@0 (line 334)
                                                ; - java.lang.StringCoding::safeTrim@10 (line 76)
                                                ; - java.lang.StringCoding::access$300@4 (line 50)
                                                ; - java.lang.StringCoding$StringEncoder::encode@67 (line 305)

  0x00000000036bb275: cmp    $0x0,%rbx
  0x00000000036bb279: movabs $0x1c7e4500,%rbx   ;   {metadata(method data for {method} {0x000000001c5c9458} &apos;safeTrim&apos; &apos;([BILjava/nio/charset/Charset;Z)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036bb283: movabs $0x158,%rdx
  0x00000000036bb28d: jne    0x00000000036bb29d
  0x00000000036bb293: movabs $0x168,%rdx
  0x00000000036bb29d: mov    (%rbx,%rdx,1),%rsi
  0x00000000036bb2a1: lea    0x1(%rsi),%rsi
  0x00000000036bb2a5: mov    %rsi,(%rbx,%rdx,1)
  0x00000000036bb2a9: je     0x00000000036bb4b1  ;*ifnonnull
                                                ; - java.lang.StringCoding::safeTrim@13 (line 76)
                                                ; - java.lang.StringCoding::access$300@4 (line 50)
                                                ; - java.lang.StringCoding$StringEncoder::encode@67 (line 305)

  0x00000000036bb2af: movabs $0x1c7e4500,%rbx   ;   {metadata(method data for {method} {0x000000001c5c9458} &apos;safeTrim&apos; &apos;([BILjava/nio/charset/Charset;Z)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036bb2b9: addq   $0x1,0x178(%rbx)
  0x00000000036bb2c1: movabs $0x1c6d3478,%rbx   ;   {metadata(method data for {method} {0x000000001c5a88f8} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000036bb2cb: mov    0xdc(%rbx),%edx
  0x00000000036bb2d1: add    $0x8,%edx
  0x00000000036bb2d4: mov    %edx,0xdc(%rbx)
  0x00000000036bb2da: movabs $0x1c5a88f0,%rbx   ;   {metadata({method} {0x000000001c5a88f8} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000036bb2e4: and    $0x7ffff8,%edx
  0x00000000036bb2ea: cmp    $0x0,%edx
  0x00000000036bb2ed: je     0x00000000036bc3f0
  0x00000000036bb2f3: mov    %r8,%rbx
  0x00000000036bb2f6: movabs $0x7c00007a8,%rdx  ;   {metadata({type array byte})}
  0x00000000036bb300: mov    %rax,%r13
  0x00000000036bb303: movslq %ebx,%rbx
  0x00000000036bb306: mov    %rbx,%rdi
  0x00000000036bb309: cmp    $0xffffff,%rbx
  0x00000000036bb310: ja     0x00000000036bc407
  0x00000000036bb316: movabs $0x17,%rsi
  0x00000000036bb320: lea    (%rsi,%rbx,1),%rsi
  0x00000000036bb324: and    $0xfffffffffffffff8,%rsi
  0x00000000036bb328: mov    0x60(%r15),%rax
  0x00000000036bb32c: lea    (%rax,%rsi,1),%rsi
  0x00000000036bb330: cmp    0x70(%r15),%rsi
  0x00000000036bb334: ja     0x00000000036bc407
  0x00000000036bb33a: mov    %rsi,0x60(%r15)
  0x00000000036bb33e: sub    %rax,%rsi
  0x00000000036bb341: movq   $0x1,(%rax)
  0x00000000036bb348: mov    %rdx,%rcx
  0x00000000036bb34b: shr    $0x3,%rcx
  0x00000000036bb34f: mov    %ecx,0x8(%rax)
  0x00000000036bb352: mov    %ebx,0xc(%rax)
  0x00000000036bb355: sub    $0x10,%rsi
  0x00000000036bb359: je     0x00000000036bb370
  0x00000000036bb35f: xor    %rbx,%rbx
  0x00000000036bb362: shr    $0x3,%rsi
  0x00000000036bb366: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000000036bb36b: dec    %rsi
  0x00000000036bb36e: jne    0x00000000036bb366  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3236)
                                                ; - java.lang.StringCoding::safeTrim@20 (line 79)
                                                ; - java.lang.StringCoding::access$300@4 (line 50)
                                                ; - java.lang.StringCoding$StringEncoder::encode@67 (line 305)

  0x00000000036bb370: movabs $0x1c6d3478,%rdx   ;   {metadata(method data for {method} {0x000000001c5a88f8} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000036bb37a: addq   $0x1,0x108(%rdx)
  0x00000000036bb382: movabs $0x1c67e6d0,%rdx   ;   {metadata(method data for {method} {0x000000001c584640} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000036bb38c: mov    0xdc(%rdx),%edi
  0x00000000036bb392: add    $0x8,%edi
  0x00000000036bb395: mov    %edi,0xdc(%rdx)
  0x00000000036bb39b: movabs $0x1c584638,%rdx   ;   {metadata({method} {0x000000001c584640} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000036bb3a5: and    $0x7ffff8,%edi
  0x00000000036bb3ab: cmp    $0x0,%edi
  0x00000000036bb3ae: je     0x00000000036bc411
  0x00000000036bb3b4: cmp    %r8d,%r9d
  0x00000000036bb3b7: movabs $0x1c67e6d0,%rdx   ;   {metadata(method data for {method} {0x000000001c584640} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000036bb3c1: movabs $0x108,%rdi
  0x00000000036bb3cb: jg     0x00000000036bb3db
  0x00000000036bb3d1: movabs $0x118,%rdi
  0x00000000036bb3db: mov    (%rdx,%rdi,1),%rsi
  0x00000000036bb3df: lea    0x1(%rsi),%rsi
  0x00000000036bb3e3: mov    %rsi,(%rdx,%rdi,1)
  0x00000000036bb3e7: jg     0x00000000036bb405  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)
                                                ; - java.lang.StringCoding::safeTrim@20 (line 79)
                                                ; - java.lang.StringCoding::access$300@4 (line 50)
                                                ; - java.lang.StringCoding$StringEncoder::encode@67 (line 305)

  0x00000000036bb3ed: movabs $0x1c67e6d0,%rdx   ;   {metadata(method data for {method} {0x000000001c584640} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000036bb3f7: incl   0x128(%rdx)
  0x00000000036bb3fd: mov    %r9,%rsi
  0x00000000036bb400: jmpq   0x00000000036bb408  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)
                                                ; - java.lang.StringCoding::safeTrim@20 (line 79)
                                                ; - java.lang.StringCoding::access$300@4 (line 50)
                                                ; - java.lang.StringCoding$StringEncoder::encode@67 (line 305)

  0x00000000036bb405: mov    %r8,%rsi           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)
                                                ; - java.lang.StringCoding::safeTrim@20 (line 79)
                                                ; - java.lang.StringCoding::access$300@4 (line 50)
                                                ; - java.lang.StringCoding$StringEncoder::encode@67 (line 305)

  0x00000000036bb408: movabs $0x1c6d3478,%rdx   ;   {metadata(method data for {method} {0x000000001c5a88f8} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000036bb412: addq   $0x1,0x118(%rdx)
  0x00000000036bb41a: mov    %r13,%rdx
  0x00000000036bb41d: mov    $0x0,%r8d
  0x00000000036bb423: mov    %rax,%r9
  0x00000000036bb426: mov    $0x0,%edi
  0x00000000036bb42b: mov    %rax,0xe0(%rsp)
  0x00000000036bb433: lea    (%r8,%rsi,1),%rcx
  0x00000000036bb437: cmp    0xc(%rdx),%ecx
  0x00000000036bb43a: ja     0x00000000036bc428
  0x00000000036bb440: lea    (%rdi,%rsi,1),%rcx
  0x00000000036bb444: cmp    0xc(%r9),%ecx
  0x00000000036bb448: ja     0x00000000036bc428
  0x00000000036bb44e: test   %esi,%esi
  0x00000000036bb450: jl     0x00000000036bc428
  0x00000000036bb456: je     0x00000000036bb49a
  0x00000000036bb45c: movslq %r8d,%r8
  0x00000000036bb45f: movslq %edi,%rdi
  0x00000000036bb462: lea    0x10(%rdx,%r8,1),%rcx
  0x00000000036bb467: lea    0x10(%r9,%rdi,1),%rdx
  0x00000000036bb46c: mov    %rsi,%r8
  0x00000000036bb46f: sub    $0x20,%rsp
  0x00000000036bb473: test   $0xf,%esp
  0x00000000036bb479: je     0x00000000036bb491
  0x00000000036bb47f: sub    $0x8,%rsp
  0x00000000036bb483: callq  Stub::jbyte_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00000000036bb488: add    $0x8,%rsp
  0x00000000036bb48c: jmpq   0x00000000036bb496
  0x00000000036bb491: callq  Stub::jbyte_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00000000036bb496: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3237)
                                                ; - java.lang.StringCoding::safeTrim@20 (line 79)
                                                ; - java.lang.StringCoding::access$300@4 (line 50)
                                                ; - java.lang.StringCoding$StringEncoder::encode@67 (line 305)

  0x00000000036bb49a: mov    0xe0(%rsp),%rax
  0x00000000036bb4a2: add    $0x140,%rsp
  0x00000000036bb4a9: pop    %rbp
  0x00000000036bb4aa: test   %eax,-0x20cb3b0(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036bb4b0: retq   
  0x00000000036bb4b1: mov    %rax,%r13
  0x00000000036bb4b4: mov    %r13,%rax          ;*areturn
                                                ; - java.lang.StringCoding::access$300@7 (line 50)
                                                ; - java.lang.StringCoding$StringEncoder::encode@67 (line 305)

  0x00000000036bb4b7: add    $0x140,%rsp
  0x00000000036bb4be: pop    %rbp
  0x00000000036bb4bf: test   %eax,-0x20cb3c5(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036bb4c5: retq   
  0x00000000036bb4c6: mov    %rax,%r13
  0x00000000036bb4c9: mov    %r11,%rsi
  0x00000000036bb4cc: movabs $0x1c7c8260,%rax   ;   {metadata(method data for {method} {0x000000001c616d60} &apos;encode&apos; &apos;([CII)[B&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036bb4d6: mov    0x8(%rsi),%esi
  0x00000000036bb4d9: shl    $0x3,%rsi
  0x00000000036bb4dd: cmp    0x230(%rax),%rsi
  0x00000000036bb4e4: jne    0x00000000036bb4f3
  0x00000000036bb4e6: addq   $0x1,0x238(%rax)
  0x00000000036bb4ee: jmpq   0x00000000036bb559
  0x00000000036bb4f3: cmp    0x240(%rax),%rsi
  0x00000000036bb4fa: jne    0x00000000036bb509
  0x00000000036bb4fc: addq   $0x1,0x248(%rax)
  0x00000000036bb504: jmpq   0x00000000036bb559
  0x00000000036bb509: cmpq   $0x0,0x230(%rax)
  0x00000000036bb514: jne    0x00000000036bb52d
  0x00000000036bb516: mov    %rsi,0x230(%rax)
  0x00000000036bb51d: movq   $0x1,0x238(%rax)
  0x00000000036bb528: jmpq   0x00000000036bb559
  0x00000000036bb52d: cmpq   $0x0,0x240(%rax)
  0x00000000036bb538: jne    0x00000000036bb551
  0x00000000036bb53a: mov    %rsi,0x240(%rax)
  0x00000000036bb541: movq   $0x1,0x248(%rax)
  0x00000000036bb54c: jmpq   0x00000000036bb559
  0x00000000036bb551: addq   $0x1,0x228(%rax)
  0x00000000036bb559: movabs $0x1c6d70d8,%rsi   ;   {metadata(method data for {method} {0x000000001c5f5ee8} &apos;reset&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00000000036bb563: mov    0xdc(%rsi),%eax
  0x00000000036bb569: add    $0x8,%eax
  0x00000000036bb56c: mov    %eax,0xdc(%rsi)
  0x00000000036bb572: movabs $0x1c5f5ee0,%rsi   ;   {metadata({method} {0x000000001c5f5ee8} &apos;reset&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00000000036bb57c: and    $0x7ffff8,%eax
  0x00000000036bb582: cmp    $0x0,%eax
  0x00000000036bb585: je     0x00000000036bc439
  0x00000000036bb58b: mov    %r11,%rsi
  0x00000000036bb58e: movabs $0x1c6d70d8,%rax   ;   {metadata(method data for {method} {0x000000001c5f5ee8} &apos;reset&apos; &apos;()Ljava/nio/charset/CharsetEncoder;&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00000000036bb598: mov    0x8(%rsi),%esi
  0x00000000036bb59b: shl    $0x3,%rsi
  0x00000000036bb59f: cmp    0x110(%rax),%rsi
  0x00000000036bb5a6: jne    0x00000000036bb5b5
  0x00000000036bb5a8: addq   $0x1,0x118(%rax)
  0x00000000036bb5b0: jmpq   0x00000000036bb61b
  0x00000000036bb5b5: cmp    0x120(%rax),%rsi
  0x00000000036bb5bc: jne    0x00000000036bb5cb
  0x00000000036bb5be: addq   $0x1,0x128(%rax)
  0x00000000036bb5c6: jmpq   0x00000000036bb61b
  0x00000000036bb5cb: cmpq   $0x0,0x110(%rax)
  0x00000000036bb5d6: jne    0x00000000036bb5ef
  0x00000000036bb5d8: mov    %rsi,0x110(%rax)
  0x00000000036bb5df: movq   $0x1,0x118(%rax)
  0x00000000036bb5ea: jmpq   0x00000000036bb61b
  0x00000000036bb5ef: cmpq   $0x0,0x120(%rax)
  0x00000000036bb5fa: jne    0x00000000036bb613
  0x00000000036bb5fc: mov    %rsi,0x120(%rax)
  0x00000000036bb603: movq   $0x1,0x128(%rax)
  0x00000000036bb60e: jmpq   0x00000000036bb61b
  0x00000000036bb613: addq   $0x1,0x108(%rax)
  0x00000000036bb61b: movabs $0x1c6d7250,%rsi   ;   {metadata(method data for {method} {0x000000001c5f5f78} &apos;implReset&apos; &apos;()V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00000000036bb625: mov    0xdc(%rsi),%eax
  0x00000000036bb62b: add    $0x8,%eax
  0x00000000036bb62e: mov    %eax,0xdc(%rsi)
  0x00000000036bb634: movabs $0x1c5f5f70,%rsi   ;   {metadata({method} {0x000000001c5f5f78} &apos;implReset&apos; &apos;()V&apos; in &apos;java/nio/charset/CharsetEncoder&apos;)}
  0x00000000036bb63e: and    $0x7ffff8,%eax
  0x00000000036bb644: cmp    $0x0,%eax
  0x00000000036bb647: je     0x00000000036bc450
  0x00000000036bb64d: movl   $0x0,0x14(%r11)    ;*putfield state
                                                ; - java.nio.charset.CharsetEncoder::reset@6 (line 710)
                                                ; - java.lang.StringCoding$StringEncoder::encode@75 (line 307)

  0x00000000036bb655: movabs $0x1c7c8260,%rsi   ;   {metadata(method data for {method} {0x000000001c616d60} &apos;encode&apos; &apos;([CII)[B&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036bb65f: addq   $0x1,0x258(%rsi)
  0x00000000036bb667: movabs $0x1c7e82a8,%rsi   ;   {metadata(method data for {method} {0x000000001c5f85e8} &apos;wrap&apos; &apos;([B)Ljava/nio/ByteBuffer;&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x00000000036bb671: mov    0xdc(%rsi),%eax
  0x00000000036bb677: add    $0x8,%eax
  0x00000000036bb67a: mov    %eax,0xdc(%rsi)
  0x00000000036bb680: movabs $0x1c5f85e0,%rsi   ;   {metadata({method} {0x000000001c5f85e8} &apos;wrap&apos; &apos;([B)Ljava/nio/ByteBuffer;&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x00000000036bb68a: and    $0x7ffff8,%eax
  0x00000000036bb690: cmp    $0x0,%eax
  0x00000000036bb693: je     0x00000000036bc467
  0x00000000036bb699: mov    0xc(%r13),%ebx     ;*arraylength
                                                ; - java.nio.ByteBuffer::wrap@3 (line 396)
                                                ; - java.lang.StringCoding$StringEncoder::encode@81 (line 308)

  0x00000000036bb69d: movabs $0x1c7e82a8,%rsi   ;   {metadata(method data for {method} {0x000000001c5f85e8} &apos;wrap&apos; &apos;([B)Ljava/nio/ByteBuffer;&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x00000000036bb6a7: addq   $0x1,0x108(%rsi)
  0x00000000036bb6af: movabs $0x1c7e8750,%rsi   ;   {metadata(method data for {method} {0x000000001c5f8550} &apos;wrap&apos; &apos;([BII)Ljava/nio/ByteBuffer;&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x00000000036bb6b9: mov    0xdc(%rsi),%eax
  0x00000000036bb6bf: add    $0x8,%eax
  0x00000000036bb6c2: mov    %eax,0xdc(%rsi)
  0x00000000036bb6c8: movabs $0x1c5f8548,%rsi   ;   {metadata({method} {0x000000001c5f8550} &apos;wrap&apos; &apos;([BII)Ljava/nio/ByteBuffer;&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x00000000036bb6d2: and    $0x7ffff8,%eax
  0x00000000036bb6d8: cmp    $0x0,%eax
  0x00000000036bb6db: je     0x00000000036bc47e
  0x00000000036bb6e1: movabs $0x7c002b688,%rdx  ;   {metadata(&apos;java/nio/HeapByteBuffer&apos;)}
  0x00000000036bb6eb: mov    0x60(%r15),%rax
  0x00000000036bb6ef: lea    0x30(%rax),%rdi
  0x00000000036bb6f3: cmp    0x70(%r15),%rdi
  0x00000000036bb6f7: ja     0x00000000036bc495
  0x00000000036bb6fd: mov    %rdi,0x60(%r15)
  0x00000000036bb701: mov    0xa8(%rdx),%rcx
  0x00000000036bb708: mov    %rcx,(%rax)
  0x00000000036bb70b: mov    %rdx,%rcx
  0x00000000036bb70e: shr    $0x3,%rcx
  0x00000000036bb712: mov    %ecx,0x8(%rax)
  0x00000000036bb715: xor    %rcx,%rcx
  0x00000000036bb718: mov    %ecx,0xc(%rax)
  0x00000000036bb71b: xor    %rcx,%rcx
  0x00000000036bb71e: mov    %rcx,0x10(%rax)
  0x00000000036bb722: mov    %rcx,0x18(%rax)
  0x00000000036bb726: mov    %rcx,0x20(%rax)
  0x00000000036bb72a: mov    %rcx,0x28(%rax)    ;*new  ; - java.nio.ByteBuffer::wrap@0 (line 373)
                                                ; - java.nio.ByteBuffer::wrap@4 (line 396)
                                                ; - java.lang.StringCoding$StringEncoder::encode@81 (line 308)

  0x00000000036bb72e: mov    %rax,0xf8(%rsp)
  0x00000000036bb736: mov    %rax,%rdi
  0x00000000036bb739: movabs $0x1c7e8750,%rsi   ;   {metadata(method data for {method} {0x000000001c5f8550} &apos;wrap&apos; &apos;([BII)Ljava/nio/ByteBuffer;&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x00000000036bb743: addq   $0x1,0x108(%rsi)
  0x00000000036bb74b: movabs $0x1c7e8ac8,%rdi   ;   {metadata(method data for {method} {0x000000001c5fbd18} &apos;&lt;init&gt;&apos; &apos;([BII)V&apos; in &apos;java/nio/HeapByteBuffer&apos;)}
  0x00000000036bb755: mov    0xdc(%rdi),%esi
  0x00000000036bb75b: add    $0x8,%esi
  0x00000000036bb75e: mov    %esi,0xdc(%rdi)
  0x00000000036bb764: movabs $0x1c5fbd10,%rdi   ;   {metadata({method} {0x000000001c5fbd18} &apos;&lt;init&gt;&apos; &apos;([BII)V&apos; in &apos;java/nio/HeapByteBuffer&apos;)}
  0x00000000036bb76e: and    $0x7ffff8,%esi
  0x00000000036bb774: cmp    $0x0,%esi
  0x00000000036bb777: je     0x00000000036bc4a2
  0x00000000036bb77d: mov    %rax,%rdi
  0x00000000036bb780: movabs $0x1c7e8ac8,%rsi   ;   {metadata(method data for {method} {0x000000001c5fbd18} &apos;&lt;init&gt;&apos; &apos;([BII)V&apos; in &apos;java/nio/HeapByteBuffer&apos;)}
  0x00000000036bb78a: addq   $0x1,0x108(%rsi)
  0x00000000036bb792: mov    $0xffffffff,%r8d
  0x00000000036bb798: mov    $0x0,%r9d
  0x00000000036bb79e: mov    %rbx,%rdi
  0x00000000036bb7a1: mov    %rbx,%rsi
  0x00000000036bb7a4: mov    %r13,%rcx
  0x00000000036bb7a7: movl   $0x0,(%rsp)
  0x00000000036bb7ae: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.nio.HeapByteBuffer::&lt;init&gt;@10 (line 70)
                                                ; - java.nio.ByteBuffer::wrap@7 (line 373)
                                                ; - java.nio.ByteBuffer::wrap@4 (line 396)
                                                ; - java.lang.StringCoding$StringEncoder::encode@81 (line 308)

  0x00000000036bb7b1: mov    %ebx,0x100(%rsp)
  0x00000000036bb7b8: nop
  0x00000000036bb7b9: nop
  0x00000000036bb7ba: nop
  0x00000000036bb7bb: nop
  0x00000000036bb7bc: nop
  0x00000000036bb7bd: nop
  0x00000000036bb7be: nop
  0x00000000036bb7bf: callq  0x00000000035d61a0  ; OopMap{[240]=Oop [216]=Oop [208]=Oop [248]=Oop off=3172}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.nio.HeapByteBuffer::&lt;init&gt;@10 (line 70)
                                                ; - java.nio.ByteBuffer::wrap@7 (line 373)
                                                ; - java.nio.ByteBuffer::wrap@4 (line 396)
                                                ; - java.lang.StringCoding$StringEncoder::encode@81 (line 308)
                                                ;   {optimized virtual_call}
  0x00000000036bb7c4: mov    0xf0(%rsp),%r8
  0x00000000036bb7cc: movabs $0x1c7c8260,%rdx   ;   {metadata(method data for {method} {0x000000001c616d60} &apos;encode&apos; &apos;([CII)[B&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036bb7d6: addq   $0x1,0x268(%rdx)
  0x00000000036bb7de: movabs $0x1c7e9b08,%rdx   ;   {metadata(method data for {method} {0x000000001c619cf0} &apos;wrap&apos; &apos;([CII)Ljava/nio/CharBuffer;&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x00000000036bb7e8: mov    0xdc(%rdx),%esi
  0x00000000036bb7ee: add    $0x8,%esi
  0x00000000036bb7f1: mov    %esi,0xdc(%rdx)
  0x00000000036bb7f7: movabs $0x1c619ce8,%rdx   ;   {metadata({method} {0x000000001c619cf0} &apos;wrap&apos; &apos;([CII)Ljava/nio/CharBuffer;&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x00000000036bb801: and    $0x7ffff8,%esi
  0x00000000036bb807: cmp    $0x0,%esi
  0x00000000036bb80a: je     0x00000000036bc4b9
  0x00000000036bb810: movabs $0x7c002ec70,%rdx  ;   {metadata(&apos;java/nio/HeapCharBuffer&apos;)}
  0x00000000036bb81a: mov    0x60(%r15),%rax
  0x00000000036bb81e: lea    0x30(%rax),%rdi
  0x00000000036bb822: cmp    0x70(%r15),%rdi
  0x00000000036bb826: ja     0x00000000036bc4d0
  0x00000000036bb82c: mov    %rdi,0x60(%r15)
  0x00000000036bb830: mov    0xa8(%rdx),%rcx
  0x00000000036bb837: mov    %rcx,(%rax)
  0x00000000036bb83a: mov    %rdx,%rcx
  0x00000000036bb83d: shr    $0x3,%rcx
  0x00000000036bb841: mov    %ecx,0x8(%rax)
  0x00000000036bb844: xor    %rcx,%rcx
  0x00000000036bb847: mov    %ecx,0xc(%rax)
  0x00000000036bb84a: xor    %rcx,%rcx
  0x00000000036bb84d: mov    %rcx,0x10(%rax)
  0x00000000036bb851: mov    %rcx,0x18(%rax)
  0x00000000036bb855: mov    %rcx,0x20(%rax)
  0x00000000036bb859: mov    %rcx,0x28(%rax)    ;*new  ; - java.nio.CharBuffer::wrap@0 (line 373)
                                                ; - java.lang.StringCoding$StringEncoder::encode@89 (line 309)

  0x00000000036bb85d: mov    %rax,%r9
  0x00000000036bb860: movabs $0x1c7e9b08,%rdi   ;   {metadata(method data for {method} {0x000000001c619cf0} &apos;wrap&apos; &apos;([CII)Ljava/nio/CharBuffer;&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x00000000036bb86a: addq   $0x1,0x108(%rdi)
  0x00000000036bb872: movabs $0x1c7ea128,%r9    ;   {metadata(method data for {method} {0x000000001c61c908} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/nio/HeapCharBuffer&apos;)}
  0x00000000036bb87c: mov    0xdc(%r9),%edi
  0x00000000036bb883: add    $0x8,%edi
  0x00000000036bb886: mov    %edi,0xdc(%r9)
  0x00000000036bb88d: movabs $0x1c61c900,%r9    ;   {metadata({method} {0x000000001c61c908} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/nio/HeapCharBuffer&apos;)}
  0x00000000036bb897: and    $0x7ffff8,%edi
  0x00000000036bb89d: cmp    $0x0,%edi
  0x00000000036bb8a0: je     0x00000000036bc4dd
  0x00000000036bb8a6: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.nio.HeapCharBuffer::&lt;init&gt;@7 (line 70)
                                                ; - java.nio.CharBuffer::wrap@7 (line 373)
                                                ; - java.lang.StringCoding$StringEncoder::encode@89 (line 309)
                                                ; implicit exception: dispatches to 0x00000000036bc4f4
  0x00000000036bb8aa: mov    %rax,%r9
  0x00000000036bb8ad: movabs $0x1c7ea128,%rdi   ;   {metadata(method data for {method} {0x000000001c61c908} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/nio/HeapCharBuffer&apos;)}
  0x00000000036bb8b7: addq   $0x1,0x108(%rdi)
  0x00000000036bb8bf: mov    0xe8(%rsp),%edi
  0x00000000036bb8c6: add    0xec(%rsp),%edi
  0x00000000036bb8cd: movabs $0x1c7ea348,%r9    ;   {metadata(method data for {method} {0x000000001c619af8} &apos;&lt;init&gt;&apos; &apos;(IIII[CI)V&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x00000000036bb8d7: mov    0xdc(%r9),%edx
  0x00000000036bb8de: add    $0x8,%edx
  0x00000000036bb8e1: mov    %edx,0xdc(%r9)
  0x00000000036bb8e8: movabs $0x1c619af0,%r9    ;   {metadata({method} {0x000000001c619af8} &apos;&lt;init&gt;&apos; &apos;(IIII[CI)V&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x00000000036bb8f2: and    $0x7ffff8,%edx
  0x00000000036bb8f8: cmp    $0x0,%edx
  0x00000000036bb8fb: je     0x00000000036bc4f9
  0x00000000036bb901: mov    %rax,%r9
  0x00000000036bb904: movabs $0x1c7ea348,%rdx   ;   {metadata(method data for {method} {0x000000001c619af8} &apos;&lt;init&gt;&apos; &apos;(IIII[CI)V&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x00000000036bb90e: addq   $0x1,0x108(%rdx)
  0x00000000036bb916: mov    $0xffffffff,%r8d
  0x00000000036bb91c: mov    0xe8(%rsp),%r9d
  0x00000000036bb924: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.nio.CharBuffer::&lt;init&gt;@6 (line 281)
                                                ; - java.nio.HeapCharBuffer::&lt;init&gt;@10 (line 70)
                                                ; - java.nio.CharBuffer::wrap@7 (line 373)
                                                ; - java.lang.StringCoding$StringEncoder::encode@89 (line 309)

  0x00000000036bb927: mov    %rax,0x108(%rsp)
  0x00000000036bb92f: callq  0x00000000035d61a0  ; OopMap{[216]=Oop [208]=Oop [248]=Oop [264]=Oop [240]=Oop off=3540}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.nio.CharBuffer::&lt;init&gt;@6 (line 281)
                                                ; - java.nio.HeapCharBuffer::&lt;init&gt;@10 (line 70)
                                                ; - java.nio.CharBuffer::wrap@7 (line 373)
                                                ; - java.lang.StringCoding$StringEncoder::encode@89 (line 309)
                                                ;   {optimized virtual_call}
  0x00000000036bb934: mov    0xf0(%rsp),%r8
  0x00000000036bb93c: mov    0x108(%rsp),%rax
  0x00000000036bb944: mov    %r8,%r10
  0x00000000036bb947: shr    $0x3,%r10
  0x00000000036bb94b: mov    %r10d,0x2c(%rax)
  0x00000000036bb94f: mov    %rax,%r8
  0x00000000036bb952: shr    $0x9,%r8
  0x00000000036bb956: movabs $0xf32f000,%r9
  0x00000000036bb960: movb   $0x0,(%r8,%r9,1)   ;*putfield hb
                                                ; - java.nio.CharBuffer::&lt;init&gt;@12 (line 282)
                                                ; - java.nio.HeapCharBuffer::&lt;init&gt;@10 (line 70)
                                                ; - java.nio.CharBuffer::wrap@7 (line 373)
                                                ; - java.lang.StringCoding$StringEncoder::encode@89 (line 309)

  0x00000000036bb965: movl   $0x0,0x24(%rax)    ;*putfield offset
                                                ; - java.nio.CharBuffer::&lt;init&gt;@18 (line 283)
                                                ; - java.nio.HeapCharBuffer::&lt;init&gt;@10 (line 70)
                                                ; - java.nio.CharBuffer::wrap@7 (line 373)
                                                ; - java.lang.StringCoding$StringEncoder::encode@89 (line 309)

  0x00000000036bb96c: mov    0xd0(%rsp),%rdx
  0x00000000036bb974: mov    0x14(%rdx),%esi
  0x00000000036bb977: shl    $0x3,%rsi          ;*getfield ce
                                                ; - java.lang.StringCoding$StringEncoder::encode@95 (line 311)

  0x00000000036bb97b: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x00000000036bc510
  0x00000000036bb97e: mov    %rsi,%r8
  0x00000000036bb981: movabs $0x1c7c8260,%r9    ;   {metadata(method data for {method} {0x000000001c616d60} &apos;encode&apos; &apos;([CII)[B&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036bb98b: mov    0x8(%r8),%r8d
  0x00000000036bb98f: shl    $0x3,%r8
  0x00000000036bb993: cmp    0x280(%r9),%r8
  0x00000000036bb99a: jne    0x00000000036bb9a9
  0x00000000036bb99c: addq   $0x1,0x288(%r9)
  0x00000000036bb9a4: jmpq   0x00000000036bba0f
  0x00000000036bb9a9: cmp    0x290(%r9),%r8
  0x00000000036bb9b0: jne    0x00000000036bb9bf
  0x00000000036bb9b2: addq   $0x1,0x298(%r9)
  0x00000000036bb9ba: jmpq   0x00000000036bba0f
  0x00000000036bb9bf: cmpq   $0x0,0x280(%r9)
  0x00000000036bb9ca: jne    0x00000000036bb9e3
  0x00000000036bb9cc: mov    %r8,0x280(%r9)
  0x00000000036bb9d3: movq   $0x1,0x288(%r9)
  0x00000000036bb9de: jmpq   0x00000000036bba0f
  0x00000000036bb9e3: cmpq   $0x0,0x290(%r9)
  0x00000000036bb9ee: jne    0x00000000036bba07
  0x00000000036bb9f0: mov    %r8,0x290(%r9)
  0x00000000036bb9f7: movq   $0x1,0x298(%r9)
  0x00000000036bba02: jmpq   0x00000000036bba0f
  0x00000000036bba07: addq   $0x1,0x278(%r9)
  0x00000000036bba0f: mov    %rax,%r8
  0x00000000036bba12: mov    0xf8(%rsp),%r9
  0x00000000036bba1a: mov    $0x1,%edi
  0x00000000036bba1f: mov    %rsi,%rdx          ;*invokevirtual encode
                                                ; - java.lang.StringCoding$StringEncoder::encode@103 (line 311)

  0x00000000036bba22: nop
  0x00000000036bba23: nop
  0x00000000036bba24: nop
  0x00000000036bba25: nop
  0x00000000036bba26: nop
  0x00000000036bba27: callq  0x00000000035d61a0  ; OopMap{[216]=Oop [248]=Oop [208]=Oop off=3788}
                                                ;*invokevirtual encode
                                                ; - java.lang.StringCoding$StringEncoder::encode@103 (line 311)
                                                ;   {optimized virtual_call}
  0x00000000036bba2c: cmp    (%rax),%rax        ;*invokevirtual isUnderflow
                                                ; - java.lang.StringCoding$StringEncoder::encode@110 (line 312)
                                                ; implicit exception: dispatches to 0x00000000036bc515
  0x00000000036bba2f: mov    %rax,%rdx
  0x00000000036bba32: movabs $0x1c7c8260,%rsi   ;   {metadata(method data for {method} {0x000000001c616d60} &apos;encode&apos; &apos;([CII)[B&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036bba3c: movabs $0x7c002f040,%r10  ;   {metadata(&apos;java/nio/charset/CoderResult&apos;)}
  0x00000000036bba46: mov    %r10,0x2b0(%rsi)
  0x00000000036bba4d: addq   $0x1,0x2b8(%rsi)
  0x00000000036bba55: movabs $0x1c6d6290,%rdx   ;   {metadata(method data for {method} {0x000000001c61e520} &apos;isUnderflow&apos; &apos;()Z&apos; in &apos;java/nio/charset/CoderResult&apos;)}
  0x00000000036bba5f: mov    0xdc(%rdx),%esi
  0x00000000036bba65: add    $0x8,%esi
  0x00000000036bba68: mov    %esi,0xdc(%rdx)
  0x00000000036bba6e: movabs $0x1c61e518,%rdx   ;   {metadata({method} {0x000000001c61e520} &apos;isUnderflow&apos; &apos;()Z&apos; in &apos;java/nio/charset/CoderResult&apos;)}
  0x00000000036bba78: and    $0x7ffff8,%esi
  0x00000000036bba7e: cmp    $0x0,%esi
  0x00000000036bba81: je     0x00000000036bc51a
  0x00000000036bba87: mov    0xc(%rax),%edx     ;*getfield type
                                                ; - java.nio.charset.CoderResult::isUnderflow@1 (line 120)
                                                ; - java.lang.StringCoding$StringEncoder::encode@110 (line 312)

  0x00000000036bba8a: cmp    $0x0,%edx
  0x00000000036bba8d: movabs $0x1c6d6290,%rdx   ;   {metadata(method data for {method} {0x000000001c61e520} &apos;isUnderflow&apos; &apos;()Z&apos; in &apos;java/nio/charset/CoderResult&apos;)}
  0x00000000036bba97: movabs $0x108,%rsi
  0x00000000036bbaa1: jne    0x00000000036bbab1
  0x00000000036bbaa7: movabs $0x118,%rsi
  0x00000000036bbab1: mov    (%rdx,%rsi,1),%rdi
  0x00000000036bbab5: lea    0x1(%rdi),%rdi
  0x00000000036bbab9: mov    %rdi,(%rdx,%rsi,1)
  0x00000000036bbabd: jne    0x00000000036bbadd  ;*ifne
                                                ; - java.nio.charset.CoderResult::isUnderflow@4 (line 120)
                                                ; - java.lang.StringCoding$StringEncoder::encode@110 (line 312)

  0x00000000036bbac3: movabs $0x1c6d6290,%rdx   ;   {metadata(method data for {method} {0x000000001c61e520} &apos;isUnderflow&apos; &apos;()Z&apos; in &apos;java/nio/charset/CoderResult&apos;)}
  0x00000000036bbacd: incl   0x128(%rdx)
  0x00000000036bbad3: mov    $0x1,%edx
  0x00000000036bbad8: jmpq   0x00000000036bbae2  ;*goto
                                                ; - java.nio.charset.CoderResult::isUnderflow@8 (line 120)
                                                ; - java.lang.StringCoding$StringEncoder::encode@110 (line 312)

  0x00000000036bbadd: mov    $0x0,%edx          ;*ireturn
                                                ; - java.nio.charset.CoderResult::isUnderflow@12 (line 120)
                                                ; - java.lang.StringCoding$StringEncoder::encode@110 (line 312)

  0x00000000036bbae2: and    $0x1,%edx
  0x00000000036bbae5: cmp    $0x0,%edx
  0x00000000036bbae8: movabs $0x1c7c8260,%rdx   ;   {metadata(method data for {method} {0x000000001c616d60} &apos;encode&apos; &apos;([CII)[B&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036bbaf2: movabs $0x2d8,%rsi
  0x00000000036bbafc: jne    0x00000000036bbb0c
  0x00000000036bbb02: movabs $0x2e8,%rsi
  0x00000000036bbb0c: mov    (%rdx,%rsi,1),%rdi
  0x00000000036bbb10: lea    0x1(%rdi),%rdi
  0x00000000036bbb14: mov    %rdi,(%rdx,%rsi,1)
  0x00000000036bbb18: jne    0x00000000036bbb4c  ;*ifne
                                                ; - java.lang.StringCoding$StringEncoder::encode@113 (line 312)

  0x00000000036bbb1e: mov    %rax,%rdx
  0x00000000036bbb21: movabs $0x1c7c8260,%rsi   ;   {metadata(method data for {method} {0x000000001c616d60} &apos;encode&apos; &apos;([CII)[B&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036bbb2b: movabs $0x7c002f040,%r10  ;   {metadata(&apos;java/nio/charset/CoderResult&apos;)}
  0x00000000036bbb35: mov    %r10,0x300(%rsi)
  0x00000000036bbb3c: addq   $0x1,0x308(%rsi)
  0x00000000036bbb44: mov    %rax,%rdx          ;*invokevirtual throwException
                                                ; - java.lang.StringCoding$StringEncoder::encode@118 (line 313)

  0x00000000036bbb47: callq  0x00000000035d61a0  ; OopMap{[216]=Oop [248]=Oop [208]=Oop off=4076}
                                                ;*invokevirtual throwException
                                                ; - java.lang.StringCoding$StringEncoder::encode@118 (line 313)
                                                ;   {optimized virtual_call}
  0x00000000036bbb4c: mov    0xd0(%rsp),%rdx
  0x00000000036bbb54: mov    0x14(%rdx),%esi
  0x00000000036bbb57: shl    $0x3,%rsi          ;*getfield ce
                                                ; - java.lang.StringCoding$StringEncoder::encode@122 (line 314)

  0x00000000036bbb5b: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x00000000036bc531
  0x00000000036bbb5e: mov    %rsi,%r8
  0x00000000036bbb61: movabs $0x1c7c8260,%rdi   ;   {metadata(method data for {method} {0x000000001c616d60} &apos;encode&apos; &apos;([CII)[B&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036bbb6b: mov    0x8(%r8),%r8d
  0x00000000036bbb6f: shl    $0x3,%r8
  0x00000000036bbb73: cmp    0x330(%rdi),%r8
  0x00000000036bbb7a: jne    0x00000000036bbb89
  0x00000000036bbb7c: addq   $0x1,0x338(%rdi)
  0x00000000036bbb84: jmpq   0x00000000036bbbef
  0x00000000036bbb89: cmp    0x340(%rdi),%r8
  0x00000000036bbb90: jne    0x00000000036bbb9f
  0x00000000036bbb92: addq   $0x1,0x348(%rdi)
  0x00000000036bbb9a: jmpq   0x00000000036bbbef
  0x00000000036bbb9f: cmpq   $0x0,0x330(%rdi)
  0x00000000036bbbaa: jne    0x00000000036bbbc3
  0x00000000036bbbac: mov    %r8,0x330(%rdi)
  0x00000000036bbbb3: movq   $0x1,0x338(%rdi)
  0x00000000036bbbbe: jmpq   0x00000000036bbbef
  0x00000000036bbbc3: cmpq   $0x0,0x340(%rdi)
  0x00000000036bbbce: jne    0x00000000036bbbe7
  0x00000000036bbbd0: mov    %r8,0x340(%rdi)
  0x00000000036bbbd7: movq   $0x1,0x348(%rdi)
  0x00000000036bbbe2: jmpq   0x00000000036bbbef
  0x00000000036bbbe7: addq   $0x1,0x328(%rdi)
  0x00000000036bbbef: mov    0xf8(%rsp),%r8
  0x00000000036bbbf7: mov    %rsi,%rdx          ;*invokevirtual flush
                                                ; - java.lang.StringCoding$StringEncoder::encode@127 (line 314)

  0x00000000036bbbfa: nop
  0x00000000036bbbfb: nop
  0x00000000036bbbfc: nop
  0x00000000036bbbfd: nop
  0x00000000036bbbfe: nop
  0x00000000036bbbff: callq  0x00000000035d61a0  ; OopMap{[216]=Oop [248]=Oop [208]=Oop off=4260}
                                                ;*invokevirtual flush
                                                ; - java.lang.StringCoding$StringEncoder::encode@127 (line 314)
                                                ;   {optimized virtual_call}
  0x00000000036bbc04: cmp    (%rax),%rax        ;*invokevirtual isUnderflow
                                                ; - java.lang.StringCoding$StringEncoder::encode@134 (line 315)
                                                ; implicit exception: dispatches to 0x00000000036bc536
  0x00000000036bbc07: mov    %rax,%rdx
  0x00000000036bbc0a: movabs $0x1c7c8260,%rsi   ;   {metadata(method data for {method} {0x000000001c616d60} &apos;encode&apos; &apos;([CII)[B&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036bbc14: movabs $0x7c002f040,%r10  ;   {metadata(&apos;java/nio/charset/CoderResult&apos;)}
  0x00000000036bbc1e: mov    %r10,0x360(%rsi)
  0x00000000036bbc25: addq   $0x1,0x368(%rsi)
  0x00000000036bbc2d: movabs $0x1c6d6290,%rdx   ;   {metadata(method data for {method} {0x000000001c61e520} &apos;isUnderflow&apos; &apos;()Z&apos; in &apos;java/nio/charset/CoderResult&apos;)}
  0x00000000036bbc37: mov    0xdc(%rdx),%esi
  0x00000000036bbc3d: add    $0x8,%esi
  0x00000000036bbc40: mov    %esi,0xdc(%rdx)
  0x00000000036bbc46: movabs $0x1c61e518,%rdx   ;   {metadata({method} {0x000000001c61e520} &apos;isUnderflow&apos; &apos;()Z&apos; in &apos;java/nio/charset/CoderResult&apos;)}
  0x00000000036bbc50: and    $0x7ffff8,%esi
  0x00000000036bbc56: cmp    $0x0,%esi
  0x00000000036bbc59: je     0x00000000036bc53b
  0x00000000036bbc5f: mov    0xc(%rax),%edx     ;*getfield type
                                                ; - java.nio.charset.CoderResult::isUnderflow@1 (line 120)
                                                ; - java.lang.StringCoding$StringEncoder::encode@134 (line 315)

  0x00000000036bbc62: cmp    $0x0,%edx
  0x00000000036bbc65: movabs $0x1c6d6290,%rdx   ;   {metadata(method data for {method} {0x000000001c61e520} &apos;isUnderflow&apos; &apos;()Z&apos; in &apos;java/nio/charset/CoderResult&apos;)}
  0x00000000036bbc6f: movabs $0x108,%rsi
  0x00000000036bbc79: jne    0x00000000036bbc89
  0x00000000036bbc7f: movabs $0x118,%rsi
  0x00000000036bbc89: mov    (%rdx,%rsi,1),%rdi
  0x00000000036bbc8d: lea    0x1(%rdi),%rdi
  0x00000000036bbc91: mov    %rdi,(%rdx,%rsi,1)
  0x00000000036bbc95: jne    0x00000000036bbcb5  ;*ifne
                                                ; - java.nio.charset.CoderResult::isUnderflow@4 (line 120)
                                                ; - java.lang.StringCoding$StringEncoder::encode@134 (line 315)

  0x00000000036bbc9b: movabs $0x1c6d6290,%rdx   ;   {metadata(method data for {method} {0x000000001c61e520} &apos;isUnderflow&apos; &apos;()Z&apos; in &apos;java/nio/charset/CoderResult&apos;)}
  0x00000000036bbca5: incl   0x128(%rdx)
  0x00000000036bbcab: mov    $0x1,%edx
  0x00000000036bbcb0: jmpq   0x00000000036bbcba  ;*goto
                                                ; - java.nio.charset.CoderResult::isUnderflow@8 (line 120)
                                                ; - java.lang.StringCoding$StringEncoder::encode@134 (line 315)

  0x00000000036bbcb5: mov    $0x0,%edx          ;*ireturn
                                                ; - java.nio.charset.CoderResult::isUnderflow@12 (line 120)
                                                ; - java.lang.StringCoding$StringEncoder::encode@134 (line 315)

  0x00000000036bbcba: and    $0x1,%edx
  0x00000000036bbcbd: cmp    $0x0,%edx
  0x00000000036bbcc0: movabs $0x1c7c8260,%rdx   ;   {metadata(method data for {method} {0x000000001c616d60} &apos;encode&apos; &apos;([CII)[B&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036bbcca: movabs $0x388,%rsi
  0x00000000036bbcd4: jne    0x00000000036bbce4
  0x00000000036bbcda: movabs $0x398,%rsi
  0x00000000036bbce4: mov    (%rdx,%rsi,1),%rdi
  0x00000000036bbce8: lea    0x1(%rdi),%rdi
  0x00000000036bbcec: mov    %rdi,(%rdx,%rsi,1)
  0x00000000036bbcf0: jne    0x00000000036bbd24  ;*ifne
                                                ; - java.lang.StringCoding$StringEncoder::encode@137 (line 315)

  0x00000000036bbcf6: mov    %rax,%rdx
  0x00000000036bbcf9: movabs $0x1c7c8260,%rsi   ;   {metadata(method data for {method} {0x000000001c616d60} &apos;encode&apos; &apos;([CII)[B&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036bbd03: movabs $0x7c002f040,%r10  ;   {metadata(&apos;java/nio/charset/CoderResult&apos;)}
  0x00000000036bbd0d: mov    %r10,0x3b0(%rsi)
  0x00000000036bbd14: addq   $0x1,0x3b8(%rsi)
  0x00000000036bbd1c: mov    %rax,%rdx          ;*invokevirtual throwException
                                                ; - java.lang.StringCoding$StringEncoder::encode@142 (line 316)

  0x00000000036bbd1f: callq  0x00000000035d61a0  ; OopMap{[216]=Oop [248]=Oop [208]=Oop off=4548}
                                                ;*invokevirtual throwException
                                                ; - java.lang.StringCoding$StringEncoder::encode@142 (line 316)
                                                ;   {optimized virtual_call}
  0x00000000036bbd24: movabs $0x1c7c8260,%rbx   ;   {metadata(method data for {method} {0x000000001c616d60} &apos;encode&apos; &apos;([CII)[B&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036bbd2e: incl   0x3d8(%rbx)        ;*goto
                                                ; - java.lang.StringCoding$StringEncoder::encode@145 (line 321)

  0x00000000036bbd34: mov    0xf8(%rsp),%rax
  0x00000000036bbd3c: mov    0xd0(%rsp),%rdx
  0x00000000036bbd44: mov    %rax,%rbx
  0x00000000036bbd47: movabs $0x1c7c8260,%rsi   ;   {metadata(method data for {method} {0x000000001c616d60} &apos;encode&apos; &apos;([CII)[B&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036bbd51: mov    0x8(%rbx),%ebx
  0x00000000036bbd54: shl    $0x3,%rbx
  0x00000000036bbd58: cmp    0x408(%rsi),%rbx
  0x00000000036bbd5f: jne    0x00000000036bbd6e
  0x00000000036bbd61: addq   $0x1,0x410(%rsi)
  0x00000000036bbd69: jmpq   0x00000000036bbdd4
  0x00000000036bbd6e: cmp    0x418(%rsi),%rbx
  0x00000000036bbd75: jne    0x00000000036bbd84
  0x00000000036bbd77: addq   $0x1,0x420(%rsi)
  0x00000000036bbd7f: jmpq   0x00000000036bbdd4
  0x00000000036bbd84: cmpq   $0x0,0x408(%rsi)
  0x00000000036bbd8f: jne    0x00000000036bbda8
  0x00000000036bbd91: mov    %rbx,0x408(%rsi)
  0x00000000036bbd98: movq   $0x1,0x410(%rsi)
  0x00000000036bbda3: jmpq   0x00000000036bbdd4
  0x00000000036bbda8: cmpq   $0x0,0x418(%rsi)
  0x00000000036bbdb3: jne    0x00000000036bbdcc
  0x00000000036bbdb5: mov    %rbx,0x418(%rsi)
  0x00000000036bbdbc: movq   $0x1,0x420(%rsi)
  0x00000000036bbdc7: jmpq   0x00000000036bbdd4
  0x00000000036bbdcc: addq   $0x1,0x400(%rsi)
  0x00000000036bbdd4: mov    0x18(%rax),%r8d    ;*getfield position
                                                ; - java.nio.Buffer::position@1 (line 226)
                                                ; - java.lang.StringCoding$StringEncoder::encode@164 (line 322)

  0x00000000036bbdd8: mov    0x10(%rdx),%ebx
  0x00000000036bbddb: shl    $0x3,%rbx          ;*getfield cs
                                                ; - java.lang.StringCoding$StringEncoder::encode@168 (line 322)

  0x00000000036bbddf: movsbl 0xc(%rdx),%edx     ;*getfield isTrusted
                                                ; - java.lang.StringCoding$StringEncoder::encode@172 (line 322)

  0x00000000036bbde3: movabs $0x1c7c8260,%rsi   ;   {metadata(method data for {method} {0x000000001c616d60} &apos;encode&apos; &apos;([CII)[B&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036bbded: addq   $0x1,0x430(%rsi)
  0x00000000036bbdf5: movabs $0x1c7e40b0,%rsi   ;   {metadata(method data for {method} {0x000000001c5ca010} &apos;access$300&apos; &apos;([BILjava/nio/charset/Charset;Z)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036bbdff: mov    0xdc(%rsi),%edi
  0x00000000036bbe05: add    $0x8,%edi
  0x00000000036bbe08: mov    %edi,0xdc(%rsi)
  0x00000000036bbe0e: movabs $0x1c5ca008,%rsi   ;   {metadata({method} {0x000000001c5ca010} &apos;access$300&apos; &apos;([BILjava/nio/charset/Charset;Z)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036bbe18: and    $0x7ffff8,%edi
  0x00000000036bbe1e: cmp    $0x0,%edi
  0x00000000036bbe21: je     0x00000000036bc552
  0x00000000036bbe27: movabs $0x1c7e40b0,%rbx   ;   {metadata(method data for {method} {0x000000001c5ca010} &apos;access$300&apos; &apos;([BILjava/nio/charset/Charset;Z)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036bbe31: addq   $0x1,0x108(%rbx)
  0x00000000036bbe39: movabs $0x1c7e4500,%rbx   ;   {metadata(method data for {method} {0x000000001c5c9458} &apos;safeTrim&apos; &apos;([BILjava/nio/charset/Charset;Z)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036bbe43: mov    0xdc(%rbx),%esi
  0x00000000036bbe49: add    $0x8,%esi
  0x00000000036bbe4c: mov    %esi,0xdc(%rbx)
  0x00000000036bbe52: movabs $0x1c5c9450,%rbx   ;   {metadata({method} {0x000000001c5c9458} &apos;safeTrim&apos; &apos;([BILjava/nio/charset/Charset;Z)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036bbe5c: and    $0x7ffff8,%esi
  0x00000000036bbe62: cmp    $0x0,%esi
  0x00000000036bbe65: je     0x00000000036bc569
  0x00000000036bbe6b: cmp    0x100(%rsp),%r8d
  0x00000000036bbe73: movabs $0x1c7e4500,%rbx   ;   {metadata(method data for {method} {0x000000001c5c9458} &apos;safeTrim&apos; &apos;([BILjava/nio/charset/Charset;Z)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036bbe7d: movabs $0x108,%rsi
  0x00000000036bbe87: jne    0x00000000036bbe97
  0x00000000036bbe8d: movabs $0x118,%rsi
  0x00000000036bbe97: mov    (%rbx,%rsi,1),%rdi
  0x00000000036bbe9b: lea    0x1(%rdi),%rdi
  0x00000000036bbe9f: mov    %rdi,(%rbx,%rsi,1)
  0x00000000036bbea3: jne    0x00000000036bbf71  ;*if_icmpne
                                                ; - java.lang.StringCoding::safeTrim@3 (line 76)
                                                ; - java.lang.StringCoding::access$300@4 (line 50)
                                                ; - java.lang.StringCoding$StringEncoder::encode@175 (line 322)

  0x00000000036bbea9: cmp    $0x0,%edx
  0x00000000036bbeac: movabs $0x1c7e4500,%rbx   ;   {metadata(method data for {method} {0x000000001c5c9458} &apos;safeTrim&apos; &apos;([BILjava/nio/charset/Charset;Z)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036bbeb6: movabs $0x128,%rdx
  0x00000000036bbec0: jne    0x00000000036bbed0
  0x00000000036bbec6: movabs $0x138,%rdx
  0x00000000036bbed0: mov    (%rbx,%rdx,1),%rsi
  0x00000000036bbed4: lea    0x1(%rsi),%rsi
  0x00000000036bbed8: mov    %rsi,(%rbx,%rdx,1)
  0x00000000036bbedc: jne    0x00000000036bc180  ;*ifne
                                                ; - java.lang.StringCoding::safeTrim@7 (line 76)
                                                ; - java.lang.StringCoding::access$300@4 (line 50)
                                                ; - java.lang.StringCoding$StringEncoder::encode@175 (line 322)

  0x00000000036bbee2: movabs $0x1c7e4500,%rbx   ;   {metadata(method data for {method} {0x000000001c5c9458} &apos;safeTrim&apos; &apos;([BILjava/nio/charset/Charset;Z)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036bbeec: addq   $0x1,0x148(%rbx)
  0x00000000036bbef4: movabs $0x1c6839a0,%rbx   ;   {metadata(method data for {method} {0x000000001c4a9508} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x00000000036bbefe: mov    0xdc(%rbx),%edx
  0x00000000036bbf04: add    $0x8,%edx
  0x00000000036bbf07: mov    %edx,0xdc(%rbx)
  0x00000000036bbf0d: movabs $0x1c4a9500,%rbx   ;   {metadata({method} {0x000000001c4a9508} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x00000000036bbf17: and    $0x7ffff8,%edx
  0x00000000036bbf1d: cmp    $0x0,%edx
  0x00000000036bbf20: je     0x00000000036bc580
  0x00000000036bbf26: movabs $0x76c100c78,%rbx  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00000000036bbf30: mov    0x74(%rbx),%ebx
  0x00000000036bbf33: shl    $0x3,%rbx          ;*getstatic security
                                                ; - java.lang.System::getSecurityManager@0 (line 334)
                                                ; - java.lang.StringCoding::safeTrim@10 (line 76)
                                                ; - java.lang.StringCoding::access$300@4 (line 50)
                                                ; - java.lang.StringCoding$StringEncoder::encode@175 (line 322)

  0x00000000036bbf37: cmp    $0x0,%rbx
  0x00000000036bbf3b: movabs $0x1c7e4500,%rbx   ;   {metadata(method data for {method} {0x000000001c5c9458} &apos;safeTrim&apos; &apos;([BILjava/nio/charset/Charset;Z)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036bbf45: movabs $0x158,%rdx
  0x00000000036bbf4f: jne    0x00000000036bbf5f
  0x00000000036bbf55: movabs $0x168,%rdx
  0x00000000036bbf5f: mov    (%rbx,%rdx,1),%rsi
  0x00000000036bbf63: lea    0x1(%rsi),%rsi
  0x00000000036bbf67: mov    %rsi,(%rbx,%rdx,1)
  0x00000000036bbf6b: je     0x00000000036bc180  ;*ifnonnull
                                                ; - java.lang.StringCoding::safeTrim@13 (line 76)
                                                ; - java.lang.StringCoding::access$300@4 (line 50)
                                                ; - java.lang.StringCoding$StringEncoder::encode@175 (line 322)

  0x00000000036bbf71: mov    0x100(%rsp),%r9d
  0x00000000036bbf79: movabs $0x1c7e4500,%rbx   ;   {metadata(method data for {method} {0x000000001c5c9458} &apos;safeTrim&apos; &apos;([BILjava/nio/charset/Charset;Z)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x00000000036bbf83: addq   $0x1,0x178(%rbx)
  0x00000000036bbf8b: movabs $0x1c6d3478,%rbx   ;   {metadata(method data for {method} {0x000000001c5a88f8} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000036bbf95: mov    0xdc(%rbx),%edx
  0x00000000036bbf9b: add    $0x8,%edx
  0x00000000036bbf9e: mov    %edx,0xdc(%rbx)
  0x00000000036bbfa4: movabs $0x1c5a88f0,%rbx   ;   {metadata({method} {0x000000001c5a88f8} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000036bbfae: and    $0x7ffff8,%edx
  0x00000000036bbfb4: cmp    $0x0,%edx
  0x00000000036bbfb7: je     0x00000000036bc597
  0x00000000036bbfbd: mov    %r8,%rbx
  0x00000000036bbfc0: movabs $0x7c00007a8,%rdx  ;   {metadata({type array byte})}
  0x00000000036bbfca: movslq %ebx,%rbx
  0x00000000036bbfcd: mov    %rbx,%rdi
  0x00000000036bbfd0: cmp    $0xffffff,%rbx
  0x00000000036bbfd7: ja     0x00000000036bc5ae
  0x00000000036bbfdd: movabs $0x17,%rsi
  0x00000000036bbfe7: lea    (%rsi,%rbx,1),%rsi
  0x00000000036bbfeb: and    $0xfffffffffffffff8,%rsi
  0x00000000036bbfef: mov    0x60(%r15),%rax
  0x00000000036bbff3: lea    (%rax,%rsi,1),%rsi
  0x00000000036bbff7: cmp    0x70(%r15),%rsi
  0x00000000036bbffb: ja     0x00000000036bc5ae
  0x00000000036bc001: mov    %rsi,0x60(%r15)
  0x00000000036bc005: sub    %rax,%rsi
  0x00000000036bc008: movq   $0x1,(%rax)
  0x00000000036bc00f: mov    %rdx,%rcx
  0x00000000036bc012: shr    $0x3,%rcx
  0x00000000036bc016: mov    %ecx,0x8(%rax)
  0x00000000036bc019: mov    %ebx,0xc(%rax)
  0x00000000036bc01c: sub    $0x10,%rsi
  0x00000000036bc020: je     0x00000000036bc037
  0x00000000036bc026: xor    %rbx,%rbx
  0x00000000036bc029: shr    $0x3,%rsi
  0x00000000036bc02d: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000000036bc032: dec    %rsi
  0x00000000036bc035: jne    0x00000000036bc02d  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3236)
                                                ; - java.lang.StringCoding::safeTrim@20 (line 79)
                                                ; - java.lang.StringCoding::access$300@4 (line 50)
                                                ; - java.lang.StringCoding$StringEncoder::encode@175 (line 322)

  0x00000000036bc037: movabs $0x1c6d3478,%rdx   ;   {metadata(method data for {method} {0x000000001c5a88f8} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000036bc041: addq   $0x1,0x108(%rdx)
  0x00000000036bc049: movabs $0x1c67e6d0,%rdx   ;   {metadata(method data for {method} {0x000000001c584640} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000036bc053: mov    0xdc(%rdx),%edi
  0x00000000036bc059: add    $0x8,%edi
  0x00000000036bc05c: mov    %edi,0xdc(%rdx)
  0x00000000036bc062: movabs $0x1c584638,%rdx   ;   {metadata({method} {0x000000001c584640} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000036bc06c: and    $0x7ffff8,%edi
  0x00000000036bc072: cmp    $0x0,%edi
  0x00000000036bc075: je     0x00000000036bc5b8
  0x00000000036bc07b: cmp    %r8d,%r9d
  0x00000000036bc07e: movabs $0x1c67e6d0,%rdx   ;   {metadata(method data for {method} {0x000000001c584640} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000036bc088: movabs $0x108,%rdi
  0x00000000036bc092: jg     0x00000000036bc0a2
  0x00000000036bc098: movabs $0x118,%rdi
  0x00000000036bc0a2: mov    (%rdx,%rdi,1),%rsi
  0x00000000036bc0a6: lea    0x1(%rsi),%rsi
  0x00000000036bc0aa: mov    %rsi,(%rdx,%rdi,1)
  0x00000000036bc0ae: jg     0x00000000036bc0cc  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)
                                                ; - java.lang.StringCoding::safeTrim@20 (line 79)
                                                ; - java.lang.StringCoding::access$300@4 (line 50)
                                                ; - java.lang.StringCoding$StringEncoder::encode@175 (line 322)

  0x00000000036bc0b4: movabs $0x1c67e6d0,%rdx   ;   {metadata(method data for {method} {0x000000001c584640} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000036bc0be: incl   0x128(%rdx)
  0x00000000036bc0c4: mov    %r9,%rbx
  0x00000000036bc0c7: jmpq   0x00000000036bc0cf  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)
                                                ; - java.lang.StringCoding::safeTrim@20 (line 79)
                                                ; - java.lang.StringCoding::access$300@4 (line 50)
                                                ; - java.lang.StringCoding$StringEncoder::encode@175 (line 322)

  0x00000000036bc0cc: mov    %r8,%rbx           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)
                                                ; - java.lang.StringCoding::safeTrim@20 (line 79)
                                                ; - java.lang.StringCoding::access$300@4 (line 50)
                                                ; - java.lang.StringCoding$StringEncoder::encode@175 (line 322)

  0x00000000036bc0cf: movabs $0x1c6d3478,%rdx   ;   {metadata(method data for {method} {0x000000001c5a88f8} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000036bc0d9: addq   $0x1,0x118(%rdx)
  0x00000000036bc0e1: mov    0xd8(%rsp),%rdx
  0x00000000036bc0e9: mov    $0x0,%r8d
  0x00000000036bc0ef: mov    %rax,%r9
  0x00000000036bc0f2: mov    $0x0,%edi
  0x00000000036bc0f7: mov    %rbx,%rsi
  0x00000000036bc0fa: mov    %rax,0x110(%rsp)
  0x00000000036bc102: lea    (%r8,%rsi,1),%rcx
  0x00000000036bc106: cmp    0xc(%rdx),%ecx
  0x00000000036bc109: ja     0x00000000036bc5cf
  0x00000000036bc10f: lea    (%rdi,%rsi,1),%rcx
  0x00000000036bc113: cmp    0xc(%r9),%ecx
  0x00000000036bc117: ja     0x00000000036bc5cf
  0x00000000036bc11d: test   %esi,%esi
  0x00000000036bc11f: jl     0x00000000036bc5cf
  0x00000000036bc125: je     0x00000000036bc169
  0x00000000036bc12b: movslq %r8d,%r8
  0x00000000036bc12e: movslq %edi,%rdi
  0x00000000036bc131: lea    0x10(%rdx,%r8,1),%rcx
  0x00000000036bc136: lea    0x10(%r9,%rdi,1),%rdx
  0x00000000036bc13b: mov    %rsi,%r8
  0x00000000036bc13e: sub    $0x20,%rsp
  0x00000000036bc142: test   $0xf,%esp
  0x00000000036bc148: je     0x00000000036bc160
  0x00000000036bc14e: sub    $0x8,%rsp
  0x00000000036bc152: callq  Stub::jbyte_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00000000036bc157: add    $0x8,%rsp
  0x00000000036bc15b: jmpq   0x00000000036bc165
  0x00000000036bc160: callq  Stub::jbyte_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00000000036bc165: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3237)
                                                ; - java.lang.StringCoding::safeTrim@20 (line 79)
                                                ; - java.lang.StringCoding::access$300@4 (line 50)
                                                ; - java.lang.StringCoding$StringEncoder::encode@175 (line 322)

  0x00000000036bc169: mov    0x110(%rsp),%rax
  0x00000000036bc171: add    $0x140,%rsp
  0x00000000036bc178: pop    %rbp
  0x00000000036bc179: test   %eax,-0x20cc07f(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036bc17f: retq   
  0x00000000036bc180: mov    0xd8(%rsp),%rax    ;*areturn
                                                ; - java.lang.StringCoding::access$300@7 (line 50)
                                                ; - java.lang.StringCoding$StringEncoder::encode@175 (line 322)

  0x00000000036bc188: add    $0x140,%rsp
  0x00000000036bc18f: pop    %rbp
  0x00000000036bc190: test   %eax,-0x20cc096(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036bc196: retq                      ;*areturn
                                                ; - java.lang.StringCoding$StringEncoder::encode@178 (line 322)

  0x00000000036bc197: add    $0x140,%rsp
  0x00000000036bc19e: pop    %rbp
  0x00000000036bc19f: test   %eax,-0x20cc0a5(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036bc1a5: retq                      ;*areturn
                                                ; - java.lang.StringCoding$StringEncoder::encode@70 (line 305)

  0x00000000036bc1a6: mov    0xd8(%rsp),%rax
  0x00000000036bc1ae: add    $0x140,%rsp
  0x00000000036bc1b5: pop    %rbp
  0x00000000036bc1b6: test   %eax,-0x20cc0bc(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036bc1bc: retq                      ;*areturn
                                                ; - java.lang.StringCoding$StringEncoder::encode@25 (line 302)

  0x00000000036bc1bd: mov    0x2a8(%r15),%rax
  0x00000000036bc1c4: xor    %r10,%r10
  0x00000000036bc1c7: mov    %r10,0x2a8(%r15)
  0x00000000036bc1ce: xor    %r10,%r10
  0x00000000036bc1d1: mov    %r10,0x2b0(%r15)
  0x00000000036bc1d8: mov    %rax,%r8
  0x00000000036bc1db: nopl   0x0(%rax,%rax,1)
  0x00000000036bc1e0: jmpq   0x00000000036bc5e8  ;   {no_reloc}
  0x00000000036bc1e5: add    %al,(%rax)
  0x00000000036bc1e7: add    %al,(%rax)
  0x00000000036bc1e9: add    %cl,-0x75(%rcx)
  0x00000000036bc1ec: rex.RXB (bad) 
  0x00000000036bc1ee: lea    0x20(%rax),%rdi
  0x00000000036bc1f2: cmp    0x70(%r15),%rdi
  0x00000000036bc1f6: ja     0x00000000036bc5f2
  0x00000000036bc1fc: mov    %rdi,0x60(%r15)
  0x00000000036bc200: mov    0xa8(%rdx),%rcx
  0x00000000036bc207: mov    %rcx,(%rax)
  0x00000000036bc20a: mov    %rdx,%rcx
  0x00000000036bc20d: shr    $0x3,%rcx
  0x00000000036bc211: mov    %ecx,0x8(%rax)
  0x00000000036bc214: xor    %rcx,%rcx
  0x00000000036bc217: mov    %ecx,0xc(%rax)
  0x00000000036bc21a: xor    %rcx,%rcx
  0x00000000036bc21d: mov    %rcx,0x10(%rax)
  0x00000000036bc221: mov    %rcx,0x18(%rax)    ;*new  ; - java.lang.StringCoding$StringEncoder::encode@150 (line 320)

  0x00000000036bc225: mov    %rax,%rdx
  0x00000000036bc228: movabs $0x1c7c8260,%rsi   ;   {metadata(method data for {method} {0x000000001c616d60} &apos;encode&apos; &apos;([CII)[B&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x00000000036bc232: addq   $0x1,0x3f0(%rsi)
  0x00000000036bc23a: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringCoding$StringEncoder::encode@156 (line 320)

  0x00000000036bc23d: mov    %rax,0x118(%rsp)
  0x00000000036bc245: nop
  0x00000000036bc246: nop
  0x00000000036bc247: callq  0x00000000035d61a0  ; OopMap{[280]=Oop off=5868}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringCoding$StringEncoder::encode@156 (line 320)
                                                ;   {optimized virtual_call}
  0x00000000036bc24c: mov    0x118(%rsp),%rax
  0x00000000036bc254: jmpq   0x00000000036bc676  ;*athrow
                                                ; - java.lang.StringCoding$StringEncoder::encode@159 (line 320)

  0x00000000036bc259: mov    0x2a8(%r15),%rax
  0x00000000036bc260: xor    %r10,%r10
  0x00000000036bc263: mov    %r10,0x2a8(%r15)
  0x00000000036bc26a: xor    %r10,%r10
  0x00000000036bc26d: mov    %r10,0x2b0(%r15)
  0x00000000036bc274: nopl   0x0(%rax)
  0x00000000036bc278: jmpq   0x00000000036bc60e  ;   {no_reloc}
  0x00000000036bc27d: add    %al,(%rax)
  0x00000000036bc27f: add    %al,(%rax)
  0x00000000036bc281: add    %ch,%cl
  0x00000000036bc283: xchg   %eax,%ecx
  0x00000000036bc284: add    (%rax),%eax
  0x00000000036bc286: add    %cl,-0x75(%rax)    ;*new  ; - java.nio.CharBuffer::wrap@12 (line 375)
                                                ; - java.lang.StringCoding$StringEncoder::encode@89 (line 309)

  0x00000000036bc289: rorb   -0x45(%rax)        ;   {metadata(method data for {method} {0x000000001c619cf0} &apos;wrap&apos; &apos;([CII)Ljava/nio/CharBuffer;&apos; in &apos;java/nio/CharBuffer&apos;)}
  0x00000000036bc28c: or     %bl,0x1c7e(%rbx)
  0x00000000036bc292: add    %al,(%rax)
  0x00000000036bc294: addq   $0x1,0x118(%rbx)
  0x00000000036bc29c: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.nio.CharBuffer::wrap@16 (line 375)
                                                ; - java.lang.StringCoding$StringEncoder::encode@89 (line 309)

  0x00000000036bc29f: mov    %rax,0x120(%rsp)
  0x00000000036bc2a7: callq  0x00000000035d61a0  ; OopMap{[216]=Oop [288]=Oop [208]=Oop [248]=Oop off=5964}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.nio.CharBuffer::wrap@16 (line 375)
                                                ; - java.lang.StringCoding$StringEncoder::encode@89 (line 309)
                                                ;   {optimized virtual_call}
  0x00000000036bc2ac: mov    0x120(%rsp),%rax
  0x00000000036bc2b4: jmpq   0x00000000036bc676  ;*athrow
                                                ; - java.nio.CharBuffer::wrap@19 (line 375)
                                                ; - java.lang.StringCoding$StringEncoder::encode@89 (line 309)

  0x00000000036bc2b9: mov    0x2a8(%r15),%rax
  0x00000000036bc2c0: xor    %r10,%r10
  0x00000000036bc2c3: mov    %r10,0x2a8(%r15)
  0x00000000036bc2ca: xor    %r10,%r10
  0x00000000036bc2cd: mov    %r10,0x2b0(%r15)
  0x00000000036bc2d4: nopl   0x0(%rax)
  0x00000000036bc2d8: jmpq   0x00000000036bc634  ;   {no_reloc}
  0x00000000036bc2dd: add    %al,(%rax)
  0x00000000036bc2df: add    %al,(%rax)
  0x00000000036bc2e1: add    %ch,%cl
  0x00000000036bc2e3: push   %rdi
  0x00000000036bc2e4: add    (%rax),%eax
  0x00000000036bc2e6: add    %cl,-0x75(%rax)    ;*new  ; - java.nio.ByteBuffer::wrap@12 (line 375)
                                                ; - java.nio.ByteBuffer::wrap@4 (line 396)
                                                ; - java.lang.StringCoding$StringEncoder::encode@81 (line 308)

  0x00000000036bc2e9: rorb   -0x47(%rax)        ;   {metadata(method data for {method} {0x000000001c5f8550} &apos;wrap&apos; &apos;([BII)Ljava/nio/ByteBuffer;&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x00000000036bc2ec: push   %rax
  0x00000000036bc2ed: xchg   %edi,0x1c(%rsi)
  0x00000000036bc2f0: add    %al,(%rax)
  0x00000000036bc2f2: add    %al,(%rax)
  0x00000000036bc2f4: addq   $0x1,0x118(%rcx)
  0x00000000036bc2fc: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.nio.ByteBuffer::wrap@16 (line 375)
                                                ; - java.nio.ByteBuffer::wrap@4 (line 396)
                                                ; - java.lang.StringCoding$StringEncoder::encode@81 (line 308)

  0x00000000036bc2ff: mov    %rax,0x128(%rsp)
  0x00000000036bc307: callq  0x00000000035d61a0  ; OopMap{[240]=Oop [296]=Oop [208]=Oop [216]=Oop off=6060}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.nio.ByteBuffer::wrap@16 (line 375)
                                                ; - java.nio.ByteBuffer::wrap@4 (line 396)
                                                ; - java.lang.StringCoding$StringEncoder::encode@81 (line 308)
                                                ;   {optimized virtual_call}
  0x00000000036bc30c: mov    0x128(%rsp),%rax
  0x00000000036bc314: jmpq   0x00000000036bc676
  0x00000000036bc319: mov    %rbx,0x8(%rsp)
  0x00000000036bc31e: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036bc326: callq  0x00000000036919e0  ; OopMap{rdx=Oop [208]=Oop r8=Oop [240]=Oop off=6091}
                                                ;*synchronization entry
                                                ; - java.lang.StringCoding$StringEncoder::encode@-1 (line 299)
                                                ;   {runtime_call}
  0x00000000036bc32b: jmpq   0x00000000036babe0
  0x00000000036bc330: callq  0x000000000368d080  ; OopMap{rdx=Oop [208]=Oop r8=Oop [240]=Oop r11=Oop off=6101}
                                                ;*invokevirtual maxBytesPerChar
                                                ; - java.lang.StringCoding$StringEncoder::encode@5 (line 299)
                                                ;   {runtime_call}
  0x00000000036bc335: mov    %rbx,0x8(%rsp)
  0x00000000036bc33a: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036bc342: callq  0x00000000036919e0  ; OopMap{rdx=Oop [208]=Oop r8=Oop [240]=Oop r11=Oop off=6119}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetEncoder::maxBytesPerChar@-1 (line 465)
                                                ; - java.lang.StringCoding$StringEncoder::encode@5 (line 299)
                                                ;   {runtime_call}
  0x00000000036bc347: jmpq   0x00000000036bacad
  0x00000000036bc34c: mov    %rbx,0x8(%rsp)
  0x00000000036bc351: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036bc359: callq  0x00000000036919e0  ; OopMap{rdx=Oop [208]=Oop r8=Oop [240]=Oop r11=Oop off=6142}
                                                ;*synchronization entry
                                                ; - java.lang.StringCoding::access$000@-1 (line 50)
                                                ; - java.lang.StringCoding$StringEncoder::encode@8 (line 299)
                                                ;   {runtime_call}
  0x00000000036bc35e: jmpq   0x00000000036bacf7
  0x00000000036bc363: mov    %rbx,0x8(%rsp)
  0x00000000036bc368: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036bc370: callq  0x00000000036919e0  ; OopMap{rdx=Oop [208]=Oop r8=Oop [240]=Oop r11=Oop off=6165}
                                                ;*synchronization entry
                                                ; - java.lang.StringCoding::scale@-1 (line 95)
                                                ; - java.lang.StringCoding::access$000@2 (line 50)
                                                ; - java.lang.StringCoding$StringEncoder::encode@8 (line 299)
                                                ;   {runtime_call}
  0x00000000036bc375: jmpq   0x00000000036bad3b
  0x00000000036bc37a: vcomisd 0x51f0c70e(%rip),%xmm1        # 0x00000000555c8a90
                                                ;   {external_word}
  0x00000000036bc382: jp     0x00000000036bc38b
  0x00000000036bc384: jb     0x00000000036bc38e
  0x00000000036bc386: dec    %rbx
  0x00000000036bc389: jmp    0x00000000036bc38e
  0x00000000036bc38b: xor    %rbx,%rbx
  0x00000000036bc38e: jmpq   0x00000000036bad57
  0x00000000036bc393: callq  0x000000000368e200  ; OopMap{r8=Oop [240]=Oop r11=Oop [208]=Oop off=6200}
                                                ;*newarray
                                                ; - java.lang.StringCoding$StringEncoder::encode@15 (line 300)
                                                ;   {runtime_call}
  0x00000000036bc398: jmpq   0x00000000036badd1
  0x00000000036bc39d: mov    %r11,(%rsp)
  0x00000000036bc3a1: callq  0x000000000368f500  ; OopMap{r8=Oop [240]=Oop rax=Oop [216]=Oop [208]=Oop off=6214}
                                                ;*checkcast
                                                ; - java.lang.StringCoding$StringEncoder::encode@40 (line 304)
                                                ;   {runtime_call}
  0x00000000036bc3a6: callq  0x000000000368d080  ; OopMap{r8=Oop [240]=Oop rax=Oop [216]=Oop [208]=Oop rbx=Oop off=6219}
                                                ;*invokeinterface encode
                                                ; - java.lang.StringCoding$StringEncoder::encode@48 (line 304)
                                                ;   {runtime_call}
  0x00000000036bc3ab: mov    %rsi,0x8(%rsp)
  0x00000000036bc3b0: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036bc3b8: callq  0x00000000036919e0  ; OopMap{[216]=Oop rbx=Oop off=6237}
                                                ;*synchronization entry
                                                ; - java.lang.StringCoding::access$300@-1 (line 50)
                                                ; - java.lang.StringCoding$StringEncoder::encode@67 (line 305)
                                                ;   {runtime_call}
  0x00000000036bc3bd: jmpq   0x00000000036bb15e
  0x00000000036bc3c2: mov    %rbx,0x8(%rsp)
  0x00000000036bc3c7: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036bc3cf: callq  0x00000000036919e0  ; OopMap{[216]=Oop off=6260}
                                                ;*synchronization entry
                                                ; - java.lang.StringCoding::safeTrim@-1 (line 76)
                                                ; - java.lang.StringCoding::access$300@4 (line 50)
                                                ; - java.lang.StringCoding$StringEncoder::encode@67 (line 305)
                                                ;   {runtime_call}
  0x00000000036bc3d4: jmpq   0x00000000036bb1a2
  0x00000000036bc3d9: mov    %rbx,0x8(%rsp)
  0x00000000036bc3de: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036bc3e6: callq  0x00000000036919e0  ; OopMap{rax=Oop [216]=Oop off=6283}
                                                ;*synchronization entry
                                                ; - java.lang.System::getSecurityManager@-1 (line 334)
                                                ; - java.lang.StringCoding::safeTrim@10 (line 76)
                                                ; - java.lang.StringCoding::access$300@4 (line 50)
                                                ; - java.lang.StringCoding$StringEncoder::encode@67 (line 305)
                                                ;   {runtime_call}
  0x00000000036bc3eb: jmpq   0x00000000036bb264
  0x00000000036bc3f0: mov    %rbx,0x8(%rsp)
  0x00000000036bc3f5: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036bc3fd: callq  0x00000000036919e0  ; OopMap{rax=Oop [216]=Oop off=6306}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3236)
                                                ; - java.lang.StringCoding::safeTrim@20 (line 79)
                                                ; - java.lang.StringCoding::access$300@4 (line 50)
                                                ; - java.lang.StringCoding$StringEncoder::encode@67 (line 305)
                                                ;   {runtime_call}
  0x00000000036bc402: jmpq   0x00000000036bb2f3
  0x00000000036bc407: callq  0x000000000368e200  ; OopMap{r13=Oop [216]=Oop off=6316}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3236)
                                                ; - java.lang.StringCoding::safeTrim@20 (line 79)
                                                ; - java.lang.StringCoding::access$300@4 (line 50)
                                                ; - java.lang.StringCoding$StringEncoder::encode@67 (line 305)
                                                ;   {runtime_call}
  0x00000000036bc40c: jmpq   0x00000000036bb370
  0x00000000036bc411: mov    %rdx,0x8(%rsp)
  0x00000000036bc416: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036bc41e: callq  0x00000000036919e0  ; OopMap{r13=Oop [216]=Oop rax=Oop off=6339}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)
                                                ; - java.lang.StringCoding::safeTrim@20 (line 79)
                                                ; - java.lang.StringCoding::access$300@4 (line 50)
                                                ; - java.lang.StringCoding$StringEncoder::encode@67 (line 305)
                                                ;   {runtime_call}
  0x00000000036bc423: jmpq   0x00000000036bb3b4
  0x00000000036bc428: nop
  0x00000000036bc429: nop
  0x00000000036bc42a: nop
  0x00000000036bc42b: nop
  0x00000000036bc42c: nop
  0x00000000036bc42d: nop
  0x00000000036bc42e: nop
  0x00000000036bc42f: callq  0x00000000035d6620  ; OopMap{[224]=Oop off=6356}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3237)
                                                ; - java.lang.StringCoding::safeTrim@20 (line 79)
                                                ; - java.lang.StringCoding::access$300@4 (line 50)
                                                ; - java.lang.StringCoding$StringEncoder::encode@67 (line 305)
                                                ;   {static_call}
  0x00000000036bc434: jmpq   0x00000000036bb49a
  0x00000000036bc439: mov    %rsi,0x8(%rsp)
  0x00000000036bc43e: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036bc446: callq  0x00000000036919e0  ; OopMap{[208]=Oop [240]=Oop r11=Oop r13=Oop [216]=Oop off=6379}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetEncoder::reset@-1 (line 709)
                                                ; - java.lang.StringCoding$StringEncoder::encode@75 (line 307)
                                                ;   {runtime_call}
  0x00000000036bc44b: jmpq   0x00000000036bb58b
  0x00000000036bc450: mov    %rsi,0x8(%rsp)
  0x00000000036bc455: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036bc45d: callq  0x00000000036919e0  ; OopMap{[208]=Oop [240]=Oop r11=Oop r13=Oop [216]=Oop off=6402}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CharsetEncoder::implReset@-1 (line 720)
                                                ; - java.nio.charset.CharsetEncoder::reset@1 (line 709)
                                                ; - java.lang.StringCoding$StringEncoder::encode@75 (line 307)
                                                ;   {runtime_call}
  0x00000000036bc462: jmpq   0x00000000036bb64d
  0x00000000036bc467: mov    %rsi,0x8(%rsp)
  0x00000000036bc46c: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036bc474: callq  0x00000000036919e0  ; OopMap{[208]=Oop [240]=Oop r13=Oop [216]=Oop off=6425}
                                                ;*synchronization entry
                                                ; - java.nio.ByteBuffer::wrap@-1 (line 396)
                                                ; - java.lang.StringCoding$StringEncoder::encode@81 (line 308)
                                                ;   {runtime_call}
  0x00000000036bc479: jmpq   0x00000000036bb699
  0x00000000036bc47e: mov    %rsi,0x8(%rsp)
  0x00000000036bc483: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036bc48b: callq  0x00000000036919e0  ; OopMap{[208]=Oop [240]=Oop r13=Oop [216]=Oop off=6448}
                                                ;*synchronization entry
                                                ; - java.nio.ByteBuffer::wrap@-1 (line 373)
                                                ; - java.nio.ByteBuffer::wrap@4 (line 396)
                                                ; - java.lang.StringCoding$StringEncoder::encode@81 (line 308)
                                                ;   {runtime_call}
  0x00000000036bc490: jmpq   0x00000000036bb6e1
  0x00000000036bc495: mov    %rdx,%rdx
  0x00000000036bc498: callq  0x000000000368d300  ; OopMap{[240]=Oop r13=Oop [216]=Oop [208]=Oop off=6461}
                                                ;*new  ; - java.nio.ByteBuffer::wrap@0 (line 373)
                                                ; - java.nio.ByteBuffer::wrap@4 (line 396)
                                                ; - java.lang.StringCoding$StringEncoder::encode@81 (line 308)
                                                ;   {runtime_call}
  0x00000000036bc49d: jmpq   0x00000000036bb72e
  0x00000000036bc4a2: mov    %rdi,0x8(%rsp)
  0x00000000036bc4a7: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036bc4af: callq  0x00000000036919e0  ; OopMap{[240]=Oop r13=Oop [216]=Oop [208]=Oop rax=Oop [248]=Oop off=6484}
                                                ;*synchronization entry
                                                ; - java.nio.HeapByteBuffer::&lt;init&gt;@-1 (line 70)
                                                ; - java.nio.ByteBuffer::wrap@7 (line 373)
                                                ; - java.nio.ByteBuffer::wrap@4 (line 396)
                                                ; - java.lang.StringCoding$StringEncoder::encode@81 (line 308)
                                                ;   {runtime_call}
  0x00000000036bc4b4: jmpq   0x00000000036bb77d
  0x00000000036bc4b9: mov    %rdx,0x8(%rsp)
  0x00000000036bc4be: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036bc4c6: callq  0x00000000036919e0  ; OopMap{[216]=Oop [208]=Oop [248]=Oop r8=Oop [240]=Oop off=6507}
                                                ;*synchronization entry
                                                ; - java.nio.CharBuffer::wrap@-1 (line 373)
                                                ; - java.lang.StringCoding$StringEncoder::encode@89 (line 309)
                                                ;   {runtime_call}
  0x00000000036bc4cb: jmpq   0x00000000036bb810
  0x00000000036bc4d0: mov    %rdx,%rdx
  0x00000000036bc4d3: callq  0x000000000368d300  ; OopMap{[216]=Oop [208]=Oop [248]=Oop r8=Oop [240]=Oop off=6520}
                                                ;*new  ; - java.nio.CharBuffer::wrap@0 (line 373)
                                                ; - java.lang.StringCoding$StringEncoder::encode@89 (line 309)
                                                ;   {runtime_call}
  0x00000000036bc4d8: jmpq   0x00000000036bb85d
  0x00000000036bc4dd: mov    %r9,0x8(%rsp)
  0x00000000036bc4e2: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036bc4ea: callq  0x00000000036919e0  ; OopMap{[216]=Oop [208]=Oop [248]=Oop r8=Oop [240]=Oop rax=Oop off=6543}
                                                ;*synchronization entry
                                                ; - java.nio.HeapCharBuffer::&lt;init&gt;@-1 (line 70)
                                                ; - java.nio.CharBuffer::wrap@7 (line 373)
                                                ; - java.lang.StringCoding$StringEncoder::encode@89 (line 309)
                                                ;   {runtime_call}
  0x00000000036bc4ef: jmpq   0x00000000036bb8a6
  0x00000000036bc4f4: callq  0x000000000368d080  ; OopMap{[216]=Oop [208]=Oop [248]=Oop r8=Oop [240]=Oop rax=Oop off=6553}
                                                ;*arraylength
                                                ; - java.nio.HeapCharBuffer::&lt;init&gt;@7 (line 70)
                                                ; - java.nio.CharBuffer::wrap@7 (line 373)
                                                ; - java.lang.StringCoding$StringEncoder::encode@89 (line 309)
                                                ;   {runtime_call}
  0x00000000036bc4f9: mov    %r9,0x8(%rsp)
  0x00000000036bc4fe: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036bc506: callq  0x00000000036919e0  ; OopMap{[216]=Oop [208]=Oop [248]=Oop r8=Oop [240]=Oop rax=Oop off=6571}
                                                ;*synchronization entry
                                                ; - java.nio.CharBuffer::&lt;init&gt;@-1 (line 281)
                                                ; - java.nio.HeapCharBuffer::&lt;init&gt;@10 (line 70)
                                                ; - java.nio.CharBuffer::wrap@7 (line 373)
                                                ; - java.lang.StringCoding$StringEncoder::encode@89 (line 309)
                                                ;   {runtime_call}
  0x00000000036bc50b: jmpq   0x00000000036bb901
  0x00000000036bc510: callq  0x000000000368d080  ; OopMap{[216]=Oop [248]=Oop rax=Oop rdx=Oop [208]=Oop rsi=Oop off=6581}
                                                ;*invokevirtual encode
                                                ; - java.lang.StringCoding$StringEncoder::encode@103 (line 311)
                                                ;   {runtime_call}
  0x00000000036bc515: callq  0x000000000368d080  ; OopMap{[216]=Oop [248]=Oop [208]=Oop rax=Oop off=6586}
                                                ;*invokevirtual isUnderflow
                                                ; - java.lang.StringCoding$StringEncoder::encode@110 (line 312)
                                                ;   {runtime_call}
  0x00000000036bc51a: mov    %rdx,0x8(%rsp)
  0x00000000036bc51f: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036bc527: callq  0x00000000036919e0  ; OopMap{[216]=Oop [248]=Oop [208]=Oop rax=Oop off=6604}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CoderResult::isUnderflow@-1 (line 120)
                                                ; - java.lang.StringCoding$StringEncoder::encode@110 (line 312)
                                                ;   {runtime_call}
  0x00000000036bc52c: jmpq   0x00000000036bba87
  0x00000000036bc531: callq  0x000000000368d080  ; OopMap{[216]=Oop [248]=Oop rdx=Oop [208]=Oop rsi=Oop off=6614}
                                                ;*invokevirtual flush
                                                ; - java.lang.StringCoding$StringEncoder::encode@127 (line 314)
                                                ;   {runtime_call}
  0x00000000036bc536: callq  0x000000000368d080  ; OopMap{[216]=Oop [248]=Oop [208]=Oop rax=Oop off=6619}
                                                ;*invokevirtual isUnderflow
                                                ; - java.lang.StringCoding$StringEncoder::encode@134 (line 315)
                                                ;   {runtime_call}
  0x00000000036bc53b: mov    %rdx,0x8(%rsp)
  0x00000000036bc540: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036bc548: callq  0x00000000036919e0  ; OopMap{[216]=Oop [248]=Oop [208]=Oop rax=Oop off=6637}
                                                ;*synchronization entry
                                                ; - java.nio.charset.CoderResult::isUnderflow@-1 (line 120)
                                                ; - java.lang.StringCoding$StringEncoder::encode@134 (line 315)
                                                ;   {runtime_call}
  0x00000000036bc54d: jmpq   0x00000000036bbc5f
  0x00000000036bc552: mov    %rsi,0x8(%rsp)
  0x00000000036bc557: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036bc55f: callq  0x00000000036919e0  ; OopMap{[216]=Oop rbx=Oop off=6660}
                                                ;*synchronization entry
                                                ; - java.lang.StringCoding::access$300@-1 (line 50)
                                                ; - java.lang.StringCoding$StringEncoder::encode@175 (line 322)
                                                ;   {runtime_call}
  0x00000000036bc564: jmpq   0x00000000036bbe27
  0x00000000036bc569: mov    %rbx,0x8(%rsp)
  0x00000000036bc56e: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036bc576: callq  0x00000000036919e0  ; OopMap{[216]=Oop off=6683}
                                                ;*synchronization entry
                                                ; - java.lang.StringCoding::safeTrim@-1 (line 76)
                                                ; - java.lang.StringCoding::access$300@4 (line 50)
                                                ; - java.lang.StringCoding$StringEncoder::encode@175 (line 322)
                                                ;   {runtime_call}
  0x00000000036bc57b: jmpq   0x00000000036bbe6b
  0x00000000036bc580: mov    %rbx,0x8(%rsp)
  0x00000000036bc585: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036bc58d: callq  0x00000000036919e0  ; OopMap{[216]=Oop off=6706}
                                                ;*synchronization entry
                                                ; - java.lang.System::getSecurityManager@-1 (line 334)
                                                ; - java.lang.StringCoding::safeTrim@10 (line 76)
                                                ; - java.lang.StringCoding::access$300@4 (line 50)
                                                ; - java.lang.StringCoding$StringEncoder::encode@175 (line 322)
                                                ;   {runtime_call}
  0x00000000036bc592: jmpq   0x00000000036bbf26
  0x00000000036bc597: mov    %rbx,0x8(%rsp)
  0x00000000036bc59c: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036bc5a4: callq  0x00000000036919e0  ; OopMap{[216]=Oop off=6729}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3236)
                                                ; - java.lang.StringCoding::safeTrim@20 (line 79)
                                                ; - java.lang.StringCoding::access$300@4 (line 50)
                                                ; - java.lang.StringCoding$StringEncoder::encode@175 (line 322)
                                                ;   {runtime_call}
  0x00000000036bc5a9: jmpq   0x00000000036bbfbd
  0x00000000036bc5ae: callq  0x000000000368e200  ; OopMap{[216]=Oop off=6739}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3236)
                                                ; - java.lang.StringCoding::safeTrim@20 (line 79)
                                                ; - java.lang.StringCoding::access$300@4 (line 50)
                                                ; - java.lang.StringCoding$StringEncoder::encode@175 (line 322)
                                                ;   {runtime_call}
  0x00000000036bc5b3: jmpq   0x00000000036bc037
  0x00000000036bc5b8: mov    %rdx,0x8(%rsp)
  0x00000000036bc5bd: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036bc5c5: callq  0x00000000036919e0  ; OopMap{[216]=Oop rax=Oop off=6762}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)
                                                ; - java.lang.StringCoding::safeTrim@20 (line 79)
                                                ; - java.lang.StringCoding::access$300@4 (line 50)
                                                ; - java.lang.StringCoding$StringEncoder::encode@175 (line 322)
                                                ;   {runtime_call}
  0x00000000036bc5ca: jmpq   0x00000000036bc07b
  0x00000000036bc5cf: callq  0x00000000035d6620  ; OopMap{[272]=Oop off=6772}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3237)
                                                ; - java.lang.StringCoding::safeTrim@20 (line 79)
                                                ; - java.lang.StringCoding::access$300@4 (line 50)
                                                ; - java.lang.StringCoding$StringEncoder::encode@175 (line 322)
                                                ;   {static_call}
  0x00000000036bc5d4: jmpq   0x00000000036bc169
  0x00000000036bc5d9: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000036bc5e3: mov    $0xa050f00,%eax
  0x00000000036bc5e8: callq  0x0000000003690920  ; OopMap{r8=Oop off=6797}
                                                ;*new  ; - java.lang.StringCoding$StringEncoder::encode@150 (line 320)
                                                ;   {runtime_call}
  0x00000000036bc5ed: jmpq   0x00000000036bc1e0
  0x00000000036bc5f2: mov    %rdx,%rdx
  0x00000000036bc5f5: callq  0x000000000368d300  ; OopMap{r8=Oop off=6810}
                                                ;*new  ; - java.lang.StringCoding$StringEncoder::encode@150 (line 320)
                                                ;   {runtime_call}
  0x00000000036bc5fa: jmpq   0x00000000036bc225
  0x00000000036bc5ff: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000036bc609: mov    $0xa050f00,%eax
  0x00000000036bc60e: callq  0x0000000003690920  ; OopMap{[216]=Oop [248]=Oop [208]=Oop off=6835}
                                                ;*new  ; - java.nio.CharBuffer::wrap@12 (line 375)
                                                ; - java.lang.StringCoding$StringEncoder::encode@89 (line 309)
                                                ;   {runtime_call}
  0x00000000036bc613: jmpq   0x00000000036bc278
  0x00000000036bc618: mov    %rdx,%rdx
  0x00000000036bc61b: callq  0x000000000368d720  ; OopMap{[216]=Oop [248]=Oop [208]=Oop off=6848}
                                                ;*new  ; - java.nio.CharBuffer::wrap@12 (line 375)
                                                ; - java.lang.StringCoding$StringEncoder::encode@89 (line 309)
                                                ;   {runtime_call}
  0x00000000036bc620: jmpq   0x00000000036bc287
  0x00000000036bc625: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000036bc62f: mov    $0xa050f00,%eax
  0x00000000036bc634: callq  0x0000000003690920  ; OopMap{[240]=Oop [216]=Oop [208]=Oop off=6873}
                                                ;*new  ; - java.nio.ByteBuffer::wrap@12 (line 375)
                                                ; - java.nio.ByteBuffer::wrap@4 (line 396)
                                                ; - java.lang.StringCoding$StringEncoder::encode@81 (line 308)
                                                ;   {runtime_call}
  0x00000000036bc639: jmpq   0x00000000036bc2d8
  0x00000000036bc63e: mov    %rdx,%rdx
  0x00000000036bc641: callq  0x000000000368d720  ; OopMap{[240]=Oop [216]=Oop [208]=Oop off=6886}
                                                ;*new  ; - java.nio.ByteBuffer::wrap@12 (line 375)
                                                ; - java.nio.ByteBuffer::wrap@4 (line 396)
                                                ; - java.lang.StringCoding$StringEncoder::encode@81 (line 308)
                                                ;   {runtime_call}
  0x00000000036bc646: jmpq   0x00000000036bc2e7
  0x00000000036bc64b: nop
  0x00000000036bc64c: nop
  0x00000000036bc64d: mov    0x2a8(%r15),%rax
  0x00000000036bc654: movabs $0x0,%r10
  0x00000000036bc65e: mov    %r10,0x2a8(%r15)
  0x00000000036bc665: movabs $0x0,%r10
  0x00000000036bc66f: mov    %r10,0x2b0(%r15)
  0x00000000036bc676: add    $0x140,%rsp
  0x00000000036bc67d: pop    %rbp
  0x00000000036bc67e: jmpq   0x000000000368c620  ;   {runtime_call}
  0x00000000036bc683: hlt    
  0x00000000036bc684: hlt    
  0x00000000036bc685: hlt    
  0x00000000036bc686: hlt    
  0x00000000036bc687: hlt    
  0x00000000036bc688: hlt    
  0x00000000036bc689: hlt    
  0x00000000036bc68a: hlt    
  0x00000000036bc68b: hlt    
  0x00000000036bc68c: hlt    
  0x00000000036bc68d: hlt    
  0x00000000036bc68e: hlt    
  0x00000000036bc68f: hlt    
  0x00000000036bc690: hlt    
  0x00000000036bc691: hlt    
  0x00000000036bc692: hlt    
  0x00000000036bc693: hlt    
  0x00000000036bc694: hlt    
  0x00000000036bc695: hlt    
  0x00000000036bc696: hlt    
  0x00000000036bc697: hlt    
  0x00000000036bc698: hlt    
  0x00000000036bc699: hlt    
  0x00000000036bc69a: hlt    
  0x00000000036bc69b: hlt    
  0x00000000036bc69c: hlt    
  0x00000000036bc69d: hlt    
  0x00000000036bc69e: hlt    
  0x00000000036bc69f: hlt    
[Stub Code]
  0x00000000036bc6a0: nop                       ;   {no_reloc}
  0x00000000036bc6a1: nop
  0x00000000036bc6a2: nop
  0x00000000036bc6a3: nop
  0x00000000036bc6a4: nop
  0x00000000036bc6a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036bc6af: jmpq   0x00000000036bc6af  ;   {runtime_call}
  0x00000000036bc6b4: nop
  0x00000000036bc6b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036bc6bf: jmpq   0x00000000036bc6bf  ;   {runtime_call}
  0x00000000036bc6c4: nop
  0x00000000036bc6c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036bc6cf: jmpq   0x00000000036bc6cf  ;   {runtime_call}
  0x00000000036bc6d4: nop
  0x00000000036bc6d5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036bc6df: jmpq   0x00000000036bc6df  ;   {runtime_call}
  0x00000000036bc6e4: nop
  0x00000000036bc6e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036bc6ef: jmpq   0x00000000036bc6ef  ;   {runtime_call}
  0x00000000036bc6f4: nop
  0x00000000036bc6f5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036bc6ff: jmpq   0x00000000036bc6ff  ;   {runtime_call}
  0x00000000036bc704: nop
  0x00000000036bc705: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036bc70f: jmpq   0x00000000036bc70f  ;   {runtime_call}
  0x00000000036bc714: nop
  0x00000000036bc715: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036bc71f: jmpq   0x00000000036bc71f  ;   {runtime_call}
  0x00000000036bc724: nop
  0x00000000036bc725: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036bc72f: jmpq   0x00000000036bc72f  ;   {runtime_call}
  0x00000000036bc734: nop
  0x00000000036bc735: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036bc73f: jmpq   0x00000000036bc73f  ;   {runtime_call}
  0x00000000036bc744: nop
  0x00000000036bc745: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036bc74f: jmpq   0x00000000036bc74f  ;   {runtime_call}
  0x00000000036bc754: nop
  0x00000000036bc755: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036bc75f: jmpq   0x00000000036bc75f  ;   {runtime_call}
[Exception Handler]
  0x00000000036bc764: callq  0x000000000368f1a0  ;   {runtime_call}
  0x00000000036bc769: mov    %rsp,-0x28(%rsp)
  0x00000000036bc76e: sub    $0x80,%rsp
  0x00000000036bc775: mov    %rax,0x78(%rsp)
  0x00000000036bc77a: mov    %rcx,0x70(%rsp)
  0x00000000036bc77f: mov    %rdx,0x68(%rsp)
  0x00000000036bc784: mov    %rbx,0x60(%rsp)
  0x00000000036bc789: mov    %rbp,0x50(%rsp)
  0x00000000036bc78e: mov    %rsi,0x48(%rsp)
  0x00000000036bc793: mov    %rdi,0x40(%rsp)
  0x00000000036bc798: mov    %r8,0x38(%rsp)
  0x00000000036bc79d: mov    %r9,0x30(%rsp)
  0x00000000036bc7a2: mov    %r10,0x28(%rsp)
  0x00000000036bc7a7: mov    %r11,0x20(%rsp)
  0x00000000036bc7ac: mov    %r12,0x18(%rsp)
  0x00000000036bc7b1: mov    %r13,0x10(%rsp)
  0x00000000036bc7b6: mov    %r14,0x8(%rsp)
  0x00000000036bc7bb: mov    %r15,(%rsp)
  0x00000000036bc7bf: movabs $0x553ec320,%rcx   ;   {external_word}
  0x00000000036bc7c9: movabs $0x36bc769,%rdx    ;   {internal_word}
  0x00000000036bc7d3: mov    %rsp,%r8
  0x00000000036bc7d6: and    $0xfffffffffffffff0,%rsp
  0x00000000036bc7da: callq  0x00000000550a41d0  ;   {runtime_call}
  0x00000000036bc7df: hlt    
[Deopt Handler Code]
  0x00000000036bc7e0: movabs $0x36bc7e0,%r10    ;   {section_word}
  0x00000000036bc7ea: push   %r10
  0x00000000036bc7ec: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036bc7f1: hlt    
  0x00000000036bc7f2: hlt    
  0x00000000036bc7f3: hlt    
  0x00000000036bc7f4: hlt    
  0x00000000036bc7f5: hlt    
  0x00000000036bc7f6: hlt    
  0x00000000036bc7f7: hlt    
<nmethod compile_id='51' compiler='C1' level='3' entry='0x00000000036bab60' size='12664' address='0x00000000036ba810' relocation_offset='288' insts_offset='848' stub_offset='7824' scopes_data_offset='8328' scopes_pcs_offset='10152' dependencies_offset='12280' handler_table_offset='12288' nul_chk_table_offset='12600' method='java/lang/StringCoding$StringEncoder encode ([CII)[B' bytes='179' count='256' iicount='256' stamp='1.497'/>
<writer thread='17528'/>
<task_queued compile_id='81' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='3840' iicount='3840' level='3' stamp='1.497' comment='tiered' hot_count='3840'/>
<writer thread='16536'/>
Decoding compiled method 0x00000000036adc90:
Code:
[Constants]
  0x00000000036ade00 (offset:    0): 0x036adf05   0x00000000036adf05
  0x00000000036ade04 (offset:    4): 0x00000000
  0x00000000036ade08 (offset:    8): 0x036adf11   0x00000000036adf11
  0x00000000036ade0c (offset:   12): 0x00000000
  0x00000000036ade10 (offset:   16): 0x036adf1d   0x00000000036adf1d
  0x00000000036ade14 (offset:   20): 0x00000000
  0x00000000036ade18 (offset:   24): 0x036adeeb   0x00000000036adeeb
  0x00000000036ade1c (offset:   28): 0x00000000
  0x00000000036ade20 (offset:   32): 0x036adeeb   0x00000000036adeeb
  0x00000000036ade24 (offset:   36): 0x00000000
  0x00000000036ade28 (offset:   40): 0x036adeeb   0x00000000036adeeb
  0x00000000036ade2c (offset:   44): 0x00000000
  0x00000000036ade30 (offset:   48): 0x036adeeb   0x00000000036adeeb
  0x00000000036ade34 (offset:   52): 0x00000000
  0x00000000036ade38 (offset:   56): 0x036adeeb   0x00000000036adeeb
  0x00000000036ade3c (offset:   60): 0x00000000
  0x00000000036ade40 (offset:   64): 0x036adeeb   0x00000000036adeeb
  0x00000000036ade44 (offset:   68): 0x00000000
  0x00000000036ade48 (offset:   72): 0x036adeeb   0x00000000036adeeb
  0x00000000036ade4c (offset:   76): 0x00000000
  0x00000000036ade50 (offset:   80): 0x036adeeb   0x00000000036adeeb
  0x00000000036ade54 (offset:   84): 0x00000000
  0x00000000036ade58 (offset:   88): 0x036adeeb   0x00000000036adeeb
  0x00000000036ade5c (offset:   92): 0x00000000
  0x00000000036ade60 (offset:   96): 0x036adeeb   0x00000000036adeeb
  0x00000000036ade64 (offset:  100): 0x00000000
  0x00000000036ade68 (offset:  104): 0x036adeeb   0x00000000036adeeb
  0x00000000036ade6c (offset:  108): 0x00000000
  0x00000000036ade70 (offset:  112): 0x036adf29   0x00000000036adf29
  0x00000000036ade74 (offset:  116): 0x00000000
  0x00000000036ade78 (offset:  120): 0x036adef9   0x00000000036adef9
  0x00000000036ade7c (offset:  124): 0x00000000
  0x00000000036ade80 (offset:  128): 0x036adef9   0x00000000036adef9
  0x00000000036ade84 (offset:  132): 0x00000000
  0x00000000036ade88 (offset:  136): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x00000000036ade8c (offset:  140): 0xf4f4f4f4
  0x00000000036ade90 (offset:  144): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x00000000036ade94 (offset:  148): 0xf4f4f4f4
  0x00000000036ade98 (offset:  152): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x00000000036ade9c (offset:  156): 0xf4f4f4f4
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000001c661ff8} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;
  # parm0:    rdx       = int
  #           [sp+0x20]  (sp of caller)
  0x00000000036adea0: mov    %eax,-0x6000(%rsp)  ;   {no_reloc}
  0x00000000036adea7: push   %rbp
  0x00000000036adea8: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.CharacterData::of@-1 (line 77)

  0x00000000036adeac: mov    %edx,%r10d
  0x00000000036adeaf: shr    $0x8,%r10d
  0x00000000036adeb3: test   %r10d,%r10d
  0x00000000036adeb6: jne    0x00000000036adece
  0x00000000036adeb8: movabs $0x76c1a97d0,%rax  ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)
                                                ;   {oop(a &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00000000036adec2: add    $0x10,%rsp
  0x00000000036adec6: pop    %rbp
  0x00000000036adec7: test   %eax,-0x20bdecd(%rip)        # 0x00000000015f0000
                                                ;   {poll_return}
  0x00000000036adecd: retq   
  0x00000000036adece: shr    $0x10,%edx         ;*iushr
                                                ; - java.lang.CharacterData::of@14 (line 80)

  0x00000000036aded1: cmp    $0x11,%edx
  0x00000000036aded4: jae    0x00000000036adeeb
  0x00000000036aded6: movslq %edx,%r10
  0x00000000036aded9: shl    $0x3,%r10
  0x00000000036adedd: movabs $0x36ade00,%r11    ;   {section_word}
  0x00000000036adee7: jmpq   *(%r11,%r10,1)     ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)

  0x00000000036adeeb: mov    $0x33,%edx
  0x00000000036adef0: data16 xchg %ax,%ax
  0x00000000036adef3: callq  0x00000000035d57a0  ; OopMap{off=88}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x00000000036adef8: int3                      ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)

  0x00000000036adef9: mov    $0x32,%edx
  0x00000000036adefe: nop
  0x00000000036adeff: callq  0x00000000035d57a0  ; OopMap{off=100}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x00000000036adf04: int3                      ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)

  0x00000000036adf05: movabs $0x76c2e8f38,%rax  ;   {oop(a &apos;java/lang/CharacterData00&apos;)}
  0x00000000036adf0f: jmp    0x00000000036adec2
  0x00000000036adf11: mov    $0x2e,%edx
  0x00000000036adf16: nop
  0x00000000036adf17: callq  0x00000000035d57a0  ; OopMap{off=124}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x00000000036adf1c: int3                      ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)

  0x00000000036adf1d: mov    $0x2f,%edx
  0x00000000036adf22: nop
  0x00000000036adf23: callq  0x00000000035d57a0  ; OopMap{off=136}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x00000000036adf28: int3                      ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)

  0x00000000036adf29: mov    $0x30,%edx
  0x00000000036adf2e: nop
  0x00000000036adf2f: callq  0x00000000035d57a0  ; OopMap{off=148}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x00000000036adf34: int3                      ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)

  0x00000000036adf35: hlt    
  0x00000000036adf36: hlt    
  0x00000000036adf37: hlt    
  0x00000000036adf38: hlt    
  0x00000000036adf39: hlt    
  0x00000000036adf3a: hlt    
  0x00000000036adf3b: hlt    
  0x00000000036adf3c: hlt    
  0x00000000036adf3d: hlt    
  0x00000000036adf3e: hlt    
  0x00000000036adf3f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000036adf40: jmpq   0x000000000368dc20  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000036adf45: callq  0x00000000036adf4a
  0x00000000036adf4a: subq   $0x5,(%rsp)
  0x00000000036adf4f: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036adf54: hlt    
  0x00000000036adf55: hlt    
  0x00000000036adf56: hlt    
  0x00000000036adf57: hlt    
<nmethod compile_id='72' compiler='C2' level='4' entry='0x00000000036adea0' size='1072' address='0x00000000036adc90' relocation_offset='288' consts_offset='368' insts_offset='528' stub_offset='688' scopes_data_offset='720' scopes_pcs_offset='808' dependencies_offset='1064' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='41642' iicount='41642' stamp='1.505'/>
<writer thread='17528'/>
<task_queued compile_id='82' method='java/util/HashMap getNode (ILjava/lang/Object;)Ljava/util/HashMap$Node;' bytes='148' count='3072' backedge_count='47' iicount='3072' level='3' stamp='1.505' comment='tiered' hot_count='3072'/>
<writer thread='10060'/>
Decoding compiled method 0x00000000036aedd0:
Code:
[Constants]
  0x00000000036aef40 (offset:    0): 0x036af0d9   0x00000000036af0d9
  0x00000000036aef44 (offset:    4): 0x00000000
  0x00000000036aef48 (offset:    8): 0x036af0e8   0x00000000036af0e8
  0x00000000036aef4c (offset:   12): 0x00000000
  0x00000000036aef50 (offset:   16): 0x036af0f9   0x00000000036af0f9
  0x00000000036aef54 (offset:   20): 0x00000000
  0x00000000036aef58 (offset:   24): 0x036af0b9   0x00000000036af0b9
  0x00000000036aef5c (offset:   28): 0x00000000
  0x00000000036aef60 (offset:   32): 0x036af0b9   0x00000000036af0b9
  0x00000000036aef64 (offset:   36): 0x00000000
  0x00000000036aef68 (offset:   40): 0x036af0b9   0x00000000036af0b9
  0x00000000036aef6c (offset:   44): 0x00000000
  0x00000000036aef70 (offset:   48): 0x036af0b9   0x00000000036af0b9
  0x00000000036aef74 (offset:   52): 0x00000000
  0x00000000036aef78 (offset:   56): 0x036af0b9   0x00000000036af0b9
  0x00000000036aef7c (offset:   60): 0x00000000
  0x00000000036aef80 (offset:   64): 0x036af0b9   0x00000000036af0b9
  0x00000000036aef84 (offset:   68): 0x00000000
  0x00000000036aef88 (offset:   72): 0x036af0b9   0x00000000036af0b9
  0x00000000036aef8c (offset:   76): 0x00000000
  0x00000000036aef90 (offset:   80): 0x036af0b9   0x00000000036af0b9
  0x00000000036aef94 (offset:   84): 0x00000000
  0x00000000036aef98 (offset:   88): 0x036af0b9   0x00000000036af0b9
  0x00000000036aef9c (offset:   92): 0x00000000
  0x00000000036aefa0 (offset:   96): 0x036af0b9   0x00000000036af0b9
  0x00000000036aefa4 (offset:  100): 0x00000000
  0x00000000036aefa8 (offset:  104): 0x036af0b9   0x00000000036af0b9
  0x00000000036aefac (offset:  108): 0x00000000
  0x00000000036aefb0 (offset:  112): 0x036af109   0x00000000036af109
  0x00000000036aefb4 (offset:  116): 0x00000000
  0x00000000036aefb8 (offset:  120): 0x036af0c9   0x00000000036af0c9
  0x00000000036aefbc (offset:  124): 0x00000000
  0x00000000036aefc0 (offset:  128): 0x036af0c9   0x00000000036af0c9
  0x00000000036aefc4 (offset:  132): 0x00000000
  0x00000000036aefc8 (offset:  136): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x00000000036aefcc (offset:  140): 0xf4f4f4f4
  0x00000000036aefd0 (offset:  144): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x00000000036aefd4 (offset:  148): 0xf4f4f4f4
  0x00000000036aefd8 (offset:  152): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x00000000036aefdc (offset:  156): 0xf4f4f4f4
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000001c52a4c0} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;
  # parm0:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x00000000036aefe0: mov    %eax,-0x6000(%rsp)  ;   {no_reloc}
  0x00000000036aefe7: push   %rbp
  0x00000000036aefe8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6338)

  0x00000000036aefec: mov    %edx,%r8d
  0x00000000036aefef: mov    %edx,%r11d
  0x00000000036aeff2: shr    $0x8,%r11d
  0x00000000036aeff6: test   %r11d,%r11d
  0x00000000036aeff9: jne    0x00000000036af072  ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)

  0x00000000036aeffb: movabs $0x76c1a97d0,%rdx  ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ;   {oop(a &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00000000036af005: mov    0x8(%rdx),%r11d
  0x00000000036af009: cmp    $0xf8007287,%r11d  ;   {metadata(&apos;java/lang/CharacterDataLatin1&apos;)}
  0x00000000036af010: jne    0x00000000036af061  ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)

  0x00000000036af012: mov    %r8d,%ebp
  0x00000000036af015: movzwl %bp,%ebp           ;*i2c  ; - java.lang.CharacterDataLatin1::getProperties@1 (line 71)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)

  0x00000000036af018: cmp    $0x100,%ebp
  0x00000000036af01e: jae    0x00000000036af094
  0x00000000036af020: movabs $0x76c1a97e0,%r10  ;   {oop([I)}
  0x00000000036af02a: mov    0x10(%r10,%rbp,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)

  0x00000000036af02f: test   $0x20000,%eax
  0x00000000036af035: jne    0x00000000036af046  ;*ifeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@12 (line 136)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)

  0x00000000036af037: mov    %r8d,%eax          ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6338)

  0x00000000036af03a: add    $0x20,%rsp
  0x00000000036af03e: pop    %rbp
  0x00000000036af03f: test   %eax,-0x20bf045(%rip)        # 0x00000000015f0000
                                                ;   {poll_return}
  0x00000000036af045: retq   
  0x00000000036af046: mov    %eax,%ebp
  0x00000000036af048: and    $0x7fc0000,%ebp    ;*iand
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@18 (line 136)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)

  0x00000000036af04e: cmp    $0x7fc0000,%ebp
  0x00000000036af054: je     0x00000000036af0a5  ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)

  0x00000000036af056: shl    $0x5,%eax
  0x00000000036af059: sar    $0x17,%eax
  0x00000000036af05c: add    %r8d,%eax          ;*iadd
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@35 (line 139)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)

  0x00000000036af05f: jmp    0x00000000036af03a
  0x00000000036af061: movabs $0xffffffffffffffff,%rax
  0x00000000036af06b: callq  0x00000000035d63e0  ; OopMap{off=144}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ;   {virtual_call}
  0x00000000036af070: jmp    0x00000000036af03a
  0x00000000036af072: mov    %edx,%r10d
  0x00000000036af075: shr    $0x10,%r10d        ;*iushr
                                                ; - java.lang.CharacterData::of@14 (line 80)
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)

  0x00000000036af079: cmp    $0x11,%r10d
  0x00000000036af07d: jae    0x00000000036af0b9
  0x00000000036af07f: movslq %r10d,%r10
  0x00000000036af082: shl    $0x3,%r10
  0x00000000036af086: movabs $0x36aef40,%r11    ;   {section_word}
  0x00000000036af090: jmpq   *(%r11,%r10,1)     ;*tableswitch
                                                ; - java.lang.CharacterData::of@15 (line 80)
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)

  0x00000000036af094: mov    $0xffffffe4,%edx
  0x00000000036af099: mov    %r8d,0x4(%rsp)
  0x00000000036af09e: nop
  0x00000000036af09f: callq  0x00000000035d57a0  ; OopMap{off=196}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ;   {runtime_call}
  0x00000000036af0a4: int3                      ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)

  0x00000000036af0a5: mov    $0xffffff65,%edx
  0x00000000036af0aa: mov    %r8d,0x4(%rsp)
  0x00000000036af0af: mov    %eax,0x8(%rsp)
  0x00000000036af0b3: callq  0x00000000035d57a0  ; OopMap{off=216}
                                                ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ;   {runtime_call}
  0x00000000036af0b8: int3                      ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)

  0x00000000036af0b9: mov    $0x33,%edx
  0x00000000036af0be: mov    %r8d,%ebp
  0x00000000036af0c1: xchg   %ax,%ax
  0x00000000036af0c3: callq  0x00000000035d57a0  ; OopMap{off=232}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ;   {runtime_call}
  0x00000000036af0c8: int3                      ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)

  0x00000000036af0c9: mov    $0x32,%edx
  0x00000000036af0ce: mov    %r8d,%ebp
  0x00000000036af0d1: xchg   %ax,%ax
  0x00000000036af0d3: callq  0x00000000035d57a0  ; OopMap{off=248}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ;   {runtime_call}
  0x00000000036af0d8: int3                      ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)

  0x00000000036af0d9: movabs $0x76c2e8f38,%rdx  ;   {oop(a &apos;java/lang/CharacterData00&apos;)}
  0x00000000036af0e3: jmpq   0x00000000036af005
  0x00000000036af0e8: mov    $0x2e,%edx
  0x00000000036af0ed: mov    %r8d,%ebp
  0x00000000036af0f0: data16 xchg %ax,%ax
  0x00000000036af0f3: callq  0x00000000035d57a0  ; OopMap{off=280}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ;   {runtime_call}
  0x00000000036af0f8: int3                      ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)

  0x00000000036af0f9: mov    $0x2f,%edx
  0x00000000036af0fe: mov    %r8d,%ebp
  0x00000000036af101: xchg   %ax,%ax
  0x00000000036af103: callq  0x00000000035d57a0  ; OopMap{off=296}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ;   {runtime_call}
  0x00000000036af108: int3                      ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)

  0x00000000036af109: mov    $0x30,%edx
  0x00000000036af10e: mov    %r8d,%ebp
  0x00000000036af111: xchg   %ax,%ax
  0x00000000036af113: callq  0x00000000035d57a0  ; OopMap{off=312}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ;   {runtime_call}
  0x00000000036af118: int3                      ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)

  0x00000000036af119: mov    %rax,%rdx
  0x00000000036af11c: add    $0x20,%rsp
  0x00000000036af120: pop    %rbp
  0x00000000036af121: jmpq   0x000000000369e960  ;*iload_2
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@37 (line 141)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ;   {runtime_call}
  0x00000000036af126: hlt    
  0x00000000036af127: hlt    
  0x00000000036af128: hlt    
  0x00000000036af129: hlt    
  0x00000000036af12a: hlt    
  0x00000000036af12b: hlt    
  0x00000000036af12c: hlt    
  0x00000000036af12d: hlt    
  0x00000000036af12e: hlt    
  0x00000000036af12f: hlt    
  0x00000000036af130: hlt    
  0x00000000036af131: hlt    
  0x00000000036af132: hlt    
  0x00000000036af133: hlt    
  0x00000000036af134: hlt    
  0x00000000036af135: hlt    
  0x00000000036af136: hlt    
  0x00000000036af137: hlt    
  0x00000000036af138: hlt    
  0x00000000036af139: hlt    
  0x00000000036af13a: hlt    
  0x00000000036af13b: hlt    
  0x00000000036af13c: hlt    
  0x00000000036af13d: hlt    
  0x00000000036af13e: hlt    
  0x00000000036af13f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000036af140: jmpq   0x000000000368dc20  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000036af145: callq  0x00000000036af14a
  0x00000000036af14a: subq   $0x5,(%rsp)
  0x00000000036af14f: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036af154: hlt    
  0x00000000036af155: hlt    
  0x00000000036af156: hlt    
  0x00000000036af157: hlt    
<nmethod compile_id='69' compiler='C2' level='4' entry='0x00000000036aefe0' size='1704' address='0x00000000036aedd0' relocation_offset='288' consts_offset='368' insts_offset='528' stub_offset='880' scopes_data_offset='952' scopes_pcs_offset='1176' dependencies_offset='1672' handler_table_offset='1680' oops_offset='904' method='java/lang/Character toLowerCase (I)I' bytes='9' count='30666' iicount='30666' stamp='1.518'/>
<writer thread='17528'/>
<task_queued compile_id='83' method='java/util/HashMap size ()I' bytes='5' count='512' iicount='512' level='1' stamp='1.518' comment='tiered' hot_count='512'/>
<task_queued compile_id='84' method='java/io/ExpiringCache access$000 (Ljava/io/ExpiringCache;)I' bytes='5' count='512' iicount='512' level='1' stamp='1.519' comment='tiered' hot_count='512'/>
<writer thread='16536'/>
Decoding compiled method 0x00000000036bdf50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c662e88} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rdx:rdx   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    r8        = int
  #           [sp+0x30]  (sp of caller)
  0x00000000036be080: mov    0x8(%rdx),%r10d
  0x00000000036be084: shl    $0x3,%r10
  0x00000000036be088: cmp    %r10,%rax
  0x00000000036be08b: jne    0x00000000035d5f60  ;   {runtime_call}
  0x00000000036be091: data16 xchg %ax,%ax
  0x00000000036be094: nopl   0x0(%rax,%rax,1)
  0x00000000036be09c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000036be0a0: mov    %eax,-0x6000(%rsp)
  0x00000000036be0a7: push   %rbp
  0x00000000036be0a8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@-1 (line 133)

  0x00000000036be0ac: mov    %r8d,%r10d
  0x00000000036be0af: movzwl %r10w,%r10d        ;*i2c  ; - java.lang.CharacterDataLatin1::getProperties@1 (line 71)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)

  0x00000000036be0b3: cmp    $0x100,%r10d
  0x00000000036be0ba: jae    0x00000000036be0fd
  0x00000000036be0bc: movabs $0x76c1a97e0,%r11  ;   {oop([I)}
  0x00000000036be0c6: mov    0x10(%r11,%r10,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)

  0x00000000036be0cb: test   $0x20000,%eax
  0x00000000036be0d1: jne    0x00000000036be0e2  ;*ifeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@12 (line 136)

  0x00000000036be0d3: mov    %r8d,%eax          ;*iload_2
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@37 (line 141)

  0x00000000036be0d6: add    $0x20,%rsp
  0x00000000036be0da: pop    %rbp
  0x00000000036be0db: test   %eax,-0x20ce0e1(%rip)        # 0x00000000015f0000
                                                ;   {poll_return}
  0x00000000036be0e1: retq   
  0x00000000036be0e2: mov    %eax,%ebp
  0x00000000036be0e4: and    $0x7fc0000,%ebp    ;*iand
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@18 (line 136)

  0x00000000036be0ea: cmp    $0x7fc0000,%ebp
  0x00000000036be0f0: je     0x00000000036be111  ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)

  0x00000000036be0f2: shl    $0x5,%eax
  0x00000000036be0f5: sar    $0x17,%eax
  0x00000000036be0f8: add    %r8d,%eax          ;*iadd
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@35 (line 139)

  0x00000000036be0fb: jmp    0x00000000036be0d6
  0x00000000036be0fd: mov    $0xffffffe4,%edx
  0x00000000036be102: mov    %r8d,(%rsp)
  0x00000000036be106: mov    %r10d,0x4(%rsp)
  0x00000000036be10b: callq  0x00000000035d57a0  ; OopMap{off=144}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x00000000036be110: int3                      ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)

  0x00000000036be111: mov    $0xffffff65,%edx
  0x00000000036be116: mov    %r8d,0x4(%rsp)
  0x00000000036be11b: mov    %eax,0x8(%rsp)
  0x00000000036be11f: callq  0x00000000035d57a0  ; OopMap{off=164}
                                                ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)
                                                ;   {runtime_call}
  0x00000000036be124: int3                      ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)

  0x00000000036be125: hlt    
  0x00000000036be126: hlt    
  0x00000000036be127: hlt    
  0x00000000036be128: hlt    
  0x00000000036be129: hlt    
  0x00000000036be12a: hlt    
  0x00000000036be12b: hlt    
  0x00000000036be12c: hlt    
  0x00000000036be12d: hlt    
  0x00000000036be12e: hlt    
  0x00000000036be12f: hlt    
  0x00000000036be130: hlt    
  0x00000000036be131: hlt    
  0x00000000036be132: hlt    
  0x00000000036be133: hlt    
  0x00000000036be134: hlt    
  0x00000000036be135: hlt    
  0x00000000036be136: hlt    
  0x00000000036be137: hlt    
  0x00000000036be138: hlt    
  0x00000000036be139: hlt    
  0x00000000036be13a: hlt    
  0x00000000036be13b: hlt    
  0x00000000036be13c: hlt    
  0x00000000036be13d: hlt    
  0x00000000036be13e: hlt    
  0x00000000036be13f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000036be140: jmpq   0x000000000368dc20  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000036be145: callq  0x00000000036be14a
  0x00000000036be14a: subq   $0x5,(%rsp)
  0x00000000036be14f: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036be154: hlt    
  0x00000000036be155: hlt    
  0x00000000036be156: hlt    
  0x00000000036be157: hlt    
<nmethod compile_id='73' compiler='C2' level='4' entry='0x00000000036be080' size='896' address='0x00000000036bdf50' relocation_offset='288' insts_offset='304' stub_offset='496' scopes_data_offset='544' scopes_pcs_offset='664' dependencies_offset='888' oops_offset='520' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='29979' iicount='29979' stamp='1.527'/>
<writer thread='7332'/>
Decoding compiled method 0x00000000036be4d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c636598} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;
  # this:     rdx:rdx   = &apos;java/io/BufferedReader&apos;
  # parm0:    r8        = boolean
  #           [sp+0xf0]  (sp of caller)
  0x00000000036be760: mov    0x8(%rdx),%r10d
  0x00000000036be764: shl    $0x3,%r10
  0x00000000036be768: cmp    %rax,%r10
  0x00000000036be76b: jne    0x00000000035d5f60  ;   {runtime_call}
  0x00000000036be771: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000036be77c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000036be780: mov    %eax,-0x6000(%rsp)
  0x00000000036be787: push   %rbp
  0x00000000036be788: sub    $0xe0,%rsp
  0x00000000036be78f: mov    %rdx,0x70(%rsp)
  0x00000000036be794: movabs $0x1c6c00c8,%rax   ;   {metadata(method data for {method} {0x000000001c636598} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x00000000036be79e: mov    0xdc(%rax),%esi
  0x00000000036be7a4: add    $0x8,%esi
  0x00000000036be7a7: mov    %esi,0xdc(%rax)
  0x00000000036be7ad: movabs $0x1c636590,%rax   ;   {metadata({method} {0x000000001c636598} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x00000000036be7b7: and    $0x1ff8,%esi
  0x00000000036be7bd: cmp    $0x0,%esi
  0x00000000036be7c0: je     0x00000000036bfab2  ;*aconst_null
                                                ; - java.io.BufferedReader::readLine@0 (line 313)

  0x00000000036be7c6: mov    0xc(%rdx),%esi
  0x00000000036be7c9: shl    $0x3,%rsi          ;*getfield lock
                                                ; - java.io.BufferedReader::readLine@3 (line 316)

  0x00000000036be7cd: mov    %rsi,0x88(%rsp)
  0x00000000036be7d5: lea    0xb0(%rsp),%rdi
  0x00000000036be7dd: mov    %rsi,0x8(%rdi)
  0x00000000036be7e1: mov    (%rsi),%rax        ; implicit exception: dispatches to 0x00000000036bfac9
  0x00000000036be7e4: mov    %rax,%rbx
  0x00000000036be7e7: and    $0x7,%rbx
  0x00000000036be7eb: cmp    $0x5,%rbx
  0x00000000036be7ef: jne    0x00000000036be876
  0x00000000036be7f5: mov    0x8(%rsi),%ebx
  0x00000000036be7f8: shl    $0x3,%rbx
  0x00000000036be7fc: mov    0xa8(%rbx),%rbx
  0x00000000036be803: or     %r15,%rbx
  0x00000000036be806: xor    %rax,%rbx
  0x00000000036be809: and    $0xffffffffffffff87,%rbx
  0x00000000036be80d: je     0x00000000036be89e
  0x00000000036be813: test   $0x7,%rbx
  0x00000000036be81a: jne    0x00000000036be863
  0x00000000036be81c: test   $0x300,%rbx
  0x00000000036be823: jne    0x00000000036be842
  0x00000000036be825: and    $0x37f,%rax
  0x00000000036be82c: mov    %rax,%rbx
  0x00000000036be82f: or     %r15,%rbx
  0x00000000036be832: lock cmpxchg %rbx,(%rsi)
  0x00000000036be837: jne    0x00000000036bface
  0x00000000036be83d: jmpq   0x00000000036be89e
  0x00000000036be842: mov    0x8(%rsi),%ebx
  0x00000000036be845: shl    $0x3,%rbx
  0x00000000036be849: mov    0xa8(%rbx),%rbx
  0x00000000036be850: or     %r15,%rbx
  0x00000000036be853: lock cmpxchg %rbx,(%rsi)
  0x00000000036be858: jne    0x00000000036bface
  0x00000000036be85e: jmpq   0x00000000036be89e
  0x00000000036be863: mov    0x8(%rsi),%ebx
  0x00000000036be866: shl    $0x3,%rbx
  0x00000000036be86a: mov    0xa8(%rbx),%rbx
  0x00000000036be871: lock cmpxchg %rbx,(%rsi)
  0x00000000036be876: mov    (%rsi),%rax
  0x00000000036be879: or     $0x1,%rax
  0x00000000036be87d: mov    %rax,(%rdi)
  0x00000000036be880: lock cmpxchg %rdi,(%rsi)
  0x00000000036be885: je     0x00000000036be89e
  0x00000000036be88b: sub    %rsp,%rax
  0x00000000036be88e: and    $0xfffffffffffff007,%rax
  0x00000000036be895: mov    %rax,(%rdi)
  0x00000000036be898: jne    0x00000000036bface  ;*monitorenter
                                                ; - java.io.BufferedReader::readLine@9 (line 316)

  0x00000000036be89e: mov    %rdx,%rdi
  0x00000000036be8a1: movabs $0x1c6c00c8,%rbx   ;   {metadata(method data for {method} {0x000000001c636598} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x00000000036be8ab: addq   $0x1,0x108(%rbx)
  0x00000000036be8b3: movabs $0x1c6d5ce8,%rdi   ;   {metadata(method data for {method} {0x000000001c635e70} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/io/BufferedReader&apos;)}
  0x00000000036be8bd: mov    0xdc(%rdi),%ebx
  0x00000000036be8c3: add    $0x8,%ebx
  0x00000000036be8c6: mov    %ebx,0xdc(%rdi)
  0x00000000036be8cc: movabs $0x1c635e68,%rdi   ;   {metadata({method} {0x000000001c635e70} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/io/BufferedReader&apos;)}
  0x00000000036be8d6: and    $0x7ffff8,%ebx
  0x00000000036be8dc: cmp    $0x0,%ebx
  0x00000000036be8df: je     0x00000000036bfae1
  0x00000000036be8e5: mov    0x28(%rdx),%edi
  0x00000000036be8e8: shl    $0x3,%rdi          ;*getfield in
                                                ; - java.io.BufferedReader::ensureOpen@1 (line 121)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x00000000036be8ec: cmp    $0x0,%rdi
  0x00000000036be8f0: movabs $0x1c6d5ce8,%rdi   ;   {metadata(method data for {method} {0x000000001c635e70} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/io/BufferedReader&apos;)}
  0x00000000036be8fa: movabs $0x108,%rbx
  0x00000000036be904: jne    0x00000000036be914
  0x00000000036be90a: movabs $0x118,%rbx
  0x00000000036be914: mov    (%rdi,%rbx,1),%rax
  0x00000000036be918: lea    0x1(%rax),%rax
  0x00000000036be91c: mov    %rax,(%rdi,%rbx,1)
  0x00000000036be920: je     0x00000000036bf8b3  ;*ifnonnull
                                                ; - java.io.BufferedReader::ensureOpen@4 (line 121)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x00000000036be926: cmp    $0x0,%r8d
  0x00000000036be92a: movabs $0x1c6c00c8,%rdi   ;   {metadata(method data for {method} {0x000000001c636598} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x00000000036be934: movabs $0x118,%rbx
  0x00000000036be93e: jne    0x00000000036be94e
  0x00000000036be944: movabs $0x128,%rbx
  0x00000000036be94e: mov    (%rdi,%rbx,1),%rax
  0x00000000036be952: lea    0x1(%rax),%rax
  0x00000000036be956: mov    %rax,(%rdi,%rbx,1)
  0x00000000036be95a: jne    0x00000000036be99d  ;*ifne
                                                ; - java.io.BufferedReader::readLine@15 (line 318)

  0x00000000036be960: movsbl 0x24(%rdx),%edi    ;*getfield skipLF
                                                ; - java.io.BufferedReader::readLine@19 (line 318)

  0x00000000036be964: cmp    $0x0,%edi
  0x00000000036be967: movabs $0x1c6c00c8,%rdi   ;   {metadata(method data for {method} {0x000000001c636598} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x00000000036be971: movabs $0x138,%rbx
  0x00000000036be97b: je     0x00000000036be98b
  0x00000000036be981: movabs $0x148,%rbx
  0x00000000036be98b: mov    (%rdi,%rbx,1),%rax
  0x00000000036be98f: lea    0x1(%rax),%rax
  0x00000000036be993: mov    %rax,(%rdi,%rbx,1)
  0x00000000036be997: je     0x00000000036be9b7  ;*ifeq
                                                ; - java.io.BufferedReader::readLine@22 (line 318)

  0x00000000036be99d: movabs $0x1c6c00c8,%rdi   ;   {metadata(method data for {method} {0x000000001c636598} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x00000000036be9a7: incl   0x158(%rdi)
  0x00000000036be9ad: mov    $0x1,%edi
  0x00000000036be9b2: jmpq   0x00000000036be9bc  ;*goto
                                                ; - java.io.BufferedReader::readLine@26 (line 318)

  0x00000000036be9b7: mov    $0x0,%edi          ;*istore
                                                ; - java.io.BufferedReader::readLine@30 (line 318)

  0x00000000036be9bc: movabs $0x0,%rbx          ;*aload_0
                                                ; - java.io.BufferedReader::readLine@32 (line 323)
                                                ;   {oop(NULL)}
  0x00000000036be9c6: mov    %edi,0x78(%rsp)
  0x00000000036be9ca: mov    %rbx,0x80(%rsp)
  0x00000000036be9d2: nopw   0x0(%rax,%rax,1)
  0x00000000036be9d8: mov    0x18(%rdx),%eax    ;*getfield nextChar
                                                ; - java.io.BufferedReader::readLine@33 (line 323)

  0x00000000036be9db: mov    0x14(%rdx),%ecx    ;*getfield nChars
                                                ; - java.io.BufferedReader::readLine@37 (line 323)

  0x00000000036be9de: cmp    %ecx,%eax
  0x00000000036be9e0: movabs $0x1c6c00c8,%rax   ;   {metadata(method data for {method} {0x000000001c636598} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x00000000036be9ea: movabs $0x170,%rcx
  0x00000000036be9f4: jl     0x00000000036bea04
  0x00000000036be9fa: movabs $0x180,%rcx
  0x00000000036bea04: mov    (%rax,%rcx,1),%r8
  0x00000000036bea08: lea    0x1(%r8),%r8
  0x00000000036bea0c: mov    %r8,(%rax,%rcx,1)
  0x00000000036bea10: jl     0x00000000036bea41  ;*if_icmplt
                                                ; - java.io.BufferedReader::readLine@40 (line 323)

  0x00000000036bea16: mov    %rdx,%rax
  0x00000000036bea19: movabs $0x1c6c00c8,%rcx   ;   {metadata(method data for {method} {0x000000001c636598} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x00000000036bea23: addq   $0x1,0x190(%rcx)
  0x00000000036bea2b: mov    %rdx,%rax
  0x00000000036bea2e: mov    %rax,%rdx          ;*invokespecial fill
                                                ; - java.io.BufferedReader::readLine@44 (line 324)

  0x00000000036bea31: nop
  0x00000000036bea32: nop
  0x00000000036bea33: nop
  0x00000000036bea34: nop
  0x00000000036bea35: nop
  0x00000000036bea36: nop
  0x00000000036bea37: callq  0x00000000035d61a0  ; OopMap{[136]=Oop [128]=Oop [112]=Oop [184]=Oop off=732}
                                                ;*invokespecial fill
                                                ; - java.io.BufferedReader::readLine@44 (line 324)
                                                ;   {optimized virtual_call}
  0x00000000036bea3c: mov    0x70(%rsp),%rdx
  0x00000000036bea41: mov    0x18(%rdx),%esi    ;*getfield nextChar
                                                ; - java.io.BufferedReader::readLine@48 (line 325)

  0x00000000036bea44: mov    0x14(%rdx),%edi    ;*getfield nChars
                                                ; - java.io.BufferedReader::readLine@52 (line 325)

  0x00000000036bea47: cmp    %edi,%esi
  0x00000000036bea49: movabs $0x1c6c00c8,%rax   ;   {metadata(method data for {method} {0x000000001c636598} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x00000000036bea53: movabs $0x1a0,%rcx
  0x00000000036bea5d: jl     0x00000000036bea6d
  0x00000000036bea63: movabs $0x1b0,%rcx
  0x00000000036bea6d: mov    (%rax,%rcx,1),%rbx
  0x00000000036bea71: lea    0x1(%rbx),%rbx
  0x00000000036bea75: mov    %rbx,(%rax,%rcx,1)
  0x00000000036bea79: jge    0x00000000036bf52a  ;*if_icmplt
                                                ; - java.io.BufferedReader::readLine@55 (line 325)

  0x00000000036bea7f: mov    0x78(%rsp),%ebx
  0x00000000036bea83: cmp    $0x0,%ebx
  0x00000000036bea86: movabs $0x1c6c00c8,%rax   ;   {metadata(method data for {method} {0x000000001c636598} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x00000000036bea90: movabs $0x260,%rcx
  0x00000000036bea9a: je     0x00000000036beaaa
  0x00000000036beaa0: movabs $0x270,%rcx
  0x00000000036beaaa: mov    (%rax,%rcx,1),%rbx
  0x00000000036beaae: lea    0x1(%rbx),%rbx
  0x00000000036beab2: mov    %rbx,(%rax,%rcx,1)
  0x00000000036beab6: je     0x00000000036beb12  ;*ifeq
                                                ; - java.io.BufferedReader::readLine@90 (line 336)

  0x00000000036beabc: mov    0x2c(%rdx),%eax
  0x00000000036beabf: shl    $0x3,%rax          ;*getfield cb
                                                ; - java.io.BufferedReader::readLine@94 (line 336)

  0x00000000036beac3: movslq %esi,%rcx
  0x00000000036beac6: cmp    0xc(%rax),%esi     ; implicit exception: dispatches to 0x00000000036bfaf8
  0x00000000036beac9: jae    0x00000000036bfb02
  0x00000000036beacf: movzwl 0x10(%rax,%rcx,2),%eax  ;*caload
                                                ; - java.io.BufferedReader::readLine@101 (line 336)

  0x00000000036bead4: cmp    $0xa,%eax
  0x00000000036bead7: movabs $0x1c6c00c8,%rax   ;   {metadata(method data for {method} {0x000000001c636598} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x00000000036beae1: movabs $0x280,%rcx
  0x00000000036beaeb: jne    0x00000000036beafb
  0x00000000036beaf1: movabs $0x290,%rcx
  0x00000000036beafb: mov    (%rax,%rcx,1),%rbx
  0x00000000036beaff: lea    0x1(%rbx),%rbx
  0x00000000036beb03: mov    %rbx,(%rax,%rcx,1)
  0x00000000036beb07: jne    0x00000000036beb12  ;*if_icmpne
                                                ; - java.io.BufferedReader::readLine@104 (line 336)

  0x00000000036beb0d: inc    %esi
  0x00000000036beb0f: mov    %esi,0x18(%rdx)    ;*putfield nextChar
                                                ; - java.io.BufferedReader::readLine@114 (line 337)

  0x00000000036beb12: movb   $0x0,0x24(%rdx)    ;*putfield skipLF
                                                ; - java.io.BufferedReader::readLine@119 (line 338)

  0x00000000036beb16: mov    0x18(%rdx),%r9d    ;*getfield nextChar
                                                ; - java.io.BufferedReader::readLine@126 (line 342)

  0x00000000036beb1a: mov    %r9,%r8
  0x00000000036beb1d: mov    $0x0,%esi
  0x00000000036beb22: jmpq   0x00000000036bebfe  ;*iload
                                                ; - java.io.BufferedReader::readLine@131 (line 342)

  0x00000000036beb27: nop
  0x00000000036beb28: mov    0x2c(%rdx),%esi
  0x00000000036beb2b: shl    $0x3,%rsi          ;*getfield cb
                                                ; - java.io.BufferedReader::readLine@141 (line 343)

  0x00000000036beb2f: movslq %r8d,%rax
  0x00000000036beb32: cmp    0xc(%rsi),%r8d     ; implicit exception: dispatches to 0x00000000036bfb0b
  0x00000000036beb36: jae    0x00000000036bfb15
  0x00000000036beb3c: movzwl 0x10(%rsi,%rax,2),%esi  ;*caload
                                                ; - java.io.BufferedReader::readLine@146 (line 343)

  0x00000000036beb41: cmp    $0xa,%esi
  0x00000000036beb44: movabs $0x1c6c00c8,%rax   ;   {metadata(method data for {method} {0x000000001c636598} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x00000000036beb4e: movabs $0x2c0,%rcx
  0x00000000036beb58: je     0x00000000036beb68
  0x00000000036beb5e: movabs $0x2d0,%rcx
  0x00000000036beb68: mov    (%rax,%rcx,1),%rbx
  0x00000000036beb6c: lea    0x1(%rbx),%rbx
  0x00000000036beb70: mov    %rbx,(%rax,%rcx,1)
  0x00000000036beb74: je     0x00000000036bec41  ;*if_icmpeq
                                                ; - java.io.BufferedReader::readLine@153 (line 344)

  0x00000000036beb7a: cmp    $0xd,%esi
  0x00000000036beb7d: movabs $0x1c6c00c8,%rax   ;   {metadata(method data for {method} {0x000000001c636598} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x00000000036beb87: movabs $0x2e0,%rcx
  0x00000000036beb91: jne    0x00000000036beba1
  0x00000000036beb97: movabs $0x2f0,%rcx
  0x00000000036beba1: mov    (%rax,%rcx,1),%rbx
  0x00000000036beba5: lea    0x1(%rbx),%rbx
  0x00000000036beba9: mov    %rbx,(%rax,%rcx,1)
  0x00000000036bebad: je     0x00000000036bec41  ;*if_icmpne
                                                ; - java.io.BufferedReader::readLine@160 (line 344)

  0x00000000036bebb3: inc    %r8d
  0x00000000036bebb6: movabs $0x1c6c00c8,%rax   ;   {metadata(method data for {method} {0x000000001c636598} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x00000000036bebc0: mov    0xe0(%rax),%ecx
  0x00000000036bebc6: add    $0x8,%ecx
  0x00000000036bebc9: mov    %ecx,0xe0(%rax)
  0x00000000036bebcf: movabs $0x1c636590,%rax   ;   {metadata({method} {0x000000001c636598} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x00000000036bebd9: and    $0xfff8,%ecx
  0x00000000036bebdf: cmp    $0x0,%ecx
  0x00000000036bebe2: je     0x00000000036bfb1e  ; OopMap{[136]=Oop [128]=Oop rdx=Oop [112]=Oop [184]=Oop off=1160}
                                                ;*goto
                                                ; - java.io.BufferedReader::readLine@172 (line 342)

  0x00000000036bebe8: test   %eax,-0x20ceaee(%rip)        # 0x00000000015f0100
                                                ;   {poll}
  0x00000000036bebee: movabs $0x1c6c00c8,%rax   ;   {metadata(method data for {method} {0x000000001c636598} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x00000000036bebf8: incl   0x318(%rax)        ;*goto
                                                ; - java.io.BufferedReader::readLine@172 (line 342)

  0x00000000036bebfe: cmp    %edi,%r8d
  0x00000000036bec01: movabs $0x1c6c00c8,%rax   ;   {metadata(method data for {method} {0x000000001c636598} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x00000000036bec0b: movabs $0x2a0,%rcx
  0x00000000036bec15: jge    0x00000000036bec25
  0x00000000036bec1b: movabs $0x2b0,%rcx
  0x00000000036bec25: mov    (%rax,%rcx,1),%rbx
  0x00000000036bec29: lea    0x1(%rbx),%rbx
  0x00000000036bec2d: mov    %rbx,(%rax,%rcx,1)
  0x00000000036bec31: jl     0x00000000036beb28  ;*if_icmpge
                                                ; - java.io.BufferedReader::readLine@137 (line 342)

  0x00000000036bec37: mov    $0x0,%edi
  0x00000000036bec3c: jmpq   0x00000000036bec56  ;*aload_0
                                                ; - java.io.BufferedReader::readLine@175 (line 350)

  0x00000000036bec41: movabs $0x1c6c00c8,%rdi   ;   {metadata(method data for {method} {0x000000001c636598} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x00000000036bec4b: incl   0x300(%rdi)
  0x00000000036bec51: mov    $0x1,%edi          ;*goto
                                                ; - java.io.BufferedReader::readLine@166 (line 346)

  0x00000000036bec56: mov    %r8d,0x18(%rdx)    ;*putfield nextChar
                                                ; - java.io.BufferedReader::readLine@183 (line 351)

  0x00000000036bec5a: cmp    $0x0,%edi
  0x00000000036bec5d: movabs $0x1c6c00c8,%rdi   ;   {metadata(method data for {method} {0x000000001c636598} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x00000000036bec67: movabs $0x330,%rax
  0x00000000036bec71: je     0x00000000036bec81
  0x00000000036bec77: movabs $0x340,%rax
  0x00000000036bec81: mov    (%rdi,%rax,1),%rcx
  0x00000000036bec85: lea    0x1(%rcx),%rcx
  0x00000000036bec89: mov    %rcx,(%rdi,%rax,1)
  0x00000000036bec8d: jne    0x00000000036bf126  ;*ifeq
                                                ; - java.io.BufferedReader::readLine@188 (line 353)

  0x00000000036bec93: mov    0x80(%rsp),%rbx
  0x00000000036bec9b: cmp    $0x0,%rbx
  0x00000000036bec9f: movabs $0x1c6c00c8,%rsi   ;   {metadata(method data for {method} {0x000000001c636598} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x00000000036beca9: movabs $0x418,%rdi
  0x00000000036becb3: jne    0x00000000036becc3
  0x00000000036becb9: movabs $0x428,%rdi
  0x00000000036becc3: mov    (%rsi,%rdi,1),%rax
  0x00000000036becc7: lea    0x1(%rax),%rax
  0x00000000036beccb: mov    %rax,(%rsi,%rdi,1)
  0x00000000036beccf: mov    %rdx,%r11
  0x00000000036becd2: jne    0x00000000036bee98  ;*ifnonnull
                                                ; - java.io.BufferedReader::readLine@265 (line 368)

  0x00000000036becd8: movabs $0x7c000d608,%rdx  ;   {metadata(&apos;java/lang/StringBuffer&apos;)}
  0x00000000036bece2: mov    0x60(%r15),%rax
  0x00000000036bece6: lea    0x18(%rax),%rdi
  0x00000000036becea: cmp    0x70(%r15),%rdi
  0x00000000036becee: ja     0x00000000036bfb35
  0x00000000036becf4: mov    %rdi,0x60(%r15)
  0x00000000036becf8: mov    0xa8(%rdx),%rcx
  0x00000000036becff: mov    %rcx,(%rax)
  0x00000000036bed02: mov    %rdx,%rcx
  0x00000000036bed05: shr    $0x3,%rcx
  0x00000000036bed09: mov    %ecx,0x8(%rax)
  0x00000000036bed0c: xor    %rcx,%rcx
  0x00000000036bed0f: mov    %ecx,0xc(%rax)
  0x00000000036bed12: xor    %rcx,%rcx
  0x00000000036bed15: mov    %rcx,0x10(%rax)
  0x00000000036bed19: mov    %rax,%r13          ;*new  ; - java.io.BufferedReader::readLine@268 (line 369)

  0x00000000036bed1c: movabs $0x76c19bdf8,%rbx  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/io/BufferedReader&apos;)}
  0x00000000036bed26: mov    0x74(%rbx),%ebx    ;*getstatic defaultExpectedLineLength
                                                ; - java.io.BufferedReader::readLine@272 (line 369)

  0x00000000036bed29: mov    %r13,%rdx
  0x00000000036bed2c: movabs $0x1c6c00c8,%rsi   ;   {metadata(method data for {method} {0x000000001c636598} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x00000000036bed36: addq   $0x1,0x438(%rsi)
  0x00000000036bed3e: movabs $0x1c6d4bf0,%rdx   ;   {metadata(method data for {method} {0x000000001c4ff0f0} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x00000000036bed48: mov    0xdc(%rdx),%esi
  0x00000000036bed4e: add    $0x8,%esi
  0x00000000036bed51: mov    %esi,0xdc(%rdx)
  0x00000000036bed57: movabs $0x1c4ff0e8,%rdx   ;   {metadata({method} {0x000000001c4ff0f0} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x00000000036bed61: and    $0x7ffff8,%esi
  0x00000000036bed67: cmp    $0x0,%esi
  0x00000000036bed6a: je     0x00000000036bfb42
  0x00000000036bed70: mov    %r13,%rdx
  0x00000000036bed73: movabs $0x1c6d4bf0,%rsi   ;   {metadata(method data for {method} {0x000000001c4ff0f0} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x00000000036bed7d: addq   $0x1,0x108(%rsi)
  0x00000000036bed85: movabs $0x1c6c9f78,%rdx   ;   {metadata(method data for {method} {0x000000001c503a08} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036bed8f: mov    0xdc(%rdx),%esi
  0x00000000036bed95: add    $0x8,%esi
  0x00000000036bed98: mov    %esi,0xdc(%rdx)
  0x00000000036bed9e: movabs $0x1c503a00,%rdx   ;   {metadata({method} {0x000000001c503a08} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036beda8: and    $0x7ffff8,%esi
  0x00000000036bedae: cmp    $0x0,%esi
  0x00000000036bedb1: je     0x00000000036bfb59
  0x00000000036bedb7: mov    %r13,%rdx
  0x00000000036bedba: movabs $0x1c6c9f78,%rsi   ;   {metadata(method data for {method} {0x000000001c503a08} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036bedc4: addq   $0x1,0x108(%rsi)
  0x00000000036bedcc: movabs $0x1c5c3748,%rdx   ;   {metadata(method data for {method} {0x000000001c490488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000036bedd6: mov    0xdc(%rdx),%esi
  0x00000000036beddc: add    $0x8,%esi
  0x00000000036beddf: mov    %esi,0xdc(%rdx)
  0x00000000036bede5: movabs $0x1c490480,%rdx   ;   {metadata({method} {0x000000001c490488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000036bedef: and    $0x7ffff8,%esi
  0x00000000036bedf5: cmp    $0x0,%esi
  0x00000000036bedf8: je     0x00000000036bfb70
  0x00000000036bedfe: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000000036bee08: movslq %ebx,%rbx
  0x00000000036bee0b: mov    %rbx,%rdi
  0x00000000036bee0e: cmp    $0xffffff,%rbx
  0x00000000036bee15: ja     0x00000000036bfb87
  0x00000000036bee1b: movabs $0x17,%rsi
  0x00000000036bee25: lea    (%rsi,%rbx,2),%rsi
  0x00000000036bee29: and    $0xfffffffffffffff8,%rsi
  0x00000000036bee2d: mov    0x60(%r15),%rax
  0x00000000036bee31: lea    (%rax,%rsi,1),%rsi
  0x00000000036bee35: cmp    0x70(%r15),%rsi
  0x00000000036bee39: ja     0x00000000036bfb87
  0x00000000036bee3f: mov    %rsi,0x60(%r15)
  0x00000000036bee43: sub    %rax,%rsi
  0x00000000036bee46: movq   $0x1,(%rax)
  0x00000000036bee4d: mov    %rdx,%rcx
  0x00000000036bee50: shr    $0x3,%rcx
  0x00000000036bee54: mov    %ecx,0x8(%rax)
  0x00000000036bee57: mov    %ebx,0xc(%rax)
  0x00000000036bee5a: sub    $0x10,%rsi
  0x00000000036bee5e: je     0x00000000036bee75
  0x00000000036bee64: xor    %rbx,%rbx
  0x00000000036bee67: shr    $0x3,%rsi
  0x00000000036bee6b: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000000036bee70: dec    %rsi
  0x00000000036bee73: jne    0x00000000036bee6b  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)

  0x00000000036bee75: mov    %rax,%r10
  0x00000000036bee78: shr    $0x3,%r10
  0x00000000036bee7c: mov    %r10d,0x10(%r13)
  0x00000000036bee80: mov    %r13,%rax
  0x00000000036bee83: shr    $0x9,%rax
  0x00000000036bee87: movabs $0xf32f000,%rdi
  0x00000000036bee91: movb   $0x0,(%rax,%rdi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)

  0x00000000036bee95: mov    %r13,%rbx          ;*aload_2
                                                ; - java.io.BufferedReader::readLine@279 (line 370)

  0x00000000036bee98: mov    0x2c(%r11),%edi
  0x00000000036bee9c: shl    $0x3,%rdi          ;*getfield cb
                                                ; - java.io.BufferedReader::readLine@281 (line 370)

  0x00000000036beea0: cmp    (%rbx),%rax        ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@289 (line 370)
                                                ; implicit exception: dispatches to 0x00000000036bfb91
  0x00000000036beea3: mov    %rbx,%rax
  0x00000000036beea6: movabs $0x1c6c00c8,%rdx   ;   {metadata(method data for {method} {0x000000001c636598} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x00000000036beeb0: mov    0x8(%rax),%eax
  0x00000000036beeb3: shl    $0x3,%rax
  0x00000000036beeb7: cmp    0x450(%rdx),%rax
  0x00000000036beebe: jne    0x00000000036beecd
  0x00000000036beec0: addq   $0x1,0x458(%rdx)
  0x00000000036beec8: jmpq   0x00000000036bef33
  0x00000000036beecd: cmp    0x460(%rdx),%rax
  0x00000000036beed4: jne    0x00000000036beee3
  0x00000000036beed6: addq   $0x1,0x468(%rdx)
  0x00000000036beede: jmpq   0x00000000036bef33
  0x00000000036beee3: cmpq   $0x0,0x450(%rdx)
  0x00000000036beeee: jne    0x00000000036bef07
  0x00000000036beef0: mov    %rax,0x450(%rdx)
  0x00000000036beef7: movq   $0x1,0x458(%rdx)
  0x00000000036bef02: jmpq   0x00000000036bef33
  0x00000000036bef07: cmpq   $0x0,0x460(%rdx)
  0x00000000036bef12: jne    0x00000000036bef2b
  0x00000000036bef14: mov    %rax,0x460(%rdx)
  0x00000000036bef1b: movq   $0x1,0x468(%rdx)
  0x00000000036bef26: jmpq   0x00000000036bef33
  0x00000000036bef2b: addq   $0x1,0x448(%rdx)
  0x00000000036bef33: mov    %r8,%rdx
  0x00000000036bef36: sub    %r9d,%edx
  0x00000000036bef39: lea    0xc0(%rsp),%r8
  0x00000000036bef41: mov    %rbx,0x8(%r8)
  0x00000000036bef45: mov    (%rbx),%rax
  0x00000000036bef48: mov    %rax,%rsi
  0x00000000036bef4b: and    $0x7,%rsi
  0x00000000036bef4f: cmp    $0x5,%rsi
  0x00000000036bef53: jne    0x00000000036befda
  0x00000000036bef59: mov    0x8(%rbx),%esi
  0x00000000036bef5c: shl    $0x3,%rsi
  0x00000000036bef60: mov    0xa8(%rsi),%rsi
  0x00000000036bef67: or     %r15,%rsi
  0x00000000036bef6a: xor    %rax,%rsi
  0x00000000036bef6d: and    $0xffffffffffffff87,%rsi
  0x00000000036bef71: je     0x00000000036bf002
  0x00000000036bef77: test   $0x7,%rsi
  0x00000000036bef7e: jne    0x00000000036befc7
  0x00000000036bef80: test   $0x300,%rsi
  0x00000000036bef87: jne    0x00000000036befa6
  0x00000000036bef89: and    $0x37f,%rax
  0x00000000036bef90: mov    %rax,%rsi
  0x00000000036bef93: or     %r15,%rsi
  0x00000000036bef96: lock cmpxchg %rsi,(%rbx)
  0x00000000036bef9b: jne    0x00000000036bfb96
  0x00000000036befa1: jmpq   0x00000000036bf002
  0x00000000036befa6: mov    0x8(%rbx),%esi
  0x00000000036befa9: shl    $0x3,%rsi
  0x00000000036befad: mov    0xa8(%rsi),%rsi
  0x00000000036befb4: or     %r15,%rsi
  0x00000000036befb7: lock cmpxchg %rsi,(%rbx)
  0x00000000036befbc: jne    0x00000000036bfb96
  0x00000000036befc2: jmpq   0x00000000036bf002
  0x00000000036befc7: mov    0x8(%rbx),%esi
  0x00000000036befca: shl    $0x3,%rsi
  0x00000000036befce: mov    0xa8(%rsi),%rsi
  0x00000000036befd5: lock cmpxchg %rsi,(%rbx)
  0x00000000036befda: mov    (%rbx),%rax
  0x00000000036befdd: or     $0x1,%rax
  0x00000000036befe1: mov    %rax,(%r8)
  0x00000000036befe4: lock cmpxchg %r8,(%rbx)
  0x00000000036befe9: je     0x00000000036bf002
  0x00000000036befef: sub    %rsp,%rax
  0x00000000036beff2: and    $0xfffffffffffff007,%rax
  0x00000000036beff9: mov    %rax,(%r8)
  0x00000000036beffc: jne    0x00000000036bfb96  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x00000000036bf002: movabs $0x1c7ecb20,%r8    ;   {metadata(method data for {method} {0x000000001c4ffea0} &apos;append&apos; &apos;([CII)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x00000000036bf00c: mov    0xdc(%r8),%esi
  0x00000000036bf013: add    $0x8,%esi
  0x00000000036bf016: mov    %esi,0xdc(%r8)
  0x00000000036bf01d: movabs $0x1c4ffe98,%r8    ;   {metadata({method} {0x000000001c4ffea0} &apos;append&apos; &apos;([CII)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x00000000036bf027: and    $0x7ffff8,%esi
  0x00000000036bf02d: cmp    $0x0,%esi
  0x00000000036bf030: je     0x00000000036bfba9
  0x00000000036bf036: movl   $0x0,0x14(%rbx)
  0x00000000036bf03d: mov    %rbx,%r8
  0x00000000036bf040: shr    $0x9,%r8
  0x00000000036bf044: movabs $0xf32f000,%rsi
  0x00000000036bf04e: movb   $0x0,(%r8,%rsi,1)  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x00000000036bf053: mov    %rbx,%r8
  0x00000000036bf056: movabs $0x1c7ecb20,%rsi   ;   {metadata(method data for {method} {0x000000001c4ffea0} &apos;append&apos; &apos;([CII)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x00000000036bf060: addq   $0x1,0x108(%rsi)
  0x00000000036bf068: mov    %rdi,%r8
  0x00000000036bf06b: mov    %rdx,%rdi
  0x00000000036bf06e: mov    %rbx,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@9 (line 367)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x00000000036bf071: mov    %rbx,0x90(%rsp)
  0x00000000036bf079: nop
  0x00000000036bf07a: nop
  0x00000000036bf07b: nop
  0x00000000036bf07c: nop
  0x00000000036bf07d: nop
  0x00000000036bf07e: nop
  0x00000000036bf07f: callq  0x00000000035d61a0  ; OopMap{[136]=Oop [144]=Oop [112]=Oop [184]=Oop [200]=Oop off=2340}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@9 (line 367)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)
                                                ;   {optimized virtual_call}
  0x00000000036bf084: lea    0xc0(%rsp),%rax
  0x00000000036bf08c: mov    0x8(%rax),%rsi
  0x00000000036bf090: mov    (%rsi),%rdx
  0x00000000036bf093: and    $0x7,%rdx
  0x00000000036bf097: cmp    $0x5,%rdx
  0x00000000036bf09b: je     0x00000000036bf0b8
  0x00000000036bf0a1: mov    (%rax),%rdx
  0x00000000036bf0a4: test   %rdx,%rdx
  0x00000000036bf0a7: je     0x00000000036bf0b8
  0x00000000036bf0ad: lock cmpxchg %rdx,(%rsi)
  0x00000000036bf0b2: jne    0x00000000036bfbc0  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x00000000036bf0b8: movabs $0x1c6c00c8,%rdx   ;   {metadata(method data for {method} {0x000000001c636598} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x00000000036bf0c2: mov    0xe0(%rdx),%esi
  0x00000000036bf0c8: add    $0x8,%esi
  0x00000000036bf0cb: mov    %esi,0xe0(%rdx)
  0x00000000036bf0d1: movabs $0x1c636590,%rdx   ;   {metadata({method} {0x000000001c636598} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x00000000036bf0db: and    $0xfff8,%esi
  0x00000000036bf0e1: cmp    $0x0,%esi
  0x00000000036bf0e4: je     0x00000000036bfbd6  ; OopMap{[136]=Oop [144]=Oop [112]=Oop [184]=Oop off=2442}
                                                ;*goto
                                                ; - java.io.BufferedReader::readLine@293 (line 371)

  0x00000000036bf0ea: test   %eax,-0x20ceff0(%rip)        # 0x00000000015f0100
                                                ;   {poll}
  0x00000000036bf0f0: movabs $0x1c6c00c8,%rdx   ;   {metadata(method data for {method} {0x000000001c636598} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x00000000036bf0fa: incl   0x478(%rdx)
  0x00000000036bf100: mov    0x90(%rsp),%rbx
  0x00000000036bf108: mov    %rbx,%rcx
  0x00000000036bf10b: mov    $0x0,%ebx
  0x00000000036bf110: mov    %ebx,0x78(%rsp)
  0x00000000036bf114: mov    %rcx,0x80(%rsp)
  0x00000000036bf11c: mov    0x70(%rsp),%rdx
  0x00000000036bf121: jmpq   0x00000000036be9d8  ;*goto
                                                ; - java.io.BufferedReader::readLine@293 (line 371)

  0x00000000036bf126: mov    0x80(%rsp),%rcx
  0x00000000036bf12e: cmp    $0x0,%rcx
  0x00000000036bf132: movabs $0x1c6c00c8,%rdx   ;   {metadata(method data for {method} {0x000000001c636598} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x00000000036bf13c: movabs $0x350,%rdi
  0x00000000036bf146: jne    0x00000000036bf156
  0x00000000036bf14c: movabs $0x360,%rdi
  0x00000000036bf156: mov    (%rdx,%rdi,1),%rax
  0x00000000036bf15a: lea    0x1(%rax),%rax
  0x00000000036bf15e: mov    %rax,(%rdx,%rdi,1)
  0x00000000036bf162: mov    %esi,0x7c(%rsp)
  0x00000000036bf166: mov    0x70(%rsp),%rdx
  0x00000000036bf16b: jne    0x00000000036bf211  ;*ifnonnull
                                                ; - java.io.BufferedReader::readLine@192 (line 355)

  0x00000000036bf171: mov    %rdx,%rbx
  0x00000000036bf174: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000000036bf17e: mov    0x60(%r15),%rax
  0x00000000036bf182: lea    0x18(%rax),%rdi
  0x00000000036bf186: cmp    0x70(%r15),%rdi
  0x00000000036bf18a: ja     0x00000000036bfbed
  0x00000000036bf190: mov    %rdi,0x60(%r15)
  0x00000000036bf194: mov    0xa8(%rdx),%rcx
  0x00000000036bf19b: mov    %rcx,(%rax)
  0x00000000036bf19e: mov    %rdx,%rcx
  0x00000000036bf1a1: shr    $0x3,%rcx
  0x00000000036bf1a5: mov    %ecx,0x8(%rax)
  0x00000000036bf1a8: xor    %rcx,%rcx
  0x00000000036bf1ab: mov    %ecx,0xc(%rax)
  0x00000000036bf1ae: xor    %rcx,%rcx
  0x00000000036bf1b1: mov    %rcx,0x10(%rax)    ;*new  ; - java.io.BufferedReader::readLine@195 (line 356)

  0x00000000036bf1b5: mov    0x2c(%rbx),%edi
  0x00000000036bf1b8: shl    $0x3,%rdi          ;*getfield cb
                                                ; - java.io.BufferedReader::readLine@200 (line 356)

  0x00000000036bf1bc: mov    %rax,%rdx
  0x00000000036bf1bf: movabs $0x1c6c00c8,%rsi   ;   {metadata(method data for {method} {0x000000001c636598} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x00000000036bf1c9: addq   $0x1,0x370(%rsi)
  0x00000000036bf1d1: mov    %r8,%rdx
  0x00000000036bf1d4: sub    %r9d,%edx
  0x00000000036bf1d7: mov    %rdi,%r8
  0x00000000036bf1da: mov    %rdx,%rdi
  0x00000000036bf1dd: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedReader::readLine@208 (line 356)

  0x00000000036bf1e0: mov    %rax,0x98(%rsp)
  0x00000000036bf1e8: nop
  0x00000000036bf1e9: nop
  0x00000000036bf1ea: nop
  0x00000000036bf1eb: nop
  0x00000000036bf1ec: nop
  0x00000000036bf1ed: nop
  0x00000000036bf1ee: nop
  0x00000000036bf1ef: callq  0x00000000035d61a0  ; OopMap{[136]=Oop [152]=Oop [112]=Oop [184]=Oop off=2708}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedReader::readLine@208 (line 356)
                                                ;   {optimized virtual_call}
  0x00000000036bf1f4: movabs $0x1c6c00c8,%rax   ;   {metadata(method data for {method} {0x000000001c636598} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x00000000036bf1fe: incl   0x380(%rax)
  0x00000000036bf204: mov    0x98(%rsp),%rsi
  0x00000000036bf20c: jmpq   0x00000000036bf4d7  ;*goto
                                                ; - java.io.BufferedReader::readLine@213 (line 356)

  0x00000000036bf211: mov    0x2c(%rdx),%edi
  0x00000000036bf214: shl    $0x3,%rdi          ;*getfield cb
                                                ; - java.io.BufferedReader::readLine@218 (line 358)

  0x00000000036bf218: cmp    (%rcx),%rax        ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@226 (line 358)
                                                ; implicit exception: dispatches to 0x00000000036bfbfa
  0x00000000036bf21b: mov    %rcx,%rbx
  0x00000000036bf21e: movabs $0x1c6c00c8,%rax   ;   {metadata(method data for {method} {0x000000001c636598} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x00000000036bf228: mov    0x8(%rbx),%ebx
  0x00000000036bf22b: shl    $0x3,%rbx
  0x00000000036bf22f: cmp    0x3a0(%rax),%rbx
  0x00000000036bf236: jne    0x00000000036bf245
  0x00000000036bf238: addq   $0x1,0x3a8(%rax)
  0x00000000036bf240: jmpq   0x00000000036bf2ab
  0x00000000036bf245: cmp    0x3b0(%rax),%rbx
  0x00000000036bf24c: jne    0x00000000036bf25b
  0x00000000036bf24e: addq   $0x1,0x3b8(%rax)
  0x00000000036bf256: jmpq   0x00000000036bf2ab
  0x00000000036bf25b: cmpq   $0x0,0x3a0(%rax)
  0x00000000036bf266: jne    0x00000000036bf27f
  0x00000000036bf268: mov    %rbx,0x3a0(%rax)
  0x00000000036bf26f: movq   $0x1,0x3a8(%rax)
  0x00000000036bf27a: jmpq   0x00000000036bf2ab
  0x00000000036bf27f: cmpq   $0x0,0x3b0(%rax)
  0x00000000036bf28a: jne    0x00000000036bf2a3
  0x00000000036bf28c: mov    %rbx,0x3b0(%rax)
  0x00000000036bf293: movq   $0x1,0x3b8(%rax)
  0x00000000036bf29e: jmpq   0x00000000036bf2ab
  0x00000000036bf2a3: addq   $0x1,0x398(%rax)
  0x00000000036bf2ab: mov    %r8,%rsi
  0x00000000036bf2ae: sub    %r9d,%esi
  0x00000000036bf2b1: lea    0xc0(%rsp),%r8
  0x00000000036bf2b9: mov    %rcx,0x8(%r8)
  0x00000000036bf2bd: mov    (%rcx),%rax
  0x00000000036bf2c0: mov    %rax,%rbx
  0x00000000036bf2c3: and    $0x7,%rbx
  0x00000000036bf2c7: cmp    $0x5,%rbx
  0x00000000036bf2cb: jne    0x00000000036bf352
  0x00000000036bf2d1: mov    0x8(%rcx),%ebx
  0x00000000036bf2d4: shl    $0x3,%rbx
  0x00000000036bf2d8: mov    0xa8(%rbx),%rbx
  0x00000000036bf2df: or     %r15,%rbx
  0x00000000036bf2e2: xor    %rax,%rbx
  0x00000000036bf2e5: and    $0xffffffffffffff87,%rbx
  0x00000000036bf2e9: je     0x00000000036bf37a
  0x00000000036bf2ef: test   $0x7,%rbx
  0x00000000036bf2f6: jne    0x00000000036bf33f
  0x00000000036bf2f8: test   $0x300,%rbx
  0x00000000036bf2ff: jne    0x00000000036bf31e
  0x00000000036bf301: and    $0x37f,%rax
  0x00000000036bf308: mov    %rax,%rbx
  0x00000000036bf30b: or     %r15,%rbx
  0x00000000036bf30e: lock cmpxchg %rbx,(%rcx)
  0x00000000036bf313: jne    0x00000000036bfbff
  0x00000000036bf319: jmpq   0x00000000036bf37a
  0x00000000036bf31e: mov    0x8(%rcx),%ebx
  0x00000000036bf321: shl    $0x3,%rbx
  0x00000000036bf325: mov    0xa8(%rbx),%rbx
  0x00000000036bf32c: or     %r15,%rbx
  0x00000000036bf32f: lock cmpxchg %rbx,(%rcx)
  0x00000000036bf334: jne    0x00000000036bfbff
  0x00000000036bf33a: jmpq   0x00000000036bf37a
  0x00000000036bf33f: mov    0x8(%rcx),%ebx
  0x00000000036bf342: shl    $0x3,%rbx
  0x00000000036bf346: mov    0xa8(%rbx),%rbx
  0x00000000036bf34d: lock cmpxchg %rbx,(%rcx)
  0x00000000036bf352: mov    (%rcx),%rax
  0x00000000036bf355: or     $0x1,%rax
  0x00000000036bf359: mov    %rax,(%r8)
  0x00000000036bf35c: lock cmpxchg %r8,(%rcx)
  0x00000000036bf361: je     0x00000000036bf37a
  0x00000000036bf367: sub    %rsp,%rax
  0x00000000036bf36a: and    $0xfffffffffffff007,%rax
  0x00000000036bf371: mov    %rax,(%r8)
  0x00000000036bf374: jne    0x00000000036bfbff  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x00000000036bf37a: movabs $0x1c7ecb20,%r8    ;   {metadata(method data for {method} {0x000000001c4ffea0} &apos;append&apos; &apos;([CII)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x00000000036bf384: mov    0xdc(%r8),%ebx
  0x00000000036bf38b: add    $0x8,%ebx
  0x00000000036bf38e: mov    %ebx,0xdc(%r8)
  0x00000000036bf395: movabs $0x1c4ffe98,%r8    ;   {metadata({method} {0x000000001c4ffea0} &apos;append&apos; &apos;([CII)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x00000000036bf39f: and    $0x7ffff8,%ebx
  0x00000000036bf3a5: cmp    $0x0,%ebx
  0x00000000036bf3a8: je     0x00000000036bfc12
  0x00000000036bf3ae: movl   $0x0,0x14(%rcx)
  0x00000000036bf3b5: mov    %rcx,%rbx
  0x00000000036bf3b8: shr    $0x9,%rbx
  0x00000000036bf3bc: movabs $0xf32f000,%r8
  0x00000000036bf3c6: movb   $0x0,(%rbx,%r8,1)  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x00000000036bf3cb: mov    %rcx,%rbx
  0x00000000036bf3ce: movabs $0x1c7ecb20,%r8    ;   {metadata(method data for {method} {0x000000001c4ffea0} &apos;append&apos; &apos;([CII)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x00000000036bf3d8: addq   $0x1,0x108(%r8)
  0x00000000036bf3e0: mov    %rdi,%r8
  0x00000000036bf3e3: mov    %rsi,%rdi
  0x00000000036bf3e6: mov    %rcx,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@9 (line 367)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x00000000036bf3e9: mov    %rcx,0x80(%rsp)
  0x00000000036bf3f1: nop
  0x00000000036bf3f2: nop
  0x00000000036bf3f3: nop
  0x00000000036bf3f4: nop
  0x00000000036bf3f5: nop
  0x00000000036bf3f6: nop
  0x00000000036bf3f7: callq  0x00000000035d61a0  ; OopMap{[136]=Oop [128]=Oop [112]=Oop [184]=Oop [200]=Oop off=3228}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@9 (line 367)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)
                                                ;   {optimized virtual_call}
  0x00000000036bf3fc: lea    0xc0(%rsp),%rax
  0x00000000036bf404: mov    0x8(%rax),%rsi
  0x00000000036bf408: mov    (%rsi),%rdx
  0x00000000036bf40b: and    $0x7,%rdx
  0x00000000036bf40f: cmp    $0x5,%rdx
  0x00000000036bf413: je     0x00000000036bf430
  0x00000000036bf419: mov    (%rax),%rdx
  0x00000000036bf41c: test   %rdx,%rdx
  0x00000000036bf41f: je     0x00000000036bf430
  0x00000000036bf425: lock cmpxchg %rdx,(%rsi)
  0x00000000036bf42a: jne    0x00000000036bfc29  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x00000000036bf430: mov    0x80(%rsp),%rbx
  0x00000000036bf438: movabs $0x1c6c00c8,%rdx   ;   {metadata(method data for {method} {0x000000001c636598} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x00000000036bf442: mov    0x8(%rbx),%ebx
  0x00000000036bf445: shl    $0x3,%rbx
  0x00000000036bf449: cmp    0x3d0(%rdx),%rbx
  0x00000000036bf450: jne    0x00000000036bf45f
  0x00000000036bf452: addq   $0x1,0x3d8(%rdx)
  0x00000000036bf45a: jmpq   0x00000000036bf4c5
  0x00000000036bf45f: cmp    0x3e0(%rdx),%rbx
  0x00000000036bf466: jne    0x00000000036bf475
  0x00000000036bf468: addq   $0x1,0x3e8(%rdx)
  0x00000000036bf470: jmpq   0x00000000036bf4c5
  0x00000000036bf475: cmpq   $0x0,0x3d0(%rdx)
  0x00000000036bf480: jne    0x00000000036bf499
  0x00000000036bf482: mov    %rbx,0x3d0(%rdx)
  0x00000000036bf489: movq   $0x1,0x3d8(%rdx)
  0x00000000036bf494: jmpq   0x00000000036bf4c5
  0x00000000036bf499: cmpq   $0x0,0x3e0(%rdx)
  0x00000000036bf4a4: jne    0x00000000036bf4bd
  0x00000000036bf4a6: mov    %rbx,0x3e0(%rdx)
  0x00000000036bf4ad: movq   $0x1,0x3e8(%rdx)
  0x00000000036bf4b8: jmpq   0x00000000036bf4c5
  0x00000000036bf4bd: addq   $0x1,0x3c8(%rdx)
  0x00000000036bf4c5: mov    0x80(%rsp),%rdx    ;*invokevirtual toString
                                                ; - java.io.BufferedReader::readLine@231 (line 359)

  0x00000000036bf4cd: nop
  0x00000000036bf4ce: nop
  0x00000000036bf4cf: callq  0x00000000035d61a0  ; OopMap{[136]=Oop [128]=Oop [112]=Oop [184]=Oop off=3444}
                                                ;*invokevirtual toString
                                                ; - java.io.BufferedReader::readLine@231 (line 359)
                                                ;   {optimized virtual_call}
  0x00000000036bf4d4: mov    %rax,%rsi          ;*aload_0
                                                ; - java.io.BufferedReader::readLine@236 (line 361)

  0x00000000036bf4d7: mov    0x7c(%rsp),%edi
  0x00000000036bf4db: mov    0x70(%rsp),%rdx
  0x00000000036bf4e0: mov    0x18(%rdx),%eax    ;*getfield nextChar
                                                ; - java.io.BufferedReader::readLine@238 (line 361)

  0x00000000036bf4e3: inc    %eax
  0x00000000036bf4e5: mov    %eax,0x18(%rdx)    ;*putfield nextChar
                                                ; - java.io.BufferedReader::readLine@243 (line 361)

  0x00000000036bf4e8: cmp    $0xd,%edi
  0x00000000036bf4eb: movabs $0x1c6c00c8,%rax   ;   {metadata(method data for {method} {0x000000001c636598} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x00000000036bf4f5: movabs $0x3f8,%rdi
  0x00000000036bf4ff: jne    0x00000000036bf50f
  0x00000000036bf505: movabs $0x408,%rdi
  0x00000000036bf50f: mov    (%rax,%rdi,1),%rbx
  0x00000000036bf513: lea    0x1(%rbx),%rbx
  0x00000000036bf517: mov    %rbx,(%rax,%rdi,1)
  0x00000000036bf51b: jne    0x00000000036bf86d  ;*if_icmpne
                                                ; - java.io.BufferedReader::readLine@250 (line 362)

  0x00000000036bf521: movb   $0x1,0x24(%rdx)    ;*putfield skipLF
                                                ; - java.io.BufferedReader::readLine@255 (line 363)

  0x00000000036bf525: jmpq   0x00000000036bf86d  ;*aload
                                                ; - java.io.BufferedReader::readLine@258 (line 365)

  0x00000000036bf52a: mov    0x80(%rsp),%rbx
  0x00000000036bf532: cmp    $0x0,%rbx
  0x00000000036bf536: movabs $0x1c6c00c8,%rax   ;   {metadata(method data for {method} {0x000000001c636598} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x00000000036bf540: movabs $0x1c0,%rdx
  0x00000000036bf54a: je     0x00000000036bf55a
  0x00000000036bf550: movabs $0x1d0,%rdx
  0x00000000036bf55a: mov    (%rax,%rdx,1),%rsi
  0x00000000036bf55e: lea    0x1(%rsi),%rsi
  0x00000000036bf562: mov    %rsi,(%rax,%rdx,1)
  0x00000000036bf566: je     0x00000000036bf738  ;*ifnull
                                                ; - java.io.BufferedReader::readLine@59 (line 326)

  0x00000000036bf56c: cmp    (%rbx),%rax        ;*invokevirtual length
                                                ; - java.io.BufferedReader::readLine@63 (line 326)
                                                ; implicit exception: dispatches to 0x00000000036bfc3f
  0x00000000036bf56f: mov    %rbx,%rax
  0x00000000036bf572: movabs $0x1c6c00c8,%rdx   ;   {metadata(method data for {method} {0x000000001c636598} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x00000000036bf57c: mov    0x8(%rax),%eax
  0x00000000036bf57f: shl    $0x3,%rax
  0x00000000036bf583: cmp    0x1e8(%rdx),%rax
  0x00000000036bf58a: jne    0x00000000036bf599
  0x00000000036bf58c: addq   $0x1,0x1f0(%rdx)
  0x00000000036bf594: jmpq   0x00000000036bf5ff
  0x00000000036bf599: cmp    0x1f8(%rdx),%rax
  0x00000000036bf5a0: jne    0x00000000036bf5af
  0x00000000036bf5a2: addq   $0x1,0x200(%rdx)
  0x00000000036bf5aa: jmpq   0x00000000036bf5ff
  0x00000000036bf5af: cmpq   $0x0,0x1e8(%rdx)
  0x00000000036bf5ba: jne    0x00000000036bf5d3
  0x00000000036bf5bc: mov    %rax,0x1e8(%rdx)
  0x00000000036bf5c3: movq   $0x1,0x1f0(%rdx)
  0x00000000036bf5ce: jmpq   0x00000000036bf5ff
  0x00000000036bf5d3: cmpq   $0x0,0x1f8(%rdx)
  0x00000000036bf5de: jne    0x00000000036bf5f7
  0x00000000036bf5e0: mov    %rax,0x1f8(%rdx)
  0x00000000036bf5e7: movq   $0x1,0x200(%rdx)
  0x00000000036bf5f2: jmpq   0x00000000036bf5ff
  0x00000000036bf5f7: addq   $0x1,0x1e0(%rdx)
  0x00000000036bf5ff: lea    0xc0(%rsp),%rdx
  0x00000000036bf607: mov    %rbx,0x8(%rdx)
  0x00000000036bf60b: mov    (%rbx),%rax
  0x00000000036bf60e: mov    %rax,%rsi
  0x00000000036bf611: and    $0x7,%rsi
  0x00000000036bf615: cmp    $0x5,%rsi
  0x00000000036bf619: jne    0x00000000036bf6a0
  0x00000000036bf61f: mov    0x8(%rbx),%esi
  0x00000000036bf622: shl    $0x3,%rsi
  0x00000000036bf626: mov    0xa8(%rsi),%rsi
  0x00000000036bf62d: or     %r15,%rsi
  0x00000000036bf630: xor    %rax,%rsi
  0x00000000036bf633: and    $0xffffffffffffff87,%rsi
  0x00000000036bf637: je     0x00000000036bf6c8
  0x00000000036bf63d: test   $0x7,%rsi
  0x00000000036bf644: jne    0x00000000036bf68d
  0x00000000036bf646: test   $0x300,%rsi
  0x00000000036bf64d: jne    0x00000000036bf66c
  0x00000000036bf64f: and    $0x37f,%rax
  0x00000000036bf656: mov    %rax,%rsi
  0x00000000036bf659: or     %r15,%rsi
  0x00000000036bf65c: lock cmpxchg %rsi,(%rbx)
  0x00000000036bf661: jne    0x00000000036bfc44
  0x00000000036bf667: jmpq   0x00000000036bf6c8
  0x00000000036bf66c: mov    0x8(%rbx),%esi
  0x00000000036bf66f: shl    $0x3,%rsi
  0x00000000036bf673: mov    0xa8(%rsi),%rsi
  0x00000000036bf67a: or     %r15,%rsi
  0x00000000036bf67d: lock cmpxchg %rsi,(%rbx)
  0x00000000036bf682: jne    0x00000000036bfc44
  0x00000000036bf688: jmpq   0x00000000036bf6c8
  0x00000000036bf68d: mov    0x8(%rbx),%esi
  0x00000000036bf690: shl    $0x3,%rsi
  0x00000000036bf694: mov    0xa8(%rsi),%rsi
  0x00000000036bf69b: lock cmpxchg %rsi,(%rbx)
  0x00000000036bf6a0: mov    (%rbx),%rax
  0x00000000036bf6a3: or     $0x1,%rax
  0x00000000036bf6a7: mov    %rax,(%rdx)
  0x00000000036bf6aa: lock cmpxchg %rdx,(%rbx)
  0x00000000036bf6af: je     0x00000000036bf6c8
  0x00000000036bf6b5: sub    %rsp,%rax
  0x00000000036bf6b8: and    $0xfffffffffffff007,%rax
  0x00000000036bf6bf: mov    %rax,(%rdx)
  0x00000000036bf6c2: jne    0x00000000036bfc44  ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x00000000036bf6c8: mov    0xc(%rbx),%edx     ;*getfield count
                                                ; - java.lang.StringBuffer::length@1 (line 163)
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x00000000036bf6cb: lea    0xc0(%rsp),%rax
  0x00000000036bf6d3: mov    0x8(%rax),%rdi
  0x00000000036bf6d7: mov    (%rdi),%rsi
  0x00000000036bf6da: and    $0x7,%rsi
  0x00000000036bf6de: cmp    $0x5,%rsi
  0x00000000036bf6e2: je     0x00000000036bf6ff
  0x00000000036bf6e8: mov    (%rax),%rsi
  0x00000000036bf6eb: test   %rsi,%rsi
  0x00000000036bf6ee: je     0x00000000036bf6ff
  0x00000000036bf6f4: lock cmpxchg %rsi,(%rdi)
  0x00000000036bf6f9: jne    0x00000000036bfc57  ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x00000000036bf6ff: cmp    $0x0,%edx
  0x00000000036bf702: movabs $0x1c6c00c8,%rax   ;   {metadata(method data for {method} {0x000000001c636598} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x00000000036bf70c: movabs $0x210,%rdx
  0x00000000036bf716: jle    0x00000000036bf726
  0x00000000036bf71c: movabs $0x220,%rdx
  0x00000000036bf726: mov    (%rax,%rdx,1),%rsi
  0x00000000036bf72a: lea    0x1(%rsi),%rsi
  0x00000000036bf72e: mov    %rsi,(%rax,%rdx,1)
  0x00000000036bf732: jg     0x00000000036bf785  ;*ifle
                                                ; - java.io.BufferedReader::readLine@66 (line 326)

  0x00000000036bf738: lea    0xb0(%rsp),%rax
  0x00000000036bf740: mov    0x8(%rax),%rsi
  0x00000000036bf744: mov    (%rsi),%rdx
  0x00000000036bf747: and    $0x7,%rdx
  0x00000000036bf74b: cmp    $0x5,%rdx
  0x00000000036bf74f: je     0x00000000036bf76c
  0x00000000036bf755: mov    (%rax),%rdx
  0x00000000036bf758: test   %rdx,%rdx
  0x00000000036bf75b: je     0x00000000036bf76c
  0x00000000036bf761: lock cmpxchg %rdx,(%rsi)
  0x00000000036bf766: jne    0x00000000036bfc6d  ;*monitorexit
                                                ; - java.io.BufferedReader::readLine@80 (line 329)

  0x00000000036bf76c: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00000000036bf776: add    $0xe0,%rsp
  0x00000000036bf77d: pop    %rbp
  0x00000000036bf77e: test   %eax,-0x20cf684(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036bf784: retq                      ;*areturn
                                                ; - java.io.BufferedReader::readLine@81 (line 329)

  0x00000000036bf785: mov    %rbx,%rdx
  0x00000000036bf788: movabs $0x1c6c00c8,%rsi   ;   {metadata(method data for {method} {0x000000001c636598} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x00000000036bf792: mov    0x8(%rdx),%edx
  0x00000000036bf795: shl    $0x3,%rdx
  0x00000000036bf799: cmp    0x238(%rsi),%rdx
  0x00000000036bf7a0: jne    0x00000000036bf7af
  0x00000000036bf7a2: addq   $0x1,0x240(%rsi)
  0x00000000036bf7aa: jmpq   0x00000000036bf815
  0x00000000036bf7af: cmp    0x248(%rsi),%rdx
  0x00000000036bf7b6: jne    0x00000000036bf7c5
  0x00000000036bf7b8: addq   $0x1,0x250(%rsi)
  0x00000000036bf7c0: jmpq   0x00000000036bf815
  0x00000000036bf7c5: cmpq   $0x0,0x238(%rsi)
  0x00000000036bf7d0: jne    0x00000000036bf7e9
  0x00000000036bf7d2: mov    %rdx,0x238(%rsi)
  0x00000000036bf7d9: movq   $0x1,0x240(%rsi)
  0x00000000036bf7e4: jmpq   0x00000000036bf815
  0x00000000036bf7e9: cmpq   $0x0,0x248(%rsi)
  0x00000000036bf7f4: jne    0x00000000036bf80d
  0x00000000036bf7f6: mov    %rdx,0x248(%rsi)
  0x00000000036bf7fd: movq   $0x1,0x250(%rsi)
  0x00000000036bf808: jmpq   0x00000000036bf815
  0x00000000036bf80d: addq   $0x1,0x230(%rsi)
  0x00000000036bf815: mov    %rbx,%rdx          ;*invokevirtual toString
                                                ; - java.io.BufferedReader::readLine@70 (line 327)

  0x00000000036bf818: nop
  0x00000000036bf819: nop
  0x00000000036bf81a: nop
  0x00000000036bf81b: nop
  0x00000000036bf81c: nop
  0x00000000036bf81d: nop
  0x00000000036bf81e: nop
  0x00000000036bf81f: callq  0x00000000035d61a0  ; OopMap{[136]=Oop [184]=Oop off=4292}
                                                ;*invokevirtual toString
                                                ; - java.io.BufferedReader::readLine@70 (line 327)
                                                ;   {optimized virtual_call}
  0x00000000036bf824: mov    %rax,%rdx          ;*invokevirtual toString
                                                ; - java.io.BufferedReader::readLine@70 (line 327)

  0x00000000036bf827: lea    0xb0(%rsp),%rax
  0x00000000036bf82f: mov    0x8(%rax),%rsi
  0x00000000036bf833: mov    (%rsi),%r8
  0x00000000036bf836: and    $0x7,%r8
  0x00000000036bf83a: cmp    $0x5,%r8
  0x00000000036bf83e: je     0x00000000036bf85b
  0x00000000036bf844: mov    (%rax),%r8
  0x00000000036bf847: test   %r8,%r8
  0x00000000036bf84a: je     0x00000000036bf85b
  0x00000000036bf850: lock cmpxchg %r8,(%rsi)
  0x00000000036bf855: jne    0x00000000036bfc83  ;*monitorexit
                                                ; - java.io.BufferedReader::readLine@75 (line 327)

  0x00000000036bf85b: mov    %rdx,%rax
  0x00000000036bf85e: add    $0xe0,%rsp
  0x00000000036bf865: pop    %rbp
  0x00000000036bf866: test   %eax,-0x20cf76c(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036bf86c: retq                      ;*areturn
                                                ; - java.io.BufferedReader::readLine@76 (line 327)

  0x00000000036bf86d: lea    0xb0(%rsp),%rax
  0x00000000036bf875: mov    0x8(%rax),%r8
  0x00000000036bf879: mov    (%r8),%rdx
  0x00000000036bf87c: and    $0x7,%rdx
  0x00000000036bf880: cmp    $0x5,%rdx
  0x00000000036bf884: je     0x00000000036bf8a1
  0x00000000036bf88a: mov    (%rax),%rdx
  0x00000000036bf88d: test   %rdx,%rdx
  0x00000000036bf890: je     0x00000000036bf8a1
  0x00000000036bf896: lock cmpxchg %rdx,(%r8)
  0x00000000036bf89b: jne    0x00000000036bfc99  ;*monitorexit
                                                ; - java.io.BufferedReader::readLine@262 (line 365)

  0x00000000036bf8a1: mov    %rsi,%rax
  0x00000000036bf8a4: add    $0xe0,%rsp
  0x00000000036bf8ab: pop    %rbp
  0x00000000036bf8ac: test   %eax,-0x20cf7b2(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036bf8b2: retq                      ;*areturn
                                                ; - java.io.BufferedReader::readLine@263 (line 365)

  0x00000000036bf8b3: mov    %r8d,0xa8(%rsp)
  0x00000000036bf8bb: nopl   0x0(%rax,%rax,1)
  0x00000000036bf8c0: jmpq   0x00000000036bfcbe  ;   {no_reloc}
  0x00000000036bf8c5: add    %al,(%rax)
  0x00000000036bf8c7: add    %al,(%rax)
  0x00000000036bf8c9: add    %ch,%cl
  0x00000000036bf8cb: stc    
  0x00000000036bf8cc: add    (%rax),%eax
  0x00000000036bf8ce: add    %cl,-0x75(%rax)    ;*new  ; - java.io.BufferedReader::ensureOpen@7 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x00000000036bf8d1: rorb   -0x41(%rax)        ;   {metadata(method data for {method} {0x000000001c635e70} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/io/BufferedReader&apos;)}
  0x00000000036bf8d4: callq  0x0000000003886635
  0x00000000036bf8d9: add    %al,(%rax)
  0x00000000036bf8db: add    %cl,-0x7d(%rax)
  0x00000000036bf8de: xchg   %ebp,(%rax)
  0x00000000036bf8e0: add    %eax,(%rax)
  0x00000000036bf8e2: add    %al,(%rcx)
  0x00000000036bf8e4: movabs $0x76ca4e318,%r8   ;   {oop(&quot;Stream closed&quot;)}
  0x00000000036bf8ee: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedReader::ensureOpen@13 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x00000000036bf8f1: mov    %rax,0xa0(%rsp)
  0x00000000036bf8f9: nop
  0x00000000036bf8fa: nop
  0x00000000036bf8fb: nop
  0x00000000036bf8fc: nop
  0x00000000036bf8fd: nop
  0x00000000036bf8fe: nop
  0x00000000036bf8ff: callq  0x00000000035d61a0  ; OopMap{[136]=Oop [112]=Oop [160]=Oop [184]=Oop off=4516}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedReader::ensureOpen@13 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)
                                                ;   {optimized virtual_call}
  0x00000000036bf904: mov    0xa0(%rsp),%rax    ; OopMap{[136]=Oop [112]=Oop [184]=Oop rax=Oop off=4524}
                                                ;*athrow
                                                ; - java.io.BufferedReader::ensureOpen@16 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x00000000036bf90c: movabs $0x36bf90c,%rdx    ;   {section_word}
  0x00000000036bf916: callq  0x000000000368eda0  ;   {runtime_call}
  0x00000000036bf91b: nop                       ;*athrow
                                                ; - java.io.BufferedReader::ensureOpen@16 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x00000000036bf91c: mov    0x2a8(%r15),%rax
  0x00000000036bf923: xor    %r10,%r10
  0x00000000036bf926: mov    %r10,0x2a8(%r15)
  0x00000000036bf92d: xor    %r10,%r10
  0x00000000036bf930: mov    %r10,0x2b0(%r15)
  0x00000000036bf937: mov    %rax,%rdx
  0x00000000036bf93a: lea    0xc0(%rsp),%rax
  0x00000000036bf942: mov    0x8(%rax),%rdi
  0x00000000036bf946: mov    (%rdi),%rsi
  0x00000000036bf949: and    $0x7,%rsi
  0x00000000036bf94d: cmp    $0x5,%rsi
  0x00000000036bf951: je     0x00000000036bf96e
  0x00000000036bf957: mov    (%rax),%rsi
  0x00000000036bf95a: test   %rsi,%rsi
  0x00000000036bf95d: je     0x00000000036bf96e
  0x00000000036bf963: lock cmpxchg %rsi,(%rdi)
  0x00000000036bf968: jne    0x00000000036bfcd5  ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x00000000036bf96e: mov    %rdx,%rax          ; OopMap{rbx=Oop [136]=Oop [184]=Oop rax=Oop off=4625}
                                                ;*invokevirtual length
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x00000000036bf971: movabs $0x36bf971,%rdx    ;   {section_word}
  0x00000000036bf97b: callq  0x000000000368eda0  ;   {runtime_call}
  0x00000000036bf980: nop                       ;*invokevirtual length
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x00000000036bf981: mov    0x2a8(%r15),%rax
  0x00000000036bf988: xor    %r10,%r10
  0x00000000036bf98b: mov    %r10,0x2a8(%r15)
  0x00000000036bf992: xor    %r10,%r10
  0x00000000036bf995: mov    %r10,0x2b0(%r15)
  0x00000000036bf99c: mov    %rax,%rdx
  0x00000000036bf99f: lea    0xc0(%rsp),%rax
  0x00000000036bf9a7: mov    0x8(%rax),%rcx
  0x00000000036bf9ab: mov    (%rcx),%rsi
  0x00000000036bf9ae: and    $0x7,%rsi
  0x00000000036bf9b2: cmp    $0x5,%rsi
  0x00000000036bf9b6: je     0x00000000036bf9d3
  0x00000000036bf9bc: mov    (%rax),%rsi
  0x00000000036bf9bf: test   %rsi,%rsi
  0x00000000036bf9c2: je     0x00000000036bf9d3
  0x00000000036bf9c8: lock cmpxchg %rsi,(%rcx)
  0x00000000036bf9cd: jne    0x00000000036bfceb  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x00000000036bf9d3: mov    %rdx,%rax          ; OopMap{[112]=Oop [136]=Oop rbx=Oop [184]=Oop rax=Oop off=4726}
                                                ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x00000000036bf9d6: movabs $0x36bf9d6,%rdx    ;   {section_word}
  0x00000000036bf9e0: callq  0x000000000368eda0  ;   {runtime_call}
  0x00000000036bf9e5: nop                       ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x00000000036bf9e6: mov    0x88(%rsp),%rdi
  0x00000000036bf9ee: mov    0x70(%rsp),%rsi
  0x00000000036bf9f3: mov    0x2a8(%r15),%rax
  0x00000000036bf9fa: xor    %r10,%r10
  0x00000000036bf9fd: mov    %r10,0x2a8(%r15)
  0x00000000036bfa04: xor    %r10,%r10
  0x00000000036bfa07: mov    %r10,0x2b0(%r15)
  0x00000000036bfa0e: mov    %rax,%rdx
  0x00000000036bfa11: lea    0xc0(%rsp),%rax
  0x00000000036bfa19: mov    0x8(%rax),%r8
  0x00000000036bfa1d: mov    (%r8),%rcx
  0x00000000036bfa20: and    $0x7,%rcx
  0x00000000036bfa24: cmp    $0x5,%rcx
  0x00000000036bfa28: je     0x00000000036bfa45
  0x00000000036bfa2e: mov    (%rax),%rcx
  0x00000000036bfa31: test   %rcx,%rcx
  0x00000000036bfa34: je     0x00000000036bfa45
  0x00000000036bfa3a: lock cmpxchg %rcx,(%r8)
  0x00000000036bfa3f: jne    0x00000000036bfd01  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x00000000036bfa45: mov    %rdx,%rax          ; OopMap{rbx=Oop rsi=Oop [112]=Oop rdi=Oop [136]=Oop [184]=Oop rax=Oop off=4840}
                                                ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x00000000036bfa48: movabs $0x36bfa48,%rdx    ;   {section_word}
  0x00000000036bfa52: callq  0x000000000368eda0  ;   {runtime_call}
  0x00000000036bfa57: nop                       ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x00000000036bfa58: mov    0x2a8(%r15),%rax
  0x00000000036bfa5f: xor    %r10,%r10
  0x00000000036bfa62: mov    %r10,0x2a8(%r15)
  0x00000000036bfa69: xor    %r10,%r10
  0x00000000036bfa6c: mov    %r10,0x2b0(%r15)
  0x00000000036bfa73: mov    %rax,%rsi
  0x00000000036bfa76: lea    0xb0(%rsp),%rax
  0x00000000036bfa7e: mov    0x8(%rax),%rbx
  0x00000000036bfa82: mov    (%rbx),%rdi
  0x00000000036bfa85: and    $0x7,%rdi
  0x00000000036bfa89: cmp    $0x5,%rdi
  0x00000000036bfa8d: je     0x00000000036bfaaa
  0x00000000036bfa93: mov    (%rax),%rdi
  0x00000000036bfa96: test   %rdi,%rdi
  0x00000000036bfa99: je     0x00000000036bfaaa
  0x00000000036bfa9f: lock cmpxchg %rdi,(%rbx)
  0x00000000036bfaa4: jne    0x00000000036bfd17  ;*monitorexit
                                                ; - java.io.BufferedReader::readLine@300 (line 372)

  0x00000000036bfaaa: mov    %rsi,%rax
  0x00000000036bfaad: jmpq   0x00000000036bfd76
  0x00000000036bfab2: mov    %rax,0x8(%rsp)
  0x00000000036bfab7: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036bfabf: callq  0x00000000036919e0  ; OopMap{rdx=Oop [112]=Oop off=4964}
                                                ;*synchronization entry
                                                ; - java.io.BufferedReader::readLine@-1 (line 313)
                                                ;   {runtime_call}
  0x00000000036bfac4: jmpq   0x00000000036be7c6
  0x00000000036bfac9: callq  0x000000000368d080  ; OopMap{rdx=Oop [112]=Oop rsi=Oop [136]=Oop off=4974}
                                                ;*monitorenter
                                                ; - java.io.BufferedReader::readLine@9 (line 316)
                                                ;   {runtime_call}
  0x00000000036bface: mov    %rsi,0x8(%rsp)
  0x00000000036bfad3: mov    %rdi,(%rsp)
  0x00000000036bfad7: callq  0x000000000368fce0  ; OopMap{rdx=Oop [112]=Oop rsi=Oop [136]=Oop [184]=Oop off=4988}
                                                ;*monitorenter
                                                ; - java.io.BufferedReader::readLine@9 (line 316)
                                                ;   {runtime_call}
  0x00000000036bfadc: jmpq   0x00000000036be89e
  0x00000000036bfae1: mov    %rdi,0x8(%rsp)
  0x00000000036bfae6: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036bfaee: callq  0x00000000036919e0  ; OopMap{rdx=Oop [112]=Oop rsi=Oop [136]=Oop [184]=Oop off=5011}
                                                ;*synchronization entry
                                                ; - java.io.BufferedReader::ensureOpen@-1 (line 121)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)
                                                ;   {runtime_call}
  0x00000000036bfaf3: jmpq   0x00000000036be8e5
  0x00000000036bfaf8: callq  0x000000000368d080  ; OopMap{[136]=Oop [128]=Oop rdx=Oop [112]=Oop rax=Oop [184]=Oop off=5021}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@101 (line 336)
                                                ;   {runtime_call}
  0x00000000036bfafd: callq  0x000000000368d080  ; OopMap{[136]=Oop [128]=Oop rdx=Oop [112]=Oop rax=Oop [184]=Oop off=5026}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@101 (line 336)
                                                ;   {runtime_call}
  0x00000000036bfb02: mov    %rsi,(%rsp)
  0x00000000036bfb06: callq  0x000000000368c9c0  ; OopMap{[136]=Oop [128]=Oop rdx=Oop [112]=Oop rax=Oop [184]=Oop off=5035}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@101 (line 336)
                                                ;   {runtime_call}
  0x00000000036bfb0b: callq  0x000000000368d080  ; OopMap{[136]=Oop [128]=Oop rdx=Oop [112]=Oop rsi=Oop [184]=Oop off=5040}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@146 (line 343)
                                                ;   {runtime_call}
  0x00000000036bfb10: callq  0x000000000368d080  ; OopMap{[136]=Oop [128]=Oop rdx=Oop [112]=Oop rsi=Oop [184]=Oop off=5045}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@146 (line 343)
                                                ;   {runtime_call}
  0x00000000036bfb15: mov    %r8,(%rsp)
  0x00000000036bfb19: callq  0x000000000368c9c0  ; OopMap{[136]=Oop [128]=Oop rdx=Oop [112]=Oop rsi=Oop [184]=Oop off=5054}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@146 (line 343)
                                                ;   {runtime_call}
  0x00000000036bfb1e: mov    %rax,0x8(%rsp)
  0x00000000036bfb23: movq   $0xac,(%rsp)
  0x00000000036bfb2b: callq  0x00000000036919e0  ; OopMap{[136]=Oop [128]=Oop rdx=Oop [112]=Oop [184]=Oop off=5072}
                                                ;*goto
                                                ; - java.io.BufferedReader::readLine@172 (line 342)
                                                ;   {runtime_call}
  0x00000000036bfb30: jmpq   0x00000000036bebe8
  0x00000000036bfb35: mov    %rdx,%rdx
  0x00000000036bfb38: callq  0x000000000368d300  ; OopMap{[136]=Oop r11=Oop [112]=Oop [184]=Oop off=5085}
                                                ;*new  ; - java.io.BufferedReader::readLine@268 (line 369)
                                                ;   {runtime_call}
  0x00000000036bfb3d: jmpq   0x00000000036bed19
  0x00000000036bfb42: mov    %rdx,0x8(%rsp)
  0x00000000036bfb47: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036bfb4f: callq  0x00000000036919e0  ; OopMap{[136]=Oop r11=Oop [112]=Oop r13=Oop [184]=Oop off=5108}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::&lt;init&gt;@-1 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)
                                                ;   {runtime_call}
  0x00000000036bfb54: jmpq   0x00000000036bed70
  0x00000000036bfb59: mov    %rdx,0x8(%rsp)
  0x00000000036bfb5e: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036bfb66: callq  0x00000000036919e0  ; OopMap{[136]=Oop r11=Oop [112]=Oop r13=Oop [184]=Oop off=5131}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)
                                                ;   {runtime_call}
  0x00000000036bfb6b: jmpq   0x00000000036bedb7
  0x00000000036bfb70: mov    %rdx,0x8(%rsp)
  0x00000000036bfb75: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036bfb7d: callq  0x00000000036919e0  ; OopMap{[136]=Oop r11=Oop [112]=Oop r13=Oop [184]=Oop off=5154}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)
                                                ;   {runtime_call}
  0x00000000036bfb82: jmpq   0x00000000036bedfe
  0x00000000036bfb87: callq  0x000000000368e200  ; OopMap{[136]=Oop r11=Oop [112]=Oop r13=Oop [184]=Oop off=5164}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)
                                                ;   {runtime_call}
  0x00000000036bfb8c: jmpq   0x00000000036bee75
  0x00000000036bfb91: callq  0x000000000368d080  ; OopMap{[136]=Oop r11=Oop [112]=Oop rbx=Oop rdi=Oop [184]=Oop off=5174}
                                                ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@289 (line 370)
                                                ;   {runtime_call}
  0x00000000036bfb96: mov    %rbx,0x8(%rsp)
  0x00000000036bfb9b: mov    %r8,(%rsp)
  0x00000000036bfb9f: callq  0x000000000368fce0  ; OopMap{[136]=Oop r11=Oop [112]=Oop rbx=Oop rdi=Oop [184]=Oop [200]=Oop off=5188}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)
                                                ;   {runtime_call}
  0x00000000036bfba4: jmpq   0x00000000036bf002
  0x00000000036bfba9: mov    %r8,0x8(%rsp)
  0x00000000036bfbae: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036bfbb6: callq  0x00000000036919e0  ; OopMap{[136]=Oop r11=Oop [112]=Oop rbx=Oop rdi=Oop [184]=Oop [200]=Oop off=5211}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)
                                                ;   {runtime_call}
  0x00000000036bfbbb: jmpq   0x00000000036bf036
  0x00000000036bfbc0: lea    0xc0(%rsp),%rax
  0x00000000036bfbc8: mov    %rax,(%rsp)
  0x00000000036bfbcc: callq  0x00000000036900e0  ;   {runtime_call}
  0x00000000036bfbd1: jmpq   0x00000000036bf0b8
  0x00000000036bfbd6: mov    %rdx,0x8(%rsp)
  0x00000000036bfbdb: movq   $0x125,(%rsp)
  0x00000000036bfbe3: callq  0x00000000036919e0  ; OopMap{[136]=Oop [144]=Oop [112]=Oop [184]=Oop off=5256}
                                                ;*goto
                                                ; - java.io.BufferedReader::readLine@293 (line 371)
                                                ;   {runtime_call}
  0x00000000036bfbe8: jmpq   0x00000000036bf0ea
  0x00000000036bfbed: mov    %rdx,%rdx
  0x00000000036bfbf0: callq  0x000000000368d300  ; OopMap{[136]=Oop rbx=Oop [112]=Oop [184]=Oop off=5269}
                                                ;*new  ; - java.io.BufferedReader::readLine@195 (line 356)
                                                ;   {runtime_call}
  0x00000000036bfbf5: jmpq   0x00000000036bf1b5
  0x00000000036bfbfa: callq  0x000000000368d080  ; OopMap{rdx=Oop [112]=Oop rcx=Oop [136]=Oop rdi=Oop [184]=Oop off=5279}
                                                ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@226 (line 358)
                                                ;   {runtime_call}
  0x00000000036bfbff: mov    %rcx,0x8(%rsp)
  0x00000000036bfc04: mov    %r8,(%rsp)
  0x00000000036bfc08: callq  0x000000000368fce0  ; OopMap{rdx=Oop [112]=Oop rcx=Oop [136]=Oop rdi=Oop [184]=Oop [200]=Oop off=5293}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)
                                                ;   {runtime_call}
  0x00000000036bfc0d: jmpq   0x00000000036bf37a
  0x00000000036bfc12: mov    %r8,0x8(%rsp)
  0x00000000036bfc17: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036bfc1f: callq  0x00000000036919e0  ; OopMap{rdx=Oop [112]=Oop rcx=Oop [136]=Oop rdi=Oop [184]=Oop [200]=Oop off=5316}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)
                                                ;   {runtime_call}
  0x00000000036bfc24: jmpq   0x00000000036bf3ae
  0x00000000036bfc29: lea    0xc0(%rsp),%rax
  0x00000000036bfc31: mov    %rax,(%rsp)
  0x00000000036bfc35: callq  0x00000000036900e0  ;   {runtime_call}
  0x00000000036bfc3a: jmpq   0x00000000036bf430
  0x00000000036bfc3f: callq  0x000000000368d080  ; OopMap{[136]=Oop rbx=Oop [184]=Oop off=5348}
                                                ;*invokevirtual length
                                                ; - java.io.BufferedReader::readLine@63 (line 326)
                                                ;   {runtime_call}
  0x00000000036bfc44: mov    %rbx,0x8(%rsp)
  0x00000000036bfc49: mov    %rdx,(%rsp)
  0x00000000036bfc4d: callq  0x000000000368fce0  ; OopMap{[136]=Oop rbx=Oop [184]=Oop [200]=Oop off=5362}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.BufferedReader::readLine@63 (line 326)
                                                ;   {runtime_call}
  0x00000000036bfc52: jmpq   0x00000000036bf6c8
  0x00000000036bfc57: lea    0xc0(%rsp),%rax
  0x00000000036bfc5f: mov    %rax,(%rsp)
  0x00000000036bfc63: callq  0x00000000036900e0  ;   {runtime_call}
  0x00000000036bfc68: jmpq   0x00000000036bf6ff
  0x00000000036bfc6d: lea    0xb0(%rsp),%rax
  0x00000000036bfc75: mov    %rax,(%rsp)
  0x00000000036bfc79: callq  0x00000000036900e0  ;   {runtime_call}
  0x00000000036bfc7e: jmpq   0x00000000036bf76c
  0x00000000036bfc83: lea    0xb0(%rsp),%rax
  0x00000000036bfc8b: mov    %rax,(%rsp)
  0x00000000036bfc8f: callq  0x00000000036900e0  ;   {runtime_call}
  0x00000000036bfc94: jmpq   0x00000000036bf85b
  0x00000000036bfc99: lea    0xb0(%rsp),%rax
  0x00000000036bfca1: mov    %rax,(%rsp)
  0x00000000036bfca5: callq  0x00000000036900e0  ;   {runtime_call}
  0x00000000036bfcaa: jmpq   0x00000000036bf8a1
  0x00000000036bfcaf: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000036bfcb9: mov    $0xa050f00,%eax
  0x00000000036bfcbe: callq  0x0000000003690920  ; OopMap{[136]=Oop [112]=Oop [184]=Oop off=5475}
                                                ;*new  ; - java.io.BufferedReader::ensureOpen@7 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)
                                                ;   {runtime_call}
  0x00000000036bfcc3: jmpq   0x00000000036bf8c0
  0x00000000036bfcc8: mov    %rdx,%rdx
  0x00000000036bfccb: callq  0x000000000368d720  ; OopMap{[136]=Oop [112]=Oop [184]=Oop off=5488}
                                                ;*new  ; - java.io.BufferedReader::ensureOpen@7 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)
                                                ;   {runtime_call}
  0x00000000036bfcd0: jmpq   0x00000000036bf8cf
  0x00000000036bfcd5: lea    0xc0(%rsp),%rax
  0x00000000036bfcdd: mov    %rax,(%rsp)
  0x00000000036bfce1: callq  0x00000000036900e0  ;   {runtime_call}
  0x00000000036bfce6: jmpq   0x00000000036bf96e
  0x00000000036bfceb: lea    0xc0(%rsp),%rax
  0x00000000036bfcf3: mov    %rax,(%rsp)
  0x00000000036bfcf7: callq  0x00000000036900e0  ;   {runtime_call}
  0x00000000036bfcfc: jmpq   0x00000000036bf9d3
  0x00000000036bfd01: lea    0xc0(%rsp),%rax
  0x00000000036bfd09: mov    %rax,(%rsp)
  0x00000000036bfd0d: callq  0x00000000036900e0  ;   {runtime_call}
  0x00000000036bfd12: jmpq   0x00000000036bfa45
  0x00000000036bfd17: lea    0xb0(%rsp),%rax
  0x00000000036bfd1f: mov    %rax,(%rsp)
  0x00000000036bfd23: callq  0x00000000036900e0  ;   {runtime_call}
  0x00000000036bfd28: jmpq   0x00000000036bfaaa
  0x00000000036bfd2d: mov    0x90(%rsp),%rbx
  0x00000000036bfd35: jmpq   0x00000000036bf9e6
  0x00000000036bfd3a: mov    0x7c(%rsp),%edi
  0x00000000036bfd3e: mov    0x80(%rsp),%rbx
  0x00000000036bfd46: jmpq   0x00000000036bf981
  0x00000000036bfd4b: nop
  0x00000000036bfd4c: nop
  0x00000000036bfd4d: mov    0x2a8(%r15),%rax
  0x00000000036bfd54: movabs $0x0,%r10
  0x00000000036bfd5e: mov    %r10,0x2a8(%r15)
  0x00000000036bfd65: movabs $0x0,%r10
  0x00000000036bfd6f: mov    %r10,0x2b0(%r15)
  0x00000000036bfd76: add    $0xe0,%rsp
  0x00000000036bfd7d: pop    %rbp
  0x00000000036bfd7e: jmpq   0x000000000368c620  ;   {runtime_call}
  0x00000000036bfd83: hlt    
  0x00000000036bfd84: hlt    
  0x00000000036bfd85: hlt    
  0x00000000036bfd86: hlt    
  0x00000000036bfd87: hlt    
  0x00000000036bfd88: hlt    
  0x00000000036bfd89: hlt    
  0x00000000036bfd8a: hlt    
  0x00000000036bfd8b: hlt    
  0x00000000036bfd8c: hlt    
  0x00000000036bfd8d: hlt    
  0x00000000036bfd8e: hlt    
  0x00000000036bfd8f: hlt    
  0x00000000036bfd90: hlt    
  0x00000000036bfd91: hlt    
  0x00000000036bfd92: hlt    
  0x00000000036bfd93: hlt    
  0x00000000036bfd94: hlt    
  0x00000000036bfd95: hlt    
  0x00000000036bfd96: hlt    
  0x00000000036bfd97: hlt    
  0x00000000036bfd98: hlt    
  0x00000000036bfd99: hlt    
  0x00000000036bfd9a: hlt    
  0x00000000036bfd9b: hlt    
  0x00000000036bfd9c: hlt    
  0x00000000036bfd9d: hlt    
  0x00000000036bfd9e: hlt    
  0x00000000036bfd9f: hlt    
[Stub Code]
  0x00000000036bfda0: nop                       ;   {no_reloc}
  0x00000000036bfda1: nop
  0x00000000036bfda2: nop
  0x00000000036bfda3: nop
  0x00000000036bfda4: nop
  0x00000000036bfda5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036bfdaf: jmpq   0x00000000036bfdaf  ;   {runtime_call}
  0x00000000036bfdb4: nop
  0x00000000036bfdb5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036bfdbf: jmpq   0x00000000036bfdbf  ;   {runtime_call}
  0x00000000036bfdc4: nop
  0x00000000036bfdc5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036bfdcf: jmpq   0x00000000036bfdcf  ;   {runtime_call}
  0x00000000036bfdd4: nop
  0x00000000036bfdd5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036bfddf: jmpq   0x00000000036bfddf  ;   {runtime_call}
  0x00000000036bfde4: nop
  0x00000000036bfde5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036bfdef: jmpq   0x00000000036bfdef  ;   {runtime_call}
  0x00000000036bfdf4: nop
  0x00000000036bfdf5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036bfdff: jmpq   0x00000000036bfdff  ;   {runtime_call}
  0x00000000036bfe04: nop
  0x00000000036bfe05: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036bfe0f: jmpq   0x00000000036bfe0f  ;   {runtime_call}
[Exception Handler]
  0x00000000036bfe14: callq  0x000000000368f1a0  ;   {runtime_call}
  0x00000000036bfe19: mov    %rsp,-0x28(%rsp)
  0x00000000036bfe1e: sub    $0x80,%rsp
  0x00000000036bfe25: mov    %rax,0x78(%rsp)
  0x00000000036bfe2a: mov    %rcx,0x70(%rsp)
  0x00000000036bfe2f: mov    %rdx,0x68(%rsp)
  0x00000000036bfe34: mov    %rbx,0x60(%rsp)
  0x00000000036bfe39: mov    %rbp,0x50(%rsp)
  0x00000000036bfe3e: mov    %rsi,0x48(%rsp)
  0x00000000036bfe43: mov    %rdi,0x40(%rsp)
  0x00000000036bfe48: mov    %r8,0x38(%rsp)
  0x00000000036bfe4d: mov    %r9,0x30(%rsp)
  0x00000000036bfe52: mov    %r10,0x28(%rsp)
  0x00000000036bfe57: mov    %r11,0x20(%rsp)
  0x00000000036bfe5c: mov    %r12,0x18(%rsp)
  0x00000000036bfe61: mov    %r13,0x10(%rsp)
  0x00000000036bfe66: mov    %r14,0x8(%rsp)
  0x00000000036bfe6b: mov    %r15,(%rsp)
  0x00000000036bfe6f: movabs $0x553ec320,%rcx   ;   {external_word}
  0x00000000036bfe79: movabs $0x36bfe19,%rdx    ;   {internal_word}
  0x00000000036bfe83: mov    %rsp,%r8
  0x00000000036bfe86: and    $0xfffffffffffffff0,%rsp
  0x00000000036bfe8a: callq  0x00000000550a41d0  ;   {runtime_call}
  0x00000000036bfe8f: hlt    
[Deopt Handler Code]
  0x00000000036bfe90: movabs $0x36bfe90,%r10    ;   {section_word}
  0x00000000036bfe9a: push   %r10
  0x00000000036bfe9c: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036bfea1: hlt    
  0x00000000036bfea2: hlt    
  0x00000000036bfea3: hlt    
  0x00000000036bfea4: hlt    
  0x00000000036bfea5: hlt    
  0x00000000036bfea6: hlt    
  0x00000000036bfea7: hlt    
<nmethod compile_id='71' compiler='C1' level='3' entry='0x00000000036be760' size='10976' address='0x00000000036be4d0' relocation_offset='288' insts_offset='656' stub_offset='6352' scopes_data_offset='6680' scopes_pcs_offset='8152' dependencies_offset='10296' handler_table_offset='10304' nul_chk_table_offset='10904' method='java/io/BufferedReader readLine (Z)Ljava/lang/String;' bytes='304' count='710' backedge_count='15211' iicount='710' stamp='1.619'/>
<writer thread='17528'/>
<task_queued compile_id='85' method='java/io/File &lt;init&gt; (Ljava/lang/String;)V' bytes='47' count='1280' iicount='1280' level='3' stamp='1.620' comment='tiered' hot_count='1280'/>
<task_queued compile_id='86' compile_kind='osr' method='java/io/WinNTFileSystem normalize (Ljava/lang/String;II)Ljava/lang/String;' bytes='231' count='760' backedge_count='75776' iicount='760' osr_bci='61' stamp='1.620' comment='tiered' hot_count='75776'/>
<task_queued compile_id='87' method='java/lang/StringBuilder &lt;init&gt; ()V' bytes='7' count='1024' iicount='1024' level='3' stamp='1.620' comment='tiered' hot_count='1024'/>
<task_queued compile_id='88' method='java/lang/String endsWith (Ljava/lang/String;)Z' bytes='17' count='1664' iicount='1664' level='3' stamp='1.621' comment='tiered' hot_count='1664'/>
<writer thread='7332'/>
Decoding compiled method 0x00000000036c0fd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c578720} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;
  # this:     rdx:rdx   = &apos;java/util/HashMap&apos;
  # parm0:    r8        = int
  # parm1:    r9:r9     = &apos;java/lang/Object&apos;
  #           [sp+0x60]  (sp of caller)
  0x00000000036c11a0: mov    0x8(%rdx),%r10d
  0x00000000036c11a4: shl    $0x3,%r10
  0x00000000036c11a8: cmp    %rax,%r10
  0x00000000036c11ab: jne    0x00000000035d5f60  ;   {runtime_call}
  0x00000000036c11b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000036c11bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000036c11c0: mov    %eax,-0x6000(%rsp)
  0x00000000036c11c7: push   %rbp
  0x00000000036c11c8: sub    $0x50,%rsp
  0x00000000036c11cc: mov    %r8d,0x28(%rsp)
  0x00000000036c11d1: mov    %r9,0x30(%rsp)
  0x00000000036c11d6: movabs $0x1c6813a0,%rsi   ;   {metadata(method data for {method} {0x000000001c578720} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036c11e0: mov    0xdc(%rsi),%edi
  0x00000000036c11e6: add    $0x8,%edi
  0x00000000036c11e9: mov    %edi,0xdc(%rsi)
  0x00000000036c11ef: movabs $0x1c578718,%rsi   ;   {metadata({method} {0x000000001c578720} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036c11f9: and    $0x1ff8,%edi
  0x00000000036c11ff: cmp    $0x0,%edi
  0x00000000036c1202: je     0x00000000036c19e7  ;*aload_0
                                                ; - java.util.HashMap::getNode@0 (line 569)

  0x00000000036c1208: mov    0x24(%rdx),%edx
  0x00000000036c120b: shl    $0x3,%rdx          ;*getfield table
                                                ; - java.util.HashMap::getNode@1 (line 569)

  0x00000000036c120f: cmp    $0x0,%rdx
  0x00000000036c1213: movabs $0x1c6813a0,%rsi   ;   {metadata(method data for {method} {0x000000001c578720} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036c121d: movabs $0x108,%rdi
  0x00000000036c1227: je     0x00000000036c1237
  0x00000000036c122d: movabs $0x118,%rdi
  0x00000000036c1237: mov    (%rsi,%rdi,1),%rbx
  0x00000000036c123b: lea    0x1(%rbx),%rbx
  0x00000000036c123f: mov    %rbx,(%rsi,%rdi,1)
  0x00000000036c1243: je     0x00000000036c1830  ;*ifnull
                                                ; - java.util.HashMap::getNode@6 (line 569)

  0x00000000036c1249: mov    0xc(%rdx),%esi     ;*arraylength
                                                ; - java.util.HashMap::getNode@10 (line 569)
                                                ; implicit exception: dispatches to 0x00000000036c19fe
  0x00000000036c124c: cmp    $0x0,%esi
  0x00000000036c124f: movabs $0x1c6813a0,%rdi   ;   {metadata(method data for {method} {0x000000001c578720} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036c1259: movabs $0x128,%rbx
  0x00000000036c1263: jle    0x00000000036c1273
  0x00000000036c1269: movabs $0x138,%rbx
  0x00000000036c1273: mov    (%rdi,%rbx,1),%rax
  0x00000000036c1277: lea    0x1(%rax),%rax
  0x00000000036c127b: mov    %rax,(%rdi,%rbx,1)
  0x00000000036c127f: jle    0x00000000036c1830  ;*ifle
                                                ; - java.util.HashMap::getNode@14 (line 569)

  0x00000000036c1285: dec    %esi
  0x00000000036c1287: and    %r8,%rsi
  0x00000000036c128a: movslq %esi,%rdi
  0x00000000036c128d: cmp    0xc(%rdx),%esi
  0x00000000036c1290: jae    0x00000000036c1a03
  0x00000000036c1296: mov    0x10(%rdx,%rdi,4),%esi
  0x00000000036c129a: shl    $0x3,%rsi          ;*aaload
                                                ; - java.util.HashMap::getNode@24 (line 569)

  0x00000000036c129e: cmp    $0x0,%rsi
  0x00000000036c12a2: movabs $0x1c6813a0,%rdx   ;   {metadata(method data for {method} {0x000000001c578720} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036c12ac: movabs $0x148,%rdi
  0x00000000036c12b6: je     0x00000000036c12c6
  0x00000000036c12bc: movabs $0x158,%rdi
  0x00000000036c12c6: mov    (%rdx,%rdi,1),%rbx
  0x00000000036c12ca: lea    0x1(%rbx),%rbx
  0x00000000036c12ce: mov    %rbx,(%rdx,%rdi,1)
  0x00000000036c12d2: je     0x00000000036c1830  ;*ifnull
                                                ; - java.util.HashMap::getNode@28 (line 569)

  0x00000000036c12d8: mov    0xc(%rsi),%edx     ;*getfield hash
                                                ; - java.util.HashMap::getNode@33 (line 571)
                                                ; implicit exception: dispatches to 0x00000000036c1a0c
  0x00000000036c12db: cmp    %r8d,%edx
  0x00000000036c12de: movabs $0x1c6813a0,%rdx   ;   {metadata(method data for {method} {0x000000001c578720} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036c12e8: movabs $0x168,%rdi
  0x00000000036c12f2: jne    0x00000000036c1302
  0x00000000036c12f8: movabs $0x178,%rdi
  0x00000000036c1302: mov    (%rdx,%rdi,1),%rbx
  0x00000000036c1306: lea    0x1(%rbx),%rbx
  0x00000000036c130a: mov    %rbx,(%rdx,%rdi,1)
  0x00000000036c130e: jne    0x00000000036c147a  ;*if_icmpne
                                                ; - java.util.HashMap::getNode@37 (line 571)

  0x00000000036c1314: mov    0x10(%rsi),%edx
  0x00000000036c1317: shl    $0x3,%rdx          ;*getfield key
                                                ; - java.util.HashMap::getNode@42 (line 571)

  0x00000000036c131b: cmp    %r9,%rdx
  0x00000000036c131e: movabs $0x1c6813a0,%rdi   ;   {metadata(method data for {method} {0x000000001c578720} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036c1328: movabs $0x188,%rbx
  0x00000000036c1332: je     0x00000000036c1342
  0x00000000036c1338: movabs $0x198,%rbx
  0x00000000036c1342: mov    (%rdi,%rbx,1),%rax
  0x00000000036c1346: lea    0x1(%rax),%rax
  0x00000000036c134a: mov    %rax,(%rdi,%rbx,1)
  0x00000000036c134e: je     0x00000000036c19d8  ;*if_acmpeq
                                                ; - java.util.HashMap::getNode@49 (line 571)

  0x00000000036c1354: cmp    $0x0,%r9
  0x00000000036c1358: movabs $0x1c6813a0,%rdi   ;   {metadata(method data for {method} {0x000000001c578720} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036c1362: movabs $0x1a8,%rbx
  0x00000000036c136c: je     0x00000000036c137c
  0x00000000036c1372: movabs $0x1b8,%rbx
  0x00000000036c137c: mov    (%rdi,%rbx,1),%rax
  0x00000000036c1380: lea    0x1(%rax),%rax
  0x00000000036c1384: mov    %rax,(%rdi,%rbx,1)
  0x00000000036c1388: je     0x00000000036c147a  ;*ifnull
                                                ; - java.util.HashMap::getNode@53 (line 571)

  0x00000000036c138e: mov    %rsi,0x20(%rsp)
  0x00000000036c1393: cmp    (%r9),%rax         ; implicit exception: dispatches to 0x00000000036c1a11
  0x00000000036c1396: mov    %r9,%rdi
  0x00000000036c1399: movabs $0x1c6813a0,%rbx   ;   {metadata(method data for {method} {0x000000001c578720} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036c13a3: mov    0x8(%rdi),%edi
  0x00000000036c13a6: shl    $0x3,%rdi
  0x00000000036c13aa: cmp    0x1d0(%rbx),%rdi
  0x00000000036c13b1: jne    0x00000000036c13c0
  0x00000000036c13b3: addq   $0x1,0x1d8(%rbx)
  0x00000000036c13bb: jmpq   0x00000000036c1426
  0x00000000036c13c0: cmp    0x1e0(%rbx),%rdi
  0x00000000036c13c7: jne    0x00000000036c13d6
  0x00000000036c13c9: addq   $0x1,0x1e8(%rbx)
  0x00000000036c13d1: jmpq   0x00000000036c1426
  0x00000000036c13d6: cmpq   $0x0,0x1d0(%rbx)
  0x00000000036c13e1: jne    0x00000000036c13fa
  0x00000000036c13e3: mov    %rdi,0x1d0(%rbx)
  0x00000000036c13ea: movq   $0x1,0x1d8(%rbx)
  0x00000000036c13f5: jmpq   0x00000000036c1426
  0x00000000036c13fa: cmpq   $0x0,0x1e0(%rbx)
  0x00000000036c1405: jne    0x00000000036c141e
  0x00000000036c1407: mov    %rdi,0x1e0(%rbx)
  0x00000000036c140e: movq   $0x1,0x1e8(%rbx)
  0x00000000036c1419: jmpq   0x00000000036c1426
  0x00000000036c141e: addq   $0x1,0x1c8(%rbx)
  0x00000000036c1426: mov    %rdx,%r8
  0x00000000036c1429: mov    %r9,%rdx           ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@59 (line 572)

  0x00000000036c142c: nop
  0x00000000036c142d: movabs $0xffffffffffffffff,%rax
  0x00000000036c1437: callq  0x00000000035d63e0  ; OopMap{[32]=Oop [48]=Oop off=668}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@59 (line 572)
                                                ;   {virtual_call}
  0x00000000036c143c: cmp    $0x0,%eax
  0x00000000036c143f: movabs $0x1c6813a0,%r8    ;   {metadata(method data for {method} {0x000000001c578720} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036c1449: movabs $0x1f8,%rdx
  0x00000000036c1453: je     0x00000000036c1463
  0x00000000036c1459: movabs $0x208,%rdx
  0x00000000036c1463: mov    (%r8,%rdx,1),%rsi
  0x00000000036c1467: lea    0x1(%rsi),%rsi
  0x00000000036c146b: mov    %rsi,(%r8,%rdx,1)
  0x00000000036c146f: mov    0x20(%rsp),%rsi
  0x00000000036c1474: jne    0x00000000036c19d8  ;*ifeq
                                                ; - java.util.HashMap::getNode@62 (line 572)

  0x00000000036c147a: mov    0x18(%rsi),%r8d
  0x00000000036c147e: shl    $0x3,%r8           ;*getfield next
                                                ; - java.util.HashMap::getNode@70 (line 574)

  0x00000000036c1482: cmp    $0x0,%r8
  0x00000000036c1486: movabs $0x1c6813a0,%rdx   ;   {metadata(method data for {method} {0x000000001c578720} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036c1490: movabs $0x218,%rdi
  0x00000000036c149a: je     0x00000000036c14aa
  0x00000000036c14a0: movabs $0x228,%rdi
  0x00000000036c14aa: mov    (%rdx,%rdi,1),%rbx
  0x00000000036c14ae: lea    0x1(%rbx),%rbx
  0x00000000036c14b2: mov    %rbx,(%rdx,%rdi,1)
  0x00000000036c14b6: je     0x00000000036c1830  ;*ifnull
                                                ; - java.util.HashMap::getNode@76 (line 574)

  0x00000000036c14bc: cmp    $0x0,%rsi
  0x00000000036c14c0: jne    0x00000000036c14db
  0x00000000036c14c2: movabs $0x1c6813a0,%rbx   ;   {metadata(method data for {method} {0x000000001c578720} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036c14cc: orl    $0x100,0x230(%rbx)
  0x00000000036c14d6: jmpq   0x00000000036c159b
  0x00000000036c14db: movabs $0x7c0039780,%rax  ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x00000000036c14e5: mov    0x8(%rsi),%edi
  0x00000000036c14e8: shl    $0x3,%rdi
  0x00000000036c14ec: cmp    %rdi,%rax
  0x00000000036c14ef: jne    0x00000000036c157f
  0x00000000036c14f5: movabs $0x1c6813a0,%rbx   ;   {metadata(method data for {method} {0x000000001c578720} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036c14ff: mov    0x8(%rsi),%eax
  0x00000000036c1502: shl    $0x3,%rax
  0x00000000036c1506: cmp    0x240(%rbx),%rax
  0x00000000036c150d: jne    0x00000000036c151c
  0x00000000036c150f: addq   $0x1,0x248(%rbx)
  0x00000000036c1517: jmpq   0x00000000036c15a0
  0x00000000036c151c: cmp    0x250(%rbx),%rax
  0x00000000036c1523: jne    0x00000000036c1532
  0x00000000036c1525: addq   $0x1,0x258(%rbx)
  0x00000000036c152d: jmpq   0x00000000036c15a0
  0x00000000036c1532: cmpq   $0x0,0x240(%rbx)
  0x00000000036c153d: jne    0x00000000036c1556
  0x00000000036c153f: mov    %rax,0x240(%rbx)
  0x00000000036c1546: movq   $0x1,0x248(%rbx)
  0x00000000036c1551: jmpq   0x00000000036c15a0
  0x00000000036c1556: cmpq   $0x0,0x250(%rbx)
  0x00000000036c1561: jne    0x00000000036c157a
  0x00000000036c1563: mov    %rax,0x250(%rbx)
  0x00000000036c156a: movq   $0x1,0x258(%rbx)
  0x00000000036c1575: jmpq   0x00000000036c15a0
  0x00000000036c157a: jmpq   0x00000000036c15a0
  0x00000000036c157f: movabs $0x1c6813a0,%rbx   ;   {metadata(method data for {method} {0x000000001c578720} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036c1589: subq   $0x1,0x238(%rbx)
  0x00000000036c1591: jmpq   0x00000000036c159b
  0x00000000036c1596: jmpq   0x00000000036c15a0
  0x00000000036c159b: xor    %rdx,%rdx
  0x00000000036c159e: jmp    0x00000000036c15aa
  0x00000000036c15a0: movabs $0x1,%rdx          ;*instanceof
                                                ; - java.util.HashMap::getNode@81 (line 575)

  0x00000000036c15aa: cmp    $0x0,%edx
  0x00000000036c15ad: movabs $0x1c6813a0,%rdx   ;   {metadata(method data for {method} {0x000000001c578720} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036c15b7: movabs $0x268,%rdi
  0x00000000036c15c1: je     0x00000000036c15d1
  0x00000000036c15c7: movabs $0x278,%rdi
  0x00000000036c15d1: mov    (%rdx,%rdi,1),%rbx
  0x00000000036c15d5: lea    0x1(%rbx),%rbx
  0x00000000036c15d9: mov    %rbx,(%rdx,%rdi,1)
  0x00000000036c15dd: jne    0x00000000036c1846  ;*ifeq
                                                ; - java.util.HashMap::getNode@84 (line 575)

  0x00000000036c15e3: nopl   0x0(%rax,%rax,1)
  0x00000000036c15e8: mov    0x30(%rsp),%r9
  0x00000000036c15ed: mov    0x28(%rsp),%esi
  0x00000000036c15f1: mov    0xc(%r8),%edx      ;*getfield hash
                                                ; - java.util.HashMap::getNode@100 (line 578)
                                                ; implicit exception: dispatches to 0x00000000036c1a16
  0x00000000036c15f5: cmp    %esi,%edx
  0x00000000036c15f7: movabs $0x1c6813a0,%rdx   ;   {metadata(method data for {method} {0x000000001c578720} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036c1601: movabs $0x2e8,%rdi
  0x00000000036c160b: jne    0x00000000036c161b
  0x00000000036c1611: movabs $0x2f8,%rdi
  0x00000000036c161b: mov    (%rdx,%rdi,1),%rbx
  0x00000000036c161f: lea    0x1(%rbx),%rbx
  0x00000000036c1623: mov    %rbx,(%rdx,%rdi,1)
  0x00000000036c1627: jne    0x00000000036c179a  ;*if_icmpne
                                                ; - java.util.HashMap::getNode@104 (line 578)

  0x00000000036c162d: mov    0x10(%r8),%edx
  0x00000000036c1631: shl    $0x3,%rdx          ;*getfield key
                                                ; - java.util.HashMap::getNode@109 (line 578)

  0x00000000036c1635: cmp    %r9,%rdx
  0x00000000036c1638: movabs $0x1c6813a0,%rdi   ;   {metadata(method data for {method} {0x000000001c578720} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036c1642: movabs $0x308,%rbx
  0x00000000036c164c: je     0x00000000036c165c
  0x00000000036c1652: movabs $0x318,%rbx
  0x00000000036c165c: mov    (%rdi,%rbx,1),%rax
  0x00000000036c1660: lea    0x1(%rax),%rax
  0x00000000036c1664: mov    %rax,(%rdi,%rbx,1)
  0x00000000036c1668: je     0x00000000036c1821  ;*if_acmpeq
                                                ; - java.util.HashMap::getNode@116 (line 578)

  0x00000000036c166e: cmp    $0x0,%r9
  0x00000000036c1672: movabs $0x1c6813a0,%rdi   ;   {metadata(method data for {method} {0x000000001c578720} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036c167c: movabs $0x328,%rbx
  0x00000000036c1686: je     0x00000000036c1696
  0x00000000036c168c: movabs $0x338,%rbx
  0x00000000036c1696: mov    (%rdi,%rbx,1),%rax
  0x00000000036c169a: lea    0x1(%rax),%rax
  0x00000000036c169e: mov    %rax,(%rdi,%rbx,1)
  0x00000000036c16a2: je     0x00000000036c179a  ;*ifnull
                                                ; - java.util.HashMap::getNode@120 (line 578)

  0x00000000036c16a8: mov    %r8,0x38(%rsp)
  0x00000000036c16ad: cmp    (%r9),%rax         ; implicit exception: dispatches to 0x00000000036c1a1b
  0x00000000036c16b0: mov    %r9,%rdi
  0x00000000036c16b3: movabs $0x1c6813a0,%rbx   ;   {metadata(method data for {method} {0x000000001c578720} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036c16bd: mov    0x8(%rdi),%edi
  0x00000000036c16c0: shl    $0x3,%rdi
  0x00000000036c16c4: cmp    0x350(%rbx),%rdi
  0x00000000036c16cb: jne    0x00000000036c16da
  0x00000000036c16cd: addq   $0x1,0x358(%rbx)
  0x00000000036c16d5: jmpq   0x00000000036c1740
  0x00000000036c16da: cmp    0x360(%rbx),%rdi
  0x00000000036c16e1: jne    0x00000000036c16f0
  0x00000000036c16e3: addq   $0x1,0x368(%rbx)
  0x00000000036c16eb: jmpq   0x00000000036c1740
  0x00000000036c16f0: cmpq   $0x0,0x350(%rbx)
  0x00000000036c16fb: jne    0x00000000036c1714
  0x00000000036c16fd: mov    %rdi,0x350(%rbx)
  0x00000000036c1704: movq   $0x1,0x358(%rbx)
  0x00000000036c170f: jmpq   0x00000000036c1740
  0x00000000036c1714: cmpq   $0x0,0x360(%rbx)
  0x00000000036c171f: jne    0x00000000036c1738
  0x00000000036c1721: mov    %rdi,0x360(%rbx)
  0x00000000036c1728: movq   $0x1,0x368(%rbx)
  0x00000000036c1733: jmpq   0x00000000036c1740
  0x00000000036c1738: addq   $0x1,0x348(%rbx)
  0x00000000036c1740: mov    %rdx,%r8
  0x00000000036c1743: mov    %r9,%rdx           ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@126 (line 579)

  0x00000000036c1746: nop
  0x00000000036c1747: nop
  0x00000000036c1748: nop
  0x00000000036c1749: nop
  0x00000000036c174a: nop
  0x00000000036c174b: nop
  0x00000000036c174c: nop
  0x00000000036c174d: movabs $0xffffffffffffffff,%rax
  0x00000000036c1757: callq  0x00000000035d63e0  ; OopMap{[48]=Oop [56]=Oop off=1468}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@126 (line 579)
                                                ;   {virtual_call}
  0x00000000036c175c: cmp    $0x0,%eax
  0x00000000036c175f: movabs $0x1c6813a0,%rax   ;   {metadata(method data for {method} {0x000000001c578720} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036c1769: movabs $0x378,%r8
  0x00000000036c1773: je     0x00000000036c1783
  0x00000000036c1779: movabs $0x388,%r8
  0x00000000036c1783: mov    (%rax,%r8,1),%r9
  0x00000000036c1787: lea    0x1(%r9),%r9
  0x00000000036c178b: mov    %r9,(%rax,%r8,1)
  0x00000000036c178f: mov    0x38(%rsp),%r8
  0x00000000036c1794: jne    0x00000000036c1821  ;*ifeq
                                                ; - java.util.HashMap::getNode@129 (line 579)

  0x00000000036c179a: mov    0x18(%r8),%eax
  0x00000000036c179e: shl    $0x3,%rax          ;*getfield next
                                                ; - java.util.HashMap::getNode@137 (line 581)

  0x00000000036c17a2: movabs $0x1c6813a0,%r8    ;   {metadata(method data for {method} {0x000000001c578720} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036c17ac: mov    0xe0(%r8),%r9d
  0x00000000036c17b3: add    $0x8,%r9d
  0x00000000036c17b7: mov    %r9d,0xe0(%r8)
  0x00000000036c17be: movabs $0x1c578718,%r8    ;   {metadata({method} {0x000000001c578720} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036c17c8: and    $0xfff8,%r9d
  0x00000000036c17cf: cmp    $0x0,%r9d
  0x00000000036c17d3: je     0x00000000036c1a20  ; OopMap{[48]=Oop rax=Oop off=1593}
                                                ;*ifnonnull
                                                ; - java.util.HashMap::getNode@143 (line 581)

  0x00000000036c17d9: test   %eax,-0x20d16df(%rip)        # 0x00000000015f0100
                                                ;   {poll}
  0x00000000036c17df: cmp    $0x0,%rax
  0x00000000036c17e3: movabs $0x1c6813a0,%r8    ;   {metadata(method data for {method} {0x000000001c578720} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036c17ed: movabs $0x398,%r9
  0x00000000036c17f7: jne    0x00000000036c1807
  0x00000000036c17fd: movabs $0x3a8,%r9
  0x00000000036c1807: mov    (%r8,%r9,1),%rdx
  0x00000000036c180b: lea    0x1(%rdx),%rdx
  0x00000000036c180f: mov    %rdx,(%r8,%r9,1)
  0x00000000036c1813: je     0x00000000036c1830  ;*ifnonnull
                                                ; - java.util.HashMap::getNode@143 (line 581)

  0x00000000036c1819: mov    %rax,%r8
  0x00000000036c181c: jmpq   0x00000000036c15e8  ;*aload
                                                ; - java.util.HashMap::getNode@98 (line 578)

  0x00000000036c1821: mov    %r8,%rax
  0x00000000036c1824: add    $0x50,%rsp
  0x00000000036c1828: pop    %rbp
  0x00000000036c1829: test   %eax,-0x20d172f(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036c182f: retq                      ;*areturn
                                                ; - java.util.HashMap::getNode@134 (line 580)

  0x00000000036c1830: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00000000036c183a: add    $0x50,%rsp
  0x00000000036c183e: pop    %rbp
  0x00000000036c183f: test   %eax,-0x20d1745(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036c1845: retq                      ;*areturn
                                                ; - java.util.HashMap::getNode@147 (line 584)

  0x00000000036c1846: mov    0x30(%rsp),%r9
  0x00000000036c184b: mov    0x28(%rsp),%r8d
  0x00000000036c1850: cmp    $0x0,%rsi
  0x00000000036c1854: jne    0x00000000036c186f
  0x00000000036c1856: movabs $0x1c6813a0,%rdi   ;   {metadata(method data for {method} {0x000000001c578720} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036c1860: orl    $0x100,0x280(%rdi)
  0x00000000036c186a: jmpq   0x00000000036c192f
  0x00000000036c186f: movabs $0x7c0039780,%rbx  ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x00000000036c1879: mov    0x8(%rsi),%edx
  0x00000000036c187c: shl    $0x3,%rdx
  0x00000000036c1880: cmp    %rdx,%rbx
  0x00000000036c1883: jne    0x00000000036c1913
  0x00000000036c1889: movabs $0x1c6813a0,%rdi   ;   {metadata(method data for {method} {0x000000001c578720} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036c1893: mov    0x8(%rsi),%ebx
  0x00000000036c1896: shl    $0x3,%rbx
  0x00000000036c189a: cmp    0x290(%rdi),%rbx
  0x00000000036c18a1: jne    0x00000000036c18b0
  0x00000000036c18a3: addq   $0x1,0x298(%rdi)
  0x00000000036c18ab: jmpq   0x00000000036c192f
  0x00000000036c18b0: cmp    0x2a0(%rdi),%rbx
  0x00000000036c18b7: jne    0x00000000036c18c6
  0x00000000036c18b9: addq   $0x1,0x2a8(%rdi)
  0x00000000036c18c1: jmpq   0x00000000036c192f
  0x00000000036c18c6: cmpq   $0x0,0x290(%rdi)
  0x00000000036c18d1: jne    0x00000000036c18ea
  0x00000000036c18d3: mov    %rbx,0x290(%rdi)
  0x00000000036c18da: movq   $0x1,0x298(%rdi)
  0x00000000036c18e5: jmpq   0x00000000036c192f
  0x00000000036c18ea: cmpq   $0x0,0x2a0(%rdi)
  0x00000000036c18f5: jne    0x00000000036c190e
  0x00000000036c18f7: mov    %rbx,0x2a0(%rdi)
  0x00000000036c18fe: movq   $0x1,0x2a8(%rdi)
  0x00000000036c1909: jmpq   0x00000000036c192f
  0x00000000036c190e: jmpq   0x00000000036c192f
  0x00000000036c1913: movabs $0x1c6813a0,%rdi   ;   {metadata(method data for {method} {0x000000001c578720} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036c191d: subq   $0x1,0x288(%rdi)
  0x00000000036c1925: jmpq   0x00000000036c1a37
  0x00000000036c192a: jmpq   0x00000000036c192f
  0x00000000036c192f: mov    %rsi,%rdx          ;*checkcast
                                                ; - java.util.HashMap::getNode@89 (line 576)

  0x00000000036c1932: cmp    (%rdx),%rax        ;*invokevirtual getTreeNode
                                                ; - java.util.HashMap::getNode@94 (line 576)
                                                ; implicit exception: dispatches to 0x00000000036c1a40
  0x00000000036c1935: mov    %rdx,%rsi
  0x00000000036c1938: movabs $0x1c6813a0,%rdi   ;   {metadata(method data for {method} {0x000000001c578720} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036c1942: mov    0x8(%rsi),%esi
  0x00000000036c1945: shl    $0x3,%rsi
  0x00000000036c1949: cmp    0x2c0(%rdi),%rsi
  0x00000000036c1950: jne    0x00000000036c195f
  0x00000000036c1952: addq   $0x1,0x2c8(%rdi)
  0x00000000036c195a: jmpq   0x00000000036c19c5
  0x00000000036c195f: cmp    0x2d0(%rdi),%rsi
  0x00000000036c1966: jne    0x00000000036c1975
  0x00000000036c1968: addq   $0x1,0x2d8(%rdi)
  0x00000000036c1970: jmpq   0x00000000036c19c5
  0x00000000036c1975: cmpq   $0x0,0x2c0(%rdi)
  0x00000000036c1980: jne    0x00000000036c1999
  0x00000000036c1982: mov    %rsi,0x2c0(%rdi)
  0x00000000036c1989: movq   $0x1,0x2c8(%rdi)
  0x00000000036c1994: jmpq   0x00000000036c19c5
  0x00000000036c1999: cmpq   $0x0,0x2d0(%rdi)
  0x00000000036c19a4: jne    0x00000000036c19bd
  0x00000000036c19a6: mov    %rsi,0x2d0(%rdi)
  0x00000000036c19ad: movq   $0x1,0x2d8(%rdi)
  0x00000000036c19b8: jmpq   0x00000000036c19c5
  0x00000000036c19bd: addq   $0x1,0x2b8(%rdi)
  0x00000000036c19c5: nop
  0x00000000036c19c6: nop
  0x00000000036c19c7: callq  0x00000000035d61a0  ; OopMap{off=2092}
                                                ;*invokevirtual getTreeNode
                                                ; - java.util.HashMap::getNode@94 (line 576)
                                                ;   {optimized virtual_call}
  0x00000000036c19cc: add    $0x50,%rsp
  0x00000000036c19d0: pop    %rbp
  0x00000000036c19d1: test   %eax,-0x20d18d7(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036c19d7: retq                      ;*areturn
                                                ; - java.util.HashMap::getNode@97 (line 576)

  0x00000000036c19d8: mov    %rsi,%rax
  0x00000000036c19db: add    $0x50,%rsp
  0x00000000036c19df: pop    %rbp
  0x00000000036c19e0: test   %eax,-0x20d18e6(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036c19e6: retq   
  0x00000000036c19e7: mov    %rsi,0x8(%rsp)
  0x00000000036c19ec: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036c19f4: callq  0x00000000036919e0  ; OopMap{rdx=Oop r9=Oop [48]=Oop off=2137}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::getNode@-1 (line 569)
                                                ;   {runtime_call}
  0x00000000036c19f9: jmpq   0x00000000036c1208
  0x00000000036c19fe: callq  0x000000000368d080  ; OopMap{rdx=Oop r9=Oop [48]=Oop off=2147}
                                                ;*arraylength
                                                ; - java.util.HashMap::getNode@10 (line 569)
                                                ;   {runtime_call}
  0x00000000036c1a03: mov    %rsi,(%rsp)
  0x00000000036c1a07: callq  0x000000000368c9c0  ; OopMap{r9=Oop [48]=Oop rdx=Oop off=2156}
                                                ;*aaload
                                                ; - java.util.HashMap::getNode@24 (line 569)
                                                ;   {runtime_call}
  0x00000000036c1a0c: callq  0x000000000368d080  ; OopMap{rsi=Oop r9=Oop [48]=Oop off=2161}
                                                ;*getfield hash
                                                ; - java.util.HashMap::getNode@33 (line 571)
                                                ;   {runtime_call}
  0x00000000036c1a11: callq  0x000000000368d080  ; OopMap{r9=Oop [48]=Oop [32]=Oop rdx=Oop off=2166}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@59 (line 572)
                                                ;   {runtime_call}
  0x00000000036c1a16: callq  0x000000000368d080  ; OopMap{r8=Oop r9=Oop [48]=Oop off=2171}
                                                ;*getfield hash
                                                ; - java.util.HashMap::getNode@100 (line 578)
                                                ;   {runtime_call}
  0x00000000036c1a1b: callq  0x000000000368d080  ; OopMap{r9=Oop [48]=Oop [56]=Oop rdx=Oop off=2176}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@126 (line 579)
                                                ;   {runtime_call}
  0x00000000036c1a20: mov    %r8,0x8(%rsp)
  0x00000000036c1a25: movq   $0x8f,(%rsp)
  0x00000000036c1a2d: callq  0x00000000036919e0  ; OopMap{[48]=Oop rax=Oop off=2194}
                                                ;*ifnonnull
                                                ; - java.util.HashMap::getNode@143 (line 581)
                                                ;   {runtime_call}
  0x00000000036c1a32: jmpq   0x00000000036c17d9
  0x00000000036c1a37: mov    %rsi,(%rsp)
  0x00000000036c1a3b: callq  0x000000000368f500  ; OopMap{r9=Oop [48]=Oop off=2208}
                                                ;*checkcast
                                                ; - java.util.HashMap::getNode@89 (line 576)
                                                ;   {runtime_call}
  0x00000000036c1a40: callq  0x000000000368d080  ; OopMap{r9=Oop [48]=Oop rdx=Oop off=2213}
                                                ;*invokevirtual getTreeNode
                                                ; - java.util.HashMap::getNode@94 (line 576)
                                                ;   {runtime_call}
  0x00000000036c1a45: nop
  0x00000000036c1a46: nop
  0x00000000036c1a47: mov    0x2a8(%r15),%rax
  0x00000000036c1a4e: movabs $0x0,%r10
  0x00000000036c1a58: mov    %r10,0x2a8(%r15)
  0x00000000036c1a5f: movabs $0x0,%r10
  0x00000000036c1a69: mov    %r10,0x2b0(%r15)
  0x00000000036c1a70: add    $0x50,%rsp
  0x00000000036c1a74: pop    %rbp
  0x00000000036c1a75: jmpq   0x000000000368c620  ;   {runtime_call}
  0x00000000036c1a7a: hlt    
  0x00000000036c1a7b: hlt    
  0x00000000036c1a7c: hlt    
  0x00000000036c1a7d: hlt    
  0x00000000036c1a7e: hlt    
  0x00000000036c1a7f: hlt    
[Stub Code]
  0x00000000036c1a80: nop                       ;   {no_reloc}
  0x00000000036c1a81: nop
  0x00000000036c1a82: nop
  0x00000000036c1a83: nop
  0x00000000036c1a84: nop
  0x00000000036c1a85: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036c1a8f: jmpq   0x00000000036c1a8f  ;   {runtime_call}
  0x00000000036c1a94: nop
  0x00000000036c1a95: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036c1a9f: jmpq   0x00000000036c1a9f  ;   {runtime_call}
  0x00000000036c1aa4: nop
  0x00000000036c1aa5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036c1aaf: jmpq   0x00000000036c1aaf  ;   {runtime_call}
[Exception Handler]
  0x00000000036c1ab4: callq  0x000000000368f1a0  ;   {runtime_call}
  0x00000000036c1ab9: mov    %rsp,-0x28(%rsp)
  0x00000000036c1abe: sub    $0x80,%rsp
  0x00000000036c1ac5: mov    %rax,0x78(%rsp)
  0x00000000036c1aca: mov    %rcx,0x70(%rsp)
  0x00000000036c1acf: mov    %rdx,0x68(%rsp)
  0x00000000036c1ad4: mov    %rbx,0x60(%rsp)
  0x00000000036c1ad9: mov    %rbp,0x50(%rsp)
  0x00000000036c1ade: mov    %rsi,0x48(%rsp)
  0x00000000036c1ae3: mov    %rdi,0x40(%rsp)
  0x00000000036c1ae8: mov    %r8,0x38(%rsp)
  0x00000000036c1aed: mov    %r9,0x30(%rsp)
  0x00000000036c1af2: mov    %r10,0x28(%rsp)
  0x00000000036c1af7: mov    %r11,0x20(%rsp)
  0x00000000036c1afc: mov    %r12,0x18(%rsp)
  0x00000000036c1b01: mov    %r13,0x10(%rsp)
  0x00000000036c1b06: mov    %r14,0x8(%rsp)
  0x00000000036c1b0b: mov    %r15,(%rsp)
  0x00000000036c1b0f: movabs $0x553ec320,%rcx   ;   {external_word}
  0x00000000036c1b19: movabs $0x36c1ab9,%rdx    ;   {internal_word}
  0x00000000036c1b23: mov    %rsp,%r8
  0x00000000036c1b26: and    $0xfffffffffffffff0,%rsp
  0x00000000036c1b2a: callq  0x00000000550a41d0  ;   {runtime_call}
  0x00000000036c1b2f: hlt    
[Deopt Handler Code]
  0x00000000036c1b30: movabs $0x36c1b30,%r10    ;   {section_word}
  0x00000000036c1b3a: push   %r10
  0x00000000036c1b3c: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036c1b41: hlt    
  0x00000000036c1b42: hlt    
  0x00000000036c1b43: hlt    
  0x00000000036c1b44: hlt    
  0x00000000036c1b45: hlt    
  0x00000000036c1b46: hlt    
  0x00000000036c1b47: hlt    
<nmethod compile_id='82' compiler='C1' level='3' entry='0x00000000036c11a0' size='4176' address='0x00000000036c0fd0' relocation_offset='288' insts_offset='464' stub_offset='2736' scopes_data_offset='2944' scopes_pcs_offset='3328' dependencies_offset='4112' nul_chk_table_offset='4120' method='java/util/HashMap getNode (ILjava/lang/Object;)Ljava/util/HashMap$Node;' bytes='148' count='3088' backedge_count='47' iicount='3088' stamp='1.658'/>
<writer thread='17528'/>
<task_queued compile_id='89' method='java/lang/String toLowerCase (Ljava/util/Locale;)Ljava/lang/String;' bytes='439' count='1426' backedge_count='30601' iicount='1426' stamp='1.658' comment='tiered' hot_count='1426'/>
<task_queued compile_id='90' method='java/util/Vector size ()I' bytes='5' count='896' iicount='896' level='1' stamp='1.659' comment='tiered' hot_count='896'/>
<task_queued compile_id='91' method='java/io/WinNTFileSystem normalizePrefix (Ljava/lang/String;ILjava/lang/StringBuffer;)I' bytes='132' count='768' backedge_count='767' iicount='768' level='3' stamp='1.659' comment='tiered' hot_count='768'/>
<task_queued compile_id='92' method='sun/misc/URLClassPath getNextLoader ([II)Lsun/misc/URLClassPath$Loader;' bytes='88' count='896' iicount='896' level='3' stamp='1.660' comment='tiered' hot_count='896'/>
<task_queued compile_id='93' method='sun/misc/URLClassPath getLoader (I)Lsun/misc/URLClassPath$Loader;' bytes='243' count='896' backedge_count='276' iicount='896' level='3' stamp='1.660' comment='tiered' hot_count='896'/>
<writer thread='7332'/>
Decoding compiled method 0x00000000036c2050:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c5045e0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0xf0]  (sp of caller)
  0x00000000036c2220: mov    0x8(%rdx),%r10d
  0x00000000036c2224: shl    $0x3,%r10
  0x00000000036c2228: cmp    %rax,%r10
  0x00000000036c222b: jne    0x00000000035d5f60  ;   {runtime_call}
  0x00000000036c2231: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000036c223c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000036c2240: mov    %eax,-0x6000(%rsp)
  0x00000000036c2247: push   %rbp
  0x00000000036c2248: sub    $0xe0,%rsp
  0x00000000036c224f: mov    %rdx,0xb8(%rsp)
  0x00000000036c2257: movabs $0x1c683df8,%rsi   ;   {metadata(method data for {method} {0x000000001c5045e0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036c2261: mov    0xdc(%rsi),%edi
  0x00000000036c2267: add    $0x8,%edi
  0x00000000036c226a: mov    %edi,0xdc(%rsi)
  0x00000000036c2270: movabs $0x1c5045d8,%rsi   ;   {metadata({method} {0x000000001c5045e0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036c227a: and    $0x1ff8,%edi
  0x00000000036c2280: cmp    $0x0,%edi
  0x00000000036c2283: je     0x00000000036c27c3  ;*aload_1
                                                ; - java.lang.AbstractStringBuilder::append@0 (line 445)

  0x00000000036c2289: cmp    $0x0,%r8
  0x00000000036c228d: movabs $0x1c683df8,%rsi   ;   {metadata(method data for {method} {0x000000001c5045e0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036c2297: movabs $0x108,%rdi
  0x00000000036c22a1: jne    0x00000000036c22b1
  0x00000000036c22a7: movabs $0x118,%rdi
  0x00000000036c22b1: mov    (%rsi,%rdi,1),%rbx
  0x00000000036c22b5: lea    0x1(%rbx),%rbx
  0x00000000036c22b9: mov    %rbx,(%rsi,%rdi,1)
  0x00000000036c22bd: je     0x00000000036c2793  ;*ifnonnull
                                                ; - java.lang.AbstractStringBuilder::append@1 (line 445)

  0x00000000036c22c3: cmp    (%r8),%rax         ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x00000000036c27da
  0x00000000036c22c6: mov    %r8,%rsi
  0x00000000036c22c9: movabs $0x1c683df8,%rdi   ;   {metadata(method data for {method} {0x000000001c5045e0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036c22d3: mov    0x8(%rsi),%esi
  0x00000000036c22d6: shl    $0x3,%rsi
  0x00000000036c22da: cmp    0x140(%rdi),%rsi
  0x00000000036c22e1: jne    0x00000000036c22f0
  0x00000000036c22e3: addq   $0x1,0x148(%rdi)
  0x00000000036c22eb: jmpq   0x00000000036c2356
  0x00000000036c22f0: cmp    0x150(%rdi),%rsi
  0x00000000036c22f7: jne    0x00000000036c2306
  0x00000000036c22f9: addq   $0x1,0x158(%rdi)
  0x00000000036c2301: jmpq   0x00000000036c2356
  0x00000000036c2306: cmpq   $0x0,0x140(%rdi)
  0x00000000036c2311: jne    0x00000000036c232a
  0x00000000036c2313: mov    %rsi,0x140(%rdi)
  0x00000000036c231a: movq   $0x1,0x148(%rdi)
  0x00000000036c2325: jmpq   0x00000000036c2356
  0x00000000036c232a: cmpq   $0x0,0x150(%rdi)
  0x00000000036c2335: jne    0x00000000036c234e
  0x00000000036c2337: mov    %rsi,0x150(%rdi)
  0x00000000036c233e: movq   $0x1,0x158(%rdi)
  0x00000000036c2349: jmpq   0x00000000036c2356
  0x00000000036c234e: addq   $0x1,0x138(%rdi)
  0x00000000036c2356: movabs $0x1c5c2a08,%rsi   ;   {metadata(method data for {method} {0x000000001c493c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00000000036c2360: mov    0xdc(%rsi),%edi
  0x00000000036c2366: add    $0x8,%edi
  0x00000000036c2369: mov    %edi,0xdc(%rsi)
  0x00000000036c236f: movabs $0x1c493c18,%rsi   ;   {metadata({method} {0x000000001c493c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00000000036c2379: and    $0x7ffff8,%edi
  0x00000000036c237f: cmp    $0x0,%edi
  0x00000000036c2382: je     0x00000000036c27df
  0x00000000036c2388: mov    0xc(%r8),%esi
  0x00000000036c238c: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)

  0x00000000036c2390: mov    0xc(%rsi),%esi     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x00000000036c27f6
  0x00000000036c2393: mov    %esi,0xac(%rsp)
  0x00000000036c239a: mov    0xc(%rdx),%edi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 448)

  0x00000000036c239d: add    %esi,%edi
  0x00000000036c239f: mov    %rdx,%rbx
  0x00000000036c23a2: movabs $0x1c683df8,%rax   ;   {metadata(method data for {method} {0x000000001c5045e0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036c23ac: addq   $0x1,0x168(%rax)
  0x00000000036c23b4: movabs $0x1c681e30,%rbx   ;   {metadata(method data for {method} {0x000000001c503c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036c23be: mov    0xdc(%rbx),%eax
  0x00000000036c23c4: add    $0x8,%eax
  0x00000000036c23c7: mov    %eax,0xdc(%rbx)
  0x00000000036c23cd: movabs $0x1c503c80,%rbx   ;   {metadata({method} {0x000000001c503c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036c23d7: and    $0x7ffff8,%eax
  0x00000000036c23dd: cmp    $0x0,%eax
  0x00000000036c23e0: je     0x00000000036c27fb
  0x00000000036c23e6: mov    0x10(%rdx),%ebx
  0x00000000036c23e9: shl    $0x3,%rbx          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00000000036c23ed: mov    0xc(%rbx),%eax     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; implicit exception: dispatches to 0x00000000036c2812
  0x00000000036c23f0: mov    %rdi,%rcx
  0x00000000036c23f3: sub    %eax,%ecx
  0x00000000036c23f5: cmp    $0x0,%ecx
  0x00000000036c23f8: movabs $0x1c681e30,%rcx   ;   {metadata(method data for {method} {0x000000001c503c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036c2402: movabs $0x108,%r9
  0x00000000036c240c: jle    0x00000000036c241c
  0x00000000036c2412: movabs $0x118,%r9
  0x00000000036c241c: mov    (%rcx,%r9,1),%r11
  0x00000000036c2420: lea    0x1(%r11),%r11
  0x00000000036c2424: mov    %r11,(%rcx,%r9,1)
  0x00000000036c2428: jg     0x00000000036c243b  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00000000036c242e: mov    %r8,0xc0(%rsp)
  0x00000000036c2436: jmpq   0x00000000036c26ad  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00000000036c243b: mov    %eax,0xa8(%rsp)
  0x00000000036c2442: mov    %rbx,0xb0(%rsp)
  0x00000000036c244a: mov    %r8,0xc0(%rsp)
  0x00000000036c2452: mov    %rdx,%rcx
  0x00000000036c2455: movabs $0x1c681e30,%r9    ;   {metadata(method data for {method} {0x000000001c503c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036c245f: addq   $0x1,0x128(%r9)
  0x00000000036c2467: mov    %rdi,%r8
  0x00000000036c246a: mov    %rdx,%rdi
  0x00000000036c246d: mov    %rdi,%rdx          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00000000036c2470: nop
  0x00000000036c2471: nop
  0x00000000036c2472: nop
  0x00000000036c2473: nop
  0x00000000036c2474: nop
  0x00000000036c2475: nop
  0x00000000036c2476: nop
  0x00000000036c2477: callq  0x00000000035d61a0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=604}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {optimized virtual_call}
  0x00000000036c247c: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00000000036c247f: movabs $0x1c681e30,%rbx   ;   {metadata(method data for {method} {0x000000001c503c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036c2489: addq   $0x1,0x138(%rbx)
  0x00000000036c2491: movabs $0x1c6c5010,%rbx   ;   {metadata(method data for {method} {0x000000001c5a8b98} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000036c249b: mov    0xdc(%rbx),%edx
  0x00000000036c24a1: add    $0x8,%edx
  0x00000000036c24a4: mov    %edx,0xdc(%rbx)
  0x00000000036c24aa: movabs $0x1c5a8b90,%rbx   ;   {metadata({method} {0x000000001c5a8b98} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000036c24b4: and    $0x7ffff8,%edx
  0x00000000036c24ba: cmp    $0x0,%edx
  0x00000000036c24bd: je     0x00000000036c2817
  0x00000000036c24c3: mov    %r8,%rbx
  0x00000000036c24c6: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000000036c24d0: movslq %ebx,%rbx
  0x00000000036c24d3: mov    %rbx,%rdi
  0x00000000036c24d6: cmp    $0xffffff,%rbx
  0x00000000036c24dd: ja     0x00000000036c282e
  0x00000000036c24e3: movabs $0x17,%rsi
  0x00000000036c24ed: lea    (%rsi,%rbx,2),%rsi
  0x00000000036c24f1: and    $0xfffffffffffffff8,%rsi
  0x00000000036c24f5: mov    0x60(%r15),%rax
  0x00000000036c24f9: lea    (%rax,%rsi,1),%rsi
  0x00000000036c24fd: cmp    0x70(%r15),%rsi
  0x00000000036c2501: ja     0x00000000036c282e
  0x00000000036c2507: mov    %rsi,0x60(%r15)
  0x00000000036c250b: sub    %rax,%rsi
  0x00000000036c250e: movq   $0x1,(%rax)
  0x00000000036c2515: mov    %rdx,%rcx
  0x00000000036c2518: shr    $0x3,%rcx
  0x00000000036c251c: mov    %ecx,0x8(%rax)
  0x00000000036c251f: mov    %ebx,0xc(%rax)
  0x00000000036c2522: sub    $0x10,%rsi
  0x00000000036c2526: je     0x00000000036c253d
  0x00000000036c252c: xor    %rbx,%rbx
  0x00000000036c252f: shr    $0x3,%rsi
  0x00000000036c2533: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000000036c2538: dec    %rsi
  0x00000000036c253b: jne    0x00000000036c2533  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00000000036c253d: movabs $0x1c6c5010,%rdx   ;   {metadata(method data for {method} {0x000000001c5a8b98} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000036c2547: addq   $0x1,0x108(%rdx)
  0x00000000036c254f: movabs $0x1c67e6d0,%rdx   ;   {metadata(method data for {method} {0x000000001c584640} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000036c2559: mov    0xdc(%rdx),%r9d
  0x00000000036c2560: add    $0x8,%r9d
  0x00000000036c2564: mov    %r9d,0xdc(%rdx)
  0x00000000036c256b: movabs $0x1c584638,%rdx   ;   {metadata({method} {0x000000001c584640} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000036c2575: and    $0x7ffff8,%r9d
  0x00000000036c257c: cmp    $0x0,%r9d
  0x00000000036c2580: je     0x00000000036c2838
  0x00000000036c2586: mov    0xa8(%rsp),%edx
  0x00000000036c258d: cmp    %r8d,%edx
  0x00000000036c2590: movabs $0x1c67e6d0,%r9    ;   {metadata(method data for {method} {0x000000001c584640} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000036c259a: movabs $0x108,%rdi
  0x00000000036c25a4: jg     0x00000000036c25b4
  0x00000000036c25aa: movabs $0x118,%rdi
  0x00000000036c25b4: mov    (%r9,%rdi,1),%rsi
  0x00000000036c25b8: lea    0x1(%rsi),%rsi
  0x00000000036c25bc: mov    %rsi,(%r9,%rdi,1)
  0x00000000036c25c0: jg     0x00000000036c25df  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00000000036c25c6: movabs $0x1c67e6d0,%r8    ;   {metadata(method data for {method} {0x000000001c584640} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000036c25d0: incl   0x128(%r8)
  0x00000000036c25d7: mov    %rdx,%rsi
  0x00000000036c25da: jmpq   0x00000000036c25e2  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00000000036c25df: mov    %r8,%rsi           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00000000036c25e2: mov    0xb0(%rsp),%rbx
  0x00000000036c25ea: movabs $0x1c6c5010,%rdx   ;   {metadata(method data for {method} {0x000000001c5a8b98} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000036c25f4: addq   $0x1,0x118(%rdx)
  0x00000000036c25fc: mov    %rbx,%rdx
  0x00000000036c25ff: mov    $0x0,%r8d
  0x00000000036c2605: mov    %rax,%r9
  0x00000000036c2608: mov    $0x0,%edi
  0x00000000036c260d: mov    %rax,0xc8(%rsp)
  0x00000000036c2615: lea    (%r8,%rsi,1),%rcx
  0x00000000036c2619: cmp    0xc(%rdx),%ecx
  0x00000000036c261c: ja     0x00000000036c284f
  0x00000000036c2622: lea    (%rdi,%rsi,1),%rcx
  0x00000000036c2626: cmp    0xc(%r9),%ecx
  0x00000000036c262a: ja     0x00000000036c284f
  0x00000000036c2630: test   %esi,%esi
  0x00000000036c2632: jl     0x00000000036c284f
  0x00000000036c2638: je     0x00000000036c267c
  0x00000000036c263e: movslq %r8d,%r8
  0x00000000036c2641: movslq %edi,%rdi
  0x00000000036c2644: lea    0x10(%rdx,%r8,2),%rcx
  0x00000000036c2649: lea    0x10(%r9,%rdi,2),%rdx
  0x00000000036c264e: mov    %rsi,%r8
  0x00000000036c2651: sub    $0x20,%rsp
  0x00000000036c2655: test   $0xf,%esp
  0x00000000036c265b: je     0x00000000036c2673
  0x00000000036c2661: sub    $0x8,%rsp
  0x00000000036c2665: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00000000036c266a: add    $0x8,%rsp
  0x00000000036c266e: jmpq   0x00000000036c2678
  0x00000000036c2673: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00000000036c2678: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00000000036c267c: mov    0xc8(%rsp),%rax
  0x00000000036c2684: mov    0xb8(%rsp),%rdx
  0x00000000036c268c: mov    %rax,%r10
  0x00000000036c268f: shr    $0x3,%r10
  0x00000000036c2693: mov    %r10d,0x10(%rdx)
  0x00000000036c2697: mov    %rdx,%r8
  0x00000000036c269a: shr    $0x9,%r8
  0x00000000036c269e: movabs $0xf32f000,%r9
  0x00000000036c26a8: movb   $0x0,(%r8,%r9,1)   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00000000036c26ad: mov    0xac(%rsp),%esi
  0x00000000036c26b4: mov    0xc0(%rsp),%rbx
  0x00000000036c26bc: mov    0x10(%rdx),%edi
  0x00000000036c26bf: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@28 (line 449)

  0x00000000036c26c3: mov    0xc(%rdx),%eax     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@32 (line 449)

  0x00000000036c26c6: mov    %rbx,%r8
  0x00000000036c26c9: movabs $0x1c683df8,%r9    ;   {metadata(method data for {method} {0x000000001c5045e0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036c26d3: mov    0x8(%r8),%r8d
  0x00000000036c26d7: shl    $0x3,%r8
  0x00000000036c26db: cmp    0x180(%r9),%r8
  0x00000000036c26e2: jne    0x00000000036c26f1
  0x00000000036c26e4: addq   $0x1,0x188(%r9)
  0x00000000036c26ec: jmpq   0x00000000036c2757
  0x00000000036c26f1: cmp    0x190(%r9),%r8
  0x00000000036c26f8: jne    0x00000000036c2707
  0x00000000036c26fa: addq   $0x1,0x198(%r9)
  0x00000000036c2702: jmpq   0x00000000036c2757
  0x00000000036c2707: cmpq   $0x0,0x180(%r9)
  0x00000000036c2712: jne    0x00000000036c272b
  0x00000000036c2714: mov    %r8,0x180(%r9)
  0x00000000036c271b: movq   $0x1,0x188(%r9)
  0x00000000036c2726: jmpq   0x00000000036c2757
  0x00000000036c272b: cmpq   $0x0,0x190(%r9)
  0x00000000036c2736: jne    0x00000000036c274f
  0x00000000036c2738: mov    %r8,0x190(%r9)
  0x00000000036c273f: movq   $0x1,0x198(%r9)
  0x00000000036c274a: jmpq   0x00000000036c2757
  0x00000000036c274f: addq   $0x1,0x178(%r9)
  0x00000000036c2757: mov    $0x0,%r8d
  0x00000000036c275d: mov    %rsi,%r9
  0x00000000036c2760: mov    %rax,%rsi
  0x00000000036c2763: mov    %rbx,%rdx          ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)

  0x00000000036c2766: nop
  0x00000000036c2767: callq  0x00000000035d61a0  ; OopMap{[184]=Oop off=1356}
                                                ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ;   {optimized virtual_call}
  0x00000000036c276c: mov    0xb8(%rsp),%rdx
  0x00000000036c2774: mov    0xc(%rdx),%eax     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@40 (line 450)

  0x00000000036c2777: add    0xac(%rsp),%eax
  0x00000000036c277e: mov    %eax,0xc(%rdx)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@45 (line 450)

  0x00000000036c2781: mov    %rdx,%rax
  0x00000000036c2784: add    $0xe0,%rsp
  0x00000000036c278b: pop    %rbp
  0x00000000036c278c: test   %eax,-0x20d2692(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036c2792: retq                      ;*areturn
                                                ; - java.lang.AbstractStringBuilder::append@49 (line 451)

  0x00000000036c2793: mov    %rdx,%rsi
  0x00000000036c2796: movabs $0x1c683df8,%rdi   ;   {metadata(method data for {method} {0x000000001c5045e0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036c27a0: addq   $0x1,0x128(%rdi)
  0x00000000036c27a8: nop
  0x00000000036c27a9: nop
  0x00000000036c27aa: nop
  0x00000000036c27ab: nop
  0x00000000036c27ac: nop
  0x00000000036c27ad: nop
  0x00000000036c27ae: nop
  0x00000000036c27af: callq  0x00000000035d61a0  ; OopMap{off=1428}
                                                ;*invokespecial appendNull
                                                ; - java.lang.AbstractStringBuilder::append@5 (line 446)
                                                ;   {optimized virtual_call}
  0x00000000036c27b4: add    $0xe0,%rsp
  0x00000000036c27bb: pop    %rbp
  0x00000000036c27bc: test   %eax,-0x20d26c2(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036c27c2: retq   
  0x00000000036c27c3: mov    %rsi,0x8(%rsp)
  0x00000000036c27c8: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036c27d0: callq  0x00000000036919e0  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1461}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 445)
                                                ;   {runtime_call}
  0x00000000036c27d5: jmpq   0x00000000036c2289
  0x00000000036c27da: callq  0x000000000368d080  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1471}
                                                ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x00000000036c27df: mov    %rsi,0x8(%rsp)
  0x00000000036c27e4: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036c27ec: callq  0x00000000036919e0  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1489}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x00000000036c27f1: jmpq   0x00000000036c2388
  0x00000000036c27f6: callq  0x000000000368d080  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1499}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x00000000036c27fb: mov    %rbx,0x8(%rsp)
  0x00000000036c2800: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036c2808: callq  0x00000000036919e0  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1517}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00000000036c280d: jmpq   0x00000000036c23e6
  0x00000000036c2812: callq  0x000000000368d080  ; OopMap{rdx=Oop [184]=Oop r8=Oop rbx=Oop off=1527}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00000000036c2817: mov    %rbx,0x8(%rsp)
  0x00000000036c281c: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036c2824: callq  0x00000000036919e0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1545}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00000000036c2829: jmpq   0x00000000036c24c3
  0x00000000036c282e: callq  0x000000000368e200  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1555}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00000000036c2833: jmpq   0x00000000036c253d
  0x00000000036c2838: mov    %rdx,0x8(%rsp)
  0x00000000036c283d: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036c2845: callq  0x00000000036919e0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop rax=Oop off=1578}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00000000036c284a: jmpq   0x00000000036c2586
  0x00000000036c284f: callq  0x00000000035d6620  ; OopMap{[184]=Oop [192]=Oop [200]=Oop off=1588}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {static_call}
  0x00000000036c2854: jmpq   0x00000000036c267c
  0x00000000036c2859: nop
  0x00000000036c285a: nop
  0x00000000036c285b: mov    0x2a8(%r15),%rax
  0x00000000036c2862: movabs $0x0,%r10
  0x00000000036c286c: mov    %r10,0x2a8(%r15)
  0x00000000036c2873: movabs $0x0,%r10
  0x00000000036c287d: mov    %r10,0x2b0(%r15)
  0x00000000036c2884: add    $0xe0,%rsp
  0x00000000036c288b: pop    %rbp
  0x00000000036c288c: jmpq   0x000000000368c620  ;   {runtime_call}
  0x00000000036c2891: hlt    
  0x00000000036c2892: hlt    
  0x00000000036c2893: hlt    
  0x00000000036c2894: hlt    
  0x00000000036c2895: hlt    
  0x00000000036c2896: hlt    
  0x00000000036c2897: hlt    
  0x00000000036c2898: hlt    
  0x00000000036c2899: hlt    
  0x00000000036c289a: hlt    
  0x00000000036c289b: hlt    
  0x00000000036c289c: hlt    
  0x00000000036c289d: hlt    
  0x00000000036c289e: hlt    
  0x00000000036c289f: hlt    
[Stub Code]
  0x00000000036c28a0: nop                       ;   {no_reloc}
  0x00000000036c28a1: nop
  0x00000000036c28a2: nop
  0x00000000036c28a3: nop
  0x00000000036c28a4: nop
  0x00000000036c28a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036c28af: jmpq   0x00000000036c28af  ;   {runtime_call}
  0x00000000036c28b4: nop
  0x00000000036c28b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036c28bf: jmpq   0x00000000036c28bf  ;   {runtime_call}
  0x00000000036c28c4: nop
  0x00000000036c28c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036c28cf: jmpq   0x00000000036c28cf  ;   {runtime_call}
  0x00000000036c28d4: nop
  0x00000000036c28d5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036c28df: jmpq   0x00000000036c28df  ;   {runtime_call}
[Exception Handler]
  0x00000000036c28e4: callq  0x000000000368f1a0  ;   {runtime_call}
  0x00000000036c28e9: mov    %rsp,-0x28(%rsp)
  0x00000000036c28ee: sub    $0x80,%rsp
  0x00000000036c28f5: mov    %rax,0x78(%rsp)
  0x00000000036c28fa: mov    %rcx,0x70(%rsp)
  0x00000000036c28ff: mov    %rdx,0x68(%rsp)
  0x00000000036c2904: mov    %rbx,0x60(%rsp)
  0x00000000036c2909: mov    %rbp,0x50(%rsp)
  0x00000000036c290e: mov    %rsi,0x48(%rsp)
  0x00000000036c2913: mov    %rdi,0x40(%rsp)
  0x00000000036c2918: mov    %r8,0x38(%rsp)
  0x00000000036c291d: mov    %r9,0x30(%rsp)
  0x00000000036c2922: mov    %r10,0x28(%rsp)
  0x00000000036c2927: mov    %r11,0x20(%rsp)
  0x00000000036c292c: mov    %r12,0x18(%rsp)
  0x00000000036c2931: mov    %r13,0x10(%rsp)
  0x00000000036c2936: mov    %r14,0x8(%rsp)
  0x00000000036c293b: mov    %r15,(%rsp)
  0x00000000036c293f: movabs $0x553ec320,%rcx   ;   {external_word}
  0x00000000036c2949: movabs $0x36c28e9,%rdx    ;   {internal_word}
  0x00000000036c2953: mov    %rsp,%r8
  0x00000000036c2956: and    $0xfffffffffffffff0,%rsp
  0x00000000036c295a: callq  0x00000000550a41d0  ;   {runtime_call}
  0x00000000036c295f: hlt    
[Deopt Handler Code]
  0x00000000036c2960: movabs $0x36c2960,%r10    ;   {section_word}
  0x00000000036c296a: push   %r10
  0x00000000036c296c: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036c2971: hlt    
  0x00000000036c2972: hlt    
  0x00000000036c2973: hlt    
  0x00000000036c2974: hlt    
  0x00000000036c2975: hlt    
  0x00000000036c2976: hlt    
  0x00000000036c2977: hlt    
<nmethod compile_id='81' compiler='C1' level='3' entry='0x00000000036c2220' size='3456' address='0x00000000036c2050' relocation_offset='288' insts_offset='464' stub_offset='2128' scopes_data_offset='2384' scopes_pcs_offset='2792' dependencies_offset='3416' nul_chk_table_offset='3424' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='3942' iicount='3942' stamp='1.695'/>
<writer thread='17528'/>
<task_queued compile_id='94' method='java/util/ArrayList get (I)Ljava/lang/Object;' bytes='11' count='896' iicount='896' level='3' stamp='1.699' comment='tiered' hot_count='896'/>
<task_queued compile_id='95' method='java/util/ArrayList rangeCheck (I)V' bytes='22' count='896' iicount='896' level='3' stamp='1.699' comment='tiered' hot_count='896'/>
<task_queued compile_id='96' method='java/util/ArrayList elementData (I)Ljava/lang/Object;' bytes='7' count='896' iicount='896' level='3' stamp='1.699' comment='tiered' hot_count='896'/>
<task_queued compile_id='97' method='sun/misc/URLClassPath$JarLoader getResource (Ljava/lang/String;Z)Lsun/misc/Resource;' bytes='85' count='896' iicount='896' level='3' stamp='1.699' comment='tiered' hot_count='896'/>
<task_queued compile_id='98' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='4864' iicount='4864' level='3' stamp='1.702' comment='tiered' hot_count='4864'/>
<task_queued compile_id='99' method='java/util/HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='13' count='1664' iicount='1664' level='3' stamp='1.702' comment='tiered' hot_count='1664'/>
<task_queued compile_id='100' method='java/lang/AbstractStringBuilder &lt;init&gt; (I)V' bytes='12' count='2560' iicount='2560' level='3' stamp='1.706' comment='tiered' hot_count='2560'/>
<task_queued compile_id='101' method='java/util/HashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='26' count='1664' iicount='1664' level='3' stamp='1.710' comment='tiered' hot_count='1664'/>
<task_queued compile_id='102' method='java/util/LinkedHashMap removeEldestEntry (Ljava/util/Map$Entry;)Z' bytes='2' count='128' iicount='128' level='1' stamp='1.710' comment='tiered' hot_count='128'/>
<task_queued compile_id='103' method='java/lang/ref/Reference get ()Ljava/lang/Object;' bytes='5' count='1408' iicount='1408' level='1' stamp='1.712' comment='tiered' hot_count='1408'/>
<writer thread='7332'/>
Decoding compiled method 0x00000000036c2e10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c60c2d0} &apos;normalizePrefix&apos; &apos;(Ljava/lang/String;ILjava/lang/StringBuffer;)I&apos; in &apos;java/io/WinNTFileSystem&apos;
  # this:     rdx:rdx   = &apos;java/io/WinNTFileSystem&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  # parm1:    r9        = int
  # parm2:    rdi:rdi   = &apos;java/lang/StringBuffer&apos;
  #           [sp+0x1a0]  (sp of caller)
  0x00000000036c31a0: mov    0x8(%rdx),%r10d
  0x00000000036c31a4: shl    $0x3,%r10
  0x00000000036c31a8: cmp    %rax,%r10
  0x00000000036c31ab: jne    0x00000000035d5f60  ;   {runtime_call}
  0x00000000036c31b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000036c31bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000036c31c0: mov    %eax,-0x6000(%rsp)
  0x00000000036c31c7: push   %rbp
  0x00000000036c31c8: sub    $0x190,%rsp
  0x00000000036c31cf: mov    %rdx,0x138(%rsp)
  0x00000000036c31d7: mov    %r8,0x148(%rsp)
  0x00000000036c31df: mov    %r9d,0x158(%rsp)
  0x00000000036c31e7: mov    %rdi,0xf0(%rsp)
  0x00000000036c31ef: movabs $0x1c6d8a60,%rax   ;   {metadata(method data for {method} {0x000000001c60c2d0} &apos;normalizePrefix&apos; &apos;(Ljava/lang/String;ILjava/lang/StringBuffer;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c31f9: mov    0xdc(%rax),%esi
  0x00000000036c31ff: add    $0x8,%esi
  0x00000000036c3202: mov    %esi,0xdc(%rax)
  0x00000000036c3208: movabs $0x1c60c2c8,%rax   ;   {metadata({method} {0x000000001c60c2d0} &apos;normalizePrefix&apos; &apos;(Ljava/lang/String;ILjava/lang/StringBuffer;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c3212: and    $0x1ff8,%esi
  0x00000000036c3218: cmp    $0x0,%esi
  0x00000000036c321b: je     0x00000000036c517f  ;*iconst_0
                                                ; - java.io.WinNTFileSystem::normalizePrefix@0 (line 176)

  0x00000000036c3221: mov    $0x0,%esi          ;*iload
                                                ; - java.io.WinNTFileSystem::normalizePrefix@3 (line 177)

  0x00000000036c3226: xchg   %ax,%ax
  0x00000000036c3228: cmp    %r9d,%esi
  0x00000000036c322b: movabs $0x1c6d8a60,%rax   ;   {metadata(method data for {method} {0x000000001c60c2d0} &apos;normalizePrefix&apos; &apos;(Ljava/lang/String;ILjava/lang/StringBuffer;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c3235: movabs $0x108,%rbx
  0x00000000036c323f: jge    0x00000000036c324f
  0x00000000036c3245: movabs $0x118,%rbx
  0x00000000036c324f: mov    (%rax,%rbx,1),%rcx
  0x00000000036c3253: lea    0x1(%rcx),%rcx
  0x00000000036c3257: mov    %rcx,(%rax,%rbx,1)
  0x00000000036c325b: jge    0x00000000036c351c  ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalizePrefix@6 (line 177)

  0x00000000036c3261: cmp    (%r8),%rax         ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; implicit exception: dispatches to 0x00000000036c5196
  0x00000000036c3264: mov    %r8,%rax
  0x00000000036c3267: movabs $0x1c6d8a60,%rbx   ;   {metadata(method data for {method} {0x000000001c60c2d0} &apos;normalizePrefix&apos; &apos;(Ljava/lang/String;ILjava/lang/StringBuffer;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c3271: mov    0x8(%rax),%eax
  0x00000000036c3274: shl    $0x3,%rax
  0x00000000036c3278: cmp    0x130(%rbx),%rax
  0x00000000036c327f: jne    0x00000000036c328e
  0x00000000036c3281: addq   $0x1,0x138(%rbx)
  0x00000000036c3289: jmpq   0x00000000036c32f4
  0x00000000036c328e: cmp    0x140(%rbx),%rax
  0x00000000036c3295: jne    0x00000000036c32a4
  0x00000000036c3297: addq   $0x1,0x148(%rbx)
  0x00000000036c329f: jmpq   0x00000000036c32f4
  0x00000000036c32a4: cmpq   $0x0,0x130(%rbx)
  0x00000000036c32af: jne    0x00000000036c32c8
  0x00000000036c32b1: mov    %rax,0x130(%rbx)
  0x00000000036c32b8: movq   $0x1,0x138(%rbx)
  0x00000000036c32c3: jmpq   0x00000000036c32f4
  0x00000000036c32c8: cmpq   $0x0,0x140(%rbx)
  0x00000000036c32d3: jne    0x00000000036c32ec
  0x00000000036c32d5: mov    %rax,0x140(%rbx)
  0x00000000036c32dc: movq   $0x1,0x148(%rbx)
  0x00000000036c32e7: jmpq   0x00000000036c32f4
  0x00000000036c32ec: addq   $0x1,0x128(%rbx)
  0x00000000036c32f4: movabs $0x1c5c2890,%rax   ;   {metadata(method data for {method} {0x000000001c493d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00000000036c32fe: mov    0xdc(%rax),%ebx
  0x00000000036c3304: add    $0x8,%ebx
  0x00000000036c3307: mov    %ebx,0xdc(%rax)
  0x00000000036c330d: movabs $0x1c493d68,%rax   ;   {metadata({method} {0x000000001c493d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00000000036c3317: and    $0x7ffff8,%ebx
  0x00000000036c331d: cmp    $0x0,%ebx
  0x00000000036c3320: je     0x00000000036c519b
  0x00000000036c3326: cmp    $0x0,%esi
  0x00000000036c3329: movabs $0x1c5c2890,%rax   ;   {metadata(method data for {method} {0x000000001c493d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00000000036c3333: movabs $0x108,%rbx
  0x00000000036c333d: jl     0x00000000036c334d
  0x00000000036c3343: movabs $0x118,%rbx
  0x00000000036c334d: mov    (%rax,%rbx,1),%rcx
  0x00000000036c3351: lea    0x1(%rcx),%rcx
  0x00000000036c3355: mov    %rcx,(%rax,%rbx,1)
  0x00000000036c3359: jl     0x00000000036c5019  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)

  0x00000000036c335f: mov    0xc(%r8),%eax
  0x00000000036c3363: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)

  0x00000000036c3367: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; implicit exception: dispatches to 0x00000000036c51b2
  0x00000000036c336a: cmp    %ebx,%esi
  0x00000000036c336c: movabs $0x1c5c2890,%rbx   ;   {metadata(method data for {method} {0x000000001c493d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00000000036c3376: movabs $0x128,%rcx
  0x00000000036c3380: jl     0x00000000036c3390
  0x00000000036c3386: movabs $0x138,%rcx
  0x00000000036c3390: mov    (%rbx,%rcx,1),%r11
  0x00000000036c3394: lea    0x1(%r11),%r11
  0x00000000036c3398: mov    %r11,(%rbx,%rcx,1)
  0x00000000036c339c: jge    0x00000000036c5019  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)

  0x00000000036c33a2: movslq %esi,%rbx
  0x00000000036c33a5: cmp    0xc(%rax),%esi
  0x00000000036c33a8: jae    0x00000000036c51b7
  0x00000000036c33ae: movzwl 0x10(%rax,%rbx,2),%eax  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)

  0x00000000036c33b3: and    $0xffff,%eax
  0x00000000036c33b9: mov    %rdx,%rbx
  0x00000000036c33bc: movabs $0x1c6d8a60,%rcx   ;   {metadata(method data for {method} {0x000000001c60c2d0} &apos;normalizePrefix&apos; &apos;(Ljava/lang/String;ILjava/lang/StringBuffer;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c33c6: addq   $0x1,0x158(%rcx)
  0x00000000036c33ce: movabs $0x1c6c0978,%rbx   ;   {metadata(method data for {method} {0x000000001c60bc48} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c33d8: mov    0xdc(%rbx),%ecx
  0x00000000036c33de: add    $0x8,%ecx
  0x00000000036c33e1: mov    %ecx,0xdc(%rbx)
  0x00000000036c33e7: movabs $0x1c60bc40,%rbx   ;   {metadata({method} {0x000000001c60bc48} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c33f1: and    $0x7ffff8,%ecx
  0x00000000036c33f7: cmp    $0x0,%ecx
  0x00000000036c33fa: je     0x00000000036c51c0
  0x00000000036c3400: cmp    $0x5c,%eax
  0x00000000036c3403: movabs $0x1c6c0978,%rbx   ;   {metadata(method data for {method} {0x000000001c60bc48} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c340d: movabs $0x108,%rcx
  0x00000000036c3417: je     0x00000000036c3427
  0x00000000036c341d: movabs $0x118,%rcx
  0x00000000036c3427: mov    (%rbx,%rcx,1),%r11
  0x00000000036c342b: lea    0x1(%r11),%r11
  0x00000000036c342f: mov    %r11,(%rbx,%rcx,1)
  0x00000000036c3433: je     0x00000000036c3472  ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@16 (line 177)

  0x00000000036c3439: cmp    $0x2f,%eax
  0x00000000036c343c: movabs $0x1c6c0978,%rax   ;   {metadata(method data for {method} {0x000000001c60bc48} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c3446: movabs $0x128,%rbx
  0x00000000036c3450: jne    0x00000000036c3460
  0x00000000036c3456: movabs $0x138,%rbx
  0x00000000036c3460: mov    (%rax,%rbx,1),%rcx
  0x00000000036c3464: lea    0x1(%rcx),%rcx
  0x00000000036c3468: mov    %rcx,(%rax,%rbx,1)
  0x00000000036c346c: jne    0x00000000036c348c  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@16 (line 177)

  0x00000000036c3472: movabs $0x1c6c0978,%rax   ;   {metadata(method data for {method} {0x000000001c60bc48} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c347c: incl   0x148(%rax)
  0x00000000036c3482: mov    $0x1,%eax
  0x00000000036c3487: jmpq   0x00000000036c3491  ;*goto
                                                ; - java.io.WinNTFileSystem::isSlash@13 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@16 (line 177)

  0x00000000036c348c: mov    $0x0,%eax          ;*ireturn
                                                ; - java.io.WinNTFileSystem::isSlash@17 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@16 (line 177)

  0x00000000036c3491: and    $0x1,%eax
  0x00000000036c3494: cmp    $0x0,%eax
  0x00000000036c3497: movabs $0x1c6d8a60,%rax   ;   {metadata(method data for {method} {0x000000001c60c2d0} &apos;normalizePrefix&apos; &apos;(Ljava/lang/String;ILjava/lang/StringBuffer;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c34a1: movabs $0x168,%rbx
  0x00000000036c34ab: je     0x00000000036c34bb
  0x00000000036c34b1: movabs $0x178,%rbx
  0x00000000036c34bb: mov    (%rax,%rbx,1),%rcx
  0x00000000036c34bf: lea    0x1(%rcx),%rcx
  0x00000000036c34c3: mov    %rcx,(%rax,%rbx,1)
  0x00000000036c34c7: je     0x00000000036c351c  ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@19 (line 177)

  0x00000000036c34cd: inc    %esi
  0x00000000036c34cf: movabs $0x1c6d8a60,%rax   ;   {metadata(method data for {method} {0x000000001c60c2d0} &apos;normalizePrefix&apos; &apos;(Ljava/lang/String;ILjava/lang/StringBuffer;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c34d9: mov    0xe0(%rax),%ebx
  0x00000000036c34df: add    $0x8,%ebx
  0x00000000036c34e2: mov    %ebx,0xe0(%rax)
  0x00000000036c34e8: movabs $0x1c60c2c8,%rax   ;   {metadata({method} {0x000000001c60c2d0} &apos;normalizePrefix&apos; &apos;(Ljava/lang/String;ILjava/lang/StringBuffer;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c34f2: and    $0xfff8,%ebx
  0x00000000036c34f8: cmp    $0x0,%ebx
  0x00000000036c34fb: je     0x00000000036c51d7  ; OopMap{rdx=Oop [312]=Oop r8=Oop [328]=Oop rdi=Oop [240]=Oop off=865}
                                                ;*goto
                                                ; - java.io.WinNTFileSystem::normalizePrefix@25 (line 177)

  0x00000000036c3501: test   %eax,-0x20d3407(%rip)        # 0x00000000015f0100
                                                ;   {poll}
  0x00000000036c3507: movabs $0x1c6d8a60,%rax   ;   {metadata(method data for {method} {0x000000001c60c2d0} &apos;normalizePrefix&apos; &apos;(Ljava/lang/String;ILjava/lang/StringBuffer;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c3511: incl   0x188(%rax)
  0x00000000036c3517: jmpq   0x00000000036c3228  ;*goto
                                                ; - java.io.WinNTFileSystem::normalizePrefix@25 (line 177)

  0x00000000036c351c: mov    %r9,%rax
  0x00000000036c351f: sub    %esi,%eax
  0x00000000036c3521: cmp    $0x2,%eax
  0x00000000036c3524: movabs $0x1c6d8a60,%rax   ;   {metadata(method data for {method} {0x000000001c60c2d0} &apos;normalizePrefix&apos; &apos;(Ljava/lang/String;ILjava/lang/StringBuffer;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c352e: movabs $0x1a0,%rbx
  0x00000000036c3538: jl     0x00000000036c3548
  0x00000000036c353e: movabs $0x1b0,%rbx
  0x00000000036c3548: mov    (%rax,%rbx,1),%rcx
  0x00000000036c354c: lea    0x1(%rcx),%rcx
  0x00000000036c3550: mov    %rcx,(%rax,%rbx,1)
  0x00000000036c3554: jl     0x00000000036c39d0  ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@33 (line 179)

  0x00000000036c355a: cmp    (%r8),%rax         ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; implicit exception: dispatches to 0x00000000036c51ee
  0x00000000036c355d: mov    %r8,%rax
  0x00000000036c3560: movabs $0x1c6d8a60,%rbx   ;   {metadata(method data for {method} {0x000000001c60c2d0} &apos;normalizePrefix&apos; &apos;(Ljava/lang/String;ILjava/lang/StringBuffer;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c356a: mov    0x8(%rax),%eax
  0x00000000036c356d: shl    $0x3,%rax
  0x00000000036c3571: cmp    0x1c8(%rbx),%rax
  0x00000000036c3578: jne    0x00000000036c3587
  0x00000000036c357a: addq   $0x1,0x1d0(%rbx)
  0x00000000036c3582: jmpq   0x00000000036c35ed
  0x00000000036c3587: cmp    0x1d8(%rbx),%rax
  0x00000000036c358e: jne    0x00000000036c359d
  0x00000000036c3590: addq   $0x1,0x1e0(%rbx)
  0x00000000036c3598: jmpq   0x00000000036c35ed
  0x00000000036c359d: cmpq   $0x0,0x1c8(%rbx)
  0x00000000036c35a8: jne    0x00000000036c35c1
  0x00000000036c35aa: mov    %rax,0x1c8(%rbx)
  0x00000000036c35b1: movq   $0x1,0x1d0(%rbx)
  0x00000000036c35bc: jmpq   0x00000000036c35ed
  0x00000000036c35c1: cmpq   $0x0,0x1d8(%rbx)
  0x00000000036c35cc: jne    0x00000000036c35e5
  0x00000000036c35ce: mov    %rax,0x1d8(%rbx)
  0x00000000036c35d5: movq   $0x1,0x1e0(%rbx)
  0x00000000036c35e0: jmpq   0x00000000036c35ed
  0x00000000036c35e5: addq   $0x1,0x1c0(%rbx)
  0x00000000036c35ed: movabs $0x1c5c2890,%rax   ;   {metadata(method data for {method} {0x000000001c493d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00000000036c35f7: mov    0xdc(%rax),%ebx
  0x00000000036c35fd: add    $0x8,%ebx
  0x00000000036c3600: mov    %ebx,0xdc(%rax)
  0x00000000036c3606: movabs $0x1c493d68,%rax   ;   {metadata({method} {0x000000001c493d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00000000036c3610: and    $0x7ffff8,%ebx
  0x00000000036c3616: cmp    $0x0,%ebx
  0x00000000036c3619: je     0x00000000036c51f3
  0x00000000036c361f: cmp    $0x0,%esi
  0x00000000036c3622: movabs $0x1c5c2890,%rax   ;   {metadata(method data for {method} {0x000000001c493d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00000000036c362c: movabs $0x108,%rbx
  0x00000000036c3636: jl     0x00000000036c3646
  0x00000000036c363c: movabs $0x118,%rbx
  0x00000000036c3646: mov    (%rax,%rbx,1),%rcx
  0x00000000036c364a: lea    0x1(%rcx),%rcx
  0x00000000036c364e: mov    %rcx,(%rax,%rbx,1)
  0x00000000036c3652: jl     0x00000000036c4fc9  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)

  0x00000000036c3658: mov    0xc(%r8),%eax
  0x00000000036c365c: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)

  0x00000000036c3660: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; implicit exception: dispatches to 0x00000000036c520a
  0x00000000036c3663: cmp    %ebx,%esi
  0x00000000036c3665: movabs $0x1c5c2890,%rcx   ;   {metadata(method data for {method} {0x000000001c493d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00000000036c366f: movabs $0x128,%r11
  0x00000000036c3679: jl     0x00000000036c3689
  0x00000000036c367f: movabs $0x138,%r11
  0x00000000036c3689: mov    (%rcx,%r11,1),%r13
  0x00000000036c368d: lea    0x1(%r13),%r13
  0x00000000036c3691: mov    %r13,(%rcx,%r11,1)
  0x00000000036c3695: jge    0x00000000036c4fc9  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)

  0x00000000036c369b: movslq %esi,%rcx
  0x00000000036c369e: movzwl 0x10(%rax,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)

  0x00000000036c36a3: and    $0xffff,%ecx
  0x00000000036c36a9: mov    %ecx,0x110(%rsp)
  0x00000000036c36b0: mov    %rdx,%r11
  0x00000000036c36b3: movabs $0x1c6d8a60,%r13   ;   {metadata(method data for {method} {0x000000001c60c2d0} &apos;normalizePrefix&apos; &apos;(Ljava/lang/String;ILjava/lang/StringBuffer;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c36bd: addq   $0x1,0x1f0(%r13)
  0x00000000036c36c5: movabs $0x1c680fb8,%r11   ;   {metadata(method data for {method} {0x000000001c60bcf8} &apos;isLetter&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c36cf: mov    0xdc(%r11),%r13d
  0x00000000036c36d6: add    $0x8,%r13d
  0x00000000036c36da: mov    %r13d,0xdc(%r11)
  0x00000000036c36e1: movabs $0x1c60bcf0,%r11   ;   {metadata({method} {0x000000001c60bcf8} &apos;isLetter&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c36eb: and    $0x7ffff8,%r13d
  0x00000000036c36f2: cmp    $0x0,%r13d
  0x00000000036c36f6: je     0x00000000036c520f
  0x00000000036c36fc: cmp    $0x61,%ecx
  0x00000000036c36ff: movabs $0x1c680fb8,%r11   ;   {metadata(method data for {method} {0x000000001c60bcf8} &apos;isLetter&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c3709: movabs $0x108,%r13
  0x00000000036c3713: jl     0x00000000036c3723
  0x00000000036c3719: movabs $0x118,%r13
  0x00000000036c3723: mov    (%r11,%r13,1),%r14
  0x00000000036c3727: lea    0x1(%r14),%r14
  0x00000000036c372b: mov    %r14,(%r11,%r13,1)
  0x00000000036c372f: jl     0x00000000036c376e  ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@3 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)

  0x00000000036c3735: cmp    $0x7a,%ecx
  0x00000000036c3738: movabs $0x1c680fb8,%r11   ;   {metadata(method data for {method} {0x000000001c60bcf8} &apos;isLetter&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c3742: movabs $0x128,%r13
  0x00000000036c374c: jle    0x00000000036c375c
  0x00000000036c3752: movabs $0x138,%r13
  0x00000000036c375c: mov    (%r11,%r13,1),%r14
  0x00000000036c3760: lea    0x1(%r14),%r14
  0x00000000036c3764: mov    %r14,(%r11,%r13,1)
  0x00000000036c3768: jle    0x00000000036c37eb  ;*if_icmple
                                                ; - java.io.WinNTFileSystem::isLetter@9 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)

  0x00000000036c376e: cmp    $0x41,%ecx
  0x00000000036c3771: movabs $0x1c680fb8,%r11   ;   {metadata(method data for {method} {0x000000001c60bcf8} &apos;isLetter&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c377b: movabs $0x148,%r13
  0x00000000036c3785: jl     0x00000000036c3795
  0x00000000036c378b: movabs $0x158,%r13
  0x00000000036c3795: mov    (%r11,%r13,1),%r14
  0x00000000036c3799: lea    0x1(%r14),%r14
  0x00000000036c379d: mov    %r14,(%r11,%r13,1)
  0x00000000036c37a1: jl     0x00000000036c37e0  ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@15 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)

  0x00000000036c37a7: cmp    $0x5a,%ecx
  0x00000000036c37aa: movabs $0x1c680fb8,%r11   ;   {metadata(method data for {method} {0x000000001c60bcf8} &apos;isLetter&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c37b4: movabs $0x168,%r13
  0x00000000036c37be: jg     0x00000000036c37ce
  0x00000000036c37c4: movabs $0x178,%r13
  0x00000000036c37ce: mov    (%r11,%r13,1),%r14
  0x00000000036c37d2: lea    0x1(%r14),%r14
  0x00000000036c37d6: mov    %r14,(%r11,%r13,1)
  0x00000000036c37da: jle    0x00000000036c37eb  ;*if_icmpgt
                                                ; - java.io.WinNTFileSystem::isLetter@21 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)

  0x00000000036c37e0: mov    $0x0,%r11d
  0x00000000036c37e6: jmpq   0x00000000036c3802  ;*ireturn
                                                ; - java.io.WinNTFileSystem::isLetter@29 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)

  0x00000000036c37eb: movabs $0x1c680fb8,%r11   ;   {metadata(method data for {method} {0x000000001c60bcf8} &apos;isLetter&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c37f5: incl   0x188(%r11)
  0x00000000036c37fc: mov    $0x1,%r11d         ;*goto
                                                ; - java.io.WinNTFileSystem::isLetter@25 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)

  0x00000000036c3802: and    $0x1,%r11d
  0x00000000036c3806: cmp    $0x0,%r11d
  0x00000000036c380a: movabs $0x1c6d8a60,%r11   ;   {metadata(method data for {method} {0x000000001c60c2d0} &apos;normalizePrefix&apos; &apos;(Ljava/lang/String;ILjava/lang/StringBuffer;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c3814: movabs $0x200,%r13
  0x00000000036c381e: je     0x00000000036c382e
  0x00000000036c3824: movabs $0x210,%r13
  0x00000000036c382e: mov    (%r11,%r13,1),%r14
  0x00000000036c3832: lea    0x1(%r14),%r14
  0x00000000036c3836: mov    %r14,(%r11,%r13,1)
  0x00000000036c383a: je     0x00000000036c39d0  ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@49 (line 180)

  0x00000000036c3840: mov    %rsi,%r11
  0x00000000036c3843: inc    %r11d
  0x00000000036c3846: mov    %r8,%r13
  0x00000000036c3849: mov    %esi,0xe0(%rsp)
  0x00000000036c3850: movabs $0x1c6d8a60,%r14   ;   {metadata(method data for {method} {0x000000001c60c2d0} &apos;normalizePrefix&apos; &apos;(Ljava/lang/String;ILjava/lang/StringBuffer;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c385a: mov    0x8(%r13),%r13d
  0x00000000036c385e: shl    $0x3,%r13
  0x00000000036c3862: cmp    0x228(%r14),%r13
  0x00000000036c3869: jne    0x00000000036c3878
  0x00000000036c386b: addq   $0x1,0x230(%r14)
  0x00000000036c3873: jmpq   0x00000000036c38de
  0x00000000036c3878: cmp    0x238(%r14),%r13
  0x00000000036c387f: jne    0x00000000036c388e
  0x00000000036c3881: addq   $0x1,0x240(%r14)
  0x00000000036c3889: jmpq   0x00000000036c38de
  0x00000000036c388e: cmpq   $0x0,0x228(%r14)
  0x00000000036c3899: jne    0x00000000036c38b2
  0x00000000036c389b: mov    %r13,0x228(%r14)
  0x00000000036c38a2: movq   $0x1,0x230(%r14)
  0x00000000036c38ad: jmpq   0x00000000036c38de
  0x00000000036c38b2: cmpq   $0x0,0x238(%r14)
  0x00000000036c38bd: jne    0x00000000036c38d6
  0x00000000036c38bf: mov    %r13,0x238(%r14)
  0x00000000036c38c6: movq   $0x1,0x240(%r14)
  0x00000000036c38d1: jmpq   0x00000000036c38de
  0x00000000036c38d6: addq   $0x1,0x220(%r14)
  0x00000000036c38de: movabs $0x1c5c2890,%rsi   ;   {metadata(method data for {method} {0x000000001c493d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00000000036c38e8: mov    0xdc(%rsi),%r13d
  0x00000000036c38ef: add    $0x8,%r13d
  0x00000000036c38f3: mov    %r13d,0xdc(%rsi)
  0x00000000036c38fa: movabs $0x1c493d68,%rsi   ;   {metadata({method} {0x000000001c493d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00000000036c3904: and    $0x7ffff8,%r13d
  0x00000000036c390b: cmp    $0x0,%r13d
  0x00000000036c390f: je     0x00000000036c5226
  0x00000000036c3915: cmp    $0x0,%r11d
  0x00000000036c3919: movabs $0x1c5c2890,%rsi   ;   {metadata(method data for {method} {0x000000001c493d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00000000036c3923: movabs $0x108,%r13
  0x00000000036c392d: jl     0x00000000036c393d
  0x00000000036c3933: movabs $0x118,%r13
  0x00000000036c393d: mov    (%rsi,%r13,1),%r14
  0x00000000036c3941: lea    0x1(%r14),%r14
  0x00000000036c3945: mov    %r14,(%rsi,%r13,1)
  0x00000000036c3949: jl     0x00000000036c4f79  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)

  0x00000000036c394f: cmp    %ebx,%r11d
  0x00000000036c3952: movabs $0x1c5c2890,%rsi   ;   {metadata(method data for {method} {0x000000001c493d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00000000036c395c: movabs $0x128,%rbx
  0x00000000036c3966: jl     0x00000000036c3976
  0x00000000036c396c: movabs $0x138,%rbx
  0x00000000036c3976: mov    (%rsi,%rbx,1),%r13
  0x00000000036c397a: lea    0x1(%r13),%r13
  0x00000000036c397e: mov    %r13,(%rsi,%rbx,1)
  0x00000000036c3982: jge    0x00000000036c4f79  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)

  0x00000000036c3988: movslq %r11d,%r11
  0x00000000036c398b: movzwl 0x10(%rax,%r11,2),%eax  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)

  0x00000000036c3991: and    $0xffff,%eax
  0x00000000036c3997: cmp    $0x3a,%eax
  0x00000000036c399a: movabs $0x1c6d8a60,%rax   ;   {metadata(method data for {method} {0x000000001c60c2d0} &apos;normalizePrefix&apos; &apos;(Ljava/lang/String;ILjava/lang/StringBuffer;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c39a4: movabs $0x250,%rsi
  0x00000000036c39ae: jne    0x00000000036c39be
  0x00000000036c39b4: movabs $0x260,%rsi
  0x00000000036c39be: mov    (%rax,%rsi,1),%rbx
  0x00000000036c39c2: lea    0x1(%rbx),%rbx
  0x00000000036c39c6: mov    %rbx,(%rax,%rsi,1)
  0x00000000036c39ca: je     0x00000000036c4412  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalizePrefix@62 (line 181)

  0x00000000036c39d0: cmp    $0x2,%r9d
  0x00000000036c39d4: movabs $0x1c6d8a60,%rax   ;   {metadata(method data for {method} {0x000000001c60c2d0} &apos;normalizePrefix&apos; &apos;(Ljava/lang/String;ILjava/lang/StringBuffer;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c39de: movabs $0x2e8,%rsi
  0x00000000036c39e8: jl     0x00000000036c39f8
  0x00000000036c39ee: movabs $0x2f8,%rsi
  0x00000000036c39f8: mov    (%rax,%rsi,1),%rbx
  0x00000000036c39fc: lea    0x1(%rbx),%rbx
  0x00000000036c3a00: mov    %rbx,(%rax,%rsi,1)
  0x00000000036c3a04: jge    0x00000000036c3a14  ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@90 (line 191)

  0x00000000036c3a0a: mov    $0x0,%esi
  0x00000000036c3a0f: jmpq   0x00000000036c4ec7  ;*iload
                                                ; - java.io.WinNTFileSystem::normalizePrefix@129 (line 203)

  0x00000000036c3a14: cmp    (%r8),%rax         ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; implicit exception: dispatches to 0x00000000036c523d
  0x00000000036c3a17: mov    %r8,%rax
  0x00000000036c3a1a: movabs $0x1c6d8a60,%rsi   ;   {metadata(method data for {method} {0x000000001c60c2d0} &apos;normalizePrefix&apos; &apos;(Ljava/lang/String;ILjava/lang/StringBuffer;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c3a24: mov    0x8(%rax),%eax
  0x00000000036c3a27: shl    $0x3,%rax
  0x00000000036c3a2b: cmp    0x310(%rsi),%rax
  0x00000000036c3a32: jne    0x00000000036c3a41
  0x00000000036c3a34: addq   $0x1,0x318(%rsi)
  0x00000000036c3a3c: jmpq   0x00000000036c3aa7
  0x00000000036c3a41: cmp    0x320(%rsi),%rax
  0x00000000036c3a48: jne    0x00000000036c3a57
  0x00000000036c3a4a: addq   $0x1,0x328(%rsi)
  0x00000000036c3a52: jmpq   0x00000000036c3aa7
  0x00000000036c3a57: cmpq   $0x0,0x310(%rsi)
  0x00000000036c3a62: jne    0x00000000036c3a7b
  0x00000000036c3a64: mov    %rax,0x310(%rsi)
  0x00000000036c3a6b: movq   $0x1,0x318(%rsi)
  0x00000000036c3a76: jmpq   0x00000000036c3aa7
  0x00000000036c3a7b: cmpq   $0x0,0x320(%rsi)
  0x00000000036c3a86: jne    0x00000000036c3a9f
  0x00000000036c3a88: mov    %rax,0x320(%rsi)
  0x00000000036c3a8f: movq   $0x1,0x328(%rsi)
  0x00000000036c3a9a: jmpq   0x00000000036c3aa7
  0x00000000036c3a9f: addq   $0x1,0x308(%rsi)
  0x00000000036c3aa7: movabs $0x1c5c2890,%rax   ;   {metadata(method data for {method} {0x000000001c493d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00000000036c3ab1: mov    0xdc(%rax),%esi
  0x00000000036c3ab7: add    $0x8,%esi
  0x00000000036c3aba: mov    %esi,0xdc(%rax)
  0x00000000036c3ac0: movabs $0x1c493d68,%rax   ;   {metadata({method} {0x000000001c493d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00000000036c3aca: and    $0x7ffff8,%esi
  0x00000000036c3ad0: cmp    $0x0,%esi
  0x00000000036c3ad3: je     0x00000000036c5242
  0x00000000036c3ad9: movabs $0x1c5c2890,%rax   ;   {metadata(method data for {method} {0x000000001c493d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00000000036c3ae3: incl   0x118(%rax)        ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)

  0x00000000036c3ae9: mov    0xc(%r8),%eax
  0x00000000036c3aed: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)

  0x00000000036c3af1: mov    0xc(%rax),%esi     ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; implicit exception: dispatches to 0x00000000036c5259
  0x00000000036c3af4: cmp    $0x0,%esi
  0x00000000036c3af7: movabs $0x1c5c2890,%rbx   ;   {metadata(method data for {method} {0x000000001c493d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00000000036c3b01: movabs $0x128,%rcx
  0x00000000036c3b0b: jg     0x00000000036c3b1b
  0x00000000036c3b11: movabs $0x138,%rcx
  0x00000000036c3b1b: mov    (%rbx,%rcx,1),%r9
  0x00000000036c3b1f: lea    0x1(%r9),%r9
  0x00000000036c3b23: mov    %r9,(%rbx,%rcx,1)
  0x00000000036c3b27: jle    0x00000000036c4f29  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)

  0x00000000036c3b2d: cmpl   $0x0,0xc(%rax)
  0x00000000036c3b34: jbe    0x00000000036c525e
  0x00000000036c3b3a: movzwl 0x10(%rax),%ebx    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)

  0x00000000036c3b3e: and    $0xffff,%ebx
  0x00000000036c3b44: mov    %rdx,%rcx
  0x00000000036c3b47: movabs $0x1c6d8a60,%r9    ;   {metadata(method data for {method} {0x000000001c60c2d0} &apos;normalizePrefix&apos; &apos;(Ljava/lang/String;ILjava/lang/StringBuffer;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c3b51: addq   $0x1,0x338(%r9)
  0x00000000036c3b59: movabs $0x1c6c0978,%rcx   ;   {metadata(method data for {method} {0x000000001c60bc48} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c3b63: mov    0xdc(%rcx),%r9d
  0x00000000036c3b6a: add    $0x8,%r9d
  0x00000000036c3b6e: mov    %r9d,0xdc(%rcx)
  0x00000000036c3b75: movabs $0x1c60bc40,%rcx   ;   {metadata({method} {0x000000001c60bc48} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c3b7f: and    $0x7ffff8,%r9d
  0x00000000036c3b86: cmp    $0x0,%r9d
  0x00000000036c3b8a: je     0x00000000036c526b
  0x00000000036c3b90: cmp    $0x5c,%ebx
  0x00000000036c3b93: movabs $0x1c6c0978,%rcx   ;   {metadata(method data for {method} {0x000000001c60bc48} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c3b9d: movabs $0x108,%r9
  0x00000000036c3ba7: je     0x00000000036c3bb7
  0x00000000036c3bad: movabs $0x118,%r9
  0x00000000036c3bb7: mov    (%rcx,%r9,1),%r11
  0x00000000036c3bbb: lea    0x1(%r11),%r11
  0x00000000036c3bbf: mov    %r11,(%rcx,%r9,1)
  0x00000000036c3bc3: je     0x00000000036c3c02  ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@99 (line 192)

  0x00000000036c3bc9: cmp    $0x2f,%ebx
  0x00000000036c3bcc: movabs $0x1c6c0978,%rbx   ;   {metadata(method data for {method} {0x000000001c60bc48} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c3bd6: movabs $0x128,%rcx
  0x00000000036c3be0: jne    0x00000000036c3bf0
  0x00000000036c3be6: movabs $0x138,%rcx
  0x00000000036c3bf0: mov    (%rbx,%rcx,1),%r9
  0x00000000036c3bf4: lea    0x1(%r9),%r9
  0x00000000036c3bf8: mov    %r9,(%rbx,%rcx,1)
  0x00000000036c3bfc: jne    0x00000000036c3c1c  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@99 (line 192)

  0x00000000036c3c02: movabs $0x1c6c0978,%rbx   ;   {metadata(method data for {method} {0x000000001c60bc48} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c3c0c: incl   0x148(%rbx)
  0x00000000036c3c12: mov    $0x1,%ebx
  0x00000000036c3c17: jmpq   0x00000000036c3c21  ;*goto
                                                ; - java.io.WinNTFileSystem::isSlash@13 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@99 (line 192)

  0x00000000036c3c1c: mov    $0x0,%ebx          ;*ireturn
                                                ; - java.io.WinNTFileSystem::isSlash@17 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@99 (line 192)

  0x00000000036c3c21: and    $0x1,%ebx
  0x00000000036c3c24: cmp    $0x0,%ebx
  0x00000000036c3c27: movabs $0x1c6d8a60,%rbx   ;   {metadata(method data for {method} {0x000000001c60c2d0} &apos;normalizePrefix&apos; &apos;(Ljava/lang/String;ILjava/lang/StringBuffer;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c3c31: movabs $0x348,%rcx
  0x00000000036c3c3b: je     0x00000000036c3c4b
  0x00000000036c3c41: movabs $0x358,%rcx
  0x00000000036c3c4b: mov    (%rbx,%rcx,1),%r9
  0x00000000036c3c4f: lea    0x1(%r9),%r9
  0x00000000036c3c53: mov    %r9,(%rbx,%rcx,1)
  0x00000000036c3c57: jne    0x00000000036c3c67  ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@102 (line 192)

  0x00000000036c3c5d: mov    $0x0,%esi
  0x00000000036c3c62: jmpq   0x00000000036c4ec7  ;*iload
                                                ; - java.io.WinNTFileSystem::normalizePrefix@129 (line 203)

  0x00000000036c3c67: mov    %r8,%rbx
  0x00000000036c3c6a: movabs $0x1c6d8a60,%rcx   ;   {metadata(method data for {method} {0x000000001c60c2d0} &apos;normalizePrefix&apos; &apos;(Ljava/lang/String;ILjava/lang/StringBuffer;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c3c74: mov    0x8(%rbx),%ebx
  0x00000000036c3c77: shl    $0x3,%rbx
  0x00000000036c3c7b: cmp    0x370(%rcx),%rbx
  0x00000000036c3c82: jne    0x00000000036c3c91
  0x00000000036c3c84: addq   $0x1,0x378(%rcx)
  0x00000000036c3c8c: jmpq   0x00000000036c3cf7
  0x00000000036c3c91: cmp    0x380(%rcx),%rbx
  0x00000000036c3c98: jne    0x00000000036c3ca7
  0x00000000036c3c9a: addq   $0x1,0x388(%rcx)
  0x00000000036c3ca2: jmpq   0x00000000036c3cf7
  0x00000000036c3ca7: cmpq   $0x0,0x370(%rcx)
  0x00000000036c3cb2: jne    0x00000000036c3ccb
  0x00000000036c3cb4: mov    %rbx,0x370(%rcx)
  0x00000000036c3cbb: movq   $0x1,0x378(%rcx)
  0x00000000036c3cc6: jmpq   0x00000000036c3cf7
  0x00000000036c3ccb: cmpq   $0x0,0x380(%rcx)
  0x00000000036c3cd6: jne    0x00000000036c3cef
  0x00000000036c3cd8: mov    %rbx,0x380(%rcx)
  0x00000000036c3cdf: movq   $0x1,0x388(%rcx)
  0x00000000036c3cea: jmpq   0x00000000036c3cf7
  0x00000000036c3cef: addq   $0x1,0x368(%rcx)
  0x00000000036c3cf7: movabs $0x1c5c2890,%rbx   ;   {metadata(method data for {method} {0x000000001c493d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00000000036c3d01: mov    0xdc(%rbx),%ecx
  0x00000000036c3d07: add    $0x8,%ecx
  0x00000000036c3d0a: mov    %ecx,0xdc(%rbx)
  0x00000000036c3d10: movabs $0x1c493d68,%rbx   ;   {metadata({method} {0x000000001c493d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00000000036c3d1a: and    $0x7ffff8,%ecx
  0x00000000036c3d20: cmp    $0x0,%ecx
  0x00000000036c3d23: je     0x00000000036c5282
  0x00000000036c3d29: movabs $0x1c5c2890,%r8    ;   {metadata(method data for {method} {0x000000001c493d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00000000036c3d33: incl   0x118(%r8)         ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)

  0x00000000036c3d3a: cmp    $0x1,%esi
  0x00000000036c3d3d: movabs $0x1c5c2890,%r8    ;   {metadata(method data for {method} {0x000000001c493d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00000000036c3d47: movabs $0x128,%rsi
  0x00000000036c3d51: jg     0x00000000036c3d61
  0x00000000036c3d57: movabs $0x138,%rsi
  0x00000000036c3d61: mov    (%r8,%rsi,1),%rbx
  0x00000000036c3d65: lea    0x1(%rbx),%rbx
  0x00000000036c3d69: mov    %rbx,(%r8,%rsi,1)
  0x00000000036c3d6d: jle    0x00000000036c4ed9  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)

  0x00000000036c3d73: cmpl   $0x1,0xc(%rax)
  0x00000000036c3d7a: jbe    0x00000000036c5299
  0x00000000036c3d80: movzwl 0x12(%rax),%eax    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)

  0x00000000036c3d84: and    $0xffff,%eax
  0x00000000036c3d8a: mov    %rdx,%r8
  0x00000000036c3d8d: movabs $0x1c6d8a60,%rsi   ;   {metadata(method data for {method} {0x000000001c60c2d0} &apos;normalizePrefix&apos; &apos;(Ljava/lang/String;ILjava/lang/StringBuffer;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c3d97: addq   $0x1,0x398(%rsi)
  0x00000000036c3d9f: movabs $0x1c6c0978,%r8    ;   {metadata(method data for {method} {0x000000001c60bc48} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c3da9: mov    0xdc(%r8),%esi
  0x00000000036c3db0: add    $0x8,%esi
  0x00000000036c3db3: mov    %esi,0xdc(%r8)
  0x00000000036c3dba: movabs $0x1c60bc40,%r8    ;   {metadata({method} {0x000000001c60bc48} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c3dc4: and    $0x7ffff8,%esi
  0x00000000036c3dca: cmp    $0x0,%esi
  0x00000000036c3dcd: je     0x00000000036c52a6
  0x00000000036c3dd3: cmp    $0x5c,%eax
  0x00000000036c3dd6: movabs $0x1c6c0978,%r8    ;   {metadata(method data for {method} {0x000000001c60bc48} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c3de0: movabs $0x108,%rsi
  0x00000000036c3dea: je     0x00000000036c3dfa
  0x00000000036c3df0: movabs $0x118,%rsi
  0x00000000036c3dfa: mov    (%r8,%rsi,1),%rbx
  0x00000000036c3dfe: lea    0x1(%rbx),%rbx
  0x00000000036c3e02: mov    %rbx,(%r8,%rsi,1)
  0x00000000036c3e06: je     0x00000000036c3e45  ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)

  0x00000000036c3e0c: cmp    $0x2f,%eax
  0x00000000036c3e0f: movabs $0x1c6c0978,%rax   ;   {metadata(method data for {method} {0x000000001c60bc48} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c3e19: movabs $0x128,%r8
  0x00000000036c3e23: jne    0x00000000036c3e33
  0x00000000036c3e29: movabs $0x138,%r8
  0x00000000036c3e33: mov    (%rax,%r8,1),%rsi
  0x00000000036c3e37: lea    0x1(%rsi),%rsi
  0x00000000036c3e3b: mov    %rsi,(%rax,%r8,1)
  0x00000000036c3e3f: jne    0x00000000036c3e5f  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)

  0x00000000036c3e45: movabs $0x1c6c0978,%rax   ;   {metadata(method data for {method} {0x000000001c60bc48} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c3e4f: incl   0x148(%rax)
  0x00000000036c3e55: mov    $0x1,%eax
  0x00000000036c3e5a: jmpq   0x00000000036c3e64  ;*goto
                                                ; - java.io.WinNTFileSystem::isSlash@13 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)

  0x00000000036c3e5f: mov    $0x0,%eax          ;*ireturn
                                                ; - java.io.WinNTFileSystem::isSlash@17 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)

  0x00000000036c3e64: and    $0x1,%eax
  0x00000000036c3e67: cmp    $0x0,%eax
  0x00000000036c3e6a: movabs $0x1c6d8a60,%rax   ;   {metadata(method data for {method} {0x000000001c60c2d0} &apos;normalizePrefix&apos; &apos;(Ljava/lang/String;ILjava/lang/StringBuffer;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c3e74: movabs $0x3a8,%r8
  0x00000000036c3e7e: je     0x00000000036c3e8e
  0x00000000036c3e84: movabs $0x3b8,%r8
  0x00000000036c3e8e: mov    (%rax,%r8,1),%rsi
  0x00000000036c3e92: lea    0x1(%rsi),%rsi
  0x00000000036c3e96: mov    %rsi,(%rax,%r8,1)
  0x00000000036c3e9a: jne    0x00000000036c3eaa  ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@114 (line 193)

  0x00000000036c3ea0: mov    $0x0,%esi
  0x00000000036c3ea5: jmpq   0x00000000036c4ec7  ;*iload
                                                ; - java.io.WinNTFileSystem::normalizePrefix@129 (line 203)

  0x00000000036c3eaa: movzwl 0xc(%rdx),%esi     ;*getfield slash
                                                ; - java.io.WinNTFileSystem::normalizePrefix@122 (line 200)

  0x00000000036c3eae: cmp    (%rdi),%rax        ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; implicit exception: dispatches to 0x00000000036c52bd
  0x00000000036c3eb1: mov    %rdi,%rax
  0x00000000036c3eb4: movabs $0x1c6d8a60,%r8    ;   {metadata(method data for {method} {0x000000001c60c2d0} &apos;normalizePrefix&apos; &apos;(Ljava/lang/String;ILjava/lang/StringBuffer;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c3ebe: mov    0x8(%rax),%eax
  0x00000000036c3ec1: shl    $0x3,%rax
  0x00000000036c3ec5: cmp    0x3d0(%r8),%rax
  0x00000000036c3ecc: jne    0x00000000036c3edb
  0x00000000036c3ece: addq   $0x1,0x3d8(%r8)
  0x00000000036c3ed6: jmpq   0x00000000036c3f41
  0x00000000036c3edb: cmp    0x3e0(%r8),%rax
  0x00000000036c3ee2: jne    0x00000000036c3ef1
  0x00000000036c3ee4: addq   $0x1,0x3e8(%r8)
  0x00000000036c3eec: jmpq   0x00000000036c3f41
  0x00000000036c3ef1: cmpq   $0x0,0x3d0(%r8)
  0x00000000036c3efc: jne    0x00000000036c3f15
  0x00000000036c3efe: mov    %rax,0x3d0(%r8)
  0x00000000036c3f05: movq   $0x1,0x3d8(%r8)
  0x00000000036c3f10: jmpq   0x00000000036c3f41
  0x00000000036c3f15: cmpq   $0x0,0x3e0(%r8)
  0x00000000036c3f20: jne    0x00000000036c3f39
  0x00000000036c3f22: mov    %rax,0x3e0(%r8)
  0x00000000036c3f29: movq   $0x1,0x3e8(%r8)
  0x00000000036c3f34: jmpq   0x00000000036c3f41
  0x00000000036c3f39: addq   $0x1,0x3c8(%r8)
  0x00000000036c3f41: lea    0x170(%rsp),%r8
  0x00000000036c3f49: mov    %rdi,0x8(%r8)
  0x00000000036c3f4d: mov    (%rdi),%rax
  0x00000000036c3f50: mov    %rax,%rdx
  0x00000000036c3f53: and    $0x7,%rdx
  0x00000000036c3f57: cmp    $0x5,%rdx
  0x00000000036c3f5b: jne    0x00000000036c3fe2
  0x00000000036c3f61: mov    0x8(%rdi),%edx
  0x00000000036c3f64: shl    $0x3,%rdx
  0x00000000036c3f68: mov    0xa8(%rdx),%rdx
  0x00000000036c3f6f: or     %r15,%rdx
  0x00000000036c3f72: xor    %rax,%rdx
  0x00000000036c3f75: and    $0xffffffffffffff87,%rdx
  0x00000000036c3f79: je     0x00000000036c400a
  0x00000000036c3f7f: test   $0x7,%rdx
  0x00000000036c3f86: jne    0x00000000036c3fcf
  0x00000000036c3f88: test   $0x300,%rdx
  0x00000000036c3f8f: jne    0x00000000036c3fae
  0x00000000036c3f91: and    $0x37f,%rax
  0x00000000036c3f98: mov    %rax,%rdx
  0x00000000036c3f9b: or     %r15,%rdx
  0x00000000036c3f9e: lock cmpxchg %rdx,(%rdi)
  0x00000000036c3fa3: jne    0x00000000036c52c2
  0x00000000036c3fa9: jmpq   0x00000000036c400a
  0x00000000036c3fae: mov    0x8(%rdi),%edx
  0x00000000036c3fb1: shl    $0x3,%rdx
  0x00000000036c3fb5: mov    0xa8(%rdx),%rdx
  0x00000000036c3fbc: or     %r15,%rdx
  0x00000000036c3fbf: lock cmpxchg %rdx,(%rdi)
  0x00000000036c3fc4: jne    0x00000000036c52c2
  0x00000000036c3fca: jmpq   0x00000000036c400a
  0x00000000036c3fcf: mov    0x8(%rdi),%edx
  0x00000000036c3fd2: shl    $0x3,%rdx
  0x00000000036c3fd6: mov    0xa8(%rdx),%rdx
  0x00000000036c3fdd: lock cmpxchg %rdx,(%rdi)
  0x00000000036c3fe2: mov    (%rdi),%rax
  0x00000000036c3fe5: or     $0x1,%rax
  0x00000000036c3fe9: mov    %rax,(%r8)
  0x00000000036c3fec: lock cmpxchg %r8,(%rdi)
  0x00000000036c3ff1: je     0x00000000036c400a
  0x00000000036c3ff7: sub    %rsp,%rax
  0x00000000036c3ffa: and    $0xfffffffffffff007,%rax
  0x00000000036c4001: mov    %rax,(%r8)
  0x00000000036c4004: jne    0x00000000036c52c2  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)

  0x00000000036c400a: movabs $0x1c6c0af8,%r8    ;   {metadata(method data for {method} {0x000000001c4fffe0} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x00000000036c4014: mov    0xdc(%r8),%edx
  0x00000000036c401b: add    $0x8,%edx
  0x00000000036c401e: mov    %edx,0xdc(%r8)
  0x00000000036c4025: movabs $0x1c4fffd8,%r8    ;   {metadata({method} {0x000000001c4fffe0} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x00000000036c402f: and    $0x7ffff8,%edx
  0x00000000036c4035: cmp    $0x0,%edx
  0x00000000036c4038: je     0x00000000036c52d5
  0x00000000036c403e: movl   $0x0,0x14(%rdi)
  0x00000000036c4045: mov    %rdi,%r8
  0x00000000036c4048: shr    $0x9,%r8
  0x00000000036c404c: movabs $0xf32f000,%rdx
  0x00000000036c4056: movb   $0x0,(%r8,%rdx,1)  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 380)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)

  0x00000000036c405b: mov    %rdi,%r8
  0x00000000036c405e: movabs $0x1c6c0af8,%rdx   ;   {metadata(method data for {method} {0x000000001c4fffe0} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x00000000036c4068: addq   $0x1,0x108(%rdx)
  0x00000000036c4070: movabs $0x1c6c0840,%r8    ;   {metadata(method data for {method} {0x000000001c504dc0} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036c407a: mov    0xdc(%r8),%edx
  0x00000000036c4081: add    $0x8,%edx
  0x00000000036c4084: mov    %edx,0xdc(%r8)
  0x00000000036c408b: movabs $0x1c504db8,%r8    ;   {metadata({method} {0x000000001c504dc0} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036c4095: and    $0x7ffff8,%edx
  0x00000000036c409b: cmp    $0x0,%edx
  0x00000000036c409e: je     0x00000000036c52ec
  0x00000000036c40a4: mov    0xc(%rdi),%r8d     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)

  0x00000000036c40a8: inc    %r8d
  0x00000000036c40ab: mov    %rdi,%rdx
  0x00000000036c40ae: movabs $0x1c6c0840,%rbx   ;   {metadata(method data for {method} {0x000000001c504dc0} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036c40b8: addq   $0x1,0x108(%rbx)
  0x00000000036c40c0: movabs $0x1c681e30,%rdx   ;   {metadata(method data for {method} {0x000000001c503c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036c40ca: mov    0xdc(%rdx),%ebx
  0x00000000036c40d0: add    $0x8,%ebx
  0x00000000036c40d3: mov    %ebx,0xdc(%rdx)
  0x00000000036c40d9: movabs $0x1c503c80,%rdx   ;   {metadata({method} {0x000000001c503c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036c40e3: and    $0x7ffff8,%ebx
  0x00000000036c40e9: cmp    $0x0,%ebx
  0x00000000036c40ec: je     0x00000000036c5303
  0x00000000036c40f2: mov    0x10(%rdi),%ebx
  0x00000000036c40f5: shl    $0x3,%rbx          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)

  0x00000000036c40f9: mov    0xc(%rbx),%eax     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; implicit exception: dispatches to 0x00000000036c531a
  0x00000000036c40fc: mov    %r8,%rdx
  0x00000000036c40ff: sub    %eax,%edx
  0x00000000036c4101: cmp    $0x0,%edx
  0x00000000036c4104: movabs $0x1c681e30,%rdx   ;   {metadata(method data for {method} {0x000000001c503c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036c410e: movabs $0x108,%rcx
  0x00000000036c4118: jle    0x00000000036c4128
  0x00000000036c411e: movabs $0x118,%rcx
  0x00000000036c4128: mov    (%rdx,%rcx,1),%r9
  0x00000000036c412c: lea    0x1(%r9),%r9
  0x00000000036c4130: mov    %r9,(%rdx,%rcx,1)
  0x00000000036c4134: jg     0x00000000036c4146  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)

  0x00000000036c413a: mov    %esi,0xf8(%rsp)
  0x00000000036c4141: jmpq   0x00000000036c43ad  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)

  0x00000000036c4146: mov    %eax,0xe4(%rsp)
  0x00000000036c414d: mov    %rbx,0xe8(%rsp)
  0x00000000036c4155: mov    %esi,0xf8(%rsp)
  0x00000000036c415c: mov    %rdi,%rdx
  0x00000000036c415f: movabs $0x1c681e30,%rcx   ;   {metadata(method data for {method} {0x000000001c503c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036c4169: addq   $0x1,0x128(%rcx)
  0x00000000036c4171: mov    %rdi,%rdx          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)

  0x00000000036c4174: nop
  0x00000000036c4175: nop
  0x00000000036c4176: nop
  0x00000000036c4177: callq  0x00000000035d61a0  ; OopMap{[240]=Oop [232]=Oop [376]=Oop off=4060}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ;   {optimized virtual_call}
  0x00000000036c417c: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)

  0x00000000036c417f: movabs $0x1c681e30,%rbx   ;   {metadata(method data for {method} {0x000000001c503c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036c4189: addq   $0x1,0x138(%rbx)
  0x00000000036c4191: movabs $0x1c6c5010,%rbx   ;   {metadata(method data for {method} {0x000000001c5a8b98} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000036c419b: mov    0xdc(%rbx),%edx
  0x00000000036c41a1: add    $0x8,%edx
  0x00000000036c41a4: mov    %edx,0xdc(%rbx)
  0x00000000036c41aa: movabs $0x1c5a8b90,%rbx   ;   {metadata({method} {0x000000001c5a8b98} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000036c41b4: and    $0x7ffff8,%edx
  0x00000000036c41ba: cmp    $0x0,%edx
  0x00000000036c41bd: je     0x00000000036c531f
  0x00000000036c41c3: mov    %r8,%rbx
  0x00000000036c41c6: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000000036c41d0: movslq %ebx,%rbx
  0x00000000036c41d3: mov    %rbx,%rdi
  0x00000000036c41d6: cmp    $0xffffff,%rbx
  0x00000000036c41dd: ja     0x00000000036c5336
  0x00000000036c41e3: movabs $0x17,%rsi
  0x00000000036c41ed: lea    (%rsi,%rbx,2),%rsi
  0x00000000036c41f1: and    $0xfffffffffffffff8,%rsi
  0x00000000036c41f5: mov    0x60(%r15),%rax
  0x00000000036c41f9: lea    (%rax,%rsi,1),%rsi
  0x00000000036c41fd: cmp    0x70(%r15),%rsi
  0x00000000036c4201: ja     0x00000000036c5336
  0x00000000036c4207: mov    %rsi,0x60(%r15)
  0x00000000036c420b: sub    %rax,%rsi
  0x00000000036c420e: movq   $0x1,(%rax)
  0x00000000036c4215: mov    %rdx,%rcx
  0x00000000036c4218: shr    $0x3,%rcx
  0x00000000036c421c: mov    %ecx,0x8(%rax)
  0x00000000036c421f: mov    %ebx,0xc(%rax)
  0x00000000036c4222: sub    $0x10,%rsi
  0x00000000036c4226: je     0x00000000036c423d
  0x00000000036c422c: xor    %rbx,%rbx
  0x00000000036c422f: shr    $0x3,%rsi
  0x00000000036c4233: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000000036c4238: dec    %rsi
  0x00000000036c423b: jne    0x00000000036c4233  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)

  0x00000000036c423d: movabs $0x1c6c5010,%rdx   ;   {metadata(method data for {method} {0x000000001c5a8b98} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000036c4247: addq   $0x1,0x108(%rdx)
  0x00000000036c424f: movabs $0x1c67e6d0,%rdx   ;   {metadata(method data for {method} {0x000000001c584640} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000036c4259: mov    0xdc(%rdx),%r9d
  0x00000000036c4260: add    $0x8,%r9d
  0x00000000036c4264: mov    %r9d,0xdc(%rdx)
  0x00000000036c426b: movabs $0x1c584638,%rdx   ;   {metadata({method} {0x000000001c584640} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000036c4275: and    $0x7ffff8,%r9d
  0x00000000036c427c: cmp    $0x0,%r9d
  0x00000000036c4280: je     0x00000000036c5340
  0x00000000036c4286: mov    0xe4(%rsp),%edx
  0x00000000036c428d: cmp    %r8d,%edx
  0x00000000036c4290: movabs $0x1c67e6d0,%r9    ;   {metadata(method data for {method} {0x000000001c584640} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000036c429a: movabs $0x108,%rdi
  0x00000000036c42a4: jg     0x00000000036c42b4
  0x00000000036c42aa: movabs $0x118,%rdi
  0x00000000036c42b4: mov    (%r9,%rdi,1),%rsi
  0x00000000036c42b8: lea    0x1(%rsi),%rsi
  0x00000000036c42bc: mov    %rsi,(%r9,%rdi,1)
  0x00000000036c42c0: jg     0x00000000036c42df  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)

  0x00000000036c42c6: movabs $0x1c67e6d0,%r8    ;   {metadata(method data for {method} {0x000000001c584640} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000036c42d0: incl   0x128(%r8)
  0x00000000036c42d7: mov    %rdx,%rsi
  0x00000000036c42da: jmpq   0x00000000036c42e2  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)

  0x00000000036c42df: mov    %r8,%rsi           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)

  0x00000000036c42e2: mov    0xe8(%rsp),%rbx
  0x00000000036c42ea: movabs $0x1c6c5010,%rdx   ;   {metadata(method data for {method} {0x000000001c5a8b98} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000036c42f4: addq   $0x1,0x118(%rdx)
  0x00000000036c42fc: mov    %rbx,%rdx
  0x00000000036c42ff: mov    $0x0,%r8d
  0x00000000036c4305: mov    %rax,%r9
  0x00000000036c4308: mov    $0x0,%edi
  0x00000000036c430d: mov    %rax,0x100(%rsp)
  0x00000000036c4315: lea    (%r8,%rsi,1),%rcx
  0x00000000036c4319: cmp    0xc(%rdx),%ecx
  0x00000000036c431c: ja     0x00000000036c5357
  0x00000000036c4322: lea    (%rdi,%rsi,1),%rcx
  0x00000000036c4326: cmp    0xc(%r9),%ecx
  0x00000000036c432a: ja     0x00000000036c5357
  0x00000000036c4330: test   %esi,%esi
  0x00000000036c4332: jl     0x00000000036c5357
  0x00000000036c4338: je     0x00000000036c437c
  0x00000000036c433e: movslq %r8d,%r8
  0x00000000036c4341: movslq %edi,%rdi
  0x00000000036c4344: lea    0x10(%rdx,%r8,2),%rcx
  0x00000000036c4349: lea    0x10(%r9,%rdi,2),%rdx
  0x00000000036c434e: mov    %rsi,%r8
  0x00000000036c4351: sub    $0x20,%rsp
  0x00000000036c4355: test   $0xf,%esp
  0x00000000036c435b: je     0x00000000036c4373
  0x00000000036c4361: sub    $0x8,%rsp
  0x00000000036c4365: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00000000036c436a: add    $0x8,%rsp
  0x00000000036c436e: jmpq   0x00000000036c4378
  0x00000000036c4373: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00000000036c4378: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)

  0x00000000036c437c: mov    0x100(%rsp),%rax
  0x00000000036c4384: mov    0xf0(%rsp),%rdi
  0x00000000036c438c: mov    %rax,%r10
  0x00000000036c438f: shr    $0x3,%r10
  0x00000000036c4393: mov    %r10d,0x10(%rdi)
  0x00000000036c4397: mov    %rdi,%rax
  0x00000000036c439a: shr    $0x9,%rax
  0x00000000036c439e: movabs $0xf32f000,%r8
  0x00000000036c43a8: movb   $0x0,(%rax,%r8,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)

  0x00000000036c43ad: mov    0xf8(%rsp),%esi
  0x00000000036c43b4: mov    0x10(%rdi),%eax
  0x00000000036c43b7: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)

  0x00000000036c43bb: mov    0xc(%rdi),%r8d     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)

  0x00000000036c43bf: mov    %r8,%rdx
  0x00000000036c43c2: inc    %edx
  0x00000000036c43c4: mov    %edx,0xc(%rdi)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)

  0x00000000036c43c7: movslq %r8d,%rdx
  0x00000000036c43ca: cmp    0xc(%rax),%r8d     ; implicit exception: dispatches to 0x00000000036c5361
  0x00000000036c43ce: jae    0x00000000036c536b
  0x00000000036c43d4: mov    %si,0x10(%rax,%rdx,2)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)

  0x00000000036c43d9: lea    0x170(%rsp),%rax
  0x00000000036c43e1: mov    0x8(%rax),%rdx
  0x00000000036c43e5: mov    (%rdx),%r8
  0x00000000036c43e8: and    $0x7,%r8
  0x00000000036c43ec: cmp    $0x5,%r8
  0x00000000036c43f0: je     0x00000000036c440d
  0x00000000036c43f6: mov    (%rax),%r8
  0x00000000036c43f9: test   %r8,%r8
  0x00000000036c43fc: je     0x00000000036c440d
  0x00000000036c4402: lock cmpxchg %r8,(%rdx)
  0x00000000036c4407: jne    0x00000000036c5374  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)

  0x00000000036c440d: jmpq   0x00000000036c4ec2  ;*pop
                                                ; - java.io.WinNTFileSystem::normalizePrefix@128 (line 200)

  0x00000000036c4412: cmp    (%rdi),%rax        ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; implicit exception: dispatches to 0x00000000036c538a
  0x00000000036c4415: mov    %rdi,%rax
  0x00000000036c4418: movabs $0x1c6d8a60,%r8    ;   {metadata(method data for {method} {0x000000001c60c2d0} &apos;normalizePrefix&apos; &apos;(Ljava/lang/String;ILjava/lang/StringBuffer;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c4422: mov    0x8(%rax),%eax
  0x00000000036c4425: shl    $0x3,%rax
  0x00000000036c4429: cmp    0x278(%r8),%rax
  0x00000000036c4430: jne    0x00000000036c443f
  0x00000000036c4432: addq   $0x1,0x280(%r8)
  0x00000000036c443a: jmpq   0x00000000036c44a5
  0x00000000036c443f: cmp    0x288(%r8),%rax
  0x00000000036c4446: jne    0x00000000036c4455
  0x00000000036c4448: addq   $0x1,0x290(%r8)
  0x00000000036c4450: jmpq   0x00000000036c44a5
  0x00000000036c4455: cmpq   $0x0,0x278(%r8)
  0x00000000036c4460: jne    0x00000000036c4479
  0x00000000036c4462: mov    %rax,0x278(%r8)
  0x00000000036c4469: movq   $0x1,0x280(%r8)
  0x00000000036c4474: jmpq   0x00000000036c44a5
  0x00000000036c4479: cmpq   $0x0,0x288(%r8)
  0x00000000036c4484: jne    0x00000000036c449d
  0x00000000036c4486: mov    %rax,0x288(%r8)
  0x00000000036c448d: movq   $0x1,0x290(%r8)
  0x00000000036c4498: jmpq   0x00000000036c44a5
  0x00000000036c449d: addq   $0x1,0x270(%r8)
  0x00000000036c44a5: lea    0x170(%rsp),%r8
  0x00000000036c44ad: mov    %rdi,0x8(%r8)
  0x00000000036c44b1: mov    (%rdi),%rax
  0x00000000036c44b4: mov    %rax,%rdx
  0x00000000036c44b7: and    $0x7,%rdx
  0x00000000036c44bb: cmp    $0x5,%rdx
  0x00000000036c44bf: jne    0x00000000036c4546
  0x00000000036c44c5: mov    0x8(%rdi),%edx
  0x00000000036c44c8: shl    $0x3,%rdx
  0x00000000036c44cc: mov    0xa8(%rdx),%rdx
  0x00000000036c44d3: or     %r15,%rdx
  0x00000000036c44d6: xor    %rax,%rdx
  0x00000000036c44d9: and    $0xffffffffffffff87,%rdx
  0x00000000036c44dd: je     0x00000000036c456e
  0x00000000036c44e3: test   $0x7,%rdx
  0x00000000036c44ea: jne    0x00000000036c4533
  0x00000000036c44ec: test   $0x300,%rdx
  0x00000000036c44f3: jne    0x00000000036c4512
  0x00000000036c44f5: and    $0x37f,%rax
  0x00000000036c44fc: mov    %rax,%rdx
  0x00000000036c44ff: or     %r15,%rdx
  0x00000000036c4502: lock cmpxchg %rdx,(%rdi)
  0x00000000036c4507: jne    0x00000000036c538f
  0x00000000036c450d: jmpq   0x00000000036c456e
  0x00000000036c4512: mov    0x8(%rdi),%edx
  0x00000000036c4515: shl    $0x3,%rdx
  0x00000000036c4519: mov    0xa8(%rdx),%rdx
  0x00000000036c4520: or     %r15,%rdx
  0x00000000036c4523: lock cmpxchg %rdx,(%rdi)
  0x00000000036c4528: jne    0x00000000036c538f
  0x00000000036c452e: jmpq   0x00000000036c456e
  0x00000000036c4533: mov    0x8(%rdi),%edx
  0x00000000036c4536: shl    $0x3,%rdx
  0x00000000036c453a: mov    0xa8(%rdx),%rdx
  0x00000000036c4541: lock cmpxchg %rdx,(%rdi)
  0x00000000036c4546: mov    (%rdi),%rax
  0x00000000036c4549: or     $0x1,%rax
  0x00000000036c454d: mov    %rax,(%r8)
  0x00000000036c4550: lock cmpxchg %r8,(%rdi)
  0x00000000036c4555: je     0x00000000036c456e
  0x00000000036c455b: sub    %rsp,%rax
  0x00000000036c455e: and    $0xfffffffffffff007,%rax
  0x00000000036c4565: mov    %rax,(%r8)
  0x00000000036c4568: jne    0x00000000036c538f  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)

  0x00000000036c456e: movabs $0x1c6c0af8,%r8    ;   {metadata(method data for {method} {0x000000001c4fffe0} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x00000000036c4578: mov    0xdc(%r8),%edx
  0x00000000036c457f: add    $0x8,%edx
  0x00000000036c4582: mov    %edx,0xdc(%r8)
  0x00000000036c4589: movabs $0x1c4fffd8,%r8    ;   {metadata({method} {0x000000001c4fffe0} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x00000000036c4593: and    $0x7ffff8,%edx
  0x00000000036c4599: cmp    $0x0,%edx
  0x00000000036c459c: je     0x00000000036c53a2
  0x00000000036c45a2: movl   $0x0,0x14(%rdi)
  0x00000000036c45a9: mov    %rdi,%r8
  0x00000000036c45ac: shr    $0x9,%r8
  0x00000000036c45b0: movabs $0xf32f000,%rdx
  0x00000000036c45ba: movb   $0x0,(%r8,%rdx,1)  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 380)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)

  0x00000000036c45bf: mov    %rdi,%r8
  0x00000000036c45c2: movabs $0x1c6c0af8,%rdx   ;   {metadata(method data for {method} {0x000000001c4fffe0} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x00000000036c45cc: addq   $0x1,0x108(%rdx)
  0x00000000036c45d4: movabs $0x1c6c0840,%r8    ;   {metadata(method data for {method} {0x000000001c504dc0} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036c45de: mov    0xdc(%r8),%edx
  0x00000000036c45e5: add    $0x8,%edx
  0x00000000036c45e8: mov    %edx,0xdc(%r8)
  0x00000000036c45ef: movabs $0x1c504db8,%r8    ;   {metadata({method} {0x000000001c504dc0} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036c45f9: and    $0x7ffff8,%edx
  0x00000000036c45ff: cmp    $0x0,%edx
  0x00000000036c4602: je     0x00000000036c53b9
  0x00000000036c4608: mov    0xc(%rdi),%r8d     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)

  0x00000000036c460c: inc    %r8d
  0x00000000036c460f: mov    %rdi,%rdx
  0x00000000036c4612: movabs $0x1c6c0840,%rsi   ;   {metadata(method data for {method} {0x000000001c504dc0} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036c461c: addq   $0x1,0x108(%rsi)
  0x00000000036c4624: movabs $0x1c681e30,%rdx   ;   {metadata(method data for {method} {0x000000001c503c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036c462e: mov    0xdc(%rdx),%esi
  0x00000000036c4634: add    $0x8,%esi
  0x00000000036c4637: mov    %esi,0xdc(%rdx)
  0x00000000036c463d: movabs $0x1c503c80,%rdx   ;   {metadata({method} {0x000000001c503c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036c4647: and    $0x7ffff8,%esi
  0x00000000036c464d: cmp    $0x0,%esi
  0x00000000036c4650: je     0x00000000036c53d0
  0x00000000036c4656: mov    0x10(%rdi),%esi
  0x00000000036c4659: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)

  0x00000000036c465d: mov    0xc(%rsi),%ebx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; implicit exception: dispatches to 0x00000000036c53e7
  0x00000000036c4660: mov    %r8,%rdx
  0x00000000036c4663: sub    %ebx,%edx
  0x00000000036c4665: cmp    $0x0,%edx
  0x00000000036c4668: movabs $0x1c681e30,%rdx   ;   {metadata(method data for {method} {0x000000001c503c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036c4672: movabs $0x108,%rax
  0x00000000036c467c: jle    0x00000000036c468c
  0x00000000036c4682: movabs $0x118,%rax
  0x00000000036c468c: mov    (%rdx,%rax,1),%r9
  0x00000000036c4690: lea    0x1(%r9),%r9
  0x00000000036c4694: mov    %r9,(%rdx,%rax,1)
  0x00000000036c4698: jle    0x00000000036c48fc  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)

  0x00000000036c469e: mov    %ebx,0xfc(%rsp)
  0x00000000036c46a5: mov    %rsi,0x108(%rsp)
  0x00000000036c46ad: mov    %rdi,%rdx
  0x00000000036c46b0: movabs $0x1c681e30,%r9    ;   {metadata(method data for {method} {0x000000001c503c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036c46ba: addq   $0x1,0x128(%r9)
  0x00000000036c46c2: mov    %rdi,%rdx          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)

  0x00000000036c46c5: nop
  0x00000000036c46c6: nop
  0x00000000036c46c7: callq  0x00000000035d61a0  ; OopMap{[264]=Oop [240]=Oop [376]=Oop off=5420}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ;   {optimized virtual_call}
  0x00000000036c46cc: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)

  0x00000000036c46cf: movabs $0x1c681e30,%rbx   ;   {metadata(method data for {method} {0x000000001c503c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036c46d9: addq   $0x1,0x138(%rbx)
  0x00000000036c46e1: movabs $0x1c6c5010,%rbx   ;   {metadata(method data for {method} {0x000000001c5a8b98} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000036c46eb: mov    0xdc(%rbx),%edx
  0x00000000036c46f1: add    $0x8,%edx
  0x00000000036c46f4: mov    %edx,0xdc(%rbx)
  0x00000000036c46fa: movabs $0x1c5a8b90,%rbx   ;   {metadata({method} {0x000000001c5a8b98} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000036c4704: and    $0x7ffff8,%edx
  0x00000000036c470a: cmp    $0x0,%edx
  0x00000000036c470d: je     0x00000000036c53ec
  0x00000000036c4713: mov    %r8,%rbx
  0x00000000036c4716: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000000036c4720: movslq %ebx,%rbx
  0x00000000036c4723: mov    %rbx,%rdi
  0x00000000036c4726: cmp    $0xffffff,%rbx
  0x00000000036c472d: ja     0x00000000036c5403
  0x00000000036c4733: movabs $0x17,%rsi
  0x00000000036c473d: lea    (%rsi,%rbx,2),%rsi
  0x00000000036c4741: and    $0xfffffffffffffff8,%rsi
  0x00000000036c4745: mov    0x60(%r15),%rax
  0x00000000036c4749: lea    (%rax,%rsi,1),%rsi
  0x00000000036c474d: cmp    0x70(%r15),%rsi
  0x00000000036c4751: ja     0x00000000036c5403
  0x00000000036c4757: mov    %rsi,0x60(%r15)
  0x00000000036c475b: sub    %rax,%rsi
  0x00000000036c475e: movq   $0x1,(%rax)
  0x00000000036c4765: mov    %rdx,%rcx
  0x00000000036c4768: shr    $0x3,%rcx
  0x00000000036c476c: mov    %ecx,0x8(%rax)
  0x00000000036c476f: mov    %ebx,0xc(%rax)
  0x00000000036c4772: sub    $0x10,%rsi
  0x00000000036c4776: je     0x00000000036c478d
  0x00000000036c477c: xor    %rbx,%rbx
  0x00000000036c477f: shr    $0x3,%rsi
  0x00000000036c4783: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000000036c4788: dec    %rsi
  0x00000000036c478b: jne    0x00000000036c4783  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)

  0x00000000036c478d: movabs $0x1c6c5010,%rdx   ;   {metadata(method data for {method} {0x000000001c5a8b98} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000036c4797: addq   $0x1,0x108(%rdx)
  0x00000000036c479f: movabs $0x1c67e6d0,%rdx   ;   {metadata(method data for {method} {0x000000001c584640} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000036c47a9: mov    0xdc(%rdx),%r9d
  0x00000000036c47b0: add    $0x8,%r9d
  0x00000000036c47b4: mov    %r9d,0xdc(%rdx)
  0x00000000036c47bb: movabs $0x1c584638,%rdx   ;   {metadata({method} {0x000000001c584640} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000036c47c5: and    $0x7ffff8,%r9d
  0x00000000036c47cc: cmp    $0x0,%r9d
  0x00000000036c47d0: je     0x00000000036c540d
  0x00000000036c47d6: mov    0xfc(%rsp),%ebx
  0x00000000036c47dd: cmp    %r8d,%ebx
  0x00000000036c47e0: movabs $0x1c67e6d0,%rdx   ;   {metadata(method data for {method} {0x000000001c584640} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000036c47ea: movabs $0x108,%r9
  0x00000000036c47f4: jg     0x00000000036c4804
  0x00000000036c47fa: movabs $0x118,%r9
  0x00000000036c4804: mov    (%rdx,%r9,1),%rdi
  0x00000000036c4808: lea    0x1(%rdi),%rdi
  0x00000000036c480c: mov    %rdi,(%rdx,%r9,1)
  0x00000000036c4810: jg     0x00000000036c482b  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)

  0x00000000036c4816: movabs $0x1c67e6d0,%rdx   ;   {metadata(method data for {method} {0x000000001c584640} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000036c4820: incl   0x128(%rdx)
  0x00000000036c4826: jmpq   0x00000000036c482e  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)

  0x00000000036c482b: mov    %r8,%rbx           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)

  0x00000000036c482e: mov    0x108(%rsp),%rsi
  0x00000000036c4836: movabs $0x1c6c5010,%rdx   ;   {metadata(method data for {method} {0x000000001c5a8b98} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000036c4840: addq   $0x1,0x118(%rdx)
  0x00000000036c4848: mov    %rsi,%rdx
  0x00000000036c484b: mov    $0x0,%r8d
  0x00000000036c4851: mov    %rax,%r9
  0x00000000036c4854: mov    $0x0,%edi
  0x00000000036c4859: mov    %rbx,%rsi
  0x00000000036c485c: mov    %rax,0x118(%rsp)
  0x00000000036c4864: lea    (%r8,%rsi,1),%rcx
  0x00000000036c4868: cmp    0xc(%rdx),%ecx
  0x00000000036c486b: ja     0x00000000036c5424
  0x00000000036c4871: lea    (%rdi,%rsi,1),%rcx
  0x00000000036c4875: cmp    0xc(%r9),%ecx
  0x00000000036c4879: ja     0x00000000036c5424
  0x00000000036c487f: test   %esi,%esi
  0x00000000036c4881: jl     0x00000000036c5424
  0x00000000036c4887: je     0x00000000036c48cb
  0x00000000036c488d: movslq %r8d,%r8
  0x00000000036c4890: movslq %edi,%rdi
  0x00000000036c4893: lea    0x10(%rdx,%r8,2),%rcx
  0x00000000036c4898: lea    0x10(%r9,%rdi,2),%rdx
  0x00000000036c489d: mov    %rsi,%r8
  0x00000000036c48a0: sub    $0x20,%rsp
  0x00000000036c48a4: test   $0xf,%esp
  0x00000000036c48aa: je     0x00000000036c48c2
  0x00000000036c48b0: sub    $0x8,%rsp
  0x00000000036c48b4: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00000000036c48b9: add    $0x8,%rsp
  0x00000000036c48bd: jmpq   0x00000000036c48c7
  0x00000000036c48c2: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00000000036c48c7: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)

  0x00000000036c48cb: mov    0x118(%rsp),%rax
  0x00000000036c48d3: mov    0xf0(%rsp),%rdi
  0x00000000036c48db: mov    %rax,%r10
  0x00000000036c48de: shr    $0x3,%r10
  0x00000000036c48e2: mov    %r10d,0x10(%rdi)
  0x00000000036c48e6: mov    %rdi,%rax
  0x00000000036c48e9: shr    $0x9,%rax
  0x00000000036c48ed: movabs $0xf32f000,%r8
  0x00000000036c48f7: movb   $0x0,(%rax,%r8,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)

  0x00000000036c48fc: mov    0x110(%rsp),%ecx
  0x00000000036c4903: mov    0x10(%rdi),%eax
  0x00000000036c4906: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)

  0x00000000036c490a: mov    0xc(%rdi),%r8d     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)

  0x00000000036c490e: mov    %r8,%rdx
  0x00000000036c4911: inc    %edx
  0x00000000036c4913: mov    %edx,0xc(%rdi)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)

  0x00000000036c4916: movslq %r8d,%rdx
  0x00000000036c4919: cmp    0xc(%rax),%r8d     ; implicit exception: dispatches to 0x00000000036c5431
  0x00000000036c491d: jae    0x00000000036c543b
  0x00000000036c4923: mov    %cx,0x10(%rax,%rdx,2)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)

  0x00000000036c4928: lea    0x170(%rsp),%rax
  0x00000000036c4930: mov    0x8(%rax),%rdx
  0x00000000036c4934: mov    (%rdx),%r8
  0x00000000036c4937: and    $0x7,%r8
  0x00000000036c493b: cmp    $0x5,%r8
  0x00000000036c493f: je     0x00000000036c495c
  0x00000000036c4945: mov    (%rax),%r8
  0x00000000036c4948: test   %r8,%r8
  0x00000000036c494b: je     0x00000000036c495c
  0x00000000036c4951: lock cmpxchg %r8,(%rdx)
  0x00000000036c4956: jne    0x00000000036c5444  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)

  0x00000000036c495c: mov    %rdi,%rax
  0x00000000036c495f: movabs $0x1c6d8a60,%r8    ;   {metadata(method data for {method} {0x000000001c60c2d0} &apos;normalizePrefix&apos; &apos;(Ljava/lang/String;ILjava/lang/StringBuffer;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c4969: mov    0x8(%rax),%eax
  0x00000000036c496c: shl    $0x3,%rax
  0x00000000036c4970: cmp    0x2a8(%r8),%rax
  0x00000000036c4977: jne    0x00000000036c4986
  0x00000000036c4979: addq   $0x1,0x2b0(%r8)
  0x00000000036c4981: jmpq   0x00000000036c49ec
  0x00000000036c4986: cmp    0x2b8(%r8),%rax
  0x00000000036c498d: jne    0x00000000036c499c
  0x00000000036c498f: addq   $0x1,0x2c0(%r8)
  0x00000000036c4997: jmpq   0x00000000036c49ec
  0x00000000036c499c: cmpq   $0x0,0x2a8(%r8)
  0x00000000036c49a7: jne    0x00000000036c49c0
  0x00000000036c49a9: mov    %rax,0x2a8(%r8)
  0x00000000036c49b0: movq   $0x1,0x2b0(%r8)
  0x00000000036c49bb: jmpq   0x00000000036c49ec
  0x00000000036c49c0: cmpq   $0x0,0x2b8(%r8)
  0x00000000036c49cb: jne    0x00000000036c49e4
  0x00000000036c49cd: mov    %rax,0x2b8(%r8)
  0x00000000036c49d4: movq   $0x1,0x2c0(%r8)
  0x00000000036c49df: jmpq   0x00000000036c49ec
  0x00000000036c49e4: addq   $0x1,0x2a0(%r8)
  0x00000000036c49ec: lea    0x170(%rsp),%r8
  0x00000000036c49f4: mov    %rdi,0x8(%r8)
  0x00000000036c49f8: mov    (%rdi),%rax
  0x00000000036c49fb: mov    %rax,%rdx
  0x00000000036c49fe: and    $0x7,%rdx
  0x00000000036c4a02: cmp    $0x5,%rdx
  0x00000000036c4a06: jne    0x00000000036c4a8d
  0x00000000036c4a0c: mov    0x8(%rdi),%edx
  0x00000000036c4a0f: shl    $0x3,%rdx
  0x00000000036c4a13: mov    0xa8(%rdx),%rdx
  0x00000000036c4a1a: or     %r15,%rdx
  0x00000000036c4a1d: xor    %rax,%rdx
  0x00000000036c4a20: and    $0xffffffffffffff87,%rdx
  0x00000000036c4a24: je     0x00000000036c4ab5
  0x00000000036c4a2a: test   $0x7,%rdx
  0x00000000036c4a31: jne    0x00000000036c4a7a
  0x00000000036c4a33: test   $0x300,%rdx
  0x00000000036c4a3a: jne    0x00000000036c4a59
  0x00000000036c4a3c: and    $0x37f,%rax
  0x00000000036c4a43: mov    %rax,%rdx
  0x00000000036c4a46: or     %r15,%rdx
  0x00000000036c4a49: lock cmpxchg %rdx,(%rdi)
  0x00000000036c4a4e: jne    0x00000000036c545a
  0x00000000036c4a54: jmpq   0x00000000036c4ab5
  0x00000000036c4a59: mov    0x8(%rdi),%edx
  0x00000000036c4a5c: shl    $0x3,%rdx
  0x00000000036c4a60: mov    0xa8(%rdx),%rdx
  0x00000000036c4a67: or     %r15,%rdx
  0x00000000036c4a6a: lock cmpxchg %rdx,(%rdi)
  0x00000000036c4a6f: jne    0x00000000036c545a
  0x00000000036c4a75: jmpq   0x00000000036c4ab5
  0x00000000036c4a7a: mov    0x8(%rdi),%edx
  0x00000000036c4a7d: shl    $0x3,%rdx
  0x00000000036c4a81: mov    0xa8(%rdx),%rdx
  0x00000000036c4a88: lock cmpxchg %rdx,(%rdi)
  0x00000000036c4a8d: mov    (%rdi),%rax
  0x00000000036c4a90: or     $0x1,%rax
  0x00000000036c4a94: mov    %rax,(%r8)
  0x00000000036c4a97: lock cmpxchg %r8,(%rdi)
  0x00000000036c4a9c: je     0x00000000036c4ab5
  0x00000000036c4aa2: sub    %rsp,%rax
  0x00000000036c4aa5: and    $0xfffffffffffff007,%rax
  0x00000000036c4aac: mov    %rax,(%r8)
  0x00000000036c4aaf: jne    0x00000000036c545a  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)

  0x00000000036c4ab5: movabs $0x1c6c0af8,%r8    ;   {metadata(method data for {method} {0x000000001c4fffe0} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x00000000036c4abf: mov    0xdc(%r8),%edx
  0x00000000036c4ac6: add    $0x8,%edx
  0x00000000036c4ac9: mov    %edx,0xdc(%r8)
  0x00000000036c4ad0: movabs $0x1c4fffd8,%r8    ;   {metadata({method} {0x000000001c4fffe0} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x00000000036c4ada: and    $0x7ffff8,%edx
  0x00000000036c4ae0: cmp    $0x0,%edx
  0x00000000036c4ae3: je     0x00000000036c546d
  0x00000000036c4ae9: movl   $0x0,0x14(%rdi)
  0x00000000036c4af0: mov    %rdi,%r8
  0x00000000036c4af3: shr    $0x9,%r8
  0x00000000036c4af7: movabs $0xf32f000,%rdx
  0x00000000036c4b01: movb   $0x0,(%r8,%rdx,1)  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 380)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)

  0x00000000036c4b06: mov    %rdi,%r8
  0x00000000036c4b09: movabs $0x1c6c0af8,%rdx   ;   {metadata(method data for {method} {0x000000001c4fffe0} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x00000000036c4b13: addq   $0x1,0x108(%rdx)
  0x00000000036c4b1b: movabs $0x1c6c0840,%r8    ;   {metadata(method data for {method} {0x000000001c504dc0} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036c4b25: mov    0xdc(%r8),%edx
  0x00000000036c4b2c: add    $0x8,%edx
  0x00000000036c4b2f: mov    %edx,0xdc(%r8)
  0x00000000036c4b36: movabs $0x1c504db8,%r8    ;   {metadata({method} {0x000000001c504dc0} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036c4b40: and    $0x7ffff8,%edx
  0x00000000036c4b46: cmp    $0x0,%edx
  0x00000000036c4b49: je     0x00000000036c5484
  0x00000000036c4b4f: mov    0xc(%rdi),%r8d     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)

  0x00000000036c4b53: inc    %r8d
  0x00000000036c4b56: mov    %rdi,%rdx
  0x00000000036c4b59: movabs $0x1c6c0840,%rsi   ;   {metadata(method data for {method} {0x000000001c504dc0} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036c4b63: addq   $0x1,0x108(%rsi)
  0x00000000036c4b6b: movabs $0x1c681e30,%rdx   ;   {metadata(method data for {method} {0x000000001c503c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036c4b75: mov    0xdc(%rdx),%esi
  0x00000000036c4b7b: add    $0x8,%esi
  0x00000000036c4b7e: mov    %esi,0xdc(%rdx)
  0x00000000036c4b84: movabs $0x1c503c80,%rdx   ;   {metadata({method} {0x000000001c503c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036c4b8e: and    $0x7ffff8,%esi
  0x00000000036c4b94: cmp    $0x0,%esi
  0x00000000036c4b97: je     0x00000000036c549b
  0x00000000036c4b9d: mov    0x10(%rdi),%esi
  0x00000000036c4ba0: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)

  0x00000000036c4ba4: mov    0xc(%rsi),%ebx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; implicit exception: dispatches to 0x00000000036c54b2
  0x00000000036c4ba7: mov    %r8,%rdx
  0x00000000036c4baa: sub    %ebx,%edx
  0x00000000036c4bac: cmp    $0x0,%edx
  0x00000000036c4baf: movabs $0x1c681e30,%rdx   ;   {metadata(method data for {method} {0x000000001c503c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036c4bb9: movabs $0x108,%rax
  0x00000000036c4bc3: jle    0x00000000036c4bd3
  0x00000000036c4bc9: movabs $0x118,%rax
  0x00000000036c4bd3: mov    (%rdx,%rax,1),%rcx
  0x00000000036c4bd7: lea    0x1(%rcx),%rcx
  0x00000000036c4bdb: mov    %rcx,(%rdx,%rax,1)
  0x00000000036c4bdf: jle    0x00000000036c4e43  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)

  0x00000000036c4be5: mov    %ebx,0x114(%rsp)
  0x00000000036c4bec: mov    %rsi,0x120(%rsp)
  0x00000000036c4bf4: mov    %rdi,%rdx
  0x00000000036c4bf7: movabs $0x1c681e30,%rax   ;   {metadata(method data for {method} {0x000000001c503c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036c4c01: addq   $0x1,0x128(%rax)
  0x00000000036c4c09: mov    %rdi,%rdx          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)

  0x00000000036c4c0c: nop
  0x00000000036c4c0d: nop
  0x00000000036c4c0e: nop
  0x00000000036c4c0f: callq  0x00000000035d61a0  ; OopMap{[288]=Oop [240]=Oop [376]=Oop off=6772}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ;   {optimized virtual_call}
  0x00000000036c4c14: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)

  0x00000000036c4c17: movabs $0x1c681e30,%rbx   ;   {metadata(method data for {method} {0x000000001c503c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036c4c21: addq   $0x1,0x138(%rbx)
  0x00000000036c4c29: movabs $0x1c6c5010,%rbx   ;   {metadata(method data for {method} {0x000000001c5a8b98} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000036c4c33: mov    0xdc(%rbx),%edx
  0x00000000036c4c39: add    $0x8,%edx
  0x00000000036c4c3c: mov    %edx,0xdc(%rbx)
  0x00000000036c4c42: movabs $0x1c5a8b90,%rbx   ;   {metadata({method} {0x000000001c5a8b98} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000036c4c4c: and    $0x7ffff8,%edx
  0x00000000036c4c52: cmp    $0x0,%edx
  0x00000000036c4c55: je     0x00000000036c54b7
  0x00000000036c4c5b: mov    %r8,%rbx
  0x00000000036c4c5e: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000000036c4c68: movslq %ebx,%rbx
  0x00000000036c4c6b: mov    %rbx,%rdi
  0x00000000036c4c6e: cmp    $0xffffff,%rbx
  0x00000000036c4c75: ja     0x00000000036c54ce
  0x00000000036c4c7b: movabs $0x17,%rsi
  0x00000000036c4c85: lea    (%rsi,%rbx,2),%rsi
  0x00000000036c4c89: and    $0xfffffffffffffff8,%rsi
  0x00000000036c4c8d: mov    0x60(%r15),%rax
  0x00000000036c4c91: lea    (%rax,%rsi,1),%rsi
  0x00000000036c4c95: cmp    0x70(%r15),%rsi
  0x00000000036c4c99: ja     0x00000000036c54ce
  0x00000000036c4c9f: mov    %rsi,0x60(%r15)
  0x00000000036c4ca3: sub    %rax,%rsi
  0x00000000036c4ca6: movq   $0x1,(%rax)
  0x00000000036c4cad: mov    %rdx,%rcx
  0x00000000036c4cb0: shr    $0x3,%rcx
  0x00000000036c4cb4: mov    %ecx,0x8(%rax)
  0x00000000036c4cb7: mov    %ebx,0xc(%rax)
  0x00000000036c4cba: sub    $0x10,%rsi
  0x00000000036c4cbe: je     0x00000000036c4cd5
  0x00000000036c4cc4: xor    %rbx,%rbx
  0x00000000036c4cc7: shr    $0x3,%rsi
  0x00000000036c4ccb: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000000036c4cd0: dec    %rsi
  0x00000000036c4cd3: jne    0x00000000036c4ccb  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)

  0x00000000036c4cd5: movabs $0x1c6c5010,%rdx   ;   {metadata(method data for {method} {0x000000001c5a8b98} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000036c4cdf: addq   $0x1,0x108(%rdx)
  0x00000000036c4ce7: movabs $0x1c67e6d0,%rdx   ;   {metadata(method data for {method} {0x000000001c584640} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000036c4cf1: mov    0xdc(%rdx),%r9d
  0x00000000036c4cf8: add    $0x8,%r9d
  0x00000000036c4cfc: mov    %r9d,0xdc(%rdx)
  0x00000000036c4d03: movabs $0x1c584638,%rdx   ;   {metadata({method} {0x000000001c584640} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000036c4d0d: and    $0x7ffff8,%r9d
  0x00000000036c4d14: cmp    $0x0,%r9d
  0x00000000036c4d18: je     0x00000000036c54d8
  0x00000000036c4d1e: mov    0x114(%rsp),%ebx
  0x00000000036c4d25: cmp    %r8d,%ebx
  0x00000000036c4d28: movabs $0x1c67e6d0,%rdx   ;   {metadata(method data for {method} {0x000000001c584640} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000036c4d32: movabs $0x108,%r9
  0x00000000036c4d3c: jg     0x00000000036c4d4c
  0x00000000036c4d42: movabs $0x118,%r9
  0x00000000036c4d4c: mov    (%rdx,%r9,1),%rdi
  0x00000000036c4d50: lea    0x1(%rdi),%rdi
  0x00000000036c4d54: mov    %rdi,(%rdx,%r9,1)
  0x00000000036c4d58: jg     0x00000000036c4d73  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)

  0x00000000036c4d5e: movabs $0x1c67e6d0,%rdx   ;   {metadata(method data for {method} {0x000000001c584640} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000036c4d68: incl   0x128(%rdx)
  0x00000000036c4d6e: jmpq   0x00000000036c4d76  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)

  0x00000000036c4d73: mov    %r8,%rbx           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)

  0x00000000036c4d76: mov    0x120(%rsp),%rsi
  0x00000000036c4d7e: movabs $0x1c6c5010,%rdx   ;   {metadata(method data for {method} {0x000000001c5a8b98} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000036c4d88: addq   $0x1,0x118(%rdx)
  0x00000000036c4d90: mov    %rsi,%rdx
  0x00000000036c4d93: mov    $0x0,%r8d
  0x00000000036c4d99: mov    %rax,%r9
  0x00000000036c4d9c: mov    $0x0,%edi
  0x00000000036c4da1: mov    %rbx,%rsi
  0x00000000036c4da4: mov    %rax,0x128(%rsp)
  0x00000000036c4dac: lea    (%r8,%rsi,1),%rcx
  0x00000000036c4db0: cmp    0xc(%rdx),%ecx
  0x00000000036c4db3: ja     0x00000000036c54ef
  0x00000000036c4db9: lea    (%rdi,%rsi,1),%rcx
  0x00000000036c4dbd: cmp    0xc(%r9),%ecx
  0x00000000036c4dc1: ja     0x00000000036c54ef
  0x00000000036c4dc7: test   %esi,%esi
  0x00000000036c4dc9: jl     0x00000000036c54ef
  0x00000000036c4dcf: je     0x00000000036c4e13
  0x00000000036c4dd5: movslq %r8d,%r8
  0x00000000036c4dd8: movslq %edi,%rdi
  0x00000000036c4ddb: lea    0x10(%rdx,%r8,2),%rcx
  0x00000000036c4de0: lea    0x10(%r9,%rdi,2),%rdx
  0x00000000036c4de5: mov    %rsi,%r8
  0x00000000036c4de8: sub    $0x20,%rsp
  0x00000000036c4dec: test   $0xf,%esp
  0x00000000036c4df2: je     0x00000000036c4e0a
  0x00000000036c4df8: sub    $0x8,%rsp
  0x00000000036c4dfc: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00000000036c4e01: add    $0x8,%rsp
  0x00000000036c4e05: jmpq   0x00000000036c4e0f
  0x00000000036c4e0a: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00000000036c4e0f: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)

  0x00000000036c4e13: mov    0x128(%rsp),%rax
  0x00000000036c4e1b: mov    0xf0(%rsp),%rdi
  0x00000000036c4e23: mov    %rax,%r10
  0x00000000036c4e26: shr    $0x3,%r10
  0x00000000036c4e2a: mov    %r10d,0x10(%rdi)
  0x00000000036c4e2e: mov    %rdi,%rax
  0x00000000036c4e31: shr    $0x9,%rax
  0x00000000036c4e35: movabs $0xf32f000,%rdx
  0x00000000036c4e3f: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)

  0x00000000036c4e43: mov    0x10(%rdi),%eax
  0x00000000036c4e46: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)

  0x00000000036c4e4a: mov    0xc(%rdi),%edx     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)

  0x00000000036c4e4d: mov    %rdx,%r8
  0x00000000036c4e50: inc    %r8d
  0x00000000036c4e53: mov    %r8d,0xc(%rdi)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)

  0x00000000036c4e57: mov    $0x3a,%r8d
  0x00000000036c4e5d: movslq %edx,%rsi
  0x00000000036c4e60: cmp    0xc(%rax),%edx     ; implicit exception: dispatches to 0x00000000036c54f9
  0x00000000036c4e63: jae    0x00000000036c5503
  0x00000000036c4e69: mov    %r8w,0x10(%rax,%rsi,2)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)

  0x00000000036c4e6f: lea    0x170(%rsp),%rax
  0x00000000036c4e77: mov    0x8(%rax),%r8
  0x00000000036c4e7b: mov    (%r8),%rdx
  0x00000000036c4e7e: and    $0x7,%rdx
  0x00000000036c4e82: cmp    $0x5,%rdx
  0x00000000036c4e86: je     0x00000000036c4ea3
  0x00000000036c4e8c: mov    (%rax),%rdx
  0x00000000036c4e8f: test   %rdx,%rdx
  0x00000000036c4e92: je     0x00000000036c4ea3
  0x00000000036c4e98: lock cmpxchg %rdx,(%r8)
  0x00000000036c4e9d: jne    0x00000000036c550c  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)

  0x00000000036c4ea3: mov    0xe0(%rsp),%esi
  0x00000000036c4eaa: add    $0x2,%esi
  0x00000000036c4ead: movabs $0x1c6d8a60,%rax   ;   {metadata(method data for {method} {0x000000001c60c2d0} &apos;normalizePrefix&apos; &apos;(Ljava/lang/String;ILjava/lang/StringBuffer;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c4eb7: incl   0x2d0(%rax)
  0x00000000036c4ebd: jmpq   0x00000000036c4ec7  ;*goto
                                                ; - java.io.WinNTFileSystem::normalizePrefix@82 (line 188)

  0x00000000036c4ec2: mov    $0x1,%esi          ;*iload
                                                ; - java.io.WinNTFileSystem::normalizePrefix@129 (line 203)

  0x00000000036c4ec7: mov    %rsi,%rax
  0x00000000036c4eca: add    $0x190,%rsp
  0x00000000036c4ed1: pop    %rbp
  0x00000000036c4ed2: test   %eax,-0x20d4dd8(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036c4ed8: retq                      ;*ireturn
                                                ; - java.io.WinNTFileSystem::normalizePrefix@131 (line 203)

  0x00000000036c4ed9: nopl   0x0(%rax)
  0x00000000036c4ee0: jmpq   0x00000000036c5531  ;   {no_reloc}
  0x00000000036c4ee5: add    %al,(%rax)
  0x00000000036c4ee7: add    %al,(%rax)
  0x00000000036c4ee9: add    %ch,%cl
  0x00000000036c4eeb: rex.WR (bad) 
  0x00000000036c4eed: add    %al,(%rax)         ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)

  0x00000000036c4eef: mov    %rax,%r8
  0x00000000036c4ef2: movabs $0x1c5c2890,%rdx   ;   {metadata(method data for {method} {0x000000001c493d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00000000036c4efc: addq   $0x1,0x148(%rdx)
  0x00000000036c4f04: mov    $0x1,%r8d
  0x00000000036c4f0a: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)

  0x00000000036c4f0d: mov    %rax,0x130(%rsp)
  0x00000000036c4f15: nop
  0x00000000036c4f16: nop
  0x00000000036c4f17: callq  0x00000000035d61a0  ; OopMap{[304]=Oop [240]=Oop [312]=Oop off=7548}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ;   {optimized virtual_call}
  0x00000000036c4f1c: mov    0x130(%rsp),%rax
  0x00000000036c4f24: jmpq   0x00000000036c564d  ;*athrow
                                                ; - java.lang.String::charAt@21 (line 658)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)

  0x00000000036c4f29: nopl   0x0(%rax)
  0x00000000036c4f30: jmpq   0x00000000036c5557  ;   {no_reloc}
  0x00000000036c4f35: add    %al,(%rax)
  0x00000000036c4f37: add    %al,(%rax)
  0x00000000036c4f39: add    %ch,%cl
  0x00000000036c4f3b: and    (%rsi),%al
  0x00000000036c4f3d: add    %al,(%rax)         ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)

  0x00000000036c4f3f: mov    %rax,%rdx
  0x00000000036c4f42: movabs $0x1c5c2890,%rsi   ;   {metadata(method data for {method} {0x000000001c493d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00000000036c4f4c: addq   $0x1,0x148(%rsi)
  0x00000000036c4f54: mov    $0x0,%r8d
  0x00000000036c4f5a: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)

  0x00000000036c4f5d: mov    %rax,0x140(%rsp)
  0x00000000036c4f65: nop
  0x00000000036c4f66: nop
  0x00000000036c4f67: callq  0x00000000035d61a0  ; OopMap{[312]=Oop [240]=Oop [320]=Oop [328]=Oop off=7628}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ;   {optimized virtual_call}
  0x00000000036c4f6c: mov    0x140(%rsp),%rax
  0x00000000036c4f74: jmpq   0x00000000036c564d  ;*athrow
                                                ; - java.lang.String::charAt@21 (line 658)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)

  0x00000000036c4f79: nopl   0x0(%rax)
  0x00000000036c4f80: jmpq   0x00000000036c557d  ;   {no_reloc}
  0x00000000036c4f85: add    %al,(%rax)
  0x00000000036c4f87: add    %al,(%rax)
  0x00000000036c4f89: add    %ch,%cl
  0x00000000036c4f8b: clc    
  0x00000000036c4f8c: add    $0x8b4c0000,%eax   ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)

  0x00000000036c4f91: rorb   $0x90,-0x46(%rax)  ;   {metadata(method data for {method} {0x000000001c493d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00000000036c4f95: sub    %bl,0x0(%rsp,%rbx,1)
  0x00000000036c4f99: add    %al,(%rax)
  0x00000000036c4f9b: add    %cl,-0x7d(%rax)
  0x00000000036c4f9e: (bad)  
  0x00000000036c4f9f: add    %rax,(%rax)
  0x00000000036c4fa2: add    %al,(%rcx)
  0x00000000036c4fa4: mov    %r11,%r8
  0x00000000036c4fa7: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)

  0x00000000036c4faa: mov    %rax,0x150(%rsp)
  0x00000000036c4fb2: nop
  0x00000000036c4fb3: nop
  0x00000000036c4fb4: nop
  0x00000000036c4fb5: nop
  0x00000000036c4fb6: nop
  0x00000000036c4fb7: callq  0x00000000035d61a0  ; OopMap{[328]=Oop [240]=Oop [312]=Oop [336]=Oop off=7708}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ;   {optimized virtual_call}
  0x00000000036c4fbc: mov    0x150(%rsp),%rax
  0x00000000036c4fc4: jmpq   0x00000000036c564d  ;*athrow
                                                ; - java.lang.String::charAt@21 (line 658)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)

  0x00000000036c4fc9: mov    %esi,0xe0(%rsp)
  0x00000000036c4fd0: jmpq   0x00000000036c55a3  ;   {no_reloc}
  0x00000000036c4fd5: add    %al,(%rax)
  0x00000000036c4fd7: add    %al,(%rax)
  0x00000000036c4fd9: add    %ch,%cl
  0x00000000036c4fdb: (bad)  
  0x00000000036c4fdc: add    $0x8b4c0000,%eax   ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)

  0x00000000036c4fe1: rorb   $0x90,-0x46(%rax)  ;   {metadata(method data for {method} {0x000000001c493d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00000000036c4fe5: sub    %bl,0x0(%rsp,%rbx,1)
  0x00000000036c4fe9: add    %al,(%rax)
  0x00000000036c4feb: add    %cl,-0x7d(%rax)
  0x00000000036c4fee: (bad)  
  0x00000000036c4fef: add    %rax,(%rax)
  0x00000000036c4ff2: add    %al,(%rcx)
  0x00000000036c4ff4: mov    0xe0(%rsp),%r8d
  0x00000000036c4ffc: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)

  0x00000000036c4fff: mov    %rax,0x160(%rsp)
  0x00000000036c5007: callq  0x00000000035d61a0  ; OopMap{[312]=Oop [240]=Oop [328]=Oop [352]=Oop off=7788}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ;   {optimized virtual_call}
  0x00000000036c500c: mov    0x160(%rsp),%rax
  0x00000000036c5014: jmpq   0x00000000036c564d  ;*athrow
                                                ; - java.lang.String::charAt@21 (line 658)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)

  0x00000000036c5019: nopl   0x0(%rax)
  0x00000000036c5020: jmpq   0x00000000036c55c9  ;   {no_reloc}
  0x00000000036c5025: add    %al,(%rax)
  0x00000000036c5027: add    %al,(%rax)
  0x00000000036c5029: add    %ch,%cl
  0x00000000036c502b: movsb  %ds:(%rsi),%es:(%rdi)
  0x00000000036c502c: add    $0x8b480000,%eax   ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)

  0x00000000036c5031: rorb   -0x47(%rax)        ;   {metadata(method data for {method} {0x000000001c493d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00000000036c5034: nop
  0x00000000036c5035: sub    %bl,0x0(%rsp,%rbx,1)
  0x00000000036c5039: add    %al,(%rax)
  0x00000000036c503b: add    %cl,-0x7d(%rax)
  0x00000000036c503e: orl    $0x4c010000,0x1(%rax)
  0x00000000036c5045: mov    %esi,%eax
  0x00000000036c5047: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)

  0x00000000036c504a: mov    %esi,0xe0(%rsp)
  0x00000000036c5051: mov    %rax,0x168(%rsp)
  0x00000000036c5059: nop
  0x00000000036c505a: nop
  0x00000000036c505b: nop
  0x00000000036c505c: nop
  0x00000000036c505d: nop
  0x00000000036c505e: nop
  0x00000000036c505f: callq  0x00000000035d61a0  ; OopMap{[328]=Oop [360]=Oop [312]=Oop [240]=Oop off=7876}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ;   {optimized virtual_call}
  0x00000000036c5064: mov    0x168(%rsp),%rax
  0x00000000036c506c: jmpq   0x00000000036c564d  ;*athrow
                                                ; - java.lang.String::charAt@21 (line 658)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)

  0x00000000036c5071: mov    0x2a8(%r15),%rax
  0x00000000036c5078: xor    %r10,%r10
  0x00000000036c507b: mov    %r10,0x2a8(%r15)
  0x00000000036c5082: xor    %r10,%r10
  0x00000000036c5085: mov    %r10,0x2b0(%r15)
  0x00000000036c508c: mov    %rax,%rsi
  0x00000000036c508f: lea    0x170(%rsp),%rax
  0x00000000036c5097: mov    0x8(%rax),%rbx
  0x00000000036c509b: mov    (%rbx),%rdi
  0x00000000036c509e: and    $0x7,%rdi
  0x00000000036c50a2: cmp    $0x5,%rdi
  0x00000000036c50a6: je     0x00000000036c50c3
  0x00000000036c50ac: mov    (%rax),%rdi
  0x00000000036c50af: test   %rdi,%rdi
  0x00000000036c50b2: je     0x00000000036c50c3
  0x00000000036c50b8: lock cmpxchg %rdi,(%rbx)
  0x00000000036c50bd: jne    0x00000000036c55e0  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)

  0x00000000036c50c3: mov    %rsi,%rax
  0x00000000036c50c6: jmpq   0x00000000036c564d  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)

  0x00000000036c50cb: mov    0x2a8(%r15),%rax
  0x00000000036c50d2: xor    %r10,%r10
  0x00000000036c50d5: mov    %r10,0x2a8(%r15)
  0x00000000036c50dc: xor    %r10,%r10
  0x00000000036c50df: mov    %r10,0x2b0(%r15)
  0x00000000036c50e6: mov    %rax,%rsi
  0x00000000036c50e9: lea    0x170(%rsp),%rax
  0x00000000036c50f1: mov    0x8(%rax),%rbx
  0x00000000036c50f5: mov    (%rbx),%rdi
  0x00000000036c50f8: and    $0x7,%rdi
  0x00000000036c50fc: cmp    $0x5,%rdi
  0x00000000036c5100: je     0x00000000036c511d
  0x00000000036c5106: mov    (%rax),%rdi
  0x00000000036c5109: test   %rdi,%rdi
  0x00000000036c510c: je     0x00000000036c511d
  0x00000000036c5112: lock cmpxchg %rdi,(%rbx)
  0x00000000036c5117: jne    0x00000000036c55f6  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)

  0x00000000036c511d: mov    %rsi,%rax
  0x00000000036c5120: jmpq   0x00000000036c564d  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)

  0x00000000036c5125: mov    0x2a8(%r15),%rax
  0x00000000036c512c: xor    %r10,%r10
  0x00000000036c512f: mov    %r10,0x2a8(%r15)
  0x00000000036c5136: xor    %r10,%r10
  0x00000000036c5139: mov    %r10,0x2b0(%r15)
  0x00000000036c5140: mov    %rax,%rsi
  0x00000000036c5143: lea    0x170(%rsp),%rax
  0x00000000036c514b: mov    0x8(%rax),%rbx
  0x00000000036c514f: mov    (%rbx),%rdi
  0x00000000036c5152: and    $0x7,%rdi
  0x00000000036c5156: cmp    $0x5,%rdi
  0x00000000036c515a: je     0x00000000036c5177
  0x00000000036c5160: mov    (%rax),%rdi
  0x00000000036c5163: test   %rdi,%rdi
  0x00000000036c5166: je     0x00000000036c5177
  0x00000000036c516c: lock cmpxchg %rdi,(%rbx)
  0x00000000036c5171: jne    0x00000000036c560c  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)

  0x00000000036c5177: mov    %rsi,%rax
  0x00000000036c517a: jmpq   0x00000000036c564d
  0x00000000036c517f: mov    %rax,0x8(%rsp)
  0x00000000036c5184: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036c518c: callq  0x00000000036919e0  ; OopMap{rdx=Oop [312]=Oop r8=Oop [328]=Oop rdi=Oop [240]=Oop off=8177}
                                                ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ;   {runtime_call}
  0x00000000036c5191: jmpq   0x00000000036c3221
  0x00000000036c5196: callq  0x000000000368d080  ; OopMap{rdx=Oop [312]=Oop r8=Oop [328]=Oop rdi=Oop [240]=Oop off=8187}
                                                ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ;   {runtime_call}
  0x00000000036c519b: mov    %rax,0x8(%rsp)
  0x00000000036c51a0: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036c51a8: callq  0x00000000036919e0  ; OopMap{rdx=Oop [312]=Oop r8=Oop [328]=Oop rdi=Oop [240]=Oop off=8205}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ;   {runtime_call}
  0x00000000036c51ad: jmpq   0x00000000036c3326
  0x00000000036c51b2: callq  0x000000000368d080  ; OopMap{rdx=Oop [312]=Oop r8=Oop [328]=Oop rdi=Oop [240]=Oop rax=Oop off=8215}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ;   {runtime_call}
  0x00000000036c51b7: mov    %rsi,(%rsp)
  0x00000000036c51bb: callq  0x000000000368c9c0  ; OopMap{rdx=Oop [312]=Oop r8=Oop [328]=Oop rdi=Oop [240]=Oop rax=Oop off=8224}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ;   {runtime_call}
  0x00000000036c51c0: mov    %rbx,0x8(%rsp)
  0x00000000036c51c5: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036c51cd: callq  0x00000000036919e0  ; OopMap{rdx=Oop [312]=Oop r8=Oop [328]=Oop rdi=Oop [240]=Oop off=8242}
                                                ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::isSlash@-1 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@16 (line 177)
                                                ;   {runtime_call}
  0x00000000036c51d2: jmpq   0x00000000036c3400
  0x00000000036c51d7: mov    %rax,0x8(%rsp)
  0x00000000036c51dc: movq   $0x19,(%rsp)
  0x00000000036c51e4: callq  0x00000000036919e0  ; OopMap{rdx=Oop [312]=Oop r8=Oop [328]=Oop rdi=Oop [240]=Oop off=8265}
                                                ;*goto
                                                ; - java.io.WinNTFileSystem::normalizePrefix@25 (line 177)
                                                ;   {runtime_call}
  0x00000000036c51e9: jmpq   0x00000000036c3501
  0x00000000036c51ee: callq  0x000000000368d080  ; OopMap{rdx=Oop [312]=Oop r8=Oop [328]=Oop rdi=Oop [240]=Oop off=8275}
                                                ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ;   {runtime_call}
  0x00000000036c51f3: mov    %rax,0x8(%rsp)
  0x00000000036c51f8: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036c5200: callq  0x00000000036919e0  ; OopMap{rdx=Oop [312]=Oop r8=Oop [328]=Oop rdi=Oop [240]=Oop off=8293}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ;   {runtime_call}
  0x00000000036c5205: jmpq   0x00000000036c361f
  0x00000000036c520a: callq  0x000000000368d080  ; OopMap{rdx=Oop [312]=Oop r8=Oop [328]=Oop rdi=Oop [240]=Oop rax=Oop off=8303}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ;   {runtime_call}
  0x00000000036c520f: mov    %r11,0x8(%rsp)
  0x00000000036c5214: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036c521c: callq  0x00000000036919e0  ; OopMap{rdx=Oop [312]=Oop r8=Oop [328]=Oop rdi=Oop [240]=Oop rax=Oop off=8321}
                                                ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::isLetter@-1 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ;   {runtime_call}
  0x00000000036c5221: jmpq   0x00000000036c36fc
  0x00000000036c5226: mov    %rsi,0x8(%rsp)
  0x00000000036c522b: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036c5233: callq  0x00000000036919e0  ; OopMap{rdx=Oop [312]=Oop r8=Oop [328]=Oop rdi=Oop [240]=Oop rax=Oop off=8344}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ;   {runtime_call}
  0x00000000036c5238: jmpq   0x00000000036c3915
  0x00000000036c523d: callq  0x000000000368d080  ; OopMap{rdi=Oop [240]=Oop r8=Oop [328]=Oop rdx=Oop [312]=Oop off=8354}
                                                ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ;   {runtime_call}
  0x00000000036c5242: mov    %rax,0x8(%rsp)
  0x00000000036c5247: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036c524f: callq  0x00000000036919e0  ; OopMap{rdi=Oop [240]=Oop r8=Oop [328]=Oop rdx=Oop [312]=Oop off=8372}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ;   {runtime_call}
  0x00000000036c5254: jmpq   0x00000000036c3ad9
  0x00000000036c5259: callq  0x000000000368d080  ; OopMap{rdi=Oop [240]=Oop r8=Oop [328]=Oop rdx=Oop [312]=Oop rax=Oop off=8382}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ;   {runtime_call}
  0x00000000036c525e: movq   $0x0,(%rsp)
  0x00000000036c5266: callq  0x000000000368c9c0  ; OopMap{rdi=Oop [240]=Oop r8=Oop [328]=Oop rdx=Oop [312]=Oop rax=Oop off=8395}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ;   {runtime_call}
  0x00000000036c526b: mov    %rcx,0x8(%rsp)
  0x00000000036c5270: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036c5278: callq  0x00000000036919e0  ; OopMap{rdi=Oop [240]=Oop r8=Oop [328]=Oop rdx=Oop [312]=Oop rax=Oop off=8413}
                                                ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::isSlash@-1 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@99 (line 192)
                                                ;   {runtime_call}
  0x00000000036c527d: jmpq   0x00000000036c3b90
  0x00000000036c5282: mov    %rbx,0x8(%rsp)
  0x00000000036c5287: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036c528f: callq  0x00000000036919e0  ; OopMap{rax=Oop rdx=Oop [312]=Oop r8=Oop [328]=Oop rdi=Oop [240]=Oop off=8436}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ;   {runtime_call}
  0x00000000036c5294: jmpq   0x00000000036c3d29
  0x00000000036c5299: movq   $0x1,(%rsp)
  0x00000000036c52a1: callq  0x000000000368c9c0  ; OopMap{rax=Oop rdx=Oop [312]=Oop rdi=Oop [240]=Oop off=8454}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ;   {runtime_call}
  0x00000000036c52a6: mov    %r8,0x8(%rsp)
  0x00000000036c52ab: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036c52b3: callq  0x00000000036919e0  ; OopMap{rdx=Oop [312]=Oop rdi=Oop [240]=Oop off=8472}
                                                ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::isSlash@-1 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)
                                                ;   {runtime_call}
  0x00000000036c52b8: jmpq   0x00000000036c3dd3
  0x00000000036c52bd: callq  0x000000000368d080  ; OopMap{rdi=Oop [240]=Oop off=8482}
                                                ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ;   {runtime_call}
  0x00000000036c52c2: mov    %rdi,0x8(%rsp)
  0x00000000036c52c7: mov    %r8,(%rsp)
  0x00000000036c52cb: callq  0x000000000368fce0  ; OopMap{rdi=Oop [240]=Oop [376]=Oop off=8496}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ;   {runtime_call}
  0x00000000036c52d0: jmpq   0x00000000036c400a
  0x00000000036c52d5: mov    %r8,0x8(%rsp)
  0x00000000036c52da: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036c52e2: callq  0x00000000036919e0  ; OopMap{rdi=Oop [240]=Oop [376]=Oop off=8519}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ;   {runtime_call}
  0x00000000036c52e7: jmpq   0x00000000036c403e
  0x00000000036c52ec: mov    %r8,0x8(%rsp)
  0x00000000036c52f1: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036c52f9: callq  0x00000000036919e0  ; OopMap{rdi=Oop [240]=Oop [376]=Oop off=8542}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ;   {runtime_call}
  0x00000000036c52fe: jmpq   0x00000000036c40a4
  0x00000000036c5303: mov    %rdx,0x8(%rsp)
  0x00000000036c5308: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036c5310: callq  0x00000000036919e0  ; OopMap{rdi=Oop [240]=Oop [376]=Oop off=8565}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ;   {runtime_call}
  0x00000000036c5315: jmpq   0x00000000036c40f2
  0x00000000036c531a: callq  0x000000000368d080  ; OopMap{rdi=Oop [240]=Oop rbx=Oop [376]=Oop off=8575}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ;   {runtime_call}
  0x00000000036c531f: mov    %rbx,0x8(%rsp)
  0x00000000036c5324: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036c532c: callq  0x00000000036919e0  ; OopMap{[240]=Oop [232]=Oop [376]=Oop off=8593}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ;   {runtime_call}
  0x00000000036c5331: jmpq   0x00000000036c41c3
  0x00000000036c5336: callq  0x000000000368e200  ; OopMap{[240]=Oop [232]=Oop [376]=Oop off=8603}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ;   {runtime_call}
  0x00000000036c533b: jmpq   0x00000000036c423d
  0x00000000036c5340: mov    %rdx,0x8(%rsp)
  0x00000000036c5345: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036c534d: callq  0x00000000036919e0  ; OopMap{[240]=Oop [232]=Oop rax=Oop [376]=Oop off=8626}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ;   {runtime_call}
  0x00000000036c5352: jmpq   0x00000000036c4286
  0x00000000036c5357: callq  0x00000000035d6620  ; OopMap{[240]=Oop [256]=Oop [376]=Oop off=8636}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ;   {static_call}
  0x00000000036c535c: jmpq   0x00000000036c437c
  0x00000000036c5361: callq  0x000000000368d080  ; OopMap{rdi=Oop [240]=Oop rax=Oop [376]=Oop off=8646}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ;   {runtime_call}
  0x00000000036c5366: callq  0x000000000368d080  ; OopMap{rdi=Oop [240]=Oop rax=Oop [376]=Oop off=8651}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ;   {runtime_call}
  0x00000000036c536b: mov    %r8,(%rsp)
  0x00000000036c536f: callq  0x000000000368c9c0  ; OopMap{rdi=Oop [240]=Oop rax=Oop [376]=Oop off=8660}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ;   {runtime_call}
  0x00000000036c5374: lea    0x170(%rsp),%rax
  0x00000000036c537c: mov    %rax,(%rsp)
  0x00000000036c5380: callq  0x00000000036900e0  ;   {runtime_call}
  0x00000000036c5385: jmpq   0x00000000036c440d
  0x00000000036c538a: callq  0x000000000368d080  ; OopMap{rdi=Oop [240]=Oop off=8687}
                                                ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ;   {runtime_call}
  0x00000000036c538f: mov    %rdi,0x8(%rsp)
  0x00000000036c5394: mov    %r8,(%rsp)
  0x00000000036c5398: callq  0x000000000368fce0  ; OopMap{rdi=Oop [240]=Oop [376]=Oop off=8701}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ;   {runtime_call}
  0x00000000036c539d: jmpq   0x00000000036c456e
  0x00000000036c53a2: mov    %r8,0x8(%rsp)
  0x00000000036c53a7: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036c53af: callq  0x00000000036919e0  ; OopMap{rdi=Oop [240]=Oop [376]=Oop off=8724}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ;   {runtime_call}
  0x00000000036c53b4: jmpq   0x00000000036c45a2
  0x00000000036c53b9: mov    %r8,0x8(%rsp)
  0x00000000036c53be: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036c53c6: callq  0x00000000036919e0  ; OopMap{rdi=Oop [240]=Oop [376]=Oop off=8747}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ;   {runtime_call}
  0x00000000036c53cb: jmpq   0x00000000036c4608
  0x00000000036c53d0: mov    %rdx,0x8(%rsp)
  0x00000000036c53d5: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036c53dd: callq  0x00000000036919e0  ; OopMap{rdi=Oop [240]=Oop [376]=Oop off=8770}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ;   {runtime_call}
  0x00000000036c53e2: jmpq   0x00000000036c4656
  0x00000000036c53e7: callq  0x000000000368d080  ; OopMap{rdi=Oop [240]=Oop rsi=Oop [376]=Oop off=8780}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ;   {runtime_call}
  0x00000000036c53ec: mov    %rbx,0x8(%rsp)
  0x00000000036c53f1: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036c53f9: callq  0x00000000036919e0  ; OopMap{[264]=Oop [240]=Oop [376]=Oop off=8798}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ;   {runtime_call}
  0x00000000036c53fe: jmpq   0x00000000036c4713
  0x00000000036c5403: callq  0x000000000368e200  ; OopMap{[264]=Oop [240]=Oop [376]=Oop off=8808}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ;   {runtime_call}
  0x00000000036c5408: jmpq   0x00000000036c478d
  0x00000000036c540d: mov    %rdx,0x8(%rsp)
  0x00000000036c5412: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036c541a: callq  0x00000000036919e0  ; OopMap{[264]=Oop [240]=Oop rax=Oop [376]=Oop off=8831}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ;   {runtime_call}
  0x00000000036c541f: jmpq   0x00000000036c47d6
  0x00000000036c5424: nop
  0x00000000036c5425: nop
  0x00000000036c5426: nop
  0x00000000036c5427: callq  0x00000000035d6620  ; OopMap{[240]=Oop [280]=Oop [376]=Oop off=8844}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ;   {static_call}
  0x00000000036c542c: jmpq   0x00000000036c48cb
  0x00000000036c5431: callq  0x000000000368d080  ; OopMap{rdi=Oop [240]=Oop rax=Oop [376]=Oop off=8854}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ;   {runtime_call}
  0x00000000036c5436: callq  0x000000000368d080  ; OopMap{rdi=Oop [240]=Oop rax=Oop [376]=Oop off=8859}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ;   {runtime_call}
  0x00000000036c543b: mov    %r8,(%rsp)
  0x00000000036c543f: callq  0x000000000368c9c0  ; OopMap{rdi=Oop [240]=Oop rax=Oop [376]=Oop off=8868}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ;   {runtime_call}
  0x00000000036c5444: lea    0x170(%rsp),%rax
  0x00000000036c544c: mov    %rax,(%rsp)
  0x00000000036c5450: callq  0x00000000036900e0  ;   {runtime_call}
  0x00000000036c5455: jmpq   0x00000000036c495c
  0x00000000036c545a: mov    %rdi,0x8(%rsp)
  0x00000000036c545f: mov    %r8,(%rsp)
  0x00000000036c5463: callq  0x000000000368fce0  ; OopMap{rdi=Oop [240]=Oop [376]=Oop off=8904}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ;   {runtime_call}
  0x00000000036c5468: jmpq   0x00000000036c4ab5
  0x00000000036c546d: mov    %r8,0x8(%rsp)
  0x00000000036c5472: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036c547a: callq  0x00000000036919e0  ; OopMap{rdi=Oop [240]=Oop [376]=Oop off=8927}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ;   {runtime_call}
  0x00000000036c547f: jmpq   0x00000000036c4ae9
  0x00000000036c5484: mov    %r8,0x8(%rsp)
  0x00000000036c5489: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036c5491: callq  0x00000000036919e0  ; OopMap{rdi=Oop [240]=Oop [376]=Oop off=8950}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ;   {runtime_call}
  0x00000000036c5496: jmpq   0x00000000036c4b4f
  0x00000000036c549b: mov    %rdx,0x8(%rsp)
  0x00000000036c54a0: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036c54a8: callq  0x00000000036919e0  ; OopMap{rdi=Oop [240]=Oop [376]=Oop off=8973}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ;   {runtime_call}
  0x00000000036c54ad: jmpq   0x00000000036c4b9d
  0x00000000036c54b2: callq  0x000000000368d080  ; OopMap{rdi=Oop [240]=Oop rsi=Oop [376]=Oop off=8983}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ;   {runtime_call}
  0x00000000036c54b7: mov    %rbx,0x8(%rsp)
  0x00000000036c54bc: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036c54c4: callq  0x00000000036919e0  ; OopMap{[288]=Oop [240]=Oop [376]=Oop off=9001}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ;   {runtime_call}
  0x00000000036c54c9: jmpq   0x00000000036c4c5b
  0x00000000036c54ce: callq  0x000000000368e200  ; OopMap{[288]=Oop [240]=Oop [376]=Oop off=9011}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ;   {runtime_call}
  0x00000000036c54d3: jmpq   0x00000000036c4cd5
  0x00000000036c54d8: mov    %rdx,0x8(%rsp)
  0x00000000036c54dd: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036c54e5: callq  0x00000000036919e0  ; OopMap{[288]=Oop [240]=Oop rax=Oop [376]=Oop off=9034}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ;   {runtime_call}
  0x00000000036c54ea: jmpq   0x00000000036c4d1e
  0x00000000036c54ef: callq  0x00000000035d6620  ; OopMap{[240]=Oop [296]=Oop [376]=Oop off=9044}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ;   {static_call}
  0x00000000036c54f4: jmpq   0x00000000036c4e13
  0x00000000036c54f9: callq  0x000000000368d080  ; OopMap{rdi=Oop [240]=Oop rax=Oop [376]=Oop off=9054}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ;   {runtime_call}
  0x00000000036c54fe: callq  0x000000000368d080  ; OopMap{rdi=Oop [240]=Oop rax=Oop [376]=Oop off=9059}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ;   {runtime_call}
  0x00000000036c5503: mov    %rdx,(%rsp)
  0x00000000036c5507: callq  0x000000000368c9c0  ; OopMap{rdi=Oop [240]=Oop rax=Oop [376]=Oop off=9068}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ;   {runtime_call}
  0x00000000036c550c: lea    0x170(%rsp),%rax
  0x00000000036c5514: mov    %rax,(%rsp)
  0x00000000036c5518: callq  0x00000000036900e0  ;   {runtime_call}
  0x00000000036c551d: jmpq   0x00000000036c4ea3
  0x00000000036c5522: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000036c552c: mov    $0xa050f00,%eax
  0x00000000036c5531: callq  0x0000000003690920  ; OopMap{[240]=Oop [312]=Oop off=9110}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ;   {runtime_call}
  0x00000000036c5536: jmpq   0x00000000036c4ee0
  0x00000000036c553b: mov    %rdx,%rdx
  0x00000000036c553e: callq  0x000000000368d720  ; OopMap{[240]=Oop [312]=Oop off=9123}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ;   {runtime_call}
  0x00000000036c5543: jmpq   0x00000000036c4eef
  0x00000000036c5548: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000036c5552: mov    $0xa050f00,%eax
  0x00000000036c5557: callq  0x0000000003690920  ; OopMap{[328]=Oop [312]=Oop [240]=Oop off=9148}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ;   {runtime_call}
  0x00000000036c555c: jmpq   0x00000000036c4f30
  0x00000000036c5561: mov    %rdx,%rdx
  0x00000000036c5564: callq  0x000000000368d720  ; OopMap{[328]=Oop [312]=Oop [240]=Oop off=9161}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ;   {runtime_call}
  0x00000000036c5569: jmpq   0x00000000036c4f3f
  0x00000000036c556e: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000036c5578: mov    $0xa050f00,%eax
  0x00000000036c557d: callq  0x0000000003690920  ; OopMap{[328]=Oop [240]=Oop [312]=Oop off=9186}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ;   {runtime_call}
  0x00000000036c5582: jmpq   0x00000000036c4f80
  0x00000000036c5587: mov    %rdx,%rdx
  0x00000000036c558a: callq  0x000000000368d720  ; OopMap{[328]=Oop [240]=Oop [312]=Oop off=9199}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ;   {runtime_call}
  0x00000000036c558f: jmpq   0x00000000036c4f8f
  0x00000000036c5594: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000036c559e: mov    $0xa050f00,%eax
  0x00000000036c55a3: callq  0x0000000003690920  ; OopMap{[312]=Oop [240]=Oop [328]=Oop off=9224}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ;   {runtime_call}
  0x00000000036c55a8: jmpq   0x00000000036c4fd0
  0x00000000036c55ad: mov    %rdx,%rdx
  0x00000000036c55b0: callq  0x000000000368d720  ; OopMap{[312]=Oop [240]=Oop [328]=Oop off=9237}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ;   {runtime_call}
  0x00000000036c55b5: jmpq   0x00000000036c4fdf
  0x00000000036c55ba: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000036c55c4: mov    $0xa050f00,%eax
  0x00000000036c55c9: callq  0x0000000003690920  ; OopMap{[240]=Oop [328]=Oop [312]=Oop off=9262}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ;   {runtime_call}
  0x00000000036c55ce: jmpq   0x00000000036c5020
  0x00000000036c55d3: mov    %rdx,%rdx
  0x00000000036c55d6: callq  0x000000000368d720  ; OopMap{[240]=Oop [328]=Oop [312]=Oop off=9275}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ;   {runtime_call}
  0x00000000036c55db: jmpq   0x00000000036c502f
  0x00000000036c55e0: lea    0x170(%rsp),%rax
  0x00000000036c55e8: mov    %rax,(%rsp)
  0x00000000036c55ec: callq  0x00000000036900e0  ;   {runtime_call}
  0x00000000036c55f1: jmpq   0x00000000036c50c3
  0x00000000036c55f6: lea    0x170(%rsp),%rax
  0x00000000036c55fe: mov    %rax,(%rsp)
  0x00000000036c5602: callq  0x00000000036900e0  ;   {runtime_call}
  0x00000000036c5607: jmpq   0x00000000036c511d
  0x00000000036c560c: lea    0x170(%rsp),%rax
  0x00000000036c5614: mov    %rax,(%rsp)
  0x00000000036c5618: callq  0x00000000036900e0  ;   {runtime_call}
  0x00000000036c561d: jmpq   0x00000000036c5177
  0x00000000036c5622: nop
  0x00000000036c5623: nop
  0x00000000036c5624: mov    0x2a8(%r15),%rax
  0x00000000036c562b: movabs $0x0,%r10
  0x00000000036c5635: mov    %r10,0x2a8(%r15)
  0x00000000036c563c: movabs $0x0,%r10
  0x00000000036c5646: mov    %r10,0x2b0(%r15)
  0x00000000036c564d: add    $0x190,%rsp
  0x00000000036c5654: pop    %rbp
  0x00000000036c5655: jmpq   0x000000000368c620  ;   {runtime_call}
  0x00000000036c565a: hlt    
  0x00000000036c565b: hlt    
  0x00000000036c565c: hlt    
  0x00000000036c565d: hlt    
  0x00000000036c565e: hlt    
  0x00000000036c565f: hlt    
[Stub Code]
  0x00000000036c5660: nop                       ;   {no_reloc}
  0x00000000036c5661: nop
  0x00000000036c5662: nop
  0x00000000036c5663: nop
  0x00000000036c5664: nop
  0x00000000036c5665: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036c566f: jmpq   0x00000000036c566f  ;   {runtime_call}
  0x00000000036c5674: nop
  0x00000000036c5675: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036c567f: jmpq   0x00000000036c567f  ;   {runtime_call}
  0x00000000036c5684: nop
  0x00000000036c5685: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036c568f: jmpq   0x00000000036c568f  ;   {runtime_call}
  0x00000000036c5694: nop
  0x00000000036c5695: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036c569f: jmpq   0x00000000036c569f  ;   {runtime_call}
  0x00000000036c56a4: nop
  0x00000000036c56a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036c56af: jmpq   0x00000000036c56af  ;   {runtime_call}
  0x00000000036c56b4: nop
  0x00000000036c56b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036c56bf: jmpq   0x00000000036c56bf  ;   {runtime_call}
  0x00000000036c56c4: nop
  0x00000000036c56c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036c56cf: jmpq   0x00000000036c56cf  ;   {runtime_call}
  0x00000000036c56d4: nop
  0x00000000036c56d5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036c56df: jmpq   0x00000000036c56df  ;   {runtime_call}
  0x00000000036c56e4: nop
  0x00000000036c56e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036c56ef: jmpq   0x00000000036c56ef  ;   {runtime_call}
  0x00000000036c56f4: nop
  0x00000000036c56f5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036c56ff: jmpq   0x00000000036c56ff  ;   {runtime_call}
  0x00000000036c5704: nop
  0x00000000036c5705: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036c570f: jmpq   0x00000000036c570f  ;   {runtime_call}
[Exception Handler]
  0x00000000036c5714: callq  0x000000000368f1a0  ;   {runtime_call}
  0x00000000036c5719: mov    %rsp,-0x28(%rsp)
  0x00000000036c571e: sub    $0x80,%rsp
  0x00000000036c5725: mov    %rax,0x78(%rsp)
  0x00000000036c572a: mov    %rcx,0x70(%rsp)
  0x00000000036c572f: mov    %rdx,0x68(%rsp)
  0x00000000036c5734: mov    %rbx,0x60(%rsp)
  0x00000000036c5739: mov    %rbp,0x50(%rsp)
  0x00000000036c573e: mov    %rsi,0x48(%rsp)
  0x00000000036c5743: mov    %rdi,0x40(%rsp)
  0x00000000036c5748: mov    %r8,0x38(%rsp)
  0x00000000036c574d: mov    %r9,0x30(%rsp)
  0x00000000036c5752: mov    %r10,0x28(%rsp)
  0x00000000036c5757: mov    %r11,0x20(%rsp)
  0x00000000036c575c: mov    %r12,0x18(%rsp)
  0x00000000036c5761: mov    %r13,0x10(%rsp)
  0x00000000036c5766: mov    %r14,0x8(%rsp)
  0x00000000036c576b: mov    %r15,(%rsp)
  0x00000000036c576f: movabs $0x553ec320,%rcx   ;   {external_word}
  0x00000000036c5779: movabs $0x36c5719,%rdx    ;   {internal_word}
  0x00000000036c5783: mov    %rsp,%r8
  0x00000000036c5786: and    $0xfffffffffffffff0,%rsp
  0x00000000036c578a: callq  0x00000000550a41d0  ;   {runtime_call}
  0x00000000036c578f: hlt    
[Deopt Handler Code]
  0x00000000036c5790: movabs $0x36c5790,%r10    ;   {section_word}
  0x00000000036c579a: push   %r10
  0x00000000036c579c: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036c57a1: hlt    
  0x00000000036c57a2: hlt    
  0x00000000036c57a3: hlt    
  0x00000000036c57a4: hlt    
  0x00000000036c57a5: hlt    
  0x00000000036c57a6: hlt    
  0x00000000036c57a7: hlt    
<nmethod compile_id='91' compiler='C1' level='3' entry='0x00000000036c31a0' size='17488' address='0x00000000036c2e10' relocation_offset='288' insts_offset='912' stub_offset='10320' scopes_data_offset='10728' scopes_pcs_offset='13312' dependencies_offset='16832' handler_table_offset='16840' nul_chk_table_offset='17344' method='java/io/WinNTFileSystem normalizePrefix (Ljava/lang/String;ILjava/lang/StringBuffer;)I' bytes='132' count='769' backedge_count='769' iicount='769' stamp='1.917'/>
<writer thread='17528'/>
<task_queued compile_id='104' method='java/nio/Buffer position ()I' bytes='5' count='1664' iicount='1664' level='1' stamp='1.917' comment='tiered' hot_count='1664'/>
<writer thread='7332'/>
<sweeper state='finished' traversals='1'  total_blobs='324' nmethods='54' adapters='181' free_code_cache='250380160' stamp='1.917'/>
<writer thread='16536'/>
Decoding compiled method 0x00000000036cea90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c4968d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/util/Locale&apos;
  #           [sp+0x80]  (sp of caller)
  0x00000000036cec40: mov    0x8(%rdx),%r10d
  0x00000000036cec44: shl    $0x3,%r10
  0x00000000036cec48: cmp    %r10,%rax
  0x00000000036cec4b: jne    0x00000000035d5f60  ;   {runtime_call}
  0x00000000036cec51: data16 xchg %ax,%ax
  0x00000000036cec54: nopl   0x0(%rax,%rax,1)
  0x00000000036cec5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000036cec60: mov    %eax,-0x6000(%rsp)
  0x00000000036cec67: push   %rbp
  0x00000000036cec68: sub    $0x70,%rsp         ;*synchronization entry
                                                ; - java.lang.String::toLowerCase@-1 (line 2562)

  0x00000000036cec6c: mov    %rdx,0x20(%rsp)
  0x00000000036cec71: mov    %r8,0x50(%rsp)
  0x00000000036cec76: test   %r8,%r8
  0x00000000036cec79: je     0x00000000036cf34d  ;*ifnonnull
                                                ; - java.lang.String::toLowerCase@1 (line 2562)

  0x00000000036cec7f: mov    0xc(%rdx),%ebp     ;*getfield value
                                                ; - java.lang.String::toLowerCase@13 (line 2567)

  0x00000000036cec82: mov    0xc(%r12,%rbp,8),%r10d  ;*arraylength
                                                ; - java.lang.String::toLowerCase@16 (line 2567)
                                                ; implicit exception: dispatches to 0x00000000036cf445
  0x00000000036cec87: test   %r10d,%r10d
  0x00000000036cec8a: jle    0x00000000036ced5a  ;*if_icmpge
                                                ; - java.lang.String::toLowerCase@22 (line 2571)

  0x00000000036cec90: xor    %r8d,%r8d
  0x00000000036cec93: mov    %r8d,0x40(%rsp)
  0x00000000036cec98: nopl   0x0(%rax,%rax,1)   ;*aload_0
                                                ; - java.lang.String::toLowerCase@25 (line 2572)

  0x00000000036ceca0: mov    0xc(%r12,%rbp,8),%r8d  ; implicit exception: dispatches to 0x00000000036cf439
  0x00000000036ceca5: mov    0x40(%rsp),%r11d
  0x00000000036cecaa: cmp    %r8d,%r11d
  0x00000000036cecad: jae    0x00000000036cf301
  0x00000000036cecb3: lea    (%r12,%rbp,8),%r11
  0x00000000036cecb7: mov    0x40(%rsp),%r9d
  0x00000000036cecbc: movzwl 0x10(%r11,%r9,2),%r9d  ;*caload
                                                ; - java.lang.String::toLowerCase@30 (line 2572)

  0x00000000036cecc2: cmp    $0xd800,%r9d
  0x00000000036cecc9: jge    0x00000000036cf331  ;*if_icmplt
                                                ; - java.lang.String::toLowerCase@37 (line 2573)

  0x00000000036ceccf: mov    %r9d,%r8d
  0x00000000036cecd2: shr    $0x8,%r8d
  0x00000000036cecd6: test   %r8d,%r8d
  0x00000000036cecd9: movabs $0x76c1a97d0,%rdx  ;   {oop(a &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00000000036cece3: movabs $0x76c2e8f38,%r11  ;   {oop(a &apos;java/lang/CharacterData00&apos;)}
  0x00000000036ceced: cmovne %r11,%rdx          ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ; - java.lang.String::toLowerCase@82 (line 2581)

  0x00000000036cecf1: mov    0x8(%rdx),%r11d
  0x00000000036cecf5: cmp    $0xf8007287,%r11d  ;   {metadata(&apos;java/lang/CharacterDataLatin1&apos;)}
  0x00000000036cecfc: jne    0x00000000036cf129  ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ; - java.lang.String::toLowerCase@82 (line 2581)

  0x00000000036ced02: cmp    $0x100,%r9d
  0x00000000036ced09: jae    0x00000000036cf311
  0x00000000036ced0f: movabs $0x76c1a97e0,%r11  ;   {oop([I)}
  0x00000000036ced19: mov    0x10(%r11,%r9,4),%r8d  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ; - java.lang.String::toLowerCase@82 (line 2581)

  0x00000000036ced1e: test   $0x20000,%r8d
  0x00000000036ced25: jne    0x00000000036cf104  ;*ifeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@12 (line 136)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ; - java.lang.String::toLowerCase@82 (line 2581)

  0x00000000036ced2b: mov    %r9d,%r8d          ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ; - java.lang.String::toLowerCase@82 (line 2581)

  0x00000000036ced2e: mov    0x20(%rsp),%r11
  0x00000000036ced33: mov    0xc(%r11),%ebp     ;*getfield value
                                                ; - java.lang.String::toLowerCase@108 (line 2595)

  0x00000000036ced37: movzwl %r8w,%r8d
  0x00000000036ced3b: cmp    %r8d,%r9d
  0x00000000036ced3e: jne    0x00000000036cee56  ;*if_icmpeq
                                                ; - java.lang.String::toLowerCase@85 (line 2581)

  0x00000000036ced44: mov    0x40(%rsp),%r11d
  0x00000000036ced49: inc    %r11d              ;*iinc
                                                ; - java.lang.String::toLowerCase@91 (line 2584)

  0x00000000036ced4c: mov    %r11d,0x40(%rsp)
  0x00000000036ced51: cmp    %r10d,%r11d
  0x00000000036ced54: jl     0x00000000036ceca0  ;*if_icmpge
                                                ; - java.lang.String::toLowerCase@22 (line 2571)

  0x00000000036ced5a: mov    0x20(%rsp),%rbp
  0x00000000036ced5f: jmpq   0x00000000036cee47  ;*if_icmpge
                                                ; - java.lang.String::toLowerCase@159 (line 2604)

  0x00000000036ced64: mov    0x60(%r15),%rbp
  0x00000000036ced68: mov    %rbp,%r8
  0x00000000036ced6b: add    $0x18,%r8
  0x00000000036ced6f: cmp    0x70(%r15),%r8
  0x00000000036ced73: jae    0x00000000036cf1b8
  0x00000000036ced79: mov    %r8,0x60(%r15)
  0x00000000036ced7d: prefetchw 0xc0(%r8)
  0x00000000036ced85: mov    $0xf80002da,%r8d   ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000000036ced8b: shl    $0x3,%r8
  0x00000000036ced8f: mov    0xa8(%r8),%r8
  0x00000000036ced96: mov    %r8,0x0(%rbp)
  0x00000000036ced9a: movl   $0xf80002da,0x8(%rbp)  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000000036ceda1: mov    %r12d,0xc(%rbp)
  0x00000000036ceda5: mov    %r12,0x10(%rbp)    ;*new  ; - java.lang.String::toLowerCase@424 (line 2647)

  0x00000000036ceda9: cmp    $0x80000,%r10d
  0x00000000036cedb0: ja     0x00000000036cf1e6
  0x00000000036cedb6: mov    0x60(%r15),%rax
  0x00000000036cedba: mov    %rax,%r8
  0x00000000036cedbd: mov    0x30(%rsp),%r9
  0x00000000036cedc2: add    %r9,%r8
  0x00000000036cedc5: cmp    0x70(%r15),%r8
  0x00000000036cedc9: jae    0x00000000036cf1e6
  0x00000000036cedcf: mov    %r8,0x60(%r15)
  0x00000000036cedd3: prefetchw 0xc0(%r8)
  0x00000000036ceddb: movq   $0x1,(%rax)
  0x00000000036cede2: prefetchw 0x100(%r8)
  0x00000000036cedea: movl   $0xf8000041,0x8(%rax)  ;   {metadata({type array char})}
  0x00000000036cedf1: mov    %r10d,0xc(%rax)
  0x00000000036cedf5: prefetchw 0x140(%r8)
  0x00000000036cedfd: prefetchw 0x180(%r8)
  0x00000000036cee05: mov    %rax,%rdx
  0x00000000036cee08: add    $0x10,%rdx
  0x00000000036cee0c: mov    0x30(%rsp),%r8
  0x00000000036cee11: add    $0xfffffffffffffff0,%r8
  0x00000000036cee15: mov    %rax,%r13
  0x00000000036cee18: shr    $0x3,%r13
  0x00000000036cee1c: shr    $0x3,%r8
  0x00000000036cee20: mov    0x38(%rsp),%rcx
  0x00000000036cee25: movabs $0x35e2ca0,%r10
  0x00000000036cee2f: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.String::toLowerCase@435 (line 2647)

  0x00000000036cee32: mov    %r13d,0xc(%rbp)
  0x00000000036cee36: mov    %rbp,%r10
  0x00000000036cee39: shr    $0x9,%r10
  0x00000000036cee3d: mov    $0xf32f000,%r11d
  0x00000000036cee43: mov    %r12b,(%r11,%r10,1)  ;*arraylength
                                                ; - java.lang.String::toLowerCase@16 (line 2567)

  0x00000000036cee47: mov    %rbp,%rax
  0x00000000036cee4a: add    $0x70,%rsp
  0x00000000036cee4e: pop    %rbp
  0x00000000036cee4f: test   %eax,-0x20dee55(%rip)        # 0x00000000015f0000
                                                ;   {poll_return}
  0x00000000036cee55: retq   
  0x00000000036cee56: movslq %r10d,%rcx
  0x00000000036cee59: shl    %rcx
  0x00000000036cee5c: add    $0x17,%rcx
  0x00000000036cee60: mov    %rcx,%r11
  0x00000000036cee63: and    $0xfffffffffffffff8,%r11
  0x00000000036cee67: mov    %r11,0x30(%rsp)
  0x00000000036cee6c: cmp    $0x80000,%r10d
  0x00000000036cee73: ja     0x00000000036cf15e
  0x00000000036cee79: mov    0x60(%r15),%r11
  0x00000000036cee7d: mov    %r11,%r8
  0x00000000036cee80: mov    0x30(%rsp),%r9
  0x00000000036cee85: add    %r9,%r8
  0x00000000036cee88: cmp    0x70(%r15),%r8
  0x00000000036cee8c: jae    0x00000000036cf15e
  0x00000000036cee92: mov    %r8,0x60(%r15)
  0x00000000036cee96: prefetchw 0xc0(%r8)
  0x00000000036cee9e: movq   $0x1,(%r11)
  0x00000000036ceea5: prefetchw 0x100(%r8)
  0x00000000036ceead: movl   $0xf8000041,0x8(%r11)  ;   {metadata({type array char})}
  0x00000000036ceeb5: mov    %r10d,0xc(%r11)
  0x00000000036ceeb9: prefetchw 0x140(%r8)
  0x00000000036ceec1: mov    %r11,%rdi
  0x00000000036ceec4: add    $0x10,%rdi
  0x00000000036ceec8: prefetchw 0x180(%r8)
  0x00000000036ceed0: shr    $0x3,%rcx
  0x00000000036ceed4: add    $0xfffffffffffffffe,%rcx
  0x00000000036ceed8: xor    %rax,%rax
  0x00000000036ceedb: shl    $0x3,%rcx
  0x00000000036ceedf: rep rex.W stos %al,%es:(%rdi)  ;*newarray
                                                ; - java.lang.String::toLowerCase@100 (line 2590)

  0x00000000036ceee2: mov    0xc(%r12,%rbp,8),%r8d  ; implicit exception: dispatches to 0x00000000036cf451
  0x00000000036ceee7: mov    %r11,%r9
  0x00000000036ceeea: add    $0x10,%r9          ;*invokestatic arraycopy
                                                ; - java.lang.String::toLowerCase@116 (line 2595)

  0x00000000036ceeee: mov    %r9,0x38(%rsp)
  0x00000000036ceef3: lea    (%r12,%rbp,8),%rdx  ;*getfield value
                                                ; - java.lang.String::toLowerCase@108 (line 2595)

  0x00000000036ceef7: cmp    0x40(%rsp),%r8d
  0x00000000036ceefc: jb     0x00000000036cf36e
  0x00000000036cef02: cmp    0x40(%rsp),%r10d
  0x00000000036cef07: jb     0x00000000036cf36e
  0x00000000036cef0d: mov    0x40(%rsp),%r8d
  0x00000000036cef12: test   %r8d,%r8d
  0x00000000036cef15: jle    0x00000000036cf365
  0x00000000036cef1b: mov    %r11,%rbx
  0x00000000036cef1e: mov    %r10d,%r13d
  0x00000000036cef21: lea    0x10(%r12,%rbp,8),%rcx
  0x00000000036cef26: movslq 0x40(%rsp),%r8
  0x00000000036cef2b: mov    %r9,%rdx
  0x00000000036cef2e: movabs $0x35e2980,%r10
  0x00000000036cef38: callq  *%r10
  0x00000000036cef3b: mov    %r13d,%r10d
  0x00000000036cef3e: mov    %rbx,%r11          ;*invokestatic arraycopy
                                                ; - java.lang.String::toLowerCase@116 (line 2595)

  0x00000000036cef41: mov    0x50(%rsp),%r8
  0x00000000036cef46: mov    0x10(%r8),%r9d     ;*getfield baseLocale
                                                ; - java.util.Locale::getLanguage@1 (line 1076)
                                                ; - java.lang.String::toLowerCase@120 (line 2597)

  0x00000000036cef4a: mov    0x10(%r12,%r9,8),%ebp  ;*getfield language
                                                ; - sun.util.locale.BaseLocale::getLanguage@1 (line 92)
                                                ; - java.util.Locale::getLanguage@4 (line 1076)
                                                ; - java.lang.String::toLowerCase@120 (line 2597)
                                                ; implicit exception: dispatches to 0x00000000036cf461
  0x00000000036cef4f: cmp    $0xed835497,%ebp   ;   {oop(&quot;tr&quot;)}
  0x00000000036cef55: je     0x00000000036cf3b1  ;*if_acmpeq
                                                ; - java.lang.String::toLowerCase@129 (line 2598)

  0x00000000036cef5b: cmp    $0xed83549d,%ebp   ;   {oop(&quot;az&quot;)}
  0x00000000036cef61: je     0x00000000036cf3c9  ;*if_acmpeq
                                                ; - java.lang.String::toLowerCase@136 (line 2598)

  0x00000000036cef67: cmp    $0xed8354a3,%ebp   ;   {oop(&quot;lt&quot;)}
  0x00000000036cef6d: je     0x00000000036cf3e1  ;*if_acmpne
                                                ; - java.lang.String::toLowerCase@143 (line 2598)

  0x00000000036cef73: mov    0x40(%rsp),%r8d
  0x00000000036cef78: cmp    %r10d,%r8d
  0x00000000036cef7b: jge    0x00000000036ced64  ;*if_icmpge
                                                ; - java.lang.String::toLowerCase@159 (line 2604)

  0x00000000036cef81: cmp    %r10d,%r8d
  0x00000000036cef84: jae    0x00000000036cef91
  0x00000000036cef86: mov    %r10d,%r9d
  0x00000000036cef89: dec    %r9d
  0x00000000036cef8c: cmp    %r10d,%r9d
  0x00000000036cef8f: jb     0x00000000036ceff3
  0x00000000036cef91: mov    $0xffffff86,%edx
  0x00000000036cef96: mov    0x20(%rsp),%rbp
  0x00000000036cef9b: mov    %r10d,0x20(%rsp)
  0x00000000036cefa0: mov    %r11,0x28(%rsp)
  0x00000000036cefa5: xchg   %ax,%ax
  0x00000000036cefa7: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [40]=Oop [80]=Oop off=876}
                                                ;*aload_0
                                                ; - java.lang.String::toLowerCase@162 (line 2605)
                                                ;   {runtime_call}
  0x00000000036cefac: int3                      ;*aload_0
                                                ; - java.lang.String::toLowerCase@162 (line 2605)

  0x00000000036cefad: shl    $0x5,%r9d
  0x00000000036cefb1: sar    $0x17,%r9d
  0x00000000036cefb5: add    %r8d,%r9d          ;*iadd
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@35 (line 139)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.String::toLowerCase@243 (line 2618)

  0x00000000036cefb8: mov    %r9d,%r8d
  0x00000000036cefbb: nopl   0x0(%rax,%rax,1)   ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6338)
                                                ; - java.lang.String::toLowerCase@243 (line 2618)

  0x00000000036cefc0: cmp    $0xffffffff,%r8d
  0x00000000036cefc4: je     0x00000000036cf2c1  ;*if_icmpeq
                                                ; - java.lang.String::toLowerCase@251 (line 2620)

  0x00000000036cefca: cmp    $0x10000,%r8d
  0x00000000036cefd1: jge    0x00000000036cf2e1  ;*if_icmplt
                                                ; - java.lang.String::toLowerCase@258 (line 2620)

  0x00000000036cefd7: mov    0x40(%rsp),%r9d
  0x00000000036cefdc: mov    %r8w,0x10(%r11,%r9,2)  ;*castore
                                                ; - java.lang.String::toLowerCase@413 (line 2644)

  0x00000000036cefe2: inc    %r9d               ;*iadd
                                                ; - java.lang.String::toLowerCase@418 (line 2604)

  0x00000000036cefe5: mov    %r9d,0x40(%rsp)
  0x00000000036cefea: cmp    %r10d,%r9d
  0x00000000036cefed: jge    0x00000000036ced64  ;*aload_0
                                                ; - java.lang.String::toLowerCase@162 (line 2605)

  0x00000000036ceff3: mov    0x20(%rsp),%r8
  0x00000000036ceff8: mov    0xc(%r8),%r9d      ;*getfield value
                                                ; - java.lang.String::toLowerCase@163 (line 2605)

  0x00000000036ceffc: mov    0xc(%r12,%r9,8),%r8d  ; implicit exception: dispatches to 0x00000000036cf42d
  0x00000000036cf001: mov    0x40(%rsp),%ecx
  0x00000000036cf005: cmp    %r8d,%ecx
  0x00000000036cf008: jae    0x00000000036cf209
  0x00000000036cf00e: lea    (%r12,%r9,8),%r8
  0x00000000036cf012: movzwl 0x10(%r8,%rcx,2),%r8d  ;*caload
                                                ; - java.lang.String::toLowerCase@168 (line 2605)

  0x00000000036cf018: cmp    $0xd800,%r8d
  0x00000000036cf01f: jge    0x00000000036cf261  ;*if_icmplt
                                                ; - java.lang.String::toLowerCase@176 (line 2606)

  0x00000000036cf025: cmp    $0x3a3,%r8d
  0x00000000036cf02c: je     0x00000000036cf281  ;*if_icmpeq
                                                ; - java.lang.String::toLowerCase@218 (line 2613)

  0x00000000036cf032: cmp    $0x130,%r8d
  0x00000000036cf039: je     0x00000000036cf2a1  ;*if_icmpne
                                                ; - java.lang.String::toLowerCase@226 (line 2613)

  0x00000000036cf03f: mov    %r8d,%ecx
  0x00000000036cf042: shr    $0x8,%ecx
  0x00000000036cf045: test   %ecx,%ecx
  0x00000000036cf047: movabs $0x76c1a97d0,%rdx  ;   {oop(a &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00000000036cf051: movabs $0x76c2e8f38,%r9   ;   {oop(a &apos;java/lang/CharacterData00&apos;)}
  0x00000000036cf05b: cmovne %r9,%rdx           ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ; - java.lang.String::toLowerCase@243 (line 2618)

  0x00000000036cf05f: mov    0x8(%rdx),%r9d
  0x00000000036cf063: cmp    $0xf8007287,%r9d   ;   {metadata(&apos;java/lang/CharacterDataLatin1&apos;)}
  0x00000000036cf06a: jne    0x00000000036cf0dd  ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.String::toLowerCase@243 (line 2618)

  0x00000000036cf06c: cmp    $0x100,%r8d
  0x00000000036cf073: jae    0x00000000036cf229
  0x00000000036cf079: movabs $0x76c1a97e0,%r9   ;   {oop([I)}
  0x00000000036cf083: mov    0x10(%r9,%r8,4),%r9d  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.String::toLowerCase@243 (line 2618)

  0x00000000036cf088: test   $0x20000,%r9d
  0x00000000036cf08f: je     0x00000000036cefc0  ;*ifeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@12 (line 136)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.String::toLowerCase@243 (line 2618)

  0x00000000036cf095: mov    %r9d,%ebp
  0x00000000036cf098: and    $0x7fc0000,%ebp    ;*iand
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@18 (line 136)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.String::toLowerCase@243 (line 2618)

  0x00000000036cf09e: cmp    $0x7fc0000,%ebp
  0x00000000036cf0a4: jne    0x00000000036cefad  ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.String::toLowerCase@243 (line 2618)

  0x00000000036cf0aa: mov    $0xffffff65,%edx
  0x00000000036cf0af: mov    %r10d,0x28(%rsp)
  0x00000000036cf0b4: mov    %r11,0x30(%rsp)
  0x00000000036cf0b9: mov    %rax,-0x8(%rsp)
  0x00000000036cf0be: mov    0x40(%rsp),%eax
  0x00000000036cf0c2: mov    %eax,0x2c(%rsp)
  0x00000000036cf0c6: mov    -0x8(%rsp),%rax
  0x00000000036cf0cb: mov    %r8d,0x3c(%rsp)
  0x00000000036cf0d0: mov    %r9d,0x40(%rsp)
  0x00000000036cf0d5: xchg   %ax,%ax
  0x00000000036cf0d7: callq  0x00000000035d57a0  ; OopMap{[32]=Oop [48]=Oop [80]=Oop off=1180}
                                                ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.String::toLowerCase@243 (line 2618)
                                                ;   {runtime_call}
  0x00000000036cf0dc: int3                      ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.String::toLowerCase@243 (line 2618)

  0x00000000036cf0dd: mov    %r11,0x28(%rsp)
  0x00000000036cf0e2: mov    %r10d,%ebp
  0x00000000036cf0e5: movabs $0xffffffffffffffff,%rax
  0x00000000036cf0ef: callq  0x00000000035d63e0  ; OopMap{[32]=Oop [40]=Oop [56]=Derived_oop_[40] [80]=Oop off=1204}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.String::toLowerCase@243 (line 2618)
                                                ;   {virtual_call}
  0x00000000036cf0f4: mov    %eax,%r8d
  0x00000000036cf0f7: mov    %ebp,%r10d
  0x00000000036cf0fa: mov    0x28(%rsp),%r11
  0x00000000036cf0ff: jmpq   0x00000000036cefc0
  0x00000000036cf104: mov    %r8d,%ebp
  0x00000000036cf107: and    $0x7fc0000,%ebp    ;*iand
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@18 (line 136)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ; - java.lang.String::toLowerCase@82 (line 2581)

  0x00000000036cf10d: cmp    $0x7fc0000,%ebp
  0x00000000036cf113: je     0x00000000036cf3f9  ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ; - java.lang.String::toLowerCase@82 (line 2581)

  0x00000000036cf119: shl    $0x5,%r8d
  0x00000000036cf11d: sar    $0x17,%r8d
  0x00000000036cf121: add    %r9d,%r8d          ;*iadd
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@35 (line 139)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ; - java.lang.String::toLowerCase@82 (line 2581)

  0x00000000036cf124: jmpq   0x00000000036ced2e
  0x00000000036cf129: mov    %r9d,%r8d
  0x00000000036cf12c: mov    0x20(%rsp),%rbp
  0x00000000036cf131: mov    %r10d,0x3c(%rsp)
  0x00000000036cf136: mov    %r9d,0x44(%rsp)
  0x00000000036cf13b: xchg   %ax,%ax
  0x00000000036cf13d: movabs $0xffffffffffffffff,%rax
  0x00000000036cf147: callq  0x00000000035d63e0  ; OopMap{rbp=Oop [32]=Oop [80]=Oop off=1292}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ; - java.lang.String::toLowerCase@82 (line 2581)
                                                ;   {virtual_call}
  0x00000000036cf14c: mov    %eax,%r8d
  0x00000000036cf14f: mov    0x3c(%rsp),%r10d
  0x00000000036cf154: mov    0x44(%rsp),%r9d
  0x00000000036cf159: jmpq   0x00000000036ced2e
  0x00000000036cf15e: rex.W pushq 0x30(%rsp)
  0x00000000036cf163: rex.W popq 0x38(%rsp)
  0x00000000036cf168: mov    %r10d,0x30(%rsp)
  0x00000000036cf16d: rex.W pushq 0x20(%rsp)
  0x00000000036cf172: rex.W popq 0x28(%rsp)
  0x00000000036cf177: rex.W pushq 0x50(%rsp)
  0x00000000036cf17c: rex.W popq 0x20(%rsp)
  0x00000000036cf181: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000000036cf18b: mov    %r10d,%r8d
  0x00000000036cf18e: nop
  0x00000000036cf18f: callq  0x0000000003694f60  ; OopMap{rbp=NarrowOop [32]=Oop [40]=Oop [80]=Oop off=1364}
                                                ;*newarray
                                                ; - java.lang.String::toLowerCase@100 (line 2590)
                                                ;   {runtime_call}
  0x00000000036cf194: rex.W pushq 0x28(%rsp)
  0x00000000036cf199: rex.W popq 0x20(%rsp)
  0x00000000036cf19e: mov    0x30(%rsp),%r8d
  0x00000000036cf1a3: rex.W pushq 0x38(%rsp)
  0x00000000036cf1a8: rex.W popq 0x30(%rsp)
  0x00000000036cf1ad: mov    %r8d,%r10d
  0x00000000036cf1b0: mov    %rax,%r11
  0x00000000036cf1b3: jmpq   0x00000000036ceee2  ;*if_icmpge
                                                ; - java.lang.String::toLowerCase@159 (line 2604)

  0x00000000036cf1b8: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000000036cf1c2: mov    %r10d,0x28(%rsp)
  0x00000000036cf1c7: mov    %r11,0x40(%rsp)
  0x00000000036cf1cc: data16 xchg %ax,%ax
  0x00000000036cf1cf: callq  0x0000000003694e60  ; OopMap{[56]=Derived_oop_[64] [64]=Oop off=1428}
                                                ;*new  ; - java.lang.String::toLowerCase@424 (line 2647)
                                                ;   {runtime_call}
  0x00000000036cf1d4: mov    %rax,%rbp
  0x00000000036cf1d7: mov    0x28(%rsp),%r10d
  0x00000000036cf1dc: mov    0x40(%rsp),%r11
  0x00000000036cf1e1: jmpq   0x00000000036ceda9  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.String::toLowerCase@435 (line 2647)

  0x00000000036cf1e6: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000000036cf1f0: mov    %r11,0x48(%rsp)
  0x00000000036cf1f5: mov    %r10d,0x28(%rsp)
  0x00000000036cf1fa: mov    %r10d,%r8d
  0x00000000036cf1fd: xchg   %ax,%ax
  0x00000000036cf1ff: callq  0x0000000003693360  ; OopMap{rbp=Oop [56]=Derived_oop_[72] [72]=Oop off=1476}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.String::toLowerCase@435 (line 2647)
                                                ;   {runtime_call}
  0x00000000036cf204: jmpq   0x00000000036cee05
  0x00000000036cf209: mov    $0xffffffe4,%edx
  0x00000000036cf20e: mov    0x20(%rsp),%rbp
  0x00000000036cf213: mov    %r10d,0x20(%rsp)
  0x00000000036cf218: mov    %r11,0x28(%rsp)
  0x00000000036cf21d: mov    %r9d,0x30(%rsp)
  0x00000000036cf222: nop
  0x00000000036cf223: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [40]=Oop [48]=NarrowOop [80]=Oop off=1512}
                                                ;*caload
                                                ; - java.lang.String::toLowerCase@168 (line 2605)
                                                ;   {runtime_call}
  0x00000000036cf228: int3                      ;*caload
                                                ; - java.lang.String::toLowerCase@168 (line 2605)

  0x00000000036cf229: mov    $0xffffffe4,%edx
  0x00000000036cf22e: mov    0x20(%rsp),%rbp
  0x00000000036cf233: mov    %r10d,0x20(%rsp)
  0x00000000036cf238: mov    %r11,0x28(%rsp)
  0x00000000036cf23d: mov    %rax,-0x8(%rsp)
  0x00000000036cf242: mov    0x40(%rsp),%eax
  0x00000000036cf246: mov    %eax,0x24(%rsp)
  0x00000000036cf24a: mov    -0x8(%rsp),%rax
  0x00000000036cf24f: mov    %r8d,0x34(%rsp)
  0x00000000036cf254: mov    %r8d,0x38(%rsp)
  0x00000000036cf259: xchg   %ax,%ax
  0x00000000036cf25b: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [40]=Oop [80]=Oop off=1568}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.String::toLowerCase@243 (line 2618)
                                                ;   {runtime_call}
  0x00000000036cf260: int3                      ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.String::toLowerCase@243 (line 2618)

  0x00000000036cf261: mov    $0xffffff65,%edx
  0x00000000036cf266: mov    0x20(%rsp),%rbp
  0x00000000036cf26b: mov    %r10d,0x20(%rsp)
  0x00000000036cf270: mov    %r11,0x28(%rsp)
  0x00000000036cf275: mov    %r8d,0x34(%rsp)
  0x00000000036cf27a: nop
  0x00000000036cf27b: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [40]=Oop [80]=Oop off=1600}
                                                ;*if_icmplt
                                                ; - java.lang.String::toLowerCase@176 (line 2606)
                                                ;   {runtime_call}
  0x00000000036cf280: int3                      ;*if_icmplt
                                                ; - java.lang.String::toLowerCase@176 (line 2606)

  0x00000000036cf281: mov    $0xffffff65,%edx
  0x00000000036cf286: mov    0x20(%rsp),%rbp
  0x00000000036cf28b: mov    %r10d,0x20(%rsp)
  0x00000000036cf290: mov    %r11,0x28(%rsp)
  0x00000000036cf295: mov    %r8d,0x34(%rsp)
  0x00000000036cf29a: nop
  0x00000000036cf29b: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [40]=Oop [80]=Oop off=1632}
                                                ;*if_icmpeq
                                                ; - java.lang.String::toLowerCase@218 (line 2613)
                                                ;   {runtime_call}
  0x00000000036cf2a0: int3                      ;*if_icmpeq
                                                ; - java.lang.String::toLowerCase@218 (line 2613)

  0x00000000036cf2a1: mov    $0xffffff65,%edx
  0x00000000036cf2a6: mov    0x20(%rsp),%rbp
  0x00000000036cf2ab: mov    %r10d,0x20(%rsp)
  0x00000000036cf2b0: mov    %r11,0x28(%rsp)
  0x00000000036cf2b5: mov    %r8d,0x34(%rsp)
  0x00000000036cf2ba: nop
  0x00000000036cf2bb: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [40]=Oop [80]=Oop off=1664}
                                                ;*if_icmpne
                                                ; - java.lang.String::toLowerCase@226 (line 2613)
                                                ;   {runtime_call}
  0x00000000036cf2c0: int3                      ;*if_icmpne
                                                ; - java.lang.String::toLowerCase@226 (line 2613)

  0x00000000036cf2c1: mov    $0xffffff65,%edx
  0x00000000036cf2c6: mov    0x20(%rsp),%rbp
  0x00000000036cf2cb: mov    %r10d,0x20(%rsp)
  0x00000000036cf2d0: mov    %r11,0x28(%rsp)
  0x00000000036cf2d5: mov    %r8d,0x34(%rsp)
  0x00000000036cf2da: nop
  0x00000000036cf2db: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [40]=Oop [80]=Oop off=1696}
                                                ;*if_icmpeq
                                                ; - java.lang.String::toLowerCase@251 (line 2620)
                                                ;   {runtime_call}
  0x00000000036cf2e0: int3                      ;*if_icmpeq
                                                ; - java.lang.String::toLowerCase@251 (line 2620)

  0x00000000036cf2e1: mov    $0xffffff65,%edx
  0x00000000036cf2e6: mov    0x20(%rsp),%rbp
  0x00000000036cf2eb: mov    %r10d,0x20(%rsp)
  0x00000000036cf2f0: mov    %r11,0x28(%rsp)
  0x00000000036cf2f5: mov    %r8d,0x34(%rsp)
  0x00000000036cf2fa: nop
  0x00000000036cf2fb: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [40]=Oop [80]=Oop off=1728}
                                                ;*if_icmplt
                                                ; - java.lang.String::toLowerCase@258 (line 2620)
                                                ;   {runtime_call}
  0x00000000036cf300: int3                      ;*if_icmplt
                                                ; - java.lang.String::toLowerCase@258 (line 2620)

  0x00000000036cf301: mov    $0xffffffe4,%edx
  0x00000000036cf306: mov    %r10d,0x2c(%rsp)
  0x00000000036cf30b: callq  0x00000000035d57a0  ; OopMap{rbp=NarrowOop [32]=Oop [80]=Oop off=1744}
                                                ;*caload
                                                ; - java.lang.String::toLowerCase@30 (line 2572)
                                                ;   {runtime_call}
  0x00000000036cf310: int3                      ;*caload
                                                ; - java.lang.String::toLowerCase@30 (line 2572)

  0x00000000036cf311: mov    $0xffffffe4,%edx
  0x00000000036cf316: mov    0x20(%rsp),%rbp
  0x00000000036cf31b: mov    %r10d,0x24(%rsp)
  0x00000000036cf320: mov    %r9d,0x34(%rsp)
  0x00000000036cf325: mov    %r9d,0x38(%rsp)
  0x00000000036cf32a: nop
  0x00000000036cf32b: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [80]=Oop off=1776}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ; - java.lang.String::toLowerCase@82 (line 2581)
                                                ;   {runtime_call}
  0x00000000036cf330: int3                      ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ; - java.lang.String::toLowerCase@82 (line 2581)

  0x00000000036cf331: mov    $0xffffff65,%edx
  0x00000000036cf336: mov    0x20(%rsp),%rbp
  0x00000000036cf33b: mov    %r10d,0x24(%rsp)
  0x00000000036cf340: mov    %r9d,0x34(%rsp)
  0x00000000036cf345: xchg   %ax,%ax
  0x00000000036cf347: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [80]=Oop off=1804}
                                                ;*if_icmplt
                                                ; - java.lang.String::toLowerCase@37 (line 2573)
                                                ;   {runtime_call}
  0x00000000036cf34c: int3                      ;*if_icmplt
                                                ; - java.lang.String::toLowerCase@37 (line 2573)

  0x00000000036cf34d: mov    $0xffffff65,%edx
  0x00000000036cf352: mov    0x20(%rsp),%rbp
  0x00000000036cf357: mov    %r8,0x28(%rsp)
  0x00000000036cf35c: data16 xchg %ax,%ax
  0x00000000036cf35f: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [40]=Oop [80]=Oop off=1828}
                                                ;*ifnonnull
                                                ; - java.lang.String::toLowerCase@1 (line 2562)
                                                ;   {runtime_call}
  0x00000000036cf364: int3                      ;*ifnonnull
                                                ; - java.lang.String::toLowerCase@1 (line 2562)

  0x00000000036cf365: test   %r8d,%r8d
  0x00000000036cf368: jge    0x00000000036cef41
  0x00000000036cf36e: rex.W pushq 0x38(%rsp)
  0x00000000036cf373: rex.W popq 0x48(%rsp)
  0x00000000036cf378: mov    %r11,0x38(%rsp)
  0x00000000036cf37d: mov    %r10d,0x28(%rsp)
  0x00000000036cf382: mov    0x50(%rsp),%rbp
  0x00000000036cf387: xor    %r8d,%r8d
  0x00000000036cf38a: mov    %r11,%r9
  0x00000000036cf38d: xor    %edi,%edi
  0x00000000036cf38f: mov    0x40(%rsp),%esi
  0x00000000036cf393: callq  0x000000000369fea0  ; OopMap{rbp=Oop [32]=Oop [56]=Oop [72]=Derived_oop_[56] [80]=Oop off=1880}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::toLowerCase@116 (line 2595)
                                                ;   {runtime_call}
  0x00000000036cf398: mov    0x28(%rsp),%r10d
  0x00000000036cf39d: mov    0x38(%rsp),%r11
  0x00000000036cf3a2: rex.W pushq 0x48(%rsp)
  0x00000000036cf3a7: rex.W popq 0x38(%rsp)
  0x00000000036cf3ac: jmpq   0x00000000036cef41
  0x00000000036cf3b1: mov    $0xffffff65,%edx
  0x00000000036cf3b6: mov    %r10d,0x2c(%rsp)
  0x00000000036cf3bb: mov    %r11,0x30(%rsp)
  0x00000000036cf3c0: data16 xchg %ax,%ax
  0x00000000036cf3c3: callq  0x00000000035d57a0  ; OopMap{rbp=NarrowOop [32]=Oop [48]=Oop [80]=Oop off=1928}
                                                ;*if_acmpeq
                                                ; - java.lang.String::toLowerCase@129 (line 2598)
                                                ;   {runtime_call}
  0x00000000036cf3c8: int3                      ;*if_acmpeq
                                                ; - java.lang.String::toLowerCase@129 (line 2598)

  0x00000000036cf3c9: mov    $0xffffff65,%edx
  0x00000000036cf3ce: mov    %r10d,0x2c(%rsp)
  0x00000000036cf3d3: mov    %r11,0x30(%rsp)
  0x00000000036cf3d8: data16 xchg %ax,%ax
  0x00000000036cf3db: callq  0x00000000035d57a0  ; OopMap{rbp=NarrowOop [32]=Oop [48]=Oop [80]=Oop off=1952}
                                                ;*if_acmpeq
                                                ; - java.lang.String::toLowerCase@136 (line 2598)
                                                ;   {runtime_call}
  0x00000000036cf3e0: int3                      ;*if_acmpeq
                                                ; - java.lang.String::toLowerCase@136 (line 2598)

  0x00000000036cf3e1: mov    $0xffffff65,%edx
  0x00000000036cf3e6: mov    %r10d,0x2c(%rsp)
  0x00000000036cf3eb: mov    %r11,0x30(%rsp)
  0x00000000036cf3f0: data16 xchg %ax,%ax
  0x00000000036cf3f3: callq  0x00000000035d57a0  ; OopMap{rbp=NarrowOop [32]=Oop [48]=Oop [80]=Oop off=1976}
                                                ;*if_acmpne
                                                ; - java.lang.String::toLowerCase@143 (line 2598)
                                                ;   {runtime_call}
  0x00000000036cf3f8: int3                      ;*if_acmpne
                                                ; - java.lang.String::toLowerCase@143 (line 2598)

  0x00000000036cf3f9: mov    $0xffffff65,%edx
  0x00000000036cf3fe: mov    %rax,-0x8(%rsp)
  0x00000000036cf403: mov    0x40(%rsp),%eax
  0x00000000036cf407: mov    %eax,0x28(%rsp)
  0x00000000036cf40b: mov    -0x8(%rsp),%rax
  0x00000000036cf410: mov    %r10d,0x2c(%rsp)
  0x00000000036cf415: mov    %r9d,0x3c(%rsp)
  0x00000000036cf41a: mov    %r9d,0x40(%rsp)
  0x00000000036cf41f: mov    %r8d,0x44(%rsp)
  0x00000000036cf424: data16 xchg %ax,%ax
  0x00000000036cf427: callq  0x00000000035d57a0  ; OopMap{[32]=Oop [80]=Oop off=2028}
                                                ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ; - java.lang.String::toLowerCase@82 (line 2581)
                                                ;   {runtime_call}
  0x00000000036cf42c: int3                      ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ; - java.lang.String::toLowerCase@82 (line 2581)

  0x00000000036cf42d: mov    $0xfffffff6,%edx
  0x00000000036cf432: nop
  0x00000000036cf433: callq  0x00000000035d57a0  ; OopMap{off=2040}
                                                ;*caload
                                                ; - java.lang.String::toLowerCase@168 (line 2605)
                                                ;   {runtime_call}
  0x00000000036cf438: int3                      ;*caload
                                                ; - java.lang.String::toLowerCase@168 (line 2605)

  0x00000000036cf439: mov    $0xfffffff6,%edx
  0x00000000036cf43e: nop
  0x00000000036cf43f: callq  0x00000000035d57a0  ; OopMap{off=2052}
                                                ;*caload
                                                ; - java.lang.String::toLowerCase@30 (line 2572)
                                                ;   {runtime_call}
  0x00000000036cf444: int3                      ;*caload
                                                ; - java.lang.String::toLowerCase@30 (line 2572)

  0x00000000036cf445: mov    $0xfffffff6,%edx
  0x00000000036cf44a: nop
  0x00000000036cf44b: callq  0x00000000035d57a0  ; OopMap{off=2064}
                                                ;*arraylength
                                                ; - java.lang.String::toLowerCase@16 (line 2567)
                                                ;   {runtime_call}
  0x00000000036cf450: int3   
  0x00000000036cf451: mov    $0xfffffff6,%edx
  0x00000000036cf456: mov    %r11,%rbp
  0x00000000036cf459: xchg   %ax,%ax
  0x00000000036cf45b: callq  0x00000000035d57a0  ; OopMap{rbp=Oop off=2080}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::toLowerCase@116 (line 2595)
                                                ;   {runtime_call}
  0x00000000036cf460: int3                      ;*invokestatic arraycopy
                                                ; - java.lang.String::toLowerCase@116 (line 2595)

  0x00000000036cf461: mov    $0xfffffff6,%edx
  0x00000000036cf466: nop
  0x00000000036cf467: callq  0x00000000035d57a0  ; OopMap{off=2092}
                                                ;*invokevirtual getLanguage
                                                ; - java.util.Locale::getLanguage@4 (line 1076)
                                                ; - java.lang.String::toLowerCase@120 (line 2597)
                                                ;   {runtime_call}
  0x00000000036cf46c: int3                      ;*invokestatic arraycopy
                                                ; - java.lang.String::toLowerCase@116 (line 2595)

  0x00000000036cf46d: mov    %rax,%rdx
  0x00000000036cf470: jmp    0x00000000036cf489  ;*new
                                                ; - java.lang.String::toLowerCase@424 (line 2647)

  0x00000000036cf472: mov    %rax,%rdx
  0x00000000036cf475: jmp    0x00000000036cf489  ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.String::toLowerCase@435 (line 2647)

  0x00000000036cf477: mov    %rax,%rdx
  0x00000000036cf47a: jmp    0x00000000036cf489  ;*newarray
                                                ; - java.lang.String::toLowerCase@100 (line 2590)

  0x00000000036cf47c: mov    %rax,%rdx
  0x00000000036cf47f: jmp    0x00000000036cf489  ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ; - java.lang.String::toLowerCase@82 (line 2581)

  0x00000000036cf481: mov    %rax,%rdx
  0x00000000036cf484: jmp    0x00000000036cf489  ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.String::toLowerCase@243 (line 2618)

  0x00000000036cf486: mov    %rax,%rdx          ;*newarray
                                                ; - java.lang.String::toLowerCase@100 (line 2590)

  0x00000000036cf489: add    $0x70,%rsp
  0x00000000036cf48d: pop    %rbp
  0x00000000036cf48e: jmpq   0x000000000369e960  ;*aload_0
                                                ; - java.lang.String::toLowerCase@162 (line 2605)
                                                ;   {runtime_call}
  0x00000000036cf493: hlt    
  0x00000000036cf494: hlt    
  0x00000000036cf495: hlt    
  0x00000000036cf496: hlt    
  0x00000000036cf497: hlt    
  0x00000000036cf498: hlt    
  0x00000000036cf499: hlt    
  0x00000000036cf49a: hlt    
  0x00000000036cf49b: hlt    
  0x00000000036cf49c: hlt    
  0x00000000036cf49d: hlt    
  0x00000000036cf49e: hlt    
  0x00000000036cf49f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000036cf4a0: jmpq   0x000000000368dc20  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000036cf4a5: callq  0x00000000036cf4aa
  0x00000000036cf4aa: subq   $0x5,(%rsp)
  0x00000000036cf4af: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036cf4b4: hlt    
  0x00000000036cf4b5: hlt    
  0x00000000036cf4b6: hlt    
  0x00000000036cf4b7: hlt    
<nmethod compile_id='89' compiler='C2' level='4' entry='0x00000000036cec40' size='6552' address='0x00000000036cea90' relocation_offset='288' insts_offset='432' stub_offset='2576' scopes_data_offset='2728' scopes_pcs_offset='4560' dependencies_offset='6352' handler_table_offset='6360' nul_chk_table_offset='6504' oops_offset='2600' method='java/lang/String toLowerCase (Ljava/util/Locale;)Ljava/lang/String;' bytes='439' count='1431' backedge_count='30679' iicount='1431' stamp='1.979'/>
<writer thread='17528'/>
<task_queued compile_id='105' method='java/nio/Buffer position (I)Ljava/nio/Buffer;' bytes='43' count='2048' iicount='2048' level='3' stamp='1.979' comment='tiered' hot_count='2048'/>
<writer thread='10060'/>
Decoding compiled method 0x00000000036c8c50:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001c60c1b0} &apos;normalize&apos; &apos;(Ljava/lang/String;II)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;
  0x00000000036c8e60: int3   
  0x00000000036c8e61: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000036c8e6c: data16 data16 xchg %ax,%ax
  0x00000000036c8e70: mov    %eax,-0x6000(%rsp)
  0x00000000036c8e77: push   %rbp
  0x00000000036c8e78: sub    $0xe0,%rsp
  0x00000000036c8e7f: mov    0x18(%rdx),%r11d
  0x00000000036c8e83: mov    %r11d,0x38(%rsp)
  0x00000000036c8e88: mov    0x20(%rdx),%ebp
  0x00000000036c8e8b: mov    0x40(%rdx),%rbx
  0x00000000036c8e8f: mov    0x38(%rdx),%r13
  0x00000000036c8e93: mov    0x30(%rdx),%r14d
  0x00000000036c8e97: mov    0x10(%rdx),%r10
  0x00000000036c8e9b: mov    %r10,0x48(%rsp)
  0x00000000036c8ea0: mov    %rdx,%rcx
  0x00000000036c8ea3: movabs $0x54fdc6c0,%r10
  0x00000000036c8ead: callq  *%r10
  0x00000000036c8eb0: test   %rbx,%rbx
  0x00000000036c8eb3: je     0x00000000036c974f
  0x00000000036c8eb9: mov    0x8(%rbx),%r10d
  0x00000000036c8ebd: cmp    $0xf800597f,%r10d  ;   {metadata(&apos;java/io/WinNTFileSystem&apos;)}
  0x00000000036c8ec4: jne    0x00000000036c9f94
  0x00000000036c8eca: mov    %rbx,%r10
  0x00000000036c8ecd: mov    %r10,0x40(%rsp)
  0x00000000036c8ed2: test   %r13,%r13
  0x00000000036c8ed5: je     0x00000000036c975c
  0x00000000036c8edb: mov    0x8(%r13),%r11d
  0x00000000036c8edf: cmp    $0xf80002da,%r11d  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000000036c8ee6: jne    0x00000000036c9f94
  0x00000000036c8eec: mov    %r13,%r11
  0x00000000036c8eef: mov    0x48(%rsp),%r10
  0x00000000036c8ef4: test   %r10,%r10
  0x00000000036c8ef7: je     0x00000000036c9764
  0x00000000036c8efd: mov    0x8(%r10),%r10d
  0x00000000036c8f01: cmp    $0xf8001ac1,%r10d  ;   {metadata(&apos;java/lang/StringBuffer&apos;)}
  0x00000000036c8f08: jne    0x00000000036c9f94
  0x00000000036c8f0e: mov    0x48(%rsp),%r10    ;*iload
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 120)

  0x00000000036c8f13: mov    %r10,0x28(%rsp)
  0x00000000036c8f18: mov    %r10,%r8
  0x00000000036c8f1b: add    $0x10,%r8          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)

  0x00000000036c8f1f: mov    %r10,%rdi
  0x00000000036c8f22: add    $0x14,%rdi         ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 380)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)

  0x00000000036c8f26: mov    %r10,%r9
  0x00000000036c8f29: add    $0xc,%r9           ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)

  0x00000000036c8f2d: mov    %r10,%rsi
  0x00000000036c8f30: mov    %r10,%rcx
  0x00000000036c8f33: mov    %r10,%rax
  0x00000000036c8f36: mov    %r10,%rdx          ;*iload
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 120)

  0x00000000036c8f39: mov    $0xf8001ac1,%r10d  ;   {metadata(&apos;java/lang/StringBuffer&apos;)}
  0x00000000036c8f3f: movabs $0x0,%rbx
  0x00000000036c8f49: lea    (%rbx,%r10,8),%rbx
  0x00000000036c8f4d: mov    $0x7,%r13d
  0x00000000036c8f53: jmpq   0x00000000036c90fd  ;*iconst_1
                                                ; - java.io.WinNTFileSystem::isSlash@12 (line 53)
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)

  0x00000000036c8f58: mov    0x24(%rsp),%r10d
  0x00000000036c8f5d: cmp    %r14d,%r10d
  0x00000000036c8f60: jge    0x00000000036c8f9a  ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@90 (line 123)

  0x00000000036c8f62: test   %r10d,%r10d
  0x00000000036c8f65: jl     0x00000000036c9ddc  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)

  0x00000000036c8f6b: cmp    %ebx,%r10d
  0x00000000036c8f6e: jge    0x00000000036c9dfd  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)

  0x00000000036c8f74: cmp    %ebx,%r10d
  0x00000000036c8f77: jae    0x00000000036c9bd0
  0x00000000036c8f7d: movslq %ebp,%r10
  0x00000000036c8f80: movzwl 0x12(%r9,%r10,2),%r11d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)

  0x00000000036c8f86: cmp    $0x5c,%r11d
  0x00000000036c8f8a: je     0x00000000036c9bf1  ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)
                                                ; - java.io.WinNTFileSystem::normalize@100 (line 123)

  0x00000000036c8f90: cmp    $0x2f,%r11d
  0x00000000036c8f94: je     0x00000000036c9bf1  ;*iload
                                                ; - java.io.WinNTFileSystem::normalize@112 (line 124)

  0x00000000036c8f9a: mov    0x24(%rsp),%r10d
  0x00000000036c8f9f: cmp    %r14d,%r10d
  0x00000000036c8fa2: je     0x00000000036c9406  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@115 (line 124)

  0x00000000036c8fa8: mov    (%rcx),%rax        ; implicit exception: dispatches to 0x00000000036ca1d9
  0x00000000036c8fab: mov    %rax,%r10
  0x00000000036c8fae: and    $0x7,%r10
  0x00000000036c8fb2: cmp    $0x5,%r10
  0x00000000036c8fb6: jne    0x00000000036c9c5e
  0x00000000036c8fbc: mov    %r8,%r10
  0x00000000036c8fbf: or     %r15,%r10
  0x00000000036c8fc2: mov    %r10,%r11
  0x00000000036c8fc5: xor    %rax,%r11
  0x00000000036c8fc8: test   $0xffffffffffffff87,%r11
  0x00000000036c8fcf: jne    0x00000000036c9ccd  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)

  0x00000000036c8fd5: mov    0x50(%rsp),%r10
  0x00000000036c8fda: mov    (%r10),%r10d       ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)

  0x00000000036c8fdd: mov    0x58(%rsp),%r11
  0x00000000036c8fe2: mov    %r12d,(%r11)       ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 380)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)

  0x00000000036c8fe5: mov    0xc(%r12,%r10,8),%ebp  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; implicit exception: dispatches to 0x00000000036ca1e9
  0x00000000036c8fea: mov    0x60(%rsp),%r11
  0x00000000036c8fef: mov    (%r11),%r11d       ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)

  0x00000000036c8ff2: mov    %r11d,%r9d
  0x00000000036c8ff5: sub    %ebp,%r9d
  0x00000000036c8ff8: mov    %r10,%r8
  0x00000000036c8ffb: shl    $0x3,%r8           ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)

  0x00000000036c8fff: mov    %r8,0x90(%rsp)
  0x00000000036c9007: inc    %r9d
  0x00000000036c900a: mov    %r11d,%r8d
  0x00000000036c900d: inc    %r8d               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@6 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)

  0x00000000036c9010: test   %r9d,%r9d
  0x00000000036c9013: jg     0x00000000036c95a4  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)

  0x00000000036c9019: mov    0x60(%rsp),%r10
  0x00000000036c901e: mov    %r8d,(%r10)        ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)

  0x00000000036c9021: mov    0x90(%rsp),%r10
  0x00000000036c9029: mov    0xc(%r10),%r10d    ; implicit exception: dispatches to 0x00000000036ca1f9
  0x00000000036c902d: cmp    %r10d,%r11d
  0x00000000036c9030: jae    0x00000000036c9c15
  0x00000000036c9036: mov    0x90(%rsp),%r10
  0x00000000036c903e: mov    0x38(%rsp),%r8d
  0x00000000036c9043: mov    %r8w,0x10(%r10,%r11,2)  ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)

  0x00000000036c9049: mov    $0x7,%r10d
  0x00000000036c904f: mov    0x68(%rsp),%r11
  0x00000000036c9054: and    (%r11),%r10
  0x00000000036c9057: cmp    $0x5,%r10
  0x00000000036c905b: jne    0x00000000036c9cfc
  0x00000000036c9061: mov    %r11,%rcx
  0x00000000036c9064: jmp    0x00000000036c90bb
  0x00000000036c9066: mov    %r8d,0x90(%rsp)
  0x00000000036c906e: jmpq   0x00000000036c924d
  0x00000000036c9073: nopw   0x0(%rax,%rax,1)
  0x00000000036c907c: data16 data16 xchg %ax,%ax
  0x00000000036c9080: mov    0x60(%rsp),%r10
  0x00000000036c9085: mov    %r8d,(%r10)        ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)

  0x00000000036c9088: mov    0xc(%rbp),%r11d
  0x00000000036c908c: cmp    %r11d,%ecx
  0x00000000036c908f: jae    0x00000000036c9906
  0x00000000036c9095: mov    0x3c(%rsp),%r11d
  0x00000000036c909a: mov    %r11w,0x10(%rbp,%rcx,2)  ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)

  0x00000000036c90a0: mov    $0x7,%r10d
  0x00000000036c90a6: mov    0x68(%rsp),%r11
  0x00000000036c90ab: and    (%r11),%r10
  0x00000000036c90ae: cmp    $0x5,%r10
  0x00000000036c90b2: jne    0x00000000036c99d4
  0x00000000036c90b8: mov    %r11,%rcx          ; OopMap{rcx=Oop [40]=Oop [48]=Oop [64]=Oop [72]=Oop [80]=Derived_oop_rcx [88]=Derived_oop_rcx [96]=Derived_oop_rcx [112]=Oop [120]=Oop off=603}
                                                ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@218 (line 157)

  0x00000000036c90bb: test   %eax,-0x20d90c1(%rip)        # 0x00000000015f0000
                                                ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@218 (line 157)
                                                ;   {poll}
  0x00000000036c90c1: mov    0x24(%rsp),%ebp
  0x00000000036c90c5: mov    0x20(%rsp),%r14d
  0x00000000036c90ca: mov    0x30(%rsp),%rsi
  0x00000000036c90cf: mov    0x48(%rsp),%r11
  0x00000000036c90d4: mov    0x50(%rsp),%r8
  0x00000000036c90d9: mov    0x58(%rsp),%rdi
  0x00000000036c90de: mov    0x60(%rsp),%r9
  0x00000000036c90e3: mov    0x70(%rsp),%rax
  0x00000000036c90e8: mov    0x78(%rsp),%rdx
  0x00000000036c90ed: mov    0x80(%rsp),%rbx
  0x00000000036c90f5: mov    0x88(%rsp),%r13    ;*iload
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 120)

  0x00000000036c90fd: cmp    %r14d,%ebp
  0x00000000036c9100: jge    0x00000000036c9487  ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@64 (line 120)

  0x00000000036c9106: mov    0xc(%r11),%r10d    ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; implicit exception: dispatches to 0x00000000036ca1a0
  0x00000000036c910a: vmovd  %r10d,%xmm1
  0x00000000036c910f: mov    %r13,0x88(%rsp)
  0x00000000036c9117: mov    %rbx,0x80(%rsp)
  0x00000000036c911f: mov    %rdx,0x78(%rsp)
  0x00000000036c9124: mov    %rax,0x70(%rsp)
  0x00000000036c9129: mov    %rcx,0x68(%rsp)
  0x00000000036c912e: mov    %r9,0x60(%rsp)
  0x00000000036c9133: mov    %rdi,0x58(%rsp)
  0x00000000036c9138: mov    %r8,0x50(%rsp)
  0x00000000036c913d: mov    %r11,0x48(%rsp)
  0x00000000036c9142: mov    %rsi,0x30(%rsp)
  0x00000000036c9147: mov    %r14d,0x20(%rsp)
  0x00000000036c914c: mov    %ebp,%r10d
  0x00000000036c914f: inc    %r10d              ;*iinc
                                                ; - java.io.WinNTFileSystem::normalize@70 (line 121)

  0x00000000036c9152: mov    %r10d,0x24(%rsp)
  0x00000000036c9157: test   %ebp,%ebp
  0x00000000036c9159: jl     0x00000000036c9b10  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)

  0x00000000036c915f: vmovd  %xmm1,%r10d
  0x00000000036c9164: mov    0xc(%r12,%r10,8),%r10d  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; implicit exception: dispatches to 0x00000000036ca1ad
  0x00000000036c9169: mov    %r10d,%ebx
  0x00000000036c916c: cmp    %r10d,%ebp
  0x00000000036c916f: jge    0x00000000036c9b39  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)

  0x00000000036c9175: cmp    %r10d,%ebp
  0x00000000036c9178: jae    0x00000000036c98ac
  0x00000000036c917e: vmovd  %xmm1,%r10d
  0x00000000036c9183: lea    (%r12,%r10,8),%r9
  0x00000000036c9187: movzwl 0x10(%r9,%rbp,2),%r11d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)

  0x00000000036c918d: mov    %r11d,0x3c(%rsp)
  0x00000000036c9192: mov    0x40(%rsp),%r10
  0x00000000036c9197: test   %r10,%r10
  0x00000000036c919a: je     0x00000000036c98c9  ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)

  0x00000000036c91a0: mov    0x80(%rsp),%r10
  0x00000000036c91a8: mov    0xa8(%r10),%r8
  0x00000000036c91af: cmp    $0x5c,%r11d
  0x00000000036c91b3: je     0x00000000036c8f58  ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)

  0x00000000036c91b9: cmp    $0x2f,%r11d
  0x00000000036c91bd: je     0x00000000036c8f58  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)

  0x00000000036c91c3: mov    (%rcx),%rax        ; implicit exception: dispatches to 0x00000000036ca1b9
  0x00000000036c91c6: mov    %rax,%r10
  0x00000000036c91c9: and    $0x7,%r10
  0x00000000036c91cd: cmp    $0x5,%r10
  0x00000000036c91d1: jne    0x00000000036c993e
  0x00000000036c91d7: mov    %r8,%r10
  0x00000000036c91da: or     %r15,%r10
  0x00000000036c91dd: mov    %r10,%r11
  0x00000000036c91e0: xor    %rax,%r11
  0x00000000036c91e3: test   $0xffffffffffffff87,%r11
  0x00000000036c91ea: jne    0x00000000036c99a9  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)

  0x00000000036c91f0: mov    0x50(%rsp),%r10
  0x00000000036c91f5: mov    (%r10),%r9d        ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)

  0x00000000036c91f8: mov    0x58(%rsp),%r10
  0x00000000036c91fd: mov    %r12d,(%r10)       ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 380)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)

  0x00000000036c9200: mov    0xc(%r12,%r9,8),%r11d  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; implicit exception: dispatches to 0x00000000036ca1c9
  0x00000000036c9205: mov    0x60(%rsp),%r10
  0x00000000036c920a: mov    (%r10),%ecx        ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)

  0x00000000036c920d: mov    %ecx,%r10d
  0x00000000036c9210: sub    %r11d,%r10d
  0x00000000036c9213: mov    %r9,%rbp
  0x00000000036c9216: shl    $0x3,%rbp          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)

  0x00000000036c921a: inc    %r10d
  0x00000000036c921d: mov    %ecx,%r8d
  0x00000000036c9220: inc    %r8d               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@6 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)

  0x00000000036c9223: test   %r10d,%r10d
  0x00000000036c9226: jle    0x00000000036c9080  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)

  0x00000000036c922c: mov    %r11d,%edi
  0x00000000036c922f: shl    %edi               ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)

  0x00000000036c9231: mov    %edi,%r10d
  0x00000000036c9234: sub    %ecx,%r10d
  0x00000000036c9237: inc    %r10d
  0x00000000036c923a: test   %r10d,%r10d
  0x00000000036c923d: jl     0x00000000036c9066  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)

  0x00000000036c9243: add    $0x2,%edi          ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)

  0x00000000036c9246: mov    %edi,0x90(%rsp)    ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)

  0x00000000036c924d: mov    0x90(%rsp),%r10d
  0x00000000036c9255: test   %r10d,%r10d
  0x00000000036c9258: jle    0x00000000036c926d  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)

  0x00000000036c925a: mov    $0x7ffffff7,%r10d
  0x00000000036c9260: sub    0x90(%rsp),%r10d
  0x00000000036c9268: test   %r10d,%r10d
  0x00000000036c926b: jge    0x00000000036c929f  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@29 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)

  0x00000000036c926d: mov    %r11d,0xb4(%rsp)
  0x00000000036c9275: mov    %r9d,0xb0(%rsp)    ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)

  0x00000000036c927d: mov    0x68(%rsp),%rdx
  0x00000000036c9282: nop
  0x00000000036c9283: callq  0x00000000035d61a0  ; OopMap{rbp=Oop [40]=Oop [48]=Oop [64]=Oop [72]=Oop [80]=Derived_oop_[104] [88]=Derived_oop_[104] [96]=Derived_oop_[104] [104]=Oop [112]=Oop [120]=Oop [176]=NarrowOop off=1064}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ;   {optimized virtual_call}
  0x00000000036c9288: mov    %eax,0x90(%rsp)
  0x00000000036c928f: mov    0xb0(%rsp),%r9d
  0x00000000036c9297: mov    0xb4(%rsp),%r11d   ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)

  0x00000000036c929f: mov    0x90(%rsp),%r8d
  0x00000000036c92a7: cmp    $0x80000,%r8d
  0x00000000036c92ae: ja     0x00000000036c9fc1
  0x00000000036c92b4: movslq 0x90(%rsp),%r10
  0x00000000036c92bc: shl    %r10
  0x00000000036c92bf: add    $0x17,%r10
  0x00000000036c92c3: mov    %r10,0x98(%rsp)
  0x00000000036c92cb: and    $0xfffffffffffffff8,%r10
  0x00000000036c92cf: mov    %r10,0xa0(%rsp)
  0x00000000036c92d7: cmp    $0x80000,%r8d
  0x00000000036c92de: ja     0x00000000036c9ad1
  0x00000000036c92e4: mov    0x60(%r15),%r8
  0x00000000036c92e8: mov    %r8,%r10
  0x00000000036c92eb: mov    0xa0(%rsp),%rcx
  0x00000000036c92f3: add    %rcx,%r10
  0x00000000036c92f6: cmp    0x70(%r15),%r10
  0x00000000036c92fa: jae    0x00000000036c9ad1
  0x00000000036c9300: mov    %r10,0x60(%r15)
  0x00000000036c9304: prefetchw 0xc0(%r10)
  0x00000000036c930c: movq   $0x1,(%r8)
  0x00000000036c9313: prefetchw 0x100(%r10)
  0x00000000036c931b: movl   $0xf8000041,0x8(%r8)  ;   {metadata({type array char})}
  0x00000000036c9323: mov    0x90(%rsp),%ebx
  0x00000000036c932a: mov    %ebx,0xc(%r8)
  0x00000000036c932e: prefetchw 0x140(%r10)
  0x00000000036c9336: prefetchw 0x180(%r10)     ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)

  0x00000000036c933e: mov    %r8,%rbp
  0x00000000036c9341: cmp    0x90(%rsp),%r11d
  0x00000000036c9349: mov    0x90(%rsp),%esi
  0x00000000036c9350: cmovl  %r11d,%esi         ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)

  0x00000000036c9354: mov    %r8,%r10
  0x00000000036c9357: add    $0x10,%r10         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)

  0x00000000036c935b: lea    (%r12,%r9,8),%rdx  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)

  0x00000000036c935f: mov    0x98(%rsp),%rbx
  0x00000000036c9367: shr    $0x3,%rbx
  0x00000000036c936b: mov    %rbx,%rcx
  0x00000000036c936e: add    $0xfffffffffffffffe,%rcx
  0x00000000036c9372: cmp    %esi,%r11d
  0x00000000036c9375: jb     0x00000000036c9fce
  0x00000000036c937b: mov    0x90(%rsp),%r8d
  0x00000000036c9383: cmp    %esi,%r8d
  0x00000000036c9386: jb     0x00000000036c9fce
  0x00000000036c938c: test   %esi,%esi
  0x00000000036c938e: jle    0x00000000036c9fed
  0x00000000036c9394: lea    0x10(%r12,%r9,8),%r9
  0x00000000036c9399: cmp    0x90(%rsp),%esi
  0x00000000036c93a0: jl     0x00000000036c978a
  0x00000000036c93a6: mov    0xa0(%rsp),%r8
  0x00000000036c93ae: add    $0xfffffffffffffff0,%r8
  0x00000000036c93b2: shr    $0x3,%r8
  0x00000000036c93b6: mov    %r9,%rcx
  0x00000000036c93b9: mov    %r10,%rdx
  0x00000000036c93bc: movabs $0x35e2ca0,%r10
  0x00000000036c93c6: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)

  0x00000000036c93c9: mov    0x60(%rsp),%r10
  0x00000000036c93ce: mov    (%r10),%ecx        ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)

  0x00000000036c93d1: mov    %rbp,%r10
  0x00000000036c93d4: shr    $0x3,%r10
  0x00000000036c93d8: mov    0x50(%rsp),%r11
  0x00000000036c93dd: mov    %r10d,(%r11)       ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)

  0x00000000036c93e0: mov    %ecx,%r10d
  0x00000000036c93e3: inc    %r10d
  0x00000000036c93e6: mov    0x60(%rsp),%r11
  0x00000000036c93eb: mov    %r10d,(%r11)       ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)

  0x00000000036c93ee: mov    0x68(%rsp),%r10
  0x00000000036c93f3: shr    $0x9,%r10
  0x00000000036c93f7: mov    $0xf32f000,%r11d
  0x00000000036c93fd: mov    %r12b,(%r11,%r10,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)

  0x00000000036c9401: jmpq   0x00000000036c9088
  0x00000000036c9406: mov    (%rcx),%rax        ; implicit exception: dispatches to 0x00000000036ca21d
  0x00000000036c9409: mov    %rax,%r10
  0x00000000036c940c: and    $0x7,%r10
  0x00000000036c9410: cmp    $0x5,%r10
  0x00000000036c9414: jne    0x00000000036ca044
  0x00000000036c941a: mov    %r8,%r10
  0x00000000036c941d: or     %r15,%r10
  0x00000000036c9420: mov    %r10,%r11
  0x00000000036c9423: xor    %rax,%r11
  0x00000000036c9426: test   $0xffffffffffffff87,%r11
  0x00000000036c942d: jne    0x00000000036ca16d  ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.WinNTFileSystem::normalize@120 (line 126)

  0x00000000036c9433: mov    0x60(%rsp),%r9
  0x00000000036c9438: mov    (%r9),%ebp
  0x00000000036c943b: mov    $0x7,%r10d
  0x00000000036c9441: and    (%rcx),%r10
  0x00000000036c9444: cmp    $0x5,%r10
  0x00000000036c9448: jne    0x00000000036ca0b8  ;*ireturn
                                                ; - java.lang.StringBuffer::length@4 (line 163)
                                                ; - java.io.WinNTFileSystem::normalize@120 (line 126)

  0x00000000036c944e: cmp    $0x2,%ebp
  0x00000000036c9451: je     0x00000000036c97d0  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@139 (line 127)

  0x00000000036c9457: test   %ebp,%ebp
  0x00000000036c9459: je     0x00000000036c9800  ;*ifne
                                                ; - java.io.WinNTFileSystem::normalize@155 (line 132)

  0x00000000036c945f: cmp    $0x1,%ebp
  0x00000000036c9462: je     0x00000000036c9844  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@172 (line 137)

  0x00000000036c9468: mov    0x50(%rsp),%r8
  0x00000000036c946d: mov    0x58(%rsp),%rdi
  0x00000000036c9472: mov    0x78(%rsp),%rdx
  0x00000000036c9477: mov    0x80(%rsp),%rbx
  0x00000000036c947f: mov    0x88(%rsp),%r13    ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@150 (line 130)

  0x00000000036c9487: mov    (%rcx),%rax        ; implicit exception: dispatches to 0x00000000036ca211
  0x00000000036c948a: mov    %rax,%r10
  0x00000000036c948d: and    $0x7,%r10
  0x00000000036c9491: cmp    $0x5,%r10
  0x00000000036c9495: jne    0x00000000036c9e26
  0x00000000036c949b: mov    0xa8(%rbx),%r10
  0x00000000036c94a2: mov    %r10,%r11
  0x00000000036c94a5: or     %r15,%r11
  0x00000000036c94a8: mov    %r11,%rbx
  0x00000000036c94ab: xor    %rax,%rbx
  0x00000000036c94ae: test   $0xffffffffffffff87,%rbx
  0x00000000036c94b5: jne    0x00000000036c9ebc  ;*synchronization entry
                                                ; - java.lang.StringBuffer::toString@-1 (line 668)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)

  0x00000000036c94bb: mov    (%rdi),%ebp        ;*getfield toStringCache
                                                ; - java.lang.StringBuffer::toString@1 (line 668)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)

  0x00000000036c94bd: test   %ebp,%ebp
  0x00000000036c94bf: je     0x00000000036c9546
  0x00000000036c94c5: mov    0x60(%r15),%rbx
  0x00000000036c94c9: mov    %rbx,%r10
  0x00000000036c94cc: add    $0x18,%r10
  0x00000000036c94d0: cmp    0x70(%r15),%r10
  0x00000000036c94d4: jae    0x00000000036c98d9
  0x00000000036c94da: mov    %r10,0x60(%r15)
  0x00000000036c94de: prefetchw 0xc0(%r10)
  0x00000000036c94e6: mov    $0xf80002da,%r11d  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000000036c94ec: movabs $0x0,%r10
  0x00000000036c94f6: lea    (%r10,%r11,8),%r10
  0x00000000036c94fa: mov    0xa8(%r10),%r10
  0x00000000036c9501: mov    %r10,(%rbx)
  0x00000000036c9504: movl   $0xf80002da,0x8(%rbx)  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000000036c950b: mov    %r12d,0xc(%rbx)
  0x00000000036c950f: mov    %r12,0x10(%rbx)    ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)

  0x00000000036c9513: mov    %ebp,0xc(%rbx)
  0x00000000036c9516: mov    %rbx,%r10
  0x00000000036c9519: shr    $0x9,%r10
  0x00000000036c951d: mov    $0xf32f000,%r11d
  0x00000000036c9523: mov    %r12b,(%r11,%r10,1)
  0x00000000036c9527: and    (%rcx),%r13
  0x00000000036c952a: cmp    $0x5,%r13
  0x00000000036c952e: jne    0x00000000036c9eeb  ;*areturn
                                                ; - java.lang.StringBuffer::toString@35 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)

  0x00000000036c9534: mov    %rbx,%rax
  0x00000000036c9537: add    $0xe0,%rsp
  0x00000000036c953e: pop    %rbp
  0x00000000036c953f: test   %eax,-0x20d9545(%rip)        # 0x00000000015f0000
                                                ;   {poll_return}
  0x00000000036c9545: retq   
  0x00000000036c9546: mov    %r13,0x30(%rsp)
  0x00000000036c954b: mov    %rcx,0x28(%rsp)
  0x00000000036c9550: mov    %rdi,0x20(%rsp)
  0x00000000036c9555: mov    (%r9),%r9d         ;*getfield count
                                                ; - java.lang.StringBuffer::toString@14 (line 669)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)

  0x00000000036c9558: mov    (%r8),%r11d
  0x00000000036c955b: mov    %r11,%rdx
  0x00000000036c955e: shl    $0x3,%rdx          ;*getfield value
                                                ; - java.lang.StringBuffer::toString@9 (line 669)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)

  0x00000000036c9562: xor    %r8d,%r8d
  0x00000000036c9565: mov    %rcx,%rbp
  0x00000000036c9568: data16 xchg %ax,%ax
  0x00000000036c956b: callq  0x00000000035d6620  ; OopMap{rbp=Oop [32]=Derived_oop_rbp [40]=Oop off=1808}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.StringBuffer::toString@17 (line 669)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ;   {static_call}
  0x00000000036c9570: mov    %rbp,%rcx
  0x00000000036c9573: mov    %rcx,%r10
  0x00000000036c9576: mov    %rax,%rbp
  0x00000000036c9579: shr    $0x3,%rbp
  0x00000000036c957d: mov    0x20(%rsp),%r11
  0x00000000036c9582: mov    %ebp,(%r11)
  0x00000000036c9585: shr    $0x9,%r10
  0x00000000036c9589: mov    $0xf32f000,%r11d
  0x00000000036c958f: mov    %r12b,(%r11,%r10,1)  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::toString@20 (line 669)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)

  0x00000000036c9593: mov    0x30(%rsp),%r13
  0x00000000036c9598: jmpq   0x00000000036c94c5
  0x00000000036c959d: mov    %r8d,0x3c(%rsp)
  0x00000000036c95a2: jmp    0x00000000036c95bf
  0x00000000036c95a4: mov    %ebp,%ebx
  0x00000000036c95a6: shl    %ebx               ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)

  0x00000000036c95a8: mov    %ebx,%ecx
  0x00000000036c95aa: sub    %r11d,%ecx
  0x00000000036c95ad: inc    %ecx
  0x00000000036c95af: test   %ecx,%ecx
  0x00000000036c95b1: jl     0x00000000036c959d  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)

  0x00000000036c95b3: mov    %ebx,%r11d
  0x00000000036c95b6: add    $0x2,%r11d         ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)

  0x00000000036c95ba: mov    %r11d,0x3c(%rsp)   ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)

  0x00000000036c95bf: mov    0x3c(%rsp),%r9d
  0x00000000036c95c4: test   %r9d,%r9d
  0x00000000036c95c7: jle    0x00000000036c95d9  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)

  0x00000000036c95c9: mov    $0x7ffffff7,%r9d
  0x00000000036c95cf: sub    0x3c(%rsp),%r9d
  0x00000000036c95d4: test   %r9d,%r9d
  0x00000000036c95d7: jge    0x00000000036c95f8  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@29 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)

  0x00000000036c95d9: mov    %r10d,0xb8(%rsp)   ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)

  0x00000000036c95e1: mov    0x68(%rsp),%rdx
  0x00000000036c95e6: nop
  0x00000000036c95e7: callq  0x00000000035d61a0  ; OopMap{[40]=Oop [48]=Oop [64]=Oop [72]=Oop [80]=Derived_oop_[104] [88]=Derived_oop_[104] [96]=Derived_oop_[104] [104]=Oop [112]=Oop [120]=Oop [144]=Oop [184]=NarrowOop off=1932}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ;   {optimized virtual_call}
  0x00000000036c95ec: mov    %eax,0x3c(%rsp)
  0x00000000036c95f0: mov    0xb8(%rsp),%r10d   ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)

  0x00000000036c95f8: mov    0x3c(%rsp),%r11d
  0x00000000036c95fd: cmp    $0x80000,%r11d
  0x00000000036c9604: ja     0x00000000036c9fff
  0x00000000036c960a: movslq 0x3c(%rsp),%r11
  0x00000000036c960f: shl    %r11
  0x00000000036c9612: add    $0x17,%r11
  0x00000000036c9616: mov    %r11,0x98(%rsp)
  0x00000000036c961e: and    $0xfffffffffffffff8,%r11
  0x00000000036c9622: mov    %r11,0xa0(%rsp)
  0x00000000036c962a: mov    0x3c(%rsp),%r8d
  0x00000000036c962f: cmp    $0x80000,%r8d
  0x00000000036c9636: ja     0x00000000036c9dae
  0x00000000036c963c: mov    0x60(%r15),%r11
  0x00000000036c9640: mov    %r11,%r8
  0x00000000036c9643: mov    0xa0(%rsp),%r9
  0x00000000036c964b: add    %r9,%r8
  0x00000000036c964e: cmp    0x70(%r15),%r8
  0x00000000036c9652: jae    0x00000000036c9dae
  0x00000000036c9658: mov    %r8,0x60(%r15)
  0x00000000036c965c: prefetchw 0xc0(%r8)
  0x00000000036c9664: movq   $0x1,(%r11)
  0x00000000036c966b: prefetchw 0x100(%r8)
  0x00000000036c9673: movl   $0xf8000041,0x8(%r11)  ;   {metadata({type array char})}
  0x00000000036c967b: mov    0x3c(%rsp),%r9d
  0x00000000036c9680: mov    %r9d,0xc(%r11)
  0x00000000036c9684: prefetchw 0x140(%r8)
  0x00000000036c968c: prefetchw 0x180(%r8)      ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)

  0x00000000036c9694: mov    %r11,0x90(%rsp)
  0x00000000036c969c: cmp    0x3c(%rsp),%ebp
  0x00000000036c96a0: mov    0x3c(%rsp),%esi
  0x00000000036c96a4: cmovl  %ebp,%esi          ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)

  0x00000000036c96a7: add    $0x10,%r11         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)

  0x00000000036c96ab: lea    (%r12,%r10,8),%rdx  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)

  0x00000000036c96af: mov    0x98(%rsp),%r8
  0x00000000036c96b7: shr    $0x3,%r8
  0x00000000036c96bb: mov    %r8,%r9
  0x00000000036c96be: mov    %r8,%rcx
  0x00000000036c96c1: add    $0xfffffffffffffffe,%rcx
  0x00000000036c96c5: cmp    %esi,%ebp
  0x00000000036c96c7: jb     0x00000000036ca009
  0x00000000036c96cd: mov    0x3c(%rsp),%r8d
  0x00000000036c96d2: cmp    %esi,%r8d
  0x00000000036c96d5: jb     0x00000000036ca009
  0x00000000036c96db: test   %esi,%esi
  0x00000000036c96dd: jle    0x00000000036ca02d
  0x00000000036c96e3: lea    0x10(%r12,%r10,8),%r10
  0x00000000036c96e8: cmp    0x3c(%rsp),%esi
  0x00000000036c96ec: jl     0x00000000036c9a86
  0x00000000036c96f2: mov    0xa0(%rsp),%r8
  0x00000000036c96fa: add    $0xfffffffffffffff0,%r8
  0x00000000036c96fe: shr    $0x3,%r8
  0x00000000036c9702: mov    %r10,%rcx
  0x00000000036c9705: mov    %r11,%rdx
  0x00000000036c9708: movabs $0x35e2ca0,%r10
  0x00000000036c9712: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)

  0x00000000036c9715: mov    0x60(%rsp),%r10
  0x00000000036c971a: mov    (%r10),%r11d       ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)

  0x00000000036c971d: mov    0x90(%rsp),%r10
  0x00000000036c9725: shr    $0x3,%r10
  0x00000000036c9729: mov    0x50(%rsp),%r8
  0x00000000036c972e: mov    %r10d,(%r8)        ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)

  0x00000000036c9731: mov    %r11d,%r8d
  0x00000000036c9734: inc    %r8d               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)

  0x00000000036c9737: mov    0x68(%rsp),%r10
  0x00000000036c973c: shr    $0x9,%r10
  0x00000000036c9740: mov    $0xf32f000,%r9d
  0x00000000036c9746: mov    %r12b,(%r9,%r10,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)

  0x00000000036c974a: jmpq   0x00000000036c9019
  0x00000000036c974f: xor    %r10d,%r10d
  0x00000000036c9752: mov    %r10,0x40(%rsp)
  0x00000000036c9757: jmpq   0x00000000036c8ed2
  0x00000000036c975c: xor    %r11d,%r11d
  0x00000000036c975f: jmpq   0x00000000036c8eef
  0x00000000036c9764: xor    %esi,%esi
  0x00000000036c9766: mov    $0x10,%r8d
  0x00000000036c976c: mov    $0x14,%edi
  0x00000000036c9771: mov    $0xc,%r9d
  0x00000000036c9777: xor    %ecx,%ecx
  0x00000000036c9779: xor    %eax,%eax
  0x00000000036c977b: xor    %edx,%edx
  0x00000000036c977d: xor    %r10d,%r10d
  0x00000000036c9780: mov    %r10,0x28(%rsp)
  0x00000000036c9785: jmpq   0x00000000036c8f39
  0x00000000036c978a: movslq %esi,%r8
  0x00000000036c978d: mov    %r8,%r11
  0x00000000036c9790: shl    %r11
  0x00000000036c9793: add    $0x10,%r11
  0x00000000036c9797: mov    %r11,%rcx
  0x00000000036c979a: and    $0xfffffffffffffff9,%rcx
  0x00000000036c979e: mov    %rbp,%rdi
  0x00000000036c97a1: add    %rcx,%rdi
  0x00000000036c97a4: shr    $0x3,%r11
  0x00000000036c97a8: mov    %rbx,%rcx
  0x00000000036c97ab: sub    %r11,%rcx
  0x00000000036c97ae: xor    %rax,%rax
  0x00000000036c97b1: shl    $0x3,%rcx
  0x00000000036c97b5: rep rex.W stos %al,%es:(%rdi)
  0x00000000036c97b8: mov    %r9,%rcx
  0x00000000036c97bb: mov    %r10,%rdx
  0x00000000036c97be: movabs $0x35e2980,%r10
  0x00000000036c97c8: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)

  0x00000000036c97cb: jmpq   0x00000000036c93c9
  0x00000000036c97d0: mov    %rcx,0x28(%rsp)
  0x00000000036c97d5: mov    %r9,0x20(%rsp)     ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::normalize@120 (line 126)

  0x00000000036c97da: mov    $0x1,%r8d
  0x00000000036c97e0: mov    %rcx,%rdx
  0x00000000036c97e3: callq  0x00000000035d61a0  ; OopMap{[32]=Derived_oop_[40] [40]=Oop [64]=Oop [80]=Derived_oop_[40] [88]=Derived_oop_[40] [120]=Oop off=2440}
                                                ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalize@134 (line 127)
                                                ;   {optimized virtual_call}
  0x00000000036c97e8: cmp    $0x3a,%eax
  0x00000000036c97eb: je     0x00000000036c9b65  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@139 (line 127)

  0x00000000036c97f1: mov    0x20(%rsp),%r9
  0x00000000036c97f6: mov    0x28(%rsp),%rcx
  0x00000000036c97fb: jmpq   0x00000000036c9457
  0x00000000036c9800: mov    %rcx,0x20(%rsp)
  0x00000000036c9805: mov    %r9,%rbp           ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@128 (line 127)

  0x00000000036c9808: mov    %rcx,%rdx
  0x00000000036c980b: mov    0x38(%rsp),%r8d
  0x00000000036c9810: data16 xchg %ax,%ax
  0x00000000036c9813: callq  0x00000000035d61a0  ; OopMap{rbp=Derived_oop_[32] [32]=Oop [80]=Derived_oop_[32] [88]=Derived_oop_[32] [120]=Oop off=2488}
                                                ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 134)
                                                ;   {optimized virtual_call}
  0x00000000036c9818: mov    0x50(%rsp),%r8
  0x00000000036c981d: mov    0x58(%rsp),%rdi
  0x00000000036c9822: mov    %rbp,%r9
  0x00000000036c9825: mov    0x20(%rsp),%rcx
  0x00000000036c982a: mov    0x78(%rsp),%rdx
  0x00000000036c982f: mov    0x80(%rsp),%rbx
  0x00000000036c9837: mov    0x88(%rsp),%r13
  0x00000000036c983f: jmpq   0x00000000036c9487
  0x00000000036c9844: mov    %rcx,0x20(%rsp)
  0x00000000036c9849: mov    %r9,%rbp           ;*ifne
                                                ; - java.io.WinNTFileSystem::normalize@155 (line 132)

  0x00000000036c984c: mov    %rcx,%rdx
  0x00000000036c984f: xor    %r8d,%r8d
  0x00000000036c9852: nop
  0x00000000036c9853: callq  0x00000000035d61a0  ; OopMap{rbp=Derived_oop_[32] [32]=Oop [64]=Oop [80]=Derived_oop_[32] [88]=Derived_oop_[32] [120]=Oop off=2552}
                                                ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalize@179 (line 137)
                                                ;   {optimized virtual_call}
  0x00000000036c9858: mov    0x40(%rsp),%rdx
  0x00000000036c985d: mov    %eax,%r8d
  0x00000000036c9860: data16 xchg %ax,%ax
  0x00000000036c9863: callq  0x00000000035d61a0  ; OopMap{rbp=Derived_oop_[32] [32]=Oop [80]=Derived_oop_[32] [88]=Derived_oop_[32] [120]=Oop off=2568}
                                                ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalize@182 (line 137)
                                                ;   {optimized virtual_call}
  0x00000000036c9868: test   %eax,%eax
  0x00000000036c986a: je     0x00000000036c9ba4  ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@185 (line 137)

  0x00000000036c9870: mov    0x20(%rsp),%rdx
  0x00000000036c9875: mov    0x38(%rsp),%r8d
  0x00000000036c987a: nop
  0x00000000036c987b: callq  0x00000000035d61a0  ; OopMap{rbp=Derived_oop_[32] [32]=Oop [80]=Derived_oop_[32] [88]=Derived_oop_[32] [120]=Oop off=2592}
                                                ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 145)
                                                ;   {optimized virtual_call}
  0x00000000036c9880: mov    0x50(%rsp),%r8
  0x00000000036c9885: mov    0x58(%rsp),%rdi
  0x00000000036c988a: mov    %rbp,%r9
  0x00000000036c988d: mov    0x20(%rsp),%rcx
  0x00000000036c9892: mov    0x78(%rsp),%rdx
  0x00000000036c9897: mov    0x80(%rsp),%rbx
  0x00000000036c989f: mov    0x88(%rsp),%r13
  0x00000000036c98a7: jmpq   0x00000000036c9487
  0x00000000036c98ac: mov    $0xffffffe4,%edx
  0x00000000036c98b1: mov    0x40(%rsp),%r10
  0x00000000036c98b6: mov    %r10,0x28(%rsp)
  0x00000000036c98bb: vmovss %xmm1,0x3c(%rsp)
  0x00000000036c98c1: xchg   %ax,%ax
  0x00000000036c98c3: callq  0x00000000035d57a0  ; OopMap{[40]=Oop [60]=NarrowOop [72]=Oop [104]=Oop off=2664}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ;   {runtime_call}
  0x00000000036c98c8: int3   
  0x00000000036c98c9: mov    $0xfffffff6,%edx
  0x00000000036c98ce: mov    %r11d,%ebp
  0x00000000036c98d1: xchg   %ax,%ax
  0x00000000036c98d3: callq  0x00000000035d57a0  ; OopMap{off=2680}
                                                ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ;   {runtime_call}
  0x00000000036c98d8: int3                      ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)

  0x00000000036c98d9: mov    %r13,0x30(%rsp)
  0x00000000036c98de: mov    %rcx,0x28(%rsp)    ;*ifnonnull
                                                ; - java.lang.StringBuffer::toString@4 (line 668)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)

  0x00000000036c98e3: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000000036c98ed: xchg   %ax,%ax
  0x00000000036c98ef: callq  0x0000000003694e60  ; OopMap{rbp=NarrowOop [40]=Oop off=2708}
                                                ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ;   {runtime_call}
  0x00000000036c98f4: mov    0x28(%rsp),%rcx
  0x00000000036c98f9: mov    0x30(%rsp),%r13
  0x00000000036c98fe: mov    %rax,%rbx
  0x00000000036c9901: jmpq   0x00000000036c9513
  0x00000000036c9906: mov    $0xffffffe4,%edx
  0x00000000036c990b: mov    0x40(%rsp),%r10
  0x00000000036c9910: mov    %r10,0x28(%rsp)
  0x00000000036c9915: mov    0x48(%rsp),%r10
  0x00000000036c991a: mov    %r10,0x30(%rsp)
  0x00000000036c991f: mov    0x68(%rsp),%r10
  0x00000000036c9924: mov    %r10,0x48(%rsp)
  0x00000000036c9929: mov    %r10,0x50(%rsp)
  0x00000000036c992e: mov    %ecx,0x60(%rsp)
  0x00000000036c9932: nop
  0x00000000036c9933: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [40]=Oop [48]=Oop [72]=Oop [80]=Oop off=2776}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ;   {runtime_call}
  0x00000000036c9938: int3                      ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)

  0x00000000036c9939: lock cmpxchg %r8,(%rcx)
  0x00000000036c993e: lea    0xd0(%rsp),%rbx
  0x00000000036c9946: mov    (%rcx),%rax
  0x00000000036c9949: test   $0x2,%rax
  0x00000000036c994f: jne    0x00000000036c9975
  0x00000000036c9951: or     $0x1,%rax
  0x00000000036c9955: mov    %rax,(%rbx)
  0x00000000036c9958: lock cmpxchg %rbx,(%rcx)
  0x00000000036c995d: je     0x00000000036c998e
  0x00000000036c9963: sub    %rsp,%rax
  0x00000000036c9966: and    $0xfffffffffffff007,%rax
  0x00000000036c996d: mov    %rax,(%rbx)
  0x00000000036c9970: jmpq   0x00000000036c998e
  0x00000000036c9975: movq   $0x3,(%rbx)
  0x00000000036c997c: mov    %rax,%rbx
  0x00000000036c997f: mov    0x16(%rbx),%rax
  0x00000000036c9983: test   %rax,%rax
  0x00000000036c9986: jne    0x00000000036c998e
  0x00000000036c9988: lock cmpxchg %r15,0x16(%rbx)
  0x00000000036c998e: je     0x00000000036c91f0
  0x00000000036c9994: mov    %rsi,%rdx
  0x00000000036c9997: lea    0xd0(%rsp),%r8
  0x00000000036c999f: callq  0x0000000003693720  ; OopMap{[40]=Oop [48]=Oop [64]=Oop [72]=Oop [80]=Derived_oop_[104] [88]=Derived_oop_[104] [96]=Derived_oop_[104] [104]=Oop [112]=Oop [120]=Oop off=2884}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ;   {runtime_call}
  0x00000000036c99a4: jmpq   0x00000000036c91f0  ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@84 (line 122)

  0x00000000036c99a9: test   $0x7,%r11
  0x00000000036c99b0: jne    0x00000000036c9939
  0x00000000036c99b2: test   $0x300,%r11
  0x00000000036c99b9: jne    0x00000000036c99c8
  0x00000000036c99bb: and    $0x37f,%rax
  0x00000000036c99c2: mov    %rax,%r10
  0x00000000036c99c5: or     %r15,%r10
  0x00000000036c99c8: lock cmpxchg %r10,(%rcx)
  0x00000000036c99cd: jne    0x00000000036c9994
  0x00000000036c99cf: jmpq   0x00000000036c91f0
  0x00000000036c99d4: mov    %r11,%rcx
  0x00000000036c99d7: lea    0xd0(%rsp),%rax
  0x00000000036c99df: cmpq   $0x0,(%rax)
  0x00000000036c99e6: je     0x00000000036c9a60
  0x00000000036c99ec: mov    (%rcx),%r10
  0x00000000036c99ef: test   $0x2,%r10
  0x00000000036c99f6: je     0x00000000036c9a58
  0x00000000036c99f8: mov    0x16(%r10),%rax
  0x00000000036c99fc: xor    %r15,%rax
  0x00000000036c99ff: or     0x26(%r10),%rax
  0x00000000036c9a03: jne    0x00000000036c9a60
  0x00000000036c9a05: mov    0x36(%r10),%rax
  0x00000000036c9a09: or     0x3e(%r10),%rax
  0x00000000036c9a0d: jne    0x00000000036c9a19
  0x00000000036c9a0f: movq   $0x0,0x16(%r10)
  0x00000000036c9a17: jmp    0x00000000036c9a60
  0x00000000036c9a19: cmpq   $0x0,0x46(%r10)
  0x00000000036c9a21: je     0x00000000036c9a4c
  0x00000000036c9a23: movq   $0x0,0x16(%r10)
  0x00000000036c9a2b: lock addl $0x0,(%rsp)
  0x00000000036c9a30: cmpq   $0x0,0x46(%r10)
  0x00000000036c9a38: jne    0x00000000036c9a51
  0x00000000036c9a3a: movabs $0x0,%rax
  0x00000000036c9a44: lock cmpxchg %r15,0x16(%r10)
  0x00000000036c9a4a: jne    0x00000000036c9a51
  0x00000000036c9a4c: or     $0x1,%eax
  0x00000000036c9a4f: jmp    0x00000000036c9a60
  0x00000000036c9a51: test   $0x0,%eax
  0x00000000036c9a56: jmp    0x00000000036c9a60
  0x00000000036c9a58: mov    (%rax),%r10
  0x00000000036c9a5b: lock cmpxchg %r10,(%rcx)
  0x00000000036c9a60: je     0x00000000036c90bb
  0x00000000036c9a66: mov    %rcx,%rbx
  0x00000000036c9a69: lea    0xd0(%rsp),%rdx    ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)

  0x00000000036c9a71: movabs $0x54fdce00,%r10
  0x00000000036c9a7b: callq  *%r10              ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)

  0x00000000036c9a7e: mov    %rbx,%rcx
  0x00000000036c9a81: jmpq   0x00000000036c90bb
  0x00000000036c9a86: movslq %esi,%r8
  0x00000000036c9a89: mov    %r8,%rcx
  0x00000000036c9a8c: shl    %rcx
  0x00000000036c9a8f: add    $0x10,%rcx
  0x00000000036c9a93: mov    %rcx,%rbx
  0x00000000036c9a96: and    $0xfffffffffffffff9,%rbx
  0x00000000036c9a9a: mov    0x90(%rsp),%rdi
  0x00000000036c9aa2: add    %rbx,%rdi
  0x00000000036c9aa5: shr    $0x3,%rcx
  0x00000000036c9aa9: sub    %rcx,%r9
  0x00000000036c9aac: mov    %r9,%rcx
  0x00000000036c9aaf: xor    %rax,%rax
  0x00000000036c9ab2: shl    $0x3,%rcx
  0x00000000036c9ab6: rep rex.W stos %al,%es:(%rdi)
  0x00000000036c9ab9: mov    %r10,%rcx
  0x00000000036c9abc: mov    %r11,%rdx
  0x00000000036c9abf: movabs $0x35e2980,%r10
  0x00000000036c9ac9: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)

  0x00000000036c9acc: jmpq   0x00000000036c9715
  0x00000000036c9ad1: mov    %r11d,0xc8(%rsp)
  0x00000000036c9ad9: mov    %r9d,0x94(%rsp)    ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)

  0x00000000036c9ae1: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000000036c9aeb: mov    0x90(%rsp),%r8d
  0x00000000036c9af3: callq  0x0000000003693360  ; OopMap{rbp=Oop [40]=Oop [48]=Oop [64]=Oop [72]=Oop [80]=Derived_oop_[104] [88]=Derived_oop_[104] [96]=Derived_oop_[104] [104]=Oop [112]=Oop [120]=Oop [148]=NarrowOop off=3224}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ;   {runtime_call}
  0x00000000036c9af8: mov    %rax,%r8
  0x00000000036c9afb: mov    0x94(%rsp),%r9d
  0x00000000036c9b03: mov    0xc8(%rsp),%r11d
  0x00000000036c9b0b: jmpq   0x00000000036c933e  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)

  0x00000000036c9b10: mov    $0xffffff65,%edx
  0x00000000036c9b15: mov    0x40(%rsp),%r10
  0x00000000036c9b1a: mov    %r10,0x30(%rsp)
  0x00000000036c9b1f: mov    %rax,-0x8(%rsp)
  0x00000000036c9b24: mov    0x38(%rsp),%eax
  0x00000000036c9b28: mov    %eax,0x2c(%rsp)
  0x00000000036c9b2c: mov    -0x8(%rsp),%rax
  0x00000000036c9b31: xchg   %ax,%ax
  0x00000000036c9b33: callq  0x00000000035d57a0  ; OopMap{[48]=Oop [72]=Oop [104]=Oop off=3288}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ;   {runtime_call}
  0x00000000036c9b38: int3                      ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)

  0x00000000036c9b39: mov    $0xffffff65,%edx
  0x00000000036c9b3e: mov    0x40(%rsp),%r10
  0x00000000036c9b43: mov    %r10,0x30(%rsp)
  0x00000000036c9b48: mov    %rax,-0x8(%rsp)
  0x00000000036c9b4d: mov    0x38(%rsp),%eax
  0x00000000036c9b51: mov    %eax,0x2c(%rsp)
  0x00000000036c9b55: mov    -0x8(%rsp),%rax
  0x00000000036c9b5a: mov    %ebx,0x50(%rsp)
  0x00000000036c9b5e: nop
  0x00000000036c9b5f: callq  0x00000000035d57a0  ; OopMap{[48]=Oop [72]=Oop [104]=Oop off=3332}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ;   {runtime_call}
  0x00000000036c9b64: int3                      ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)

  0x00000000036c9b65: mov    0x28(%rsp),%rdx
  0x00000000036c9b6a: mov    0x38(%rsp),%r8d
  0x00000000036c9b6f: mov    %rdx,%rbp
  0x00000000036c9b72: nop
  0x00000000036c9b73: callq  0x00000000035d61a0  ; OopMap{rbp=Oop [32]=Derived_oop_rbp [80]=Derived_oop_rbp [88]=Derived_oop_rbp [120]=Oop off=3352}
                                                ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@146 (line 129)
                                                ;   {optimized virtual_call}
  0x00000000036c9b78: mov    0x50(%rsp),%r8
  0x00000000036c9b7d: mov    0x58(%rsp),%rdi
  0x00000000036c9b82: mov    0x20(%rsp),%r9
  0x00000000036c9b87: mov    %rbp,%rcx
  0x00000000036c9b8a: mov    0x78(%rsp),%rdx
  0x00000000036c9b8f: mov    0x80(%rsp),%rbx
  0x00000000036c9b97: mov    0x88(%rsp),%r13
  0x00000000036c9b9f: jmpq   0x00000000036c9487
  0x00000000036c9ba4: mov    0x50(%rsp),%r8
  0x00000000036c9ba9: mov    0x58(%rsp),%rdi
  0x00000000036c9bae: mov    %rbp,%r9
  0x00000000036c9bb1: mov    0x20(%rsp),%rcx
  0x00000000036c9bb6: mov    0x78(%rsp),%rdx
  0x00000000036c9bbb: mov    0x80(%rsp),%rbx
  0x00000000036c9bc3: mov    0x88(%rsp),%r13
  0x00000000036c9bcb: jmpq   0x00000000036c9487
  0x00000000036c9bd0: mov    $0xffffffe4,%edx
  0x00000000036c9bd5: mov    %r14d,%ebp
  0x00000000036c9bd8: mov    0x48(%rsp),%r10
  0x00000000036c9bdd: mov    %r10,0x30(%rsp)
  0x00000000036c9be2: vmovss %xmm1,0x3c(%rsp)
  0x00000000036c9be8: data16 xchg %ax,%ax
  0x00000000036c9beb: callq  0x00000000035d57a0  ; OopMap{[48]=Oop [60]=NarrowOop [64]=Oop [104]=Oop off=3472}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ;   {runtime_call}
  0x00000000036c9bf0: int3                      ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalize@100 (line 123)

  0x00000000036c9bf1: mov    $0xffffff65,%edx
  0x00000000036c9bf6: mov    %r14d,%ebp
  0x00000000036c9bf9: mov    0x24(%rsp),%r10d
  0x00000000036c9bfe: mov    %r10d,0x20(%rsp)
  0x00000000036c9c03: mov    0x38(%rsp),%r11d
  0x00000000036c9c08: mov    %r11d,0x24(%rsp)
  0x00000000036c9c0d: xchg   %ax,%ax
  0x00000000036c9c0f: callq  0x00000000035d57a0  ; OopMap{[64]=Oop [72]=Oop [104]=Oop off=3508}
                                                ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@103 (line 123)
                                                ;   {runtime_call}
  0x00000000036c9c14: int3   
  0x00000000036c9c15: mov    $0xffffffe4,%edx
  0x00000000036c9c1a: mov    0x20(%rsp),%ebp
  0x00000000036c9c1e: mov    0x24(%rsp),%r10d
  0x00000000036c9c23: mov    %r10d,0x20(%rsp)
  0x00000000036c9c28: mov    0x40(%rsp),%r10
  0x00000000036c9c2d: mov    %r10,0x28(%rsp)
  0x00000000036c9c32: mov    0x48(%rsp),%r10
  0x00000000036c9c37: mov    %r10,0x30(%rsp)
  0x00000000036c9c3c: mov    0x68(%rsp),%r10
  0x00000000036c9c41: mov    %r10,0x48(%rsp)
  0x00000000036c9c46: mov    %r10,0x50(%rsp)
  0x00000000036c9c4b: mov    %r11d,0x3c(%rsp)
  0x00000000036c9c50: data16 xchg %ax,%ax
  0x00000000036c9c53: callq  0x00000000035d57a0  ; OopMap{[40]=Oop [48]=Oop [72]=Oop [80]=Oop [144]=Oop off=3576}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ;   {runtime_call}
  0x00000000036c9c58: int3                      ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)

  0x00000000036c9c59: lock cmpxchg %r8,(%rcx)
  0x00000000036c9c5e: lea    0xd0(%rsp),%rbx
  0x00000000036c9c66: mov    (%rcx),%rax
  0x00000000036c9c69: test   $0x2,%rax
  0x00000000036c9c6f: jne    0x00000000036c9c95
  0x00000000036c9c71: or     $0x1,%rax
  0x00000000036c9c75: mov    %rax,(%rbx)
  0x00000000036c9c78: lock cmpxchg %rbx,(%rcx)
  0x00000000036c9c7d: je     0x00000000036c9cae
  0x00000000036c9c83: sub    %rsp,%rax
  0x00000000036c9c86: and    $0xfffffffffffff007,%rax
  0x00000000036c9c8d: mov    %rax,(%rbx)
  0x00000000036c9c90: jmpq   0x00000000036c9cae
  0x00000000036c9c95: movq   $0x3,(%rbx)
  0x00000000036c9c9c: mov    %rax,%rbx
  0x00000000036c9c9f: mov    0x16(%rbx),%rax
  0x00000000036c9ca3: test   %rax,%rax
  0x00000000036c9ca6: jne    0x00000000036c9cae
  0x00000000036c9ca8: lock cmpxchg %r15,0x16(%rbx)
  0x00000000036c9cae: je     0x00000000036c8fd5
  0x00000000036c9cb4: mov    0x28(%rsp),%rdx
  0x00000000036c9cb9: lea    0xd0(%rsp),%r8
  0x00000000036c9cc1: xchg   %ax,%ax
  0x00000000036c9cc3: callq  0x0000000003693720  ; OopMap{[40]=Oop [48]=Oop [64]=Oop [72]=Oop [80]=Derived_oop_[104] [88]=Derived_oop_[104] [96]=Derived_oop_[104] [104]=Oop [112]=Oop [120]=Oop off=3688}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ;   {runtime_call}
  0x00000000036c9cc8: jmpq   0x00000000036c8fd5  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@115 (line 124)

  0x00000000036c9ccd: test   $0x7,%r11
  0x00000000036c9cd4: jne    0x00000000036c9c59
  0x00000000036c9cda: test   $0x300,%r11
  0x00000000036c9ce1: jne    0x00000000036c9cf0
  0x00000000036c9ce3: and    $0x37f,%rax
  0x00000000036c9cea: mov    %rax,%r10
  0x00000000036c9ced: or     %r15,%r10
  0x00000000036c9cf0: lock cmpxchg %r10,(%rcx)
  0x00000000036c9cf5: jne    0x00000000036c9cb4
  0x00000000036c9cf7: jmpq   0x00000000036c8fd5
  0x00000000036c9cfc: mov    %r11,%rcx
  0x00000000036c9cff: lea    0xd0(%rsp),%rax
  0x00000000036c9d07: cmpq   $0x0,(%rax)
  0x00000000036c9d0e: je     0x00000000036c9d88
  0x00000000036c9d14: mov    (%rcx),%r10
  0x00000000036c9d17: test   $0x2,%r10
  0x00000000036c9d1e: je     0x00000000036c9d80
  0x00000000036c9d20: mov    0x16(%r10),%rax
  0x00000000036c9d24: xor    %r15,%rax
  0x00000000036c9d27: or     0x26(%r10),%rax
  0x00000000036c9d2b: jne    0x00000000036c9d88
  0x00000000036c9d2d: mov    0x36(%r10),%rax
  0x00000000036c9d31: or     0x3e(%r10),%rax
  0x00000000036c9d35: jne    0x00000000036c9d41
  0x00000000036c9d37: movq   $0x0,0x16(%r10)
  0x00000000036c9d3f: jmp    0x00000000036c9d88
  0x00000000036c9d41: cmpq   $0x0,0x46(%r10)
  0x00000000036c9d49: je     0x00000000036c9d74
  0x00000000036c9d4b: movq   $0x0,0x16(%r10)
  0x00000000036c9d53: lock addl $0x0,(%rsp)
  0x00000000036c9d58: cmpq   $0x0,0x46(%r10)
  0x00000000036c9d60: jne    0x00000000036c9d79
  0x00000000036c9d62: movabs $0x0,%rax
  0x00000000036c9d6c: lock cmpxchg %r15,0x16(%r10)
  0x00000000036c9d72: jne    0x00000000036c9d79
  0x00000000036c9d74: or     $0x1,%eax
  0x00000000036c9d77: jmp    0x00000000036c9d88
  0x00000000036c9d79: test   $0x0,%eax
  0x00000000036c9d7e: jmp    0x00000000036c9d88
  0x00000000036c9d80: mov    (%rax),%r10
  0x00000000036c9d83: lock cmpxchg %r10,(%rcx)
  0x00000000036c9d88: je     0x00000000036c90bb
  0x00000000036c9d8e: mov    %rcx,%rbx
  0x00000000036c9d91: lea    0xd0(%rsp),%rdx    ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)

  0x00000000036c9d99: movabs $0x54fdce00,%r10
  0x00000000036c9da3: callq  *%r10              ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)

  0x00000000036c9da6: mov    %rbx,%rcx
  0x00000000036c9da9: jmpq   0x00000000036c90bb
  0x00000000036c9dae: mov    %r10d,0xc4(%rsp)   ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)

  0x00000000036c9db6: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000000036c9dc0: mov    0x3c(%rsp),%r8d
  0x00000000036c9dc5: xchg   %ax,%ax
  0x00000000036c9dc7: callq  0x0000000003693360  ; OopMap{[40]=Oop [48]=Oop [64]=Oop [72]=Oop [80]=Derived_oop_[104] [88]=Derived_oop_[104] [96]=Derived_oop_[104] [104]=Oop [112]=Oop [120]=Oop [144]=Oop [196]=NarrowOop off=3948}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ;   {runtime_call}
  0x00000000036c9dcc: mov    %rax,%r11
  0x00000000036c9dcf: mov    0xc4(%rsp),%r10d
  0x00000000036c9dd7: jmpq   0x00000000036c9694  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)

  0x00000000036c9ddc: mov    $0xffffff65,%edx
  0x00000000036c9de1: mov    %r14d,%ebp
  0x00000000036c9de4: mov    %rax,-0x8(%rsp)
  0x00000000036c9de9: mov    0x38(%rsp),%eax
  0x00000000036c9ded: mov    %eax,0x2c(%rsp)
  0x00000000036c9df1: mov    -0x8(%rsp),%rax
  0x00000000036c9df6: nop
  0x00000000036c9df7: callq  0x00000000035d57a0  ; OopMap{[64]=Oop [72]=Oop [104]=Oop off=3996}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ;   {runtime_call}
  0x00000000036c9dfc: int3                      ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)

  0x00000000036c9dfd: mov    $0xffffff65,%edx
  0x00000000036c9e02: mov    %r14d,%ebp
  0x00000000036c9e05: mov    %rax,-0x8(%rsp)
  0x00000000036c9e0a: mov    0x38(%rsp),%eax
  0x00000000036c9e0e: mov    %eax,0x2c(%rsp)
  0x00000000036c9e12: mov    -0x8(%rsp),%rax
  0x00000000036c9e17: mov    %ebx,0x58(%rsp)
  0x00000000036c9e1b: callq  0x00000000035d57a0  ; OopMap{[64]=Oop [72]=Oop [104]=Oop off=4032}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ;   {runtime_call}
  0x00000000036c9e20: int3                      ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)

  0x00000000036c9e21: lock cmpxchg %r10,(%rcx)
  0x00000000036c9e26: lea    0xd0(%rsp),%rbx
  0x00000000036c9e2e: mov    (%rcx),%rax
  0x00000000036c9e31: test   $0x2,%rax
  0x00000000036c9e37: jne    0x00000000036c9e5d
  0x00000000036c9e39: or     $0x1,%rax
  0x00000000036c9e3d: mov    %rax,(%rbx)
  0x00000000036c9e40: lock cmpxchg %rbx,(%rcx)
  0x00000000036c9e45: je     0x00000000036c9e76
  0x00000000036c9e4b: sub    %rsp,%rax
  0x00000000036c9e4e: and    $0xfffffffffffff007,%rax
  0x00000000036c9e55: mov    %rax,(%rbx)
  0x00000000036c9e58: jmpq   0x00000000036c9e76
  0x00000000036c9e5d: movq   $0x3,(%rbx)
  0x00000000036c9e64: mov    %rax,%rbx
  0x00000000036c9e67: mov    0x16(%rbx),%rax
  0x00000000036c9e6b: test   %rax,%rax
  0x00000000036c9e6e: jne    0x00000000036c9e76
  0x00000000036c9e70: lock cmpxchg %r15,0x16(%rbx)
  0x00000000036c9e76: je     0x00000000036c94bb
  0x00000000036c9e7c: mov    %r13,0x38(%rsp)
  0x00000000036c9e81: mov    %rcx,0x30(%rsp)
  0x00000000036c9e86: mov    %r9,0x28(%rsp)
  0x00000000036c9e8b: mov    %rdi,0x20(%rsp)
  0x00000000036c9e90: mov    %r8,%rbp
  0x00000000036c9e93: lea    0xd0(%rsp),%r8
  0x00000000036c9e9b: callq  0x0000000003693720  ; OopMap{rbp=Derived_oop_[48] [32]=Derived_oop_[48] [40]=Derived_oop_[48] [48]=Oop off=4160}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::toString@-1 (line 668)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ;   {runtime_call}
  0x00000000036c9ea0: mov    %rbp,%r8
  0x00000000036c9ea3: mov    0x20(%rsp),%rdi
  0x00000000036c9ea8: mov    0x28(%rsp),%r9
  0x00000000036c9ead: mov    0x30(%rsp),%rcx
  0x00000000036c9eb2: mov    0x38(%rsp),%r13
  0x00000000036c9eb7: jmpq   0x00000000036c94bb  ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@64 (line 120)

  0x00000000036c9ebc: test   $0x7,%rbx
  0x00000000036c9ec3: jne    0x00000000036c9e21
  0x00000000036c9ec9: test   $0x300,%rbx
  0x00000000036c9ed0: jne    0x00000000036c9edf
  0x00000000036c9ed2: and    $0x37f,%rax
  0x00000000036c9ed9: mov    %rax,%r11
  0x00000000036c9edc: or     %r15,%r11
  0x00000000036c9edf: lock cmpxchg %r11,(%rcx)
  0x00000000036c9ee4: jne    0x00000000036c9e7c
  0x00000000036c9ee6: jmpq   0x00000000036c94bb
  0x00000000036c9eeb: lea    0xd0(%rsp),%rax
  0x00000000036c9ef3: cmpq   $0x0,(%rax)
  0x00000000036c9efa: je     0x00000000036c9f74
  0x00000000036c9f00: mov    (%rcx),%r10
  0x00000000036c9f03: test   $0x2,%r10
  0x00000000036c9f0a: je     0x00000000036c9f6c
  0x00000000036c9f0c: mov    0x16(%r10),%rax
  0x00000000036c9f10: xor    %r15,%rax
  0x00000000036c9f13: or     0x26(%r10),%rax
  0x00000000036c9f17: jne    0x00000000036c9f74
  0x00000000036c9f19: mov    0x36(%r10),%rax
  0x00000000036c9f1d: or     0x3e(%r10),%rax
  0x00000000036c9f21: jne    0x00000000036c9f2d
  0x00000000036c9f23: movq   $0x0,0x16(%r10)
  0x00000000036c9f2b: jmp    0x00000000036c9f74
  0x00000000036c9f2d: cmpq   $0x0,0x46(%r10)
  0x00000000036c9f35: je     0x00000000036c9f60
  0x00000000036c9f37: movq   $0x0,0x16(%r10)
  0x00000000036c9f3f: lock addl $0x0,(%rsp)
  0x00000000036c9f44: cmpq   $0x0,0x46(%r10)
  0x00000000036c9f4c: jne    0x00000000036c9f65
  0x00000000036c9f4e: movabs $0x0,%rax
  0x00000000036c9f58: lock cmpxchg %r15,0x16(%r10)
  0x00000000036c9f5e: jne    0x00000000036c9f65
  0x00000000036c9f60: or     $0x1,%eax
  0x00000000036c9f63: jmp    0x00000000036c9f74
  0x00000000036c9f65: test   $0x0,%eax
  0x00000000036c9f6a: jmp    0x00000000036c9f74
  0x00000000036c9f6c: mov    (%rax),%r10
  0x00000000036c9f6f: lock cmpxchg %r10,(%rcx)
  0x00000000036c9f74: je     0x00000000036c9534
  0x00000000036c9f7a: lea    0xd0(%rsp),%rdx    ;*synchronization entry
                                                ; - java.lang.StringBuffer::toString@-1 (line 668)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)

  0x00000000036c9f82: movabs $0x54fdce00,%r10
  0x00000000036c9f8c: callq  *%r10              ;*areturn
                                                ; - java.lang.StringBuffer::toString@35 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)

  0x00000000036c9f8f: jmpq   0x00000000036c9534
  0x00000000036c9f94: mov    $0xffffff9d,%edx
  0x00000000036c9f99: mov    %r14d,0x20(%rsp)
  0x00000000036c9f9e: mov    %rbx,0x28(%rsp)
  0x00000000036c9fa3: mov    %r13,0x30(%rsp)
  0x00000000036c9fa8: mov    %rax,-0x8(%rsp)
  0x00000000036c9fad: mov    0x38(%rsp),%eax
  0x00000000036c9fb1: mov    %eax,0x24(%rsp)
  0x00000000036c9fb5: mov    -0x8(%rsp),%rax
  0x00000000036c9fba: nop
  0x00000000036c9fbb: callq  0x00000000035d57a0  ; OopMap{[40]=Oop [48]=Oop [72]=Oop off=4448}
                                                ;*iload
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 120)
                                                ;   {runtime_call}
  0x00000000036c9fc0: int3                      ;*iload
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 120)

  0x00000000036c9fc1: movslq 0x90(%rsp),%r10    ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)

  0x00000000036c9fc9: jmpq   0x00000000036c92bc
  0x00000000036c9fce: mov    %r10,%rdi
  0x00000000036c9fd1: xor    %rax,%rax
  0x00000000036c9fd4: shl    $0x3,%rcx
  0x00000000036c9fd8: rep rex.W stos %al,%es:(%rdi)
  0x00000000036c9fdb: xor    %r8d,%r8d
  0x00000000036c9fde: mov    %rbp,%r9
  0x00000000036c9fe1: xor    %edi,%edi
  0x00000000036c9fe3: callq  0x000000000369fea0  ; OopMap{rbp=Oop [40]=Oop [48]=Oop [64]=Oop [72]=Oop [80]=Derived_oop_[104] [88]=Derived_oop_[104] [96]=Derived_oop_[104] [104]=Oop [112]=Oop [120]=Oop off=4488}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ;   {runtime_call}
  0x00000000036c9fe8: jmpq   0x00000000036c93c9
  0x00000000036c9fed: mov    %r10,%rdi
  0x00000000036c9ff0: xor    %rax,%rax
  0x00000000036c9ff3: shl    $0x3,%rcx
  0x00000000036c9ff7: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)

  0x00000000036c9ffa: jmpq   0x00000000036c93c9
  0x00000000036c9fff: movslq 0x3c(%rsp),%r11    ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)

  0x00000000036ca004: jmpq   0x00000000036c960f
  0x00000000036ca009: mov    %r11,%rdi
  0x00000000036ca00c: xor    %rax,%rax
  0x00000000036ca00f: shl    $0x3,%rcx
  0x00000000036ca013: rep rex.W stos %al,%es:(%rdi)
  0x00000000036ca016: xor    %r8d,%r8d
  0x00000000036ca019: mov    0x90(%rsp),%r9
  0x00000000036ca021: xor    %edi,%edi
  0x00000000036ca023: callq  0x000000000369fea0  ; OopMap{[40]=Oop [48]=Oop [64]=Oop [72]=Oop [80]=Derived_oop_[104] [88]=Derived_oop_[104] [96]=Derived_oop_[104] [104]=Oop [112]=Oop [120]=Oop [144]=Oop off=4552}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ;   {runtime_call}
  0x00000000036ca028: jmpq   0x00000000036c9715
  0x00000000036ca02d: mov    %r11,%rdi
  0x00000000036ca030: xor    %rax,%rax
  0x00000000036ca033: shl    $0x3,%rcx
  0x00000000036ca037: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)

  0x00000000036ca03a: jmpq   0x00000000036c9715
  0x00000000036ca03f: lock cmpxchg %r8,(%rcx)
  0x00000000036ca044: lea    0xd0(%rsp),%rbx
  0x00000000036ca04c: mov    (%rcx),%rax
  0x00000000036ca04f: test   $0x2,%rax
  0x00000000036ca055: jne    0x00000000036ca07b
  0x00000000036ca057: or     $0x1,%rax
  0x00000000036ca05b: mov    %rax,(%rbx)
  0x00000000036ca05e: lock cmpxchg %rbx,(%rcx)
  0x00000000036ca063: je     0x00000000036ca094
  0x00000000036ca069: sub    %rsp,%rax
  0x00000000036ca06c: and    $0xfffffffffffff007,%rax
  0x00000000036ca073: mov    %rax,(%rbx)
  0x00000000036ca076: jmpq   0x00000000036ca094
  0x00000000036ca07b: movq   $0x3,(%rbx)
  0x00000000036ca082: mov    %rax,%rbx
  0x00000000036ca085: mov    0x16(%rbx),%rax
  0x00000000036ca089: test   %rax,%rax
  0x00000000036ca08c: jne    0x00000000036ca094
  0x00000000036ca08e: lock cmpxchg %r15,0x16(%rbx)
  0x00000000036ca094: je     0x00000000036c9433
  0x00000000036ca09a: mov    %rcx,%rbp
  0x00000000036ca09d: mov    0x70(%rsp),%rdx
  0x00000000036ca0a2: lea    0xd0(%rsp),%r8
  0x00000000036ca0aa: nop
  0x00000000036ca0ab: callq  0x0000000003693720  ; OopMap{rbp=Oop [64]=Oop [80]=Derived_oop_rbp [88]=Derived_oop_rbp [96]=Derived_oop_rbp [120]=Oop off=4688}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.WinNTFileSystem::normalize@120 (line 126)
                                                ;   {runtime_call}
  0x00000000036ca0b0: mov    %rbp,%rcx
  0x00000000036ca0b3: jmpq   0x00000000036c9433
  0x00000000036ca0b8: lea    0xd0(%rsp),%rax
  0x00000000036ca0c0: cmpq   $0x0,(%rax)
  0x00000000036ca0c7: je     0x00000000036ca141
  0x00000000036ca0cd: mov    (%rcx),%r10
  0x00000000036ca0d0: test   $0x2,%r10
  0x00000000036ca0d7: je     0x00000000036ca139
  0x00000000036ca0d9: mov    0x16(%r10),%rax
  0x00000000036ca0dd: xor    %r15,%rax
  0x00000000036ca0e0: or     0x26(%r10),%rax
  0x00000000036ca0e4: jne    0x00000000036ca141
  0x00000000036ca0e6: mov    0x36(%r10),%rax
  0x00000000036ca0ea: or     0x3e(%r10),%rax
  0x00000000036ca0ee: jne    0x00000000036ca0fa
  0x00000000036ca0f0: movq   $0x0,0x16(%r10)
  0x00000000036ca0f8: jmp    0x00000000036ca141
  0x00000000036ca0fa: cmpq   $0x0,0x46(%r10)
  0x00000000036ca102: je     0x00000000036ca12d
  0x00000000036ca104: movq   $0x0,0x16(%r10)
  0x00000000036ca10c: lock addl $0x0,(%rsp)
  0x00000000036ca111: cmpq   $0x0,0x46(%r10)
  0x00000000036ca119: jne    0x00000000036ca132
  0x00000000036ca11b: movabs $0x0,%rax
  0x00000000036ca125: lock cmpxchg %r15,0x16(%r10)
  0x00000000036ca12b: jne    0x00000000036ca132
  0x00000000036ca12d: or     $0x1,%eax
  0x00000000036ca130: jmp    0x00000000036ca141
  0x00000000036ca132: test   $0x0,%eax
  0x00000000036ca137: jmp    0x00000000036ca141
  0x00000000036ca139: mov    (%rax),%r10
  0x00000000036ca13c: lock cmpxchg %r10,(%rcx)
  0x00000000036ca141: je     0x00000000036c944e
  0x00000000036ca147: mov    %rcx,%r13
  0x00000000036ca14a: mov    %r9,%rbx
  0x00000000036ca14d: lea    0xd0(%rsp),%rdx    ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.WinNTFileSystem::normalize@120 (line 126)

  0x00000000036ca155: movabs $0x54fdce00,%r10
  0x00000000036ca15f: callq  *%r10              ;*ireturn
                                                ; - java.lang.StringBuffer::length@4 (line 163)
                                                ; - java.io.WinNTFileSystem::normalize@120 (line 126)

  0x00000000036ca162: mov    %rbx,%r9
  0x00000000036ca165: mov    %r13,%rcx
  0x00000000036ca168: jmpq   0x00000000036c944e  ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@90 (line 123)

  0x00000000036ca16d: test   $0x7,%r11
  0x00000000036ca174: jne    0x00000000036ca03f
  0x00000000036ca17a: test   $0x300,%r11
  0x00000000036ca181: jne    0x00000000036ca190
  0x00000000036ca183: and    $0x37f,%rax
  0x00000000036ca18a: mov    %rax,%r10
  0x00000000036ca18d: or     %r15,%r10
  0x00000000036ca190: lock cmpxchg %r10,(%rcx)
  0x00000000036ca195: jne    0x00000000036ca09a
  0x00000000036ca19b: jmpq   0x00000000036c9433
  0x00000000036ca1a0: mov    $0xfffffff6,%edx
  0x00000000036ca1a5: xchg   %ax,%ax
  0x00000000036ca1a7: callq  0x00000000035d57a0  ; OopMap{off=4940}
                                                ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ;   {runtime_call}
  0x00000000036ca1ac: int3   
  0x00000000036ca1ad: mov    $0xfffffff6,%edx
  0x00000000036ca1b2: nop
  0x00000000036ca1b3: callq  0x00000000035d57a0  ; OopMap{off=4952}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ;   {runtime_call}
  0x00000000036ca1b8: int3   
  0x00000000036ca1b9: mov    $0xfffffff6,%edx
  0x00000000036ca1be: mov    %r11d,%ebp
  0x00000000036ca1c1: xchg   %ax,%ax
  0x00000000036ca1c3: callq  0x00000000035d57a0  ; OopMap{off=4968}
                                                ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ;   {runtime_call}
  0x00000000036ca1c8: int3   
  0x00000000036ca1c9: mov    $0xfffffff6,%edx
  0x00000000036ca1ce: mov    0x68(%rsp),%rbp
  0x00000000036ca1d3: callq  0x00000000035d57a0  ; OopMap{rbp=Oop off=4984}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ;   {runtime_call}
  0x00000000036ca1d8: int3   
  0x00000000036ca1d9: mov    $0xfffffff6,%edx
  0x00000000036ca1de: mov    0x38(%rsp),%ebp
  0x00000000036ca1e2: nop
  0x00000000036ca1e3: callq  0x00000000035d57a0  ; OopMap{off=5000}
                                                ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ;   {runtime_call}
  0x00000000036ca1e8: int3   
  0x00000000036ca1e9: mov    $0xfffffff6,%edx
  0x00000000036ca1ee: mov    0x68(%rsp),%rbp
  0x00000000036ca1f3: callq  0x00000000035d57a0  ; OopMap{rbp=Oop off=5016}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ;   {runtime_call}
  0x00000000036ca1f8: int3   
  0x00000000036ca1f9: mov    $0xfffffff6,%edx
  0x00000000036ca1fe: mov    0x68(%rsp),%rbp
  0x00000000036ca203: mov    %r11d,0x20(%rsp)
  0x00000000036ca208: data16 xchg %ax,%ax
  0x00000000036ca20b: callq  0x00000000035d57a0  ; OopMap{rbp=Oop off=5040}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ;   {runtime_call}
  0x00000000036ca210: int3   
  0x00000000036ca211: mov    $0xfffffff6,%edx
  0x00000000036ca216: nop
  0x00000000036ca217: callq  0x00000000035d57a0  ; OopMap{off=5052}
                                                ;*invokevirtual toString
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ;   {runtime_call}
  0x00000000036ca21c: int3   
  0x00000000036ca21d: mov    $0xfffffff6,%edx
  0x00000000036ca222: nop
  0x00000000036ca223: callq  0x00000000035d57a0  ; OopMap{off=5064}
                                                ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::normalize@120 (line 126)
                                                ;   {runtime_call}
  0x00000000036ca228: int3                      ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)

  0x00000000036ca229: mov    %rax,%rbx
  0x00000000036ca22c: jmp    0x00000000036ca266  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)

  0x00000000036ca22e: mov    %rax,%rbx
  0x00000000036ca231: jmp    0x00000000036ca2a7  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)

  0x00000000036ca233: mov    %rax,%rbx
  0x00000000036ca236: jmp    0x00000000036ca266  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@146 (line 129)

  0x00000000036ca238: mov    %rax,%rdx
  0x00000000036ca23b: jmpq   0x00000000036ca2c0  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)

  0x00000000036ca240: mov    %rax,%rbx
  0x00000000036ca243: jmp    0x00000000036ca2a7  ;*new
                                                ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)

  0x00000000036ca245: mov    %rax,%rbx
  0x00000000036ca248: jmp    0x00000000036ca288  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 145)

  0x00000000036ca24a: mov    %rax,%rdx
  0x00000000036ca24d: jmp    0x00000000036ca2c0  ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalize@182 (line 137)

  0x00000000036ca24f: mov    %rax,%rdx
  0x00000000036ca252: jmp    0x00000000036ca2c0  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalize@179 (line 137)

  0x00000000036ca254: mov    %rax,%rdx
  0x00000000036ca257: jmp    0x00000000036ca2c0  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 134)

  0x00000000036ca259: mov    %rax,%rdx
  0x00000000036ca25c: jmp    0x00000000036ca2c0  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalize@134 (line 127)

  0x00000000036ca25e: mov    %rax,%rdx
  0x00000000036ca261: jmp    0x00000000036ca2c0  ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)

  0x00000000036ca263: mov    %rax,%rbx
  0x00000000036ca266: mov    0x68(%rsp),%r11
  0x00000000036ca26b: mov    0x88(%rsp),%r10
  0x00000000036ca273: and    (%r11),%r10
  0x00000000036ca276: cmp    $0x5,%r10
  0x00000000036ca27a: jne    0x00000000036ca427  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 103)

  0x00000000036ca280: mov    %rbx,%rdx
  0x00000000036ca283: jmp    0x00000000036ca2c0  ;*invokestatic copyOfRange
                                                ; - java.lang.StringBuffer::toString@17 (line 669)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)

  0x00000000036ca285: mov    %rax,%rbx
  0x00000000036ca288: mov    0x28(%rsp),%r11
  0x00000000036ca28d: mov    0x30(%rsp),%r10
  0x00000000036ca292: and    (%r11),%r10
  0x00000000036ca295: cmp    $0x5,%r10
  0x00000000036ca299: jne    0x00000000036ca379  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 103)

  0x00000000036ca29f: mov    %rbx,%rdx
  0x00000000036ca2a2: jmp    0x00000000036ca2c0  ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)

  0x00000000036ca2a4: mov    %rax,%rbx
  0x00000000036ca2a7: mov    0x68(%rsp),%r11
  0x00000000036ca2ac: mov    0x88(%rsp),%r10
  0x00000000036ca2b4: and    (%r11),%r10
  0x00000000036ca2b7: cmp    $0x5,%r10
  0x00000000036ca2bb: jne    0x00000000036ca2cd  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 103)

  0x00000000036ca2bd: mov    %rbx,%rdx          ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@146 (line 129)

  0x00000000036ca2c0: add    $0xe0,%rsp
  0x00000000036ca2c7: pop    %rbp
  0x00000000036ca2c8: jmpq   0x000000000369e960  ;   {runtime_call}
  0x00000000036ca2cd: lea    0xd0(%rsp),%rax
  0x00000000036ca2d5: cmpq   $0x0,(%rax)
  0x00000000036ca2dc: je     0x00000000036ca356
  0x00000000036ca2e2: mov    (%r11),%r10
  0x00000000036ca2e5: test   $0x2,%r10
  0x00000000036ca2ec: je     0x00000000036ca34e
  0x00000000036ca2ee: mov    0x16(%r10),%rax
  0x00000000036ca2f2: xor    %r15,%rax
  0x00000000036ca2f5: or     0x26(%r10),%rax
  0x00000000036ca2f9: jne    0x00000000036ca356
  0x00000000036ca2fb: mov    0x36(%r10),%rax
  0x00000000036ca2ff: or     0x3e(%r10),%rax
  0x00000000036ca303: jne    0x00000000036ca30f
  0x00000000036ca305: movq   $0x0,0x16(%r10)
  0x00000000036ca30d: jmp    0x00000000036ca356
  0x00000000036ca30f: cmpq   $0x0,0x46(%r10)
  0x00000000036ca317: je     0x00000000036ca342
  0x00000000036ca319: movq   $0x0,0x16(%r10)
  0x00000000036ca321: lock addl $0x0,(%rsp)
  0x00000000036ca326: cmpq   $0x0,0x46(%r10)
  0x00000000036ca32e: jne    0x00000000036ca347
  0x00000000036ca330: movabs $0x0,%rax
  0x00000000036ca33a: lock cmpxchg %r15,0x16(%r10)
  0x00000000036ca340: jne    0x00000000036ca347
  0x00000000036ca342: or     $0x1,%eax
  0x00000000036ca345: jmp    0x00000000036ca356
  0x00000000036ca347: test   $0x0,%eax
  0x00000000036ca34c: jmp    0x00000000036ca356
  0x00000000036ca34e: mov    (%rax),%r10
  0x00000000036ca351: lock cmpxchg %r10,(%r11)
  0x00000000036ca356: je     0x00000000036ca2bd
  0x00000000036ca35c: mov    %r11,%rcx
  0x00000000036ca35f: lea    0xd0(%rsp),%rdx    ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)

  0x00000000036ca367: movabs $0x54fdce00,%r10
  0x00000000036ca371: callq  *%r10              ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 103)

  0x00000000036ca374: jmpq   0x00000000036ca2bd
  0x00000000036ca379: lea    0xd0(%rsp),%rax
  0x00000000036ca381: cmpq   $0x0,(%rax)
  0x00000000036ca388: je     0x00000000036ca402
  0x00000000036ca38e: mov    (%r11),%r10
  0x00000000036ca391: test   $0x2,%r10
  0x00000000036ca398: je     0x00000000036ca3fa
  0x00000000036ca39a: mov    0x16(%r10),%rax
  0x00000000036ca39e: xor    %r15,%rax
  0x00000000036ca3a1: or     0x26(%r10),%rax
  0x00000000036ca3a5: jne    0x00000000036ca402
  0x00000000036ca3a7: mov    0x36(%r10),%rax
  0x00000000036ca3ab: or     0x3e(%r10),%rax
  0x00000000036ca3af: jne    0x00000000036ca3bb
  0x00000000036ca3b1: movq   $0x0,0x16(%r10)
  0x00000000036ca3b9: jmp    0x00000000036ca402
  0x00000000036ca3bb: cmpq   $0x0,0x46(%r10)
  0x00000000036ca3c3: je     0x00000000036ca3ee
  0x00000000036ca3c5: movq   $0x0,0x16(%r10)
  0x00000000036ca3cd: lock addl $0x0,(%rsp)
  0x00000000036ca3d2: cmpq   $0x0,0x46(%r10)
  0x00000000036ca3da: jne    0x00000000036ca3f3
  0x00000000036ca3dc: movabs $0x0,%rax
  0x00000000036ca3e6: lock cmpxchg %r15,0x16(%r10)
  0x00000000036ca3ec: jne    0x00000000036ca3f3
  0x00000000036ca3ee: or     $0x1,%eax
  0x00000000036ca3f1: jmp    0x00000000036ca402
  0x00000000036ca3f3: test   $0x0,%eax
  0x00000000036ca3f8: jmp    0x00000000036ca402
  0x00000000036ca3fa: mov    (%rax),%r10
  0x00000000036ca3fd: lock cmpxchg %r10,(%r11)
  0x00000000036ca402: je     0x00000000036ca29f
  0x00000000036ca408: mov    0x28(%rsp),%rcx
  0x00000000036ca40d: lea    0xd0(%rsp),%rdx    ;*synchronization entry
                                                ; - java.lang.StringBuffer::toString@-1 (line 668)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)

  0x00000000036ca415: movabs $0x54fdce00,%r10
  0x00000000036ca41f: callq  *%r10              ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 103)

  0x00000000036ca422: jmpq   0x00000000036ca29f
  0x00000000036ca427: lea    0xd0(%rsp),%rax
  0x00000000036ca42f: cmpq   $0x0,(%rax)
  0x00000000036ca436: je     0x00000000036ca4b0
  0x00000000036ca43c: mov    (%r11),%r10
  0x00000000036ca43f: test   $0x2,%r10
  0x00000000036ca446: je     0x00000000036ca4a8
  0x00000000036ca448: mov    0x16(%r10),%rax
  0x00000000036ca44c: xor    %r15,%rax
  0x00000000036ca44f: or     0x26(%r10),%rax
  0x00000000036ca453: jne    0x00000000036ca4b0
  0x00000000036ca455: mov    0x36(%r10),%rax
  0x00000000036ca459: or     0x3e(%r10),%rax
  0x00000000036ca45d: jne    0x00000000036ca469
  0x00000000036ca45f: movq   $0x0,0x16(%r10)
  0x00000000036ca467: jmp    0x00000000036ca4b0
  0x00000000036ca469: cmpq   $0x0,0x46(%r10)
  0x00000000036ca471: je     0x00000000036ca49c
  0x00000000036ca473: movq   $0x0,0x16(%r10)
  0x00000000036ca47b: lock addl $0x0,(%rsp)
  0x00000000036ca480: cmpq   $0x0,0x46(%r10)
  0x00000000036ca488: jne    0x00000000036ca4a1
  0x00000000036ca48a: movabs $0x0,%rax
  0x00000000036ca494: lock cmpxchg %r15,0x16(%r10)
  0x00000000036ca49a: jne    0x00000000036ca4a1
  0x00000000036ca49c: or     $0x1,%eax
  0x00000000036ca49f: jmp    0x00000000036ca4b0
  0x00000000036ca4a1: test   $0x0,%eax
  0x00000000036ca4a6: jmp    0x00000000036ca4b0
  0x00000000036ca4a8: mov    (%rax),%r10
  0x00000000036ca4ab: lock cmpxchg %r10,(%r11)
  0x00000000036ca4b0: je     0x00000000036ca280
  0x00000000036ca4b6: mov    %r11,%rcx
  0x00000000036ca4b9: lea    0xd0(%rsp),%rdx    ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)

  0x00000000036ca4c1: movabs $0x54fdce00,%r10
  0x00000000036ca4cb: callq  *%r10              ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 103)

  0x00000000036ca4ce: jmpq   0x00000000036ca280  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)

  0x00000000036ca4d3: hlt    
  0x00000000036ca4d4: hlt    
  0x00000000036ca4d5: hlt    
  0x00000000036ca4d6: hlt    
  0x00000000036ca4d7: hlt    
  0x00000000036ca4d8: hlt    
  0x00000000036ca4d9: hlt    
  0x00000000036ca4da: hlt    
  0x00000000036ca4db: hlt    
  0x00000000036ca4dc: hlt    
  0x00000000036ca4dd: hlt    
  0x00000000036ca4de: hlt    
  0x00000000036ca4df: hlt    
[Stub Code]
  0x00000000036ca4e0: movabs $0x0,%rbx          ;   {no_reloc}
  0x00000000036ca4ea: jmpq   0x00000000036ca4ea  ;   {runtime_call}
  0x00000000036ca4ef: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036ca4f9: jmpq   0x00000000036ca4f9  ;   {runtime_call}
  0x00000000036ca4fe: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036ca508: jmpq   0x00000000036ca508  ;   {runtime_call}
  0x00000000036ca50d: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036ca517: jmpq   0x00000000036ca517  ;   {runtime_call}
  0x00000000036ca51c: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036ca526: jmpq   0x00000000036ca526  ;   {runtime_call}
  0x00000000036ca52b: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036ca535: jmpq   0x00000000036ca535  ;   {runtime_call}
  0x00000000036ca53a: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036ca544: jmpq   0x00000000036ca544  ;   {runtime_call}
  0x00000000036ca549: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036ca553: jmpq   0x00000000036ca553  ;   {runtime_call}
  0x00000000036ca558: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036ca562: jmpq   0x00000000036ca562  ;   {runtime_call}
[Exception Handler]
  0x00000000036ca567: jmpq   0x000000000368dc20  ;   {runtime_call}
[Deopt Handler Code]
  0x00000000036ca56c: callq  0x00000000036ca571
  0x00000000036ca571: subq   $0x5,(%rsp)
  0x00000000036ca576: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036ca57b: hlt    
  0x00000000036ca57c: hlt    
  0x00000000036ca57d: hlt    
  0x00000000036ca57e: hlt    
  0x00000000036ca57f: hlt    
<nmethod compile_id='86' compile_kind='osr' compiler='C2' level='4' entry='0x00000000036c8e60' size='12240' address='0x00000000036c8c50' relocation_offset='288' insts_offset='528' stub_offset='6288' scopes_data_offset='6560' scopes_pcs_offset='8696' dependencies_offset='11816' handler_table_offset='11824' nul_chk_table_offset='12160' method='java/io/WinNTFileSystem normalize (Ljava/lang/String;II)Ljava/lang/String;' bytes='231' count='769' backedge_count='76121' iicount='769' stamp='2.141'/>
<writer thread='17528'/>
<task_queued compile_id='106' method='java/lang/String &lt;init&gt; ([CZ)V' bytes='10' count='1408' iicount='1408' level='3' stamp='2.141' comment='tiered' hot_count='1408'/>
<task_queued compile_id='107' method='java/lang/StringBuilder toString ()Ljava/lang/String;' bytes='17' count='1536' iicount='1536' level='3' stamp='2.141' comment='tiered' hot_count='1536'/>
<task_queued compile_id='108' method='java/util/Properties toHex (I)C' bytes='9' count='1024' iicount='1024' level='3' stamp='2.145' comment='tiered' hot_count='1024'/>
<writer thread='7332'/>
Decoding compiled method 0x00000000036d0450:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;
  # this:     rdx:rdx   = &apos;sun/misc/URLClassPath&apos;
  # parm0:    r8        = int
  #           [sp+0x180]  (sp of caller)
  0x00000000036d0860: mov    0x8(%rdx),%r10d
  0x00000000036d0864: shl    $0x3,%r10
  0x00000000036d0868: cmp    %rax,%r10
  0x00000000036d086b: jne    0x00000000035d5f60  ;   {runtime_call}
  0x00000000036d0871: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000036d087c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000036d0880: mov    %eax,-0x6000(%rsp)
  0x00000000036d0887: push   %rbp
  0x00000000036d0888: sub    $0x170,%rsp
  0x00000000036d088f: mov    %rdx,0xb0(%rsp)
  0x00000000036d0897: mov    %r8d,0xac(%rsp)
  0x00000000036d089f: lea    0x110(%rsp),%rsi
  0x00000000036d08a7: mov    %rdx,0x8(%rsi)
  0x00000000036d08ab: mov    (%rdx),%rax
  0x00000000036d08ae: mov    %rax,%rdi
  0x00000000036d08b1: and    $0x7,%rdi
  0x00000000036d08b5: cmp    $0x5,%rdi
  0x00000000036d08b9: jne    0x00000000036d0940
  0x00000000036d08bf: mov    0x8(%rdx),%edi
  0x00000000036d08c2: shl    $0x3,%rdi
  0x00000000036d08c6: mov    0xa8(%rdi),%rdi
  0x00000000036d08cd: or     %r15,%rdi
  0x00000000036d08d0: xor    %rax,%rdi
  0x00000000036d08d3: and    $0xffffffffffffff87,%rdi
  0x00000000036d08d7: je     0x00000000036d0968
  0x00000000036d08dd: test   $0x7,%rdi
  0x00000000036d08e4: jne    0x00000000036d092d
  0x00000000036d08e6: test   $0x300,%rdi
  0x00000000036d08ed: jne    0x00000000036d090c
  0x00000000036d08ef: and    $0x37f,%rax
  0x00000000036d08f6: mov    %rax,%rdi
  0x00000000036d08f9: or     %r15,%rdi
  0x00000000036d08fc: lock cmpxchg %rdi,(%rdx)
  0x00000000036d0901: jne    0x00000000036d2d1f
  0x00000000036d0907: jmpq   0x00000000036d0968
  0x00000000036d090c: mov    0x8(%rdx),%edi
  0x00000000036d090f: shl    $0x3,%rdi
  0x00000000036d0913: mov    0xa8(%rdi),%rdi
  0x00000000036d091a: or     %r15,%rdi
  0x00000000036d091d: lock cmpxchg %rdi,(%rdx)
  0x00000000036d0922: jne    0x00000000036d2d1f
  0x00000000036d0928: jmpq   0x00000000036d0968
  0x00000000036d092d: mov    0x8(%rdx),%edi
  0x00000000036d0930: shl    $0x3,%rdi
  0x00000000036d0934: mov    0xa8(%rdi),%rdi
  0x00000000036d093b: lock cmpxchg %rdi,(%rdx)
  0x00000000036d0940: mov    (%rdx),%rax
  0x00000000036d0943: or     $0x1,%rax
  0x00000000036d0947: mov    %rax,(%rsi)
  0x00000000036d094a: lock cmpxchg %rsi,(%rdx)
  0x00000000036d094f: je     0x00000000036d0968
  0x00000000036d0955: sub    %rsp,%rax
  0x00000000036d0958: and    $0xfffffffffffff007,%rax
  0x00000000036d095f: mov    %rax,(%rsi)
  0x00000000036d0962: jne    0x00000000036d2d1f
  0x00000000036d0968: movabs $0x1c731bb0,%rax   ;   {metadata(method data for {method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d0972: mov    0xdc(%rax),%esi
  0x00000000036d0978: add    $0x8,%esi
  0x00000000036d097b: mov    %esi,0xdc(%rax)
  0x00000000036d0981: movabs $0x1c67b478,%rax   ;   {metadata({method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d098b: and    $0x1ff8,%esi
  0x00000000036d0991: cmp    $0x0,%esi
  0x00000000036d0994: je     0x00000000036d2d32  ;*aload_0
                                                ; - sun.misc.URLClassPath::getLoader@0 (line 494)

  0x00000000036d099a: movsbl 0xc(%rdx),%eax     ;*getfield closed
                                                ; - sun.misc.URLClassPath::getLoader@1 (line 494)

  0x00000000036d099e: cmp    $0x0,%eax
  0x00000000036d09a1: movabs $0x1c731bb0,%rax   ;   {metadata(method data for {method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d09ab: movabs $0x108,%rsi
  0x00000000036d09b5: je     0x00000000036d09c5
  0x00000000036d09bb: movabs $0x118,%rsi
  0x00000000036d09c5: mov    (%rax,%rsi,1),%rdi
  0x00000000036d09c9: lea    0x1(%rdi),%rdi
  0x00000000036d09cd: mov    %rdi,(%rax,%rsi,1)
  0x00000000036d09d1: jne    0x00000000036d2984  ;*ifeq
                                                ; - sun.misc.URLClassPath::getLoader@4 (line 494)

  0x00000000036d09d7: nop
  0x00000000036d09d8: mov    0x18(%rdx),%esi
  0x00000000036d09db: shl    $0x3,%rsi          ;*getfield loaders
                                                ; - sun.misc.URLClassPath::getLoader@10 (line 499)

  0x00000000036d09df: cmp    (%rsi),%rax        ;*invokevirtual size
                                                ; - sun.misc.URLClassPath::getLoader@13 (line 499)
                                                ; implicit exception: dispatches to 0x00000000036d2d49
  0x00000000036d09e2: mov    %rsi,%rax
  0x00000000036d09e5: movabs $0x1c731bb0,%rdi   ;   {metadata(method data for {method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d09ef: addq   $0x1,0x138(%rdi)
  0x00000000036d09f7: mov    0x10(%rsi),%edi    ;*getfield size
                                                ; - java.util.ArrayList::size@1 (line 282)
                                                ; - sun.misc.URLClassPath::getLoader@13 (line 499)

  0x00000000036d09fa: mov    %r8,%rax
  0x00000000036d09fd: inc    %eax
  0x00000000036d09ff: cmp    %eax,%edi
  0x00000000036d0a01: movabs $0x1c731bb0,%rax   ;   {metadata(method data for {method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d0a0b: movabs $0x158,%rbx
  0x00000000036d0a15: jge    0x00000000036d0a25
  0x00000000036d0a1b: movabs $0x168,%rbx
  0x00000000036d0a25: mov    (%rax,%rbx,1),%rcx
  0x00000000036d0a29: lea    0x1(%rcx),%rcx
  0x00000000036d0a2d: mov    %rcx,(%rax,%rbx,1)
  0x00000000036d0a31: jge    0x00000000036d2696  ;*if_icmpge
                                                ; - sun.misc.URLClassPath::getLoader@19 (line 499)

  0x00000000036d0a37: mov    0x14(%rdx),%esi
  0x00000000036d0a3a: shl    $0x3,%rsi          ;*getfield urls
                                                ; - sun.misc.URLClassPath::getLoader@23 (line 502)

  0x00000000036d0a3e: lea    0x120(%rsp),%rdi
  0x00000000036d0a46: mov    %rsi,0x8(%rdi)
  0x00000000036d0a4a: mov    (%rsi),%rax        ; implicit exception: dispatches to 0x00000000036d2d4e
  0x00000000036d0a4d: mov    %rax,%rbx
  0x00000000036d0a50: and    $0x7,%rbx
  0x00000000036d0a54: cmp    $0x5,%rbx
  0x00000000036d0a58: jne    0x00000000036d0adf
  0x00000000036d0a5e: mov    0x8(%rsi),%ebx
  0x00000000036d0a61: shl    $0x3,%rbx
  0x00000000036d0a65: mov    0xa8(%rbx),%rbx
  0x00000000036d0a6c: or     %r15,%rbx
  0x00000000036d0a6f: xor    %rax,%rbx
  0x00000000036d0a72: and    $0xffffffffffffff87,%rbx
  0x00000000036d0a76: je     0x00000000036d0b07
  0x00000000036d0a7c: test   $0x7,%rbx
  0x00000000036d0a83: jne    0x00000000036d0acc
  0x00000000036d0a85: test   $0x300,%rbx
  0x00000000036d0a8c: jne    0x00000000036d0aab
  0x00000000036d0a8e: and    $0x37f,%rax
  0x00000000036d0a95: mov    %rax,%rbx
  0x00000000036d0a98: or     %r15,%rbx
  0x00000000036d0a9b: lock cmpxchg %rbx,(%rsi)
  0x00000000036d0aa0: jne    0x00000000036d2d53
  0x00000000036d0aa6: jmpq   0x00000000036d0b07
  0x00000000036d0aab: mov    0x8(%rsi),%ebx
  0x00000000036d0aae: shl    $0x3,%rbx
  0x00000000036d0ab2: mov    0xa8(%rbx),%rbx
  0x00000000036d0ab9: or     %r15,%rbx
  0x00000000036d0abc: lock cmpxchg %rbx,(%rsi)
  0x00000000036d0ac1: jne    0x00000000036d2d53
  0x00000000036d0ac7: jmpq   0x00000000036d0b07
  0x00000000036d0acc: mov    0x8(%rsi),%ebx
  0x00000000036d0acf: shl    $0x3,%rbx
  0x00000000036d0ad3: mov    0xa8(%rbx),%rbx
  0x00000000036d0ada: lock cmpxchg %rbx,(%rsi)
  0x00000000036d0adf: mov    (%rsi),%rax
  0x00000000036d0ae2: or     $0x1,%rax
  0x00000000036d0ae6: mov    %rax,(%rdi)
  0x00000000036d0ae9: lock cmpxchg %rdi,(%rsi)
  0x00000000036d0aee: je     0x00000000036d0b07
  0x00000000036d0af4: sub    %rsp,%rax
  0x00000000036d0af7: and    $0xfffffffffffff007,%rax
  0x00000000036d0afe: mov    %rax,(%rdi)
  0x00000000036d0b01: jne    0x00000000036d2d53  ;*monitorenter
                                                ; - sun.misc.URLClassPath::getLoader@28 (line 502)

  0x00000000036d0b07: mov    0x14(%rdx),%edi
  0x00000000036d0b0a: shl    $0x3,%rdi          ;*getfield urls
                                                ; - sun.misc.URLClassPath::getLoader@30 (line 503)

  0x00000000036d0b0e: cmp    (%rdi),%rax        ;*invokevirtual empty
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 503)
                                                ; implicit exception: dispatches to 0x00000000036d2d66
  0x00000000036d0b11: mov    %rdi,%rax
  0x00000000036d0b14: movabs $0x1c731bb0,%rbx   ;   {metadata(method data for {method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d0b1e: addq   $0x1,0x188(%rbx)
  0x00000000036d0b26: movabs $0x1c8158c0,%rax   ;   {metadata(method data for {method} {0x000000001c5589c8} &apos;empty&apos; &apos;()Z&apos; in &apos;java/util/Stack&apos;)}
  0x00000000036d0b30: mov    0xdc(%rax),%ebx
  0x00000000036d0b36: add    $0x8,%ebx
  0x00000000036d0b39: mov    %ebx,0xdc(%rax)
  0x00000000036d0b3f: movabs $0x1c5589c0,%rax   ;   {metadata({method} {0x000000001c5589c8} &apos;empty&apos; &apos;()Z&apos; in &apos;java/util/Stack&apos;)}
  0x00000000036d0b49: and    $0x7ffff8,%ebx
  0x00000000036d0b4f: cmp    $0x0,%ebx
  0x00000000036d0b52: je     0x00000000036d2d6b
  0x00000000036d0b58: mov    %rdi,%rax
  0x00000000036d0b5b: movabs $0x1c8158c0,%rbx   ;   {metadata(method data for {method} {0x000000001c5589c8} &apos;empty&apos; &apos;()Z&apos; in &apos;java/util/Stack&apos;)}
  0x00000000036d0b65: mov    0x8(%rax),%eax
  0x00000000036d0b68: shl    $0x3,%rax
  0x00000000036d0b6c: cmp    0x110(%rbx),%rax
  0x00000000036d0b73: jne    0x00000000036d0b82
  0x00000000036d0b75: addq   $0x1,0x118(%rbx)
  0x00000000036d0b7d: jmpq   0x00000000036d0be8
  0x00000000036d0b82: cmp    0x120(%rbx),%rax
  0x00000000036d0b89: jne    0x00000000036d0b98
  0x00000000036d0b8b: addq   $0x1,0x128(%rbx)
  0x00000000036d0b93: jmpq   0x00000000036d0be8
  0x00000000036d0b98: cmpq   $0x0,0x110(%rbx)
  0x00000000036d0ba3: jne    0x00000000036d0bbc
  0x00000000036d0ba5: mov    %rax,0x110(%rbx)
  0x00000000036d0bac: movq   $0x1,0x118(%rbx)
  0x00000000036d0bb7: jmpq   0x00000000036d0be8
  0x00000000036d0bbc: cmpq   $0x0,0x120(%rbx)
  0x00000000036d0bc7: jne    0x00000000036d0be0
  0x00000000036d0bc9: mov    %rax,0x120(%rbx)
  0x00000000036d0bd0: movq   $0x1,0x128(%rbx)
  0x00000000036d0bdb: jmpq   0x00000000036d0be8
  0x00000000036d0be0: addq   $0x1,0x108(%rbx)
  0x00000000036d0be8: lea    0x130(%rsp),%rbx
  0x00000000036d0bf0: mov    %rdi,0x8(%rbx)
  0x00000000036d0bf4: mov    (%rdi),%rax
  0x00000000036d0bf7: mov    %rax,%rcx
  0x00000000036d0bfa: and    $0x7,%rcx
  0x00000000036d0bfe: cmp    $0x5,%rcx
  0x00000000036d0c02: jne    0x00000000036d0c89
  0x00000000036d0c08: mov    0x8(%rdi),%ecx
  0x00000000036d0c0b: shl    $0x3,%rcx
  0x00000000036d0c0f: mov    0xa8(%rcx),%rcx
  0x00000000036d0c16: or     %r15,%rcx
  0x00000000036d0c19: xor    %rax,%rcx
  0x00000000036d0c1c: and    $0xffffffffffffff87,%rcx
  0x00000000036d0c20: je     0x00000000036d0cb1
  0x00000000036d0c26: test   $0x7,%rcx
  0x00000000036d0c2d: jne    0x00000000036d0c76
  0x00000000036d0c2f: test   $0x300,%rcx
  0x00000000036d0c36: jne    0x00000000036d0c55
  0x00000000036d0c38: and    $0x37f,%rax
  0x00000000036d0c3f: mov    %rax,%rcx
  0x00000000036d0c42: or     %r15,%rcx
  0x00000000036d0c45: lock cmpxchg %rcx,(%rdi)
  0x00000000036d0c4a: jne    0x00000000036d2d82
  0x00000000036d0c50: jmpq   0x00000000036d0cb1
  0x00000000036d0c55: mov    0x8(%rdi),%ecx
  0x00000000036d0c58: shl    $0x3,%rcx
  0x00000000036d0c5c: mov    0xa8(%rcx),%rcx
  0x00000000036d0c63: or     %r15,%rcx
  0x00000000036d0c66: lock cmpxchg %rcx,(%rdi)
  0x00000000036d0c6b: jne    0x00000000036d2d82
  0x00000000036d0c71: jmpq   0x00000000036d0cb1
  0x00000000036d0c76: mov    0x8(%rdi),%ecx
  0x00000000036d0c79: shl    $0x3,%rcx
  0x00000000036d0c7d: mov    0xa8(%rcx),%rcx
  0x00000000036d0c84: lock cmpxchg %rcx,(%rdi)
  0x00000000036d0c89: mov    (%rdi),%rax
  0x00000000036d0c8c: or     $0x1,%rax
  0x00000000036d0c90: mov    %rax,(%rbx)
  0x00000000036d0c93: lock cmpxchg %rbx,(%rdi)
  0x00000000036d0c98: je     0x00000000036d0cb1
  0x00000000036d0c9e: sub    %rsp,%rax
  0x00000000036d0ca1: and    $0xfffffffffffff007,%rax
  0x00000000036d0ca8: mov    %rax,(%rbx)
  0x00000000036d0cab: jne    0x00000000036d2d82  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 503)

  0x00000000036d0cb1: mov    0x10(%rdi),%edi    ;*getfield elementCount
                                                ; - java.util.Vector::size@1 (line 315)
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 503)

  0x00000000036d0cb4: lea    0x130(%rsp),%rax
  0x00000000036d0cbc: mov    0x8(%rax),%rcx
  0x00000000036d0cc0: mov    (%rcx),%rbx
  0x00000000036d0cc3: and    $0x7,%rbx
  0x00000000036d0cc7: cmp    $0x5,%rbx
  0x00000000036d0ccb: je     0x00000000036d0ce8
  0x00000000036d0cd1: mov    (%rax),%rbx
  0x00000000036d0cd4: test   %rbx,%rbx
  0x00000000036d0cd7: je     0x00000000036d0ce8
  0x00000000036d0cdd: lock cmpxchg %rbx,(%rcx)
  0x00000000036d0ce2: jne    0x00000000036d2d95  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 503)

  0x00000000036d0ce8: cmp    $0x0,%edi
  0x00000000036d0ceb: movabs $0x1c8158c0,%rax   ;   {metadata(method data for {method} {0x000000001c5589c8} &apos;empty&apos; &apos;()Z&apos; in &apos;java/util/Stack&apos;)}
  0x00000000036d0cf5: movabs $0x138,%rdi
  0x00000000036d0cff: jne    0x00000000036d0d0f
  0x00000000036d0d05: movabs $0x148,%rdi
  0x00000000036d0d0f: mov    (%rax,%rdi,1),%rbx
  0x00000000036d0d13: lea    0x1(%rbx),%rbx
  0x00000000036d0d17: mov    %rbx,(%rax,%rdi,1)
  0x00000000036d0d1b: jne    0x00000000036d0d3b  ;*ifne
                                                ; - java.util.Stack::empty@4 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 503)

  0x00000000036d0d21: movabs $0x1c8158c0,%rax   ;   {metadata(method data for {method} {0x000000001c5589c8} &apos;empty&apos; &apos;()Z&apos; in &apos;java/util/Stack&apos;)}
  0x00000000036d0d2b: incl   0x158(%rax)
  0x00000000036d0d31: mov    $0x1,%eax
  0x00000000036d0d36: jmpq   0x00000000036d0d40  ;*goto
                                                ; - java.util.Stack::empty@8 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 503)

  0x00000000036d0d3b: mov    $0x0,%eax          ;*ireturn
                                                ; - java.util.Stack::empty@12 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 503)

  0x00000000036d0d40: and    $0x1,%eax
  0x00000000036d0d43: cmp    $0x0,%eax
  0x00000000036d0d46: movabs $0x1c731bb0,%rax   ;   {metadata(method data for {method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d0d50: movabs $0x1a8,%rdi
  0x00000000036d0d5a: je     0x00000000036d0d6a
  0x00000000036d0d60: movabs $0x1b8,%rdi
  0x00000000036d0d6a: mov    (%rax,%rdi,1),%rbx
  0x00000000036d0d6e: lea    0x1(%rbx),%rbx
  0x00000000036d0d72: mov    %rbx,(%rax,%rdi,1)
  0x00000000036d0d76: jne    0x00000000036d2903  ;*ifeq
                                                ; - sun.misc.URLClassPath::getLoader@36 (line 503)

  0x00000000036d0d7c: mov    0x14(%rdx),%edi
  0x00000000036d0d7f: shl    $0x3,%rdi          ;*getfield urls
                                                ; - sun.misc.URLClassPath::getLoader@44 (line 506)

  0x00000000036d0d83: cmp    (%rdi),%rax        ;*invokevirtual pop
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)
                                                ; implicit exception: dispatches to 0x00000000036d2dab
  0x00000000036d0d86: mov    %rdi,%rax
  0x00000000036d0d89: movabs $0x1c731bb0,%rbx   ;   {metadata(method data for {method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d0d93: addq   $0x1,0x1d8(%rbx)
  0x00000000036d0d9b: lea    0x130(%rsp),%rbx
  0x00000000036d0da3: mov    %rdi,0x8(%rbx)
  0x00000000036d0da7: mov    (%rdi),%rax
  0x00000000036d0daa: mov    %rax,%rcx
  0x00000000036d0dad: and    $0x7,%rcx
  0x00000000036d0db1: cmp    $0x5,%rcx
  0x00000000036d0db5: jne    0x00000000036d0e3c
  0x00000000036d0dbb: mov    0x8(%rdi),%ecx
  0x00000000036d0dbe: shl    $0x3,%rcx
  0x00000000036d0dc2: mov    0xa8(%rcx),%rcx
  0x00000000036d0dc9: or     %r15,%rcx
  0x00000000036d0dcc: xor    %rax,%rcx
  0x00000000036d0dcf: and    $0xffffffffffffff87,%rcx
  0x00000000036d0dd3: je     0x00000000036d0e64
  0x00000000036d0dd9: test   $0x7,%rcx
  0x00000000036d0de0: jne    0x00000000036d0e29
  0x00000000036d0de2: test   $0x300,%rcx
  0x00000000036d0de9: jne    0x00000000036d0e08
  0x00000000036d0deb: and    $0x37f,%rax
  0x00000000036d0df2: mov    %rax,%rcx
  0x00000000036d0df5: or     %r15,%rcx
  0x00000000036d0df8: lock cmpxchg %rcx,(%rdi)
  0x00000000036d0dfd: jne    0x00000000036d2db0
  0x00000000036d0e03: jmpq   0x00000000036d0e64
  0x00000000036d0e08: mov    0x8(%rdi),%ecx
  0x00000000036d0e0b: shl    $0x3,%rcx
  0x00000000036d0e0f: mov    0xa8(%rcx),%rcx
  0x00000000036d0e16: or     %r15,%rcx
  0x00000000036d0e19: lock cmpxchg %rcx,(%rdi)
  0x00000000036d0e1e: jne    0x00000000036d2db0
  0x00000000036d0e24: jmpq   0x00000000036d0e64
  0x00000000036d0e29: mov    0x8(%rdi),%ecx
  0x00000000036d0e2c: shl    $0x3,%rcx
  0x00000000036d0e30: mov    0xa8(%rcx),%rcx
  0x00000000036d0e37: lock cmpxchg %rcx,(%rdi)
  0x00000000036d0e3c: mov    (%rdi),%rax
  0x00000000036d0e3f: or     $0x1,%rax
  0x00000000036d0e43: mov    %rax,(%rbx)
  0x00000000036d0e46: lock cmpxchg %rbx,(%rdi)
  0x00000000036d0e4b: je     0x00000000036d0e64
  0x00000000036d0e51: sub    %rsp,%rax
  0x00000000036d0e54: and    $0xfffffffffffff007,%rax
  0x00000000036d0e5b: mov    %rax,(%rbx)
  0x00000000036d0e5e: jne    0x00000000036d2db0  ;*synchronization entry
                                                ; - java.util.Stack::pop@-1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00000000036d0e64: movabs $0x1c815a90,%rax   ;   {metadata(method data for {method} {0x000000001c558878} &apos;pop&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00000000036d0e6e: mov    0xdc(%rax),%ebx
  0x00000000036d0e74: add    $0x8,%ebx
  0x00000000036d0e77: mov    %ebx,0xdc(%rax)
  0x00000000036d0e7d: movabs $0x1c558870,%rax   ;   {metadata({method} {0x000000001c558878} &apos;pop&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00000000036d0e87: and    $0x7ffff8,%ebx
  0x00000000036d0e8d: cmp    $0x0,%ebx
  0x00000000036d0e90: je     0x00000000036d2dc3
  0x00000000036d0e96: mov    %rdi,%rax
  0x00000000036d0e99: movabs $0x1c815a90,%rbx   ;   {metadata(method data for {method} {0x000000001c558878} &apos;pop&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00000000036d0ea3: mov    0x8(%rax),%eax
  0x00000000036d0ea6: shl    $0x3,%rax
  0x00000000036d0eaa: cmp    0x110(%rbx),%rax
  0x00000000036d0eb1: jne    0x00000000036d0ec0
  0x00000000036d0eb3: addq   $0x1,0x118(%rbx)
  0x00000000036d0ebb: jmpq   0x00000000036d0f26
  0x00000000036d0ec0: cmp    0x120(%rbx),%rax
  0x00000000036d0ec7: jne    0x00000000036d0ed6
  0x00000000036d0ec9: addq   $0x1,0x128(%rbx)
  0x00000000036d0ed1: jmpq   0x00000000036d0f26
  0x00000000036d0ed6: cmpq   $0x0,0x110(%rbx)
  0x00000000036d0ee1: jne    0x00000000036d0efa
  0x00000000036d0ee3: mov    %rax,0x110(%rbx)
  0x00000000036d0eea: movq   $0x1,0x118(%rbx)
  0x00000000036d0ef5: jmpq   0x00000000036d0f26
  0x00000000036d0efa: cmpq   $0x0,0x120(%rbx)
  0x00000000036d0f05: jne    0x00000000036d0f1e
  0x00000000036d0f07: mov    %rax,0x120(%rbx)
  0x00000000036d0f0e: movq   $0x1,0x128(%rbx)
  0x00000000036d0f19: jmpq   0x00000000036d0f26
  0x00000000036d0f1e: addq   $0x1,0x108(%rbx)
  0x00000000036d0f26: lea    0x140(%rsp),%rbx
  0x00000000036d0f2e: mov    %rdi,0x8(%rbx)
  0x00000000036d0f32: mov    (%rdi),%rax
  0x00000000036d0f35: mov    %rax,%rcx
  0x00000000036d0f38: and    $0x7,%rcx
  0x00000000036d0f3c: cmp    $0x5,%rcx
  0x00000000036d0f40: jne    0x00000000036d0fc7
  0x00000000036d0f46: mov    0x8(%rdi),%ecx
  0x00000000036d0f49: shl    $0x3,%rcx
  0x00000000036d0f4d: mov    0xa8(%rcx),%rcx
  0x00000000036d0f54: or     %r15,%rcx
  0x00000000036d0f57: xor    %rax,%rcx
  0x00000000036d0f5a: and    $0xffffffffffffff87,%rcx
  0x00000000036d0f5e: je     0x00000000036d0fef
  0x00000000036d0f64: test   $0x7,%rcx
  0x00000000036d0f6b: jne    0x00000000036d0fb4
  0x00000000036d0f6d: test   $0x300,%rcx
  0x00000000036d0f74: jne    0x00000000036d0f93
  0x00000000036d0f76: and    $0x37f,%rax
  0x00000000036d0f7d: mov    %rax,%rcx
  0x00000000036d0f80: or     %r15,%rcx
  0x00000000036d0f83: lock cmpxchg %rcx,(%rdi)
  0x00000000036d0f88: jne    0x00000000036d2dda
  0x00000000036d0f8e: jmpq   0x00000000036d0fef
  0x00000000036d0f93: mov    0x8(%rdi),%ecx
  0x00000000036d0f96: shl    $0x3,%rcx
  0x00000000036d0f9a: mov    0xa8(%rcx),%rcx
  0x00000000036d0fa1: or     %r15,%rcx
  0x00000000036d0fa4: lock cmpxchg %rcx,(%rdi)
  0x00000000036d0fa9: jne    0x00000000036d2dda
  0x00000000036d0faf: jmpq   0x00000000036d0fef
  0x00000000036d0fb4: mov    0x8(%rdi),%ecx
  0x00000000036d0fb7: shl    $0x3,%rcx
  0x00000000036d0fbb: mov    0xa8(%rcx),%rcx
  0x00000000036d0fc2: lock cmpxchg %rcx,(%rdi)
  0x00000000036d0fc7: mov    (%rdi),%rax
  0x00000000036d0fca: or     $0x1,%rax
  0x00000000036d0fce: mov    %rax,(%rbx)
  0x00000000036d0fd1: lock cmpxchg %rbx,(%rdi)
  0x00000000036d0fd6: je     0x00000000036d0fef
  0x00000000036d0fdc: sub    %rsp,%rax
  0x00000000036d0fdf: and    $0xfffffffffffff007,%rax
  0x00000000036d0fe6: mov    %rax,(%rbx)
  0x00000000036d0fe9: jne    0x00000000036d2dda  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00000000036d0fef: mov    0x10(%rdi),%ebx    ;*getfield elementCount
                                                ; - java.util.Vector::size@1 (line 315)
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00000000036d0ff2: lea    0x140(%rsp),%rax
  0x00000000036d0ffa: mov    0x8(%rax),%r9
  0x00000000036d0ffe: mov    (%r9),%rcx
  0x00000000036d1001: and    $0x7,%rcx
  0x00000000036d1005: cmp    $0x5,%rcx
  0x00000000036d1009: je     0x00000000036d1026
  0x00000000036d100f: mov    (%rax),%rcx
  0x00000000036d1012: test   %rcx,%rcx
  0x00000000036d1015: je     0x00000000036d1026
  0x00000000036d101b: lock cmpxchg %rcx,(%r9)
  0x00000000036d1020: jne    0x00000000036d2ded  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00000000036d1026: mov    %rdi,%rax
  0x00000000036d1029: movabs $0x1c815a90,%rcx   ;   {metadata(method data for {method} {0x000000001c558878} &apos;pop&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00000000036d1033: movabs $0x7c00169b0,%r10  ;   {metadata(&apos;java/util/Stack&apos;)}
  0x00000000036d103d: mov    %r10,0x140(%rcx)
  0x00000000036d1044: addq   $0x1,0x148(%rcx)
  0x00000000036d104c: lea    0x140(%rsp),%rcx
  0x00000000036d1054: mov    %rdi,0x8(%rcx)
  0x00000000036d1058: mov    (%rdi),%rax
  0x00000000036d105b: mov    %rax,%r9
  0x00000000036d105e: and    $0x7,%r9
  0x00000000036d1062: cmp    $0x5,%r9
  0x00000000036d1066: jne    0x00000000036d10f0
  0x00000000036d106c: mov    0x8(%rdi),%r9d
  0x00000000036d1070: shl    $0x3,%r9
  0x00000000036d1074: mov    0xa8(%r9),%r9
  0x00000000036d107b: or     %r15,%r9
  0x00000000036d107e: xor    %rax,%r9
  0x00000000036d1081: and    $0xffffffffffffff87,%r9
  0x00000000036d1085: je     0x00000000036d1118
  0x00000000036d108b: test   $0x7,%r9
  0x00000000036d1092: jne    0x00000000036d10dc
  0x00000000036d1094: test   $0x300,%r9
  0x00000000036d109b: jne    0x00000000036d10ba
  0x00000000036d109d: and    $0x37f,%rax
  0x00000000036d10a4: mov    %rax,%r9
  0x00000000036d10a7: or     %r15,%r9
  0x00000000036d10aa: lock cmpxchg %r9,(%rdi)
  0x00000000036d10af: jne    0x00000000036d2e03
  0x00000000036d10b5: jmpq   0x00000000036d1118
  0x00000000036d10ba: mov    0x8(%rdi),%r9d
  0x00000000036d10be: shl    $0x3,%r9
  0x00000000036d10c2: mov    0xa8(%r9),%r9
  0x00000000036d10c9: or     %r15,%r9
  0x00000000036d10cc: lock cmpxchg %r9,(%rdi)
  0x00000000036d10d1: jne    0x00000000036d2e03
  0x00000000036d10d7: jmpq   0x00000000036d1118
  0x00000000036d10dc: mov    0x8(%rdi),%r9d
  0x00000000036d10e0: shl    $0x3,%r9
  0x00000000036d10e4: mov    0xa8(%r9),%r9
  0x00000000036d10eb: lock cmpxchg %r9,(%rdi)
  0x00000000036d10f0: mov    (%rdi),%rax
  0x00000000036d10f3: or     $0x1,%rax
  0x00000000036d10f7: mov    %rax,(%rcx)
  0x00000000036d10fa: lock cmpxchg %rcx,(%rdi)
  0x00000000036d10ff: je     0x00000000036d1118
  0x00000000036d1105: sub    %rsp,%rax
  0x00000000036d1108: and    $0xfffffffffffff007,%rax
  0x00000000036d110f: mov    %rax,(%rcx)
  0x00000000036d1112: jne    0x00000000036d2e03  ;*synchronization entry
                                                ; - java.util.Stack::peek@-1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00000000036d1118: movabs $0x1c815c68,%rax   ;   {metadata(method data for {method} {0x000000001c558928} &apos;peek&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00000000036d1122: mov    0xdc(%rax),%ecx
  0x00000000036d1128: add    $0x8,%ecx
  0x00000000036d112b: mov    %ecx,0xdc(%rax)
  0x00000000036d1131: movabs $0x1c558920,%rax   ;   {metadata({method} {0x000000001c558928} &apos;peek&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00000000036d113b: and    $0x7ffff8,%ecx
  0x00000000036d1141: cmp    $0x0,%ecx
  0x00000000036d1144: je     0x00000000036d2e16
  0x00000000036d114a: mov    %rdi,%rax
  0x00000000036d114d: movabs $0x1c815c68,%rcx   ;   {metadata(method data for {method} {0x000000001c558928} &apos;peek&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00000000036d1157: mov    0x8(%rax),%eax
  0x00000000036d115a: shl    $0x3,%rax
  0x00000000036d115e: cmp    0x110(%rcx),%rax
  0x00000000036d1165: jne    0x00000000036d1174
  0x00000000036d1167: addq   $0x1,0x118(%rcx)
  0x00000000036d116f: jmpq   0x00000000036d11da
  0x00000000036d1174: cmp    0x120(%rcx),%rax
  0x00000000036d117b: jne    0x00000000036d118a
  0x00000000036d117d: addq   $0x1,0x128(%rcx)
  0x00000000036d1185: jmpq   0x00000000036d11da
  0x00000000036d118a: cmpq   $0x0,0x110(%rcx)
  0x00000000036d1195: jne    0x00000000036d11ae
  0x00000000036d1197: mov    %rax,0x110(%rcx)
  0x00000000036d119e: movq   $0x1,0x118(%rcx)
  0x00000000036d11a9: jmpq   0x00000000036d11da
  0x00000000036d11ae: cmpq   $0x0,0x120(%rcx)
  0x00000000036d11b9: jne    0x00000000036d11d2
  0x00000000036d11bb: mov    %rax,0x120(%rcx)
  0x00000000036d11c2: movq   $0x1,0x128(%rcx)
  0x00000000036d11cd: jmpq   0x00000000036d11da
  0x00000000036d11d2: addq   $0x1,0x108(%rcx)
  0x00000000036d11da: lea    0x150(%rsp),%rcx
  0x00000000036d11e2: mov    %rdi,0x8(%rcx)
  0x00000000036d11e6: mov    (%rdi),%rax
  0x00000000036d11e9: mov    %rax,%r9
  0x00000000036d11ec: and    $0x7,%r9
  0x00000000036d11f0: cmp    $0x5,%r9
  0x00000000036d11f4: jne    0x00000000036d127e
  0x00000000036d11fa: mov    0x8(%rdi),%r9d
  0x00000000036d11fe: shl    $0x3,%r9
  0x00000000036d1202: mov    0xa8(%r9),%r9
  0x00000000036d1209: or     %r15,%r9
  0x00000000036d120c: xor    %rax,%r9
  0x00000000036d120f: and    $0xffffffffffffff87,%r9
  0x00000000036d1213: je     0x00000000036d12a6
  0x00000000036d1219: test   $0x7,%r9
  0x00000000036d1220: jne    0x00000000036d126a
  0x00000000036d1222: test   $0x300,%r9
  0x00000000036d1229: jne    0x00000000036d1248
  0x00000000036d122b: and    $0x37f,%rax
  0x00000000036d1232: mov    %rax,%r9
  0x00000000036d1235: or     %r15,%r9
  0x00000000036d1238: lock cmpxchg %r9,(%rdi)
  0x00000000036d123d: jne    0x00000000036d2e2d
  0x00000000036d1243: jmpq   0x00000000036d12a6
  0x00000000036d1248: mov    0x8(%rdi),%r9d
  0x00000000036d124c: shl    $0x3,%r9
  0x00000000036d1250: mov    0xa8(%r9),%r9
  0x00000000036d1257: or     %r15,%r9
  0x00000000036d125a: lock cmpxchg %r9,(%rdi)
  0x00000000036d125f: jne    0x00000000036d2e2d
  0x00000000036d1265: jmpq   0x00000000036d12a6
  0x00000000036d126a: mov    0x8(%rdi),%r9d
  0x00000000036d126e: shl    $0x3,%r9
  0x00000000036d1272: mov    0xa8(%r9),%r9
  0x00000000036d1279: lock cmpxchg %r9,(%rdi)
  0x00000000036d127e: mov    (%rdi),%rax
  0x00000000036d1281: or     $0x1,%rax
  0x00000000036d1285: mov    %rax,(%rcx)
  0x00000000036d1288: lock cmpxchg %rcx,(%rdi)
  0x00000000036d128d: je     0x00000000036d12a6
  0x00000000036d1293: sub    %rsp,%rax
  0x00000000036d1296: and    $0xfffffffffffff007,%rax
  0x00000000036d129d: mov    %rax,(%rcx)
  0x00000000036d12a0: jne    0x00000000036d2e2d  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00000000036d12a6: mov    0x10(%rdi),%ecx    ;*getfield elementCount
                                                ; - java.util.Vector::size@1 (line 315)
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00000000036d12a9: lea    0x150(%rsp),%rax
  0x00000000036d12b1: mov    0x8(%rax),%r11
  0x00000000036d12b5: mov    (%r11),%r9
  0x00000000036d12b8: and    $0x7,%r9
  0x00000000036d12bc: cmp    $0x5,%r9
  0x00000000036d12c0: je     0x00000000036d12dd
  0x00000000036d12c6: mov    (%rax),%r9
  0x00000000036d12c9: test   %r9,%r9
  0x00000000036d12cc: je     0x00000000036d12dd
  0x00000000036d12d2: lock cmpxchg %r9,(%r11)
  0x00000000036d12d7: jne    0x00000000036d2e40  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00000000036d12dd: cmp    $0x0,%ecx
  0x00000000036d12e0: movabs $0x1c815c68,%rax   ;   {metadata(method data for {method} {0x000000001c558928} &apos;peek&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00000000036d12ea: movabs $0x138,%r9
  0x00000000036d12f4: jne    0x00000000036d1304
  0x00000000036d12fa: movabs $0x148,%r9
  0x00000000036d1304: mov    (%rax,%r9,1),%r11
  0x00000000036d1308: lea    0x1(%r11),%r11
  0x00000000036d130c: mov    %r11,(%rax,%r9,1)
  0x00000000036d1310: mov    %ebx,0xa8(%rsp)
  0x00000000036d1317: je     0x00000000036d2a59  ;*ifne
                                                ; - java.util.Stack::peek@6 (line 101)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00000000036d131d: mov    %rsi,0xb8(%rsp)
  0x00000000036d1325: mov    %rdi,%rax
  0x00000000036d1328: movabs $0x1c815c68,%r9    ;   {metadata(method data for {method} {0x000000001c558928} &apos;peek&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00000000036d1332: mov    0x8(%rax),%eax
  0x00000000036d1335: shl    $0x3,%rax
  0x00000000036d1339: cmp    0x170(%r9),%rax
  0x00000000036d1340: jne    0x00000000036d134f
  0x00000000036d1342: addq   $0x1,0x178(%r9)
  0x00000000036d134a: jmpq   0x00000000036d13b5
  0x00000000036d134f: cmp    0x180(%r9),%rax
  0x00000000036d1356: jne    0x00000000036d1365
  0x00000000036d1358: addq   $0x1,0x188(%r9)
  0x00000000036d1360: jmpq   0x00000000036d13b5
  0x00000000036d1365: cmpq   $0x0,0x170(%r9)
  0x00000000036d1370: jne    0x00000000036d1389
  0x00000000036d1372: mov    %rax,0x170(%r9)
  0x00000000036d1379: movq   $0x1,0x178(%r9)
  0x00000000036d1384: jmpq   0x00000000036d13b5
  0x00000000036d1389: cmpq   $0x0,0x180(%r9)
  0x00000000036d1394: jne    0x00000000036d13ad
  0x00000000036d1396: mov    %rax,0x180(%r9)
  0x00000000036d139d: movq   $0x1,0x188(%r9)
  0x00000000036d13a8: jmpq   0x00000000036d13b5
  0x00000000036d13ad: addq   $0x1,0x168(%r9)
  0x00000000036d13b5: dec    %ecx
  0x00000000036d13b7: mov    %rcx,%r8
  0x00000000036d13ba: mov    %rdi,%rdx          ;*invokevirtual elementAt
                                                ; - java.util.Stack::peek@21 (line 103)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00000000036d13bd: mov    %rdi,0xa0(%rsp)
  0x00000000036d13c5: nop
  0x00000000036d13c6: nop
  0x00000000036d13c7: callq  0x00000000035d61a0  ; OopMap{[184]=Oop [176]=Oop [160]=Oop [280]=Oop [296]=Oop [312]=Oop [328]=Oop off=2924}
                                                ;*invokevirtual elementAt
                                                ; - java.util.Stack::peek@21 (line 103)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)
                                                ;   {optimized virtual_call}
  0x00000000036d13cc: mov    %rax,0xc0(%rsp)
  0x00000000036d13d4: lea    0x140(%rsp),%rax
  0x00000000036d13dc: mov    0x8(%rax),%rdx
  0x00000000036d13e0: mov    (%rdx),%r8
  0x00000000036d13e3: and    $0x7,%r8
  0x00000000036d13e7: cmp    $0x5,%r8
  0x00000000036d13eb: je     0x00000000036d1408
  0x00000000036d13f1: mov    (%rax),%r8
  0x00000000036d13f4: test   %r8,%r8
  0x00000000036d13f7: je     0x00000000036d1408
  0x00000000036d13fd: lock cmpxchg %r8,(%rdx)
  0x00000000036d1402: jne    0x00000000036d2e56  ;*synchronization entry
                                                ; - java.util.Stack::peek@-1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00000000036d1408: mov    0xa0(%rsp),%rdi
  0x00000000036d1410: movabs $0x1c815a90,%r8    ;   {metadata(method data for {method} {0x000000001c558878} &apos;pop&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00000000036d141a: mov    0x8(%rdi),%edi
  0x00000000036d141d: shl    $0x3,%rdi
  0x00000000036d1421: cmp    0x170(%r8),%rdi
  0x00000000036d1428: jne    0x00000000036d1437
  0x00000000036d142a: addq   $0x1,0x178(%r8)
  0x00000000036d1432: jmpq   0x00000000036d149d
  0x00000000036d1437: cmp    0x180(%r8),%rdi
  0x00000000036d143e: jne    0x00000000036d144d
  0x00000000036d1440: addq   $0x1,0x188(%r8)
  0x00000000036d1448: jmpq   0x00000000036d149d
  0x00000000036d144d: cmpq   $0x0,0x170(%r8)
  0x00000000036d1458: jne    0x00000000036d1471
  0x00000000036d145a: mov    %rdi,0x170(%r8)
  0x00000000036d1461: movq   $0x1,0x178(%r8)
  0x00000000036d146c: jmpq   0x00000000036d149d
  0x00000000036d1471: cmpq   $0x0,0x180(%r8)
  0x00000000036d147c: jne    0x00000000036d1495
  0x00000000036d147e: mov    %rdi,0x180(%r8)
  0x00000000036d1485: movq   $0x1,0x188(%r8)
  0x00000000036d1490: jmpq   0x00000000036d149d
  0x00000000036d1495: addq   $0x1,0x168(%r8)
  0x00000000036d149d: mov    0xa8(%rsp),%ebx
  0x00000000036d14a4: dec    %ebx
  0x00000000036d14a6: mov    %rbx,%r8
  0x00000000036d14a9: mov    0xa0(%rsp),%rdx    ;*invokevirtual removeElementAt
                                                ; - java.util.Stack::pop@14 (line 85)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00000000036d14b1: nop
  0x00000000036d14b2: nop
  0x00000000036d14b3: nop
  0x00000000036d14b4: nop
  0x00000000036d14b5: nop
  0x00000000036d14b6: nop
  0x00000000036d14b7: callq  0x00000000035d61a0  ; OopMap{[184]=Oop [176]=Oop [192]=Oop [280]=Oop [296]=Oop [312]=Oop off=3164}
                                                ;*invokevirtual removeElementAt
                                                ; - java.util.Stack::pop@14 (line 85)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)
                                                ;   {optimized virtual_call}
  0x00000000036d14bc: lea    0x130(%rsp),%rax
  0x00000000036d14c4: mov    0x8(%rax),%rsi
  0x00000000036d14c8: mov    (%rsi),%rdx
  0x00000000036d14cb: and    $0x7,%rdx
  0x00000000036d14cf: cmp    $0x5,%rdx
  0x00000000036d14d3: je     0x00000000036d14f0
  0x00000000036d14d9: mov    (%rax),%rdx
  0x00000000036d14dc: test   %rdx,%rdx
  0x00000000036d14df: je     0x00000000036d14f0
  0x00000000036d14e5: lock cmpxchg %rdx,(%rsi)
  0x00000000036d14ea: jne    0x00000000036d2e6c  ;*synchronization entry
                                                ; - java.util.Stack::pop@-1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00000000036d14f0: mov    0xc0(%rsp),%rax
  0x00000000036d14f8: cmp    $0x0,%rax
  0x00000000036d14fc: jne    0x00000000036d1517
  0x00000000036d14fe: movabs $0x1c731bb0,%rdx   ;   {metadata(method data for {method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d1508: orl    $0x100,0x1f0(%rdx)
  0x00000000036d1512: jmpq   0x00000000036d15d7
  0x00000000036d1517: movabs $0x7c000f070,%rdi  ;   {metadata(&apos;java/net/URL&apos;)}
  0x00000000036d1521: mov    0x8(%rax),%esi
  0x00000000036d1524: shl    $0x3,%rsi
  0x00000000036d1528: cmp    %rsi,%rdi
  0x00000000036d152b: jne    0x00000000036d15bb
  0x00000000036d1531: movabs $0x1c731bb0,%rdx   ;   {metadata(method data for {method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d153b: mov    0x8(%rax),%edi
  0x00000000036d153e: shl    $0x3,%rdi
  0x00000000036d1542: cmp    0x200(%rdx),%rdi
  0x00000000036d1549: jne    0x00000000036d1558
  0x00000000036d154b: addq   $0x1,0x208(%rdx)
  0x00000000036d1553: jmpq   0x00000000036d15d7
  0x00000000036d1558: cmp    0x210(%rdx),%rdi
  0x00000000036d155f: jne    0x00000000036d156e
  0x00000000036d1561: addq   $0x1,0x218(%rdx)
  0x00000000036d1569: jmpq   0x00000000036d15d7
  0x00000000036d156e: cmpq   $0x0,0x200(%rdx)
  0x00000000036d1579: jne    0x00000000036d1592
  0x00000000036d157b: mov    %rdi,0x200(%rdx)
  0x00000000036d1582: movq   $0x1,0x208(%rdx)
  0x00000000036d158d: jmpq   0x00000000036d15d7
  0x00000000036d1592: cmpq   $0x0,0x210(%rdx)
  0x00000000036d159d: jne    0x00000000036d15b6
  0x00000000036d159f: mov    %rdi,0x210(%rdx)
  0x00000000036d15a6: movq   $0x1,0x218(%rdx)
  0x00000000036d15b1: jmpq   0x00000000036d15d7
  0x00000000036d15b6: jmpq   0x00000000036d15d7
  0x00000000036d15bb: movabs $0x1c731bb0,%rdx   ;   {metadata(method data for {method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d15c5: subq   $0x1,0x1f8(%rdx)
  0x00000000036d15cd: jmpq   0x00000000036d2e82
  0x00000000036d15d2: jmpq   0x00000000036d15d7
  0x00000000036d15d7: mov    %rax,%rsi          ;*checkcast
                                                ; - sun.misc.URLClassPath::getLoader@50 (line 506)

  0x00000000036d15da: mov    %rsi,0xc8(%rsp)
  0x00000000036d15e2: lea    0x120(%rsp),%rax
  0x00000000036d15ea: mov    0x8(%rax),%rdi
  0x00000000036d15ee: mov    (%rdi),%rdx
  0x00000000036d15f1: and    $0x7,%rdx
  0x00000000036d15f5: cmp    $0x5,%rdx
  0x00000000036d15f9: je     0x00000000036d1616
  0x00000000036d15ff: mov    (%rax),%rdx
  0x00000000036d1602: test   %rdx,%rdx
  0x00000000036d1605: je     0x00000000036d1616
  0x00000000036d160b: lock cmpxchg %rdx,(%rdi)
  0x00000000036d1610: jne    0x00000000036d2e8b  ;*monitorexit
                                                ; - sun.misc.URLClassPath::getLoader@55 (line 508)

  0x00000000036d1616: movabs $0x1c731bb0,%rdx   ;   {metadata(method data for {method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d1620: incl   0x228(%rdx)        ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@56 (line 508)

  0x00000000036d1626: movabs $0x1c731bb0,%rdi   ;   {metadata(method data for {method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d1630: addq   $0x1,0x240(%rdi)
  0x00000000036d1638: mov    %rsi,%rdx          ;*invokestatic urlNoFragString
                                                ; - sun.misc.URLClassPath::getLoader@67 (line 512)

  0x00000000036d163b: nop
  0x00000000036d163c: nop
  0x00000000036d163d: nop
  0x00000000036d163e: nop
  0x00000000036d163f: callq  0x00000000035d6620  ; OopMap{[176]=Oop [200]=Oop [280]=Oop off=3556}
                                                ;*invokestatic urlNoFragString
                                                ; - sun.misc.URLClassPath::getLoader@67 (line 512)
                                                ;   {static_call}
  0x00000000036d1644: mov    %rax,0xd8(%rsp)
  0x00000000036d164c: mov    0xb0(%rsp),%rdx
  0x00000000036d1654: mov    0x1c(%rdx),%esi
  0x00000000036d1657: shl    $0x3,%rsi          ;*getfield lmap
                                                ; - sun.misc.URLClassPath::getLoader@72 (line 513)

  0x00000000036d165b: cmp    (%rsi),%rax        ;*invokevirtual containsKey
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)
                                                ; implicit exception: dispatches to 0x00000000036d2ea1
  0x00000000036d165e: mov    %rsi,%rdi
  0x00000000036d1661: movabs $0x1c731bb0,%rbx   ;   {metadata(method data for {method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d166b: mov    0x8(%rdi),%edi
  0x00000000036d166e: shl    $0x3,%rdi
  0x00000000036d1672: cmp    0x258(%rbx),%rdi
  0x00000000036d1679: jne    0x00000000036d1688
  0x00000000036d167b: addq   $0x1,0x260(%rbx)
  0x00000000036d1683: jmpq   0x00000000036d16ee
  0x00000000036d1688: cmp    0x268(%rbx),%rdi
  0x00000000036d168f: jne    0x00000000036d169e
  0x00000000036d1691: addq   $0x1,0x270(%rbx)
  0x00000000036d1699: jmpq   0x00000000036d16ee
  0x00000000036d169e: cmpq   $0x0,0x258(%rbx)
  0x00000000036d16a9: jne    0x00000000036d16c2
  0x00000000036d16ab: mov    %rdi,0x258(%rbx)
  0x00000000036d16b2: movq   $0x1,0x260(%rbx)
  0x00000000036d16bd: jmpq   0x00000000036d16ee
  0x00000000036d16c2: cmpq   $0x0,0x268(%rbx)
  0x00000000036d16cd: jne    0x00000000036d16e6
  0x00000000036d16cf: mov    %rdi,0x268(%rbx)
  0x00000000036d16d6: movq   $0x1,0x270(%rbx)
  0x00000000036d16e1: jmpq   0x00000000036d16ee
  0x00000000036d16e6: addq   $0x1,0x250(%rbx)
  0x00000000036d16ee: movabs $0x1c816858,%rdi   ;   {metadata(method data for {method} {0x000000001c5787c0} &apos;containsKey&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036d16f8: mov    0xdc(%rdi),%ebx
  0x00000000036d16fe: add    $0x8,%ebx
  0x00000000036d1701: mov    %ebx,0xdc(%rdi)
  0x00000000036d1707: movabs $0x1c5787b8,%rdi   ;   {metadata({method} {0x000000001c5787c0} &apos;containsKey&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036d1711: and    $0x7ffff8,%ebx
  0x00000000036d1717: cmp    $0x0,%ebx
  0x00000000036d171a: je     0x00000000036d2ea6
  0x00000000036d1720: movabs $0x1c816858,%rdi   ;   {metadata(method data for {method} {0x000000001c5787c0} &apos;containsKey&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036d172a: addq   $0x1,0x108(%rdi)
  0x00000000036d1732: movabs $0x1c6803c8,%rdi   ;   {metadata(method data for {method} {0x000000001c577d70} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036d173c: mov    0xdc(%rdi),%ebx
  0x00000000036d1742: add    $0x8,%ebx
  0x00000000036d1745: mov    %ebx,0xdc(%rdi)
  0x00000000036d174b: movabs $0x1c577d68,%rdi   ;   {metadata({method} {0x000000001c577d70} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036d1755: and    $0x7ffff8,%ebx
  0x00000000036d175b: cmp    $0x0,%ebx
  0x00000000036d175e: je     0x00000000036d2ebd
  0x00000000036d1764: cmp    $0x0,%rax
  0x00000000036d1768: movabs $0x1c6803c8,%rdi   ;   {metadata(method data for {method} {0x000000001c577d70} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036d1772: movabs $0x108,%rbx
  0x00000000036d177c: jne    0x00000000036d178c
  0x00000000036d1782: movabs $0x118,%rbx
  0x00000000036d178c: mov    (%rdi,%rbx,1),%rcx
  0x00000000036d1790: lea    0x1(%rcx),%rcx
  0x00000000036d1794: mov    %rcx,(%rdi,%rbx,1)
  0x00000000036d1798: jne    0x00000000036d17c0  ;*ifnonnull
                                                ; - java.util.HashMap::hash@1 (line 339)
                                                ; - java.util.HashMap::containsKey@2 (line 596)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)

  0x00000000036d179e: movabs $0x1c6803c8,%rdi   ;   {metadata(method data for {method} {0x000000001c577d70} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036d17a8: incl   0x128(%rdi)
  0x00000000036d17ae: mov    $0x0,%edi
  0x00000000036d17b3: mov    %rsi,0xd0(%rsp)
  0x00000000036d17bb: jmpq   0x00000000036d17f9  ;*goto
                                                ; - java.util.HashMap::hash@5 (line 339)
                                                ; - java.util.HashMap::containsKey@2 (line 596)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)

  0x00000000036d17c0: mov    %rsi,0xd0(%rsp)
  0x00000000036d17c8: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x00000000036d2ed4
  0x00000000036d17cb: mov    %rax,%rdi
  0x00000000036d17ce: movabs $0x1c6803c8,%rbx   ;   {metadata(method data for {method} {0x000000001c577d70} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036d17d8: addq   $0x1,0x150(%rbx)
  0x00000000036d17e0: mov    %rax,%rdx          ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.HashMap::containsKey@2 (line 596)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)

  0x00000000036d17e3: nop
  0x00000000036d17e4: nop
  0x00000000036d17e5: nop
  0x00000000036d17e6: nop
  0x00000000036d17e7: callq  0x00000000035d61a0  ; OopMap{[200]=Oop [176]=Oop [208]=Oop [216]=Oop [280]=Oop off=3980}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.HashMap::containsKey@2 (line 596)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)
                                                ;   {optimized virtual_call}
  0x00000000036d17ec: mov    %rax,%r8
  0x00000000036d17ef: shr    $0x10,%r8d
  0x00000000036d17f3: xor    %rax,%r8
  0x00000000036d17f6: mov    %r8,%rdi           ;*ireturn
                                                ; - java.util.HashMap::hash@19 (line 339)
                                                ; - java.util.HashMap::containsKey@2 (line 596)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)

  0x00000000036d17f9: mov    0xd0(%rsp),%rsi
  0x00000000036d1801: mov    %rsi,%r8
  0x00000000036d1804: movabs $0x1c816858,%r9    ;   {metadata(method data for {method} {0x000000001c5787c0} &apos;containsKey&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036d180e: mov    0x8(%r8),%r8d
  0x00000000036d1812: shl    $0x3,%r8
  0x00000000036d1816: cmp    0x120(%r9),%r8
  0x00000000036d181d: jne    0x00000000036d182c
  0x00000000036d181f: addq   $0x1,0x128(%r9)
  0x00000000036d1827: jmpq   0x00000000036d1892
  0x00000000036d182c: cmp    0x130(%r9),%r8
  0x00000000036d1833: jne    0x00000000036d1842
  0x00000000036d1835: addq   $0x1,0x138(%r9)
  0x00000000036d183d: jmpq   0x00000000036d1892
  0x00000000036d1842: cmpq   $0x0,0x120(%r9)
  0x00000000036d184d: jne    0x00000000036d1866
  0x00000000036d184f: mov    %r8,0x120(%r9)
  0x00000000036d1856: movq   $0x1,0x128(%r9)
  0x00000000036d1861: jmpq   0x00000000036d1892
  0x00000000036d1866: cmpq   $0x0,0x130(%r9)
  0x00000000036d1871: jne    0x00000000036d188a
  0x00000000036d1873: mov    %r8,0x130(%r9)
  0x00000000036d187a: movq   $0x1,0x138(%r9)
  0x00000000036d1885: jmpq   0x00000000036d1892
  0x00000000036d188a: addq   $0x1,0x118(%r9)
  0x00000000036d1892: mov    %rdi,%r8
  0x00000000036d1895: mov    0xd8(%rsp),%r9
  0x00000000036d189d: mov    %rsi,%rdx          ;*invokevirtual getNode
                                                ; - java.util.HashMap::containsKey@6 (line 596)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)

  0x00000000036d18a0: nop
  0x00000000036d18a1: nop
  0x00000000036d18a2: nop
  0x00000000036d18a3: nop
  0x00000000036d18a4: nop
  0x00000000036d18a5: nop
  0x00000000036d18a6: nop
  0x00000000036d18a7: callq  0x00000000035d61a0  ; OopMap{[200]=Oop [176]=Oop [216]=Oop [280]=Oop off=4172}
                                                ;*invokevirtual getNode
                                                ; - java.util.HashMap::containsKey@6 (line 596)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)
                                                ;   {optimized virtual_call}
  0x00000000036d18ac: cmp    $0x0,%rax
  0x00000000036d18b0: movabs $0x1c816858,%rdx   ;   {metadata(method data for {method} {0x000000001c5787c0} &apos;containsKey&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036d18ba: movabs $0x148,%rsi
  0x00000000036d18c4: je     0x00000000036d18d4
  0x00000000036d18ca: movabs $0x158,%rsi
  0x00000000036d18d4: mov    (%rdx,%rsi,1),%rdi
  0x00000000036d18d8: lea    0x1(%rdi),%rdi
  0x00000000036d18dc: mov    %rdi,(%rdx,%rsi,1)
  0x00000000036d18e0: je     0x00000000036d1900  ;*ifnull
                                                ; - java.util.HashMap::containsKey@9 (line 596)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)

  0x00000000036d18e6: movabs $0x1c816858,%rdx   ;   {metadata(method data for {method} {0x000000001c5787c0} &apos;containsKey&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036d18f0: incl   0x168(%rdx)
  0x00000000036d18f6: mov    $0x1,%edx
  0x00000000036d18fb: jmpq   0x00000000036d1905  ;*goto
                                                ; - java.util.HashMap::containsKey@13 (line 596)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)

  0x00000000036d1900: mov    $0x0,%edx          ;*ireturn
                                                ; - java.util.HashMap::containsKey@17 (line 596)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)

  0x00000000036d1905: and    $0x1,%edx
  0x00000000036d1908: cmp    $0x0,%edx
  0x00000000036d190b: movabs $0x1c731bb0,%rdx   ;   {metadata(method data for {method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d1915: movabs $0x280,%rsi
  0x00000000036d191f: je     0x00000000036d192f
  0x00000000036d1925: movabs $0x290,%rsi
  0x00000000036d192f: mov    (%rdx,%rsi,1),%rdi
  0x00000000036d1933: lea    0x1(%rdi),%rdi
  0x00000000036d1937: mov    %rdi,(%rdx,%rsi,1)
  0x00000000036d193b: jne    0x00000000036d25c1  ;*ifeq
                                                ; - sun.misc.URLClassPath::getLoader@79 (line 513)

  0x00000000036d1941: mov    0xc8(%rsp),%rsi
  0x00000000036d1949: mov    0xb0(%rsp),%rdx
  0x00000000036d1951: mov    %rdx,%rdi
  0x00000000036d1954: movabs $0x1c731bb0,%rax   ;   {metadata(method data for {method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d195e: addq   $0x1,0x2b8(%rax)
  0x00000000036d1966: movabs $0x1c816a20,%rdi   ;   {metadata(method data for {method} {0x000000001c67b540} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d1970: mov    0xdc(%rdi),%eax
  0x00000000036d1976: add    $0x8,%eax
  0x00000000036d1979: mov    %eax,0xdc(%rdi)
  0x00000000036d197f: movabs $0x1c67b538,%rdi   ;   {metadata({method} {0x000000001c67b540} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d1989: and    $0x7ffff8,%eax
  0x00000000036d198f: cmp    $0x0,%eax
  0x00000000036d1992: je     0x00000000036d2ed9
  0x00000000036d1998: mov    %rdx,%rbx
  0x00000000036d199b: movabs $0x7c003de98,%rdx  ;   {metadata(&apos;sun/misc/URLClassPath$3&apos;)}
  0x00000000036d19a5: mov    %rsi,%r9
  0x00000000036d19a8: mov    0x60(%r15),%rax
  0x00000000036d19ac: lea    0x18(%rax),%rdi
  0x00000000036d19b0: cmp    0x70(%r15),%rdi
  0x00000000036d19b4: ja     0x00000000036d2ef0
  0x00000000036d19ba: mov    %rdi,0x60(%r15)
  0x00000000036d19be: mov    0xa8(%rdx),%rcx
  0x00000000036d19c5: mov    %rcx,(%rax)
  0x00000000036d19c8: mov    %rdx,%rcx
  0x00000000036d19cb: shr    $0x3,%rcx
  0x00000000036d19cf: mov    %ecx,0x8(%rax)
  0x00000000036d19d2: xor    %rcx,%rcx
  0x00000000036d19d5: mov    %ecx,0xc(%rax)
  0x00000000036d19d8: xor    %rcx,%rcx
  0x00000000036d19db: mov    %rcx,0x10(%rax)    ;*new  ; - sun.misc.URLClassPath::getLoader@0 (line 554)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)

  0x00000000036d19df: mov    %rax,%rdx
  0x00000000036d19e2: movabs $0x1c816a20,%r8    ;   {metadata(method data for {method} {0x000000001c67b540} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d19ec: addq   $0x1,0x108(%r8)
  0x00000000036d19f4: movabs $0x1c816c20,%rdx   ;   {metadata(method data for {method} {0x000000001c68cab0} &apos;&lt;init&gt;&apos; &apos;(Lsun/misc/URLClassPath;Ljava/net/URL;)V&apos; in &apos;sun/misc/URLClassPath$3&apos;)}
  0x00000000036d19fe: mov    0xdc(%rdx),%r8d
  0x00000000036d1a05: add    $0x8,%r8d
  0x00000000036d1a09: mov    %r8d,0xdc(%rdx)
  0x00000000036d1a10: movabs $0x1c68caa8,%rdx   ;   {metadata({method} {0x000000001c68cab0} &apos;&lt;init&gt;&apos; &apos;(Lsun/misc/URLClassPath;Ljava/net/URL;)V&apos; in &apos;sun/misc/URLClassPath$3&apos;)}
  0x00000000036d1a1a: and    $0x7ffff8,%r8d
  0x00000000036d1a21: cmp    $0x0,%r8d
  0x00000000036d1a25: je     0x00000000036d2efd
  0x00000000036d1a2b: mov    %rbx,%r10
  0x00000000036d1a2e: shr    $0x3,%r10
  0x00000000036d1a32: mov    %r10d,0x10(%rax)
  0x00000000036d1a36: mov    %rax,%rdx
  0x00000000036d1a39: shr    $0x9,%rdx
  0x00000000036d1a3d: movabs $0xf32f000,%r8
  0x00000000036d1a47: movb   $0x0,(%rdx,%r8,1)  ;*putfield this$0
                                                ; - sun.misc.URLClassPath$3::&lt;init&gt;@2 (line 555)
                                                ; - sun.misc.URLClassPath::getLoader@6 (line 554)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)

  0x00000000036d1a4c: mov    %r9,%r10
  0x00000000036d1a4f: shr    $0x3,%r10
  0x00000000036d1a53: mov    %r10d,0xc(%rax)
  0x00000000036d1a57: mov    %rax,%rdx
  0x00000000036d1a5a: shr    $0x9,%rdx
  0x00000000036d1a5e: movb   $0x0,(%rdx,%r8,1)  ;*putfield val$url
                                                ; - sun.misc.URLClassPath$3::&lt;init&gt;@7 (line 555)
                                                ; - sun.misc.URLClassPath::getLoader@6 (line 554)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)

  0x00000000036d1a63: mov    %rax,%rdx
  0x00000000036d1a66: movabs $0x1c816c20,%r8    ;   {metadata(method data for {method} {0x000000001c68cab0} &apos;&lt;init&gt;&apos; &apos;(Lsun/misc/URLClassPath;Ljava/net/URL;)V&apos; in &apos;sun/misc/URLClassPath$3&apos;)}
  0x00000000036d1a70: addq   $0x1,0x108(%r8)
  0x00000000036d1a78: movabs $0x1c5c3748,%rdx   ;   {metadata(method data for {method} {0x000000001c490488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000036d1a82: mov    0xdc(%rdx),%r8d
  0x00000000036d1a89: add    $0x8,%r8d
  0x00000000036d1a8d: mov    %r8d,0xdc(%rdx)
  0x00000000036d1a94: movabs $0x1c490480,%rdx   ;   {metadata({method} {0x000000001c490488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000036d1a9e: and    $0x7ffff8,%r8d
  0x00000000036d1aa5: cmp    $0x0,%r8d
  0x00000000036d1aa9: je     0x00000000036d2f14
  0x00000000036d1aaf: mov    0x24(%rbx),%r8d
  0x00000000036d1ab3: shl    $0x3,%r8           ;*getfield acc
                                                ; - sun.misc.URLClassPath::getLoader@10 (line 554)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)

  0x00000000036d1ab7: movabs $0x1c816a20,%rdx   ;   {metadata(method data for {method} {0x000000001c67b540} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d1ac1: addq   $0x1,0x118(%rdx)
  0x00000000036d1ac9: mov    %rax,%rdx          ;*invokestatic doPrivileged
                                                ; - sun.misc.URLClassPath::getLoader@13 (line 554)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)

  0x00000000036d1acc: nop
  0x00000000036d1acd: nop
  0x00000000036d1ace: nop
  0x00000000036d1acf: callq  0x00000000035d6620  ; OopMap{[216]=Oop [200]=Oop [176]=Oop [280]=Oop off=4724}
                                                ;*invokestatic doPrivileged
                                                ; - sun.misc.URLClassPath::getLoader@13 (line 554)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)
                                                ;   {static_call}
  0x00000000036d1ad4: cmp    $0x0,%rax
  0x00000000036d1ad8: jne    0x00000000036d1af3
  0x00000000036d1ada: movabs $0x1c816a20,%rdi   ;   {metadata(method data for {method} {0x000000001c67b540} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d1ae4: orl    $0x100,0x120(%rdi)
  0x00000000036d1aee: jmpq   0x00000000036d1bb4
  0x00000000036d1af3: movabs $0x7c003e0b8,%rbx  ;   {metadata(&apos;sun/misc/URLClassPath$Loader&apos;)}
  0x00000000036d1afd: mov    0x8(%rax),%edi
  0x00000000036d1b00: shl    $0x3,%rdi
  0x00000000036d1b04: cmp    0x30(%rdi),%rbx
  0x00000000036d1b08: jne    0x00000000036d1b98
  0x00000000036d1b0e: movabs $0x1c816a20,%rdi   ;   {metadata(method data for {method} {0x000000001c67b540} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d1b18: mov    0x8(%rax),%ebx
  0x00000000036d1b1b: shl    $0x3,%rbx
  0x00000000036d1b1f: cmp    0x130(%rdi),%rbx
  0x00000000036d1b26: jne    0x00000000036d1b35
  0x00000000036d1b28: addq   $0x1,0x138(%rdi)
  0x00000000036d1b30: jmpq   0x00000000036d1bb4
  0x00000000036d1b35: cmp    0x140(%rdi),%rbx
  0x00000000036d1b3c: jne    0x00000000036d1b4b
  0x00000000036d1b3e: addq   $0x1,0x148(%rdi)
  0x00000000036d1b46: jmpq   0x00000000036d1bb4
  0x00000000036d1b4b: cmpq   $0x0,0x130(%rdi)
  0x00000000036d1b56: jne    0x00000000036d1b6f
  0x00000000036d1b58: mov    %rbx,0x130(%rdi)
  0x00000000036d1b5f: movq   $0x1,0x138(%rdi)
  0x00000000036d1b6a: jmpq   0x00000000036d1bb4
  0x00000000036d1b6f: cmpq   $0x0,0x140(%rdi)
  0x00000000036d1b7a: jne    0x00000000036d1b93
  0x00000000036d1b7c: mov    %rbx,0x140(%rdi)
  0x00000000036d1b83: movq   $0x1,0x148(%rdi)
  0x00000000036d1b8e: jmpq   0x00000000036d1bb4
  0x00000000036d1b93: jmpq   0x00000000036d1bb4
  0x00000000036d1b98: movabs $0x1c816a20,%rdi   ;   {metadata(method data for {method} {0x000000001c67b540} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d1ba2: subq   $0x1,0x128(%rdi)
  0x00000000036d1baa: jmpq   0x00000000036d2f2b
  0x00000000036d1baf: jmpq   0x00000000036d1bb4
  0x00000000036d1bb4: mov    %rax,%rsi          ;*checkcast
                                                ; - sun.misc.URLClassPath::getLoader@16 (line 554)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)

  0x00000000036d1bb7: mov    %rsi,0xe0(%rsp)
  0x00000000036d1bbf: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x00000000036d2f34
  0x00000000036d1bc2: mov    %rsi,%rdx
  0x00000000036d1bc5: movabs $0x1c731bb0,%rdi   ;   {metadata(method data for {method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d1bcf: mov    0x8(%rdx),%edx
  0x00000000036d1bd2: shl    $0x3,%rdx
  0x00000000036d1bd6: cmp    0x2d0(%rdi),%rdx
  0x00000000036d1bdd: jne    0x00000000036d1bec
  0x00000000036d1bdf: addq   $0x1,0x2d8(%rdi)
  0x00000000036d1be7: jmpq   0x00000000036d1c52
  0x00000000036d1bec: cmp    0x2e0(%rdi),%rdx
  0x00000000036d1bf3: jne    0x00000000036d1c02
  0x00000000036d1bf5: addq   $0x1,0x2e8(%rdi)
  0x00000000036d1bfd: jmpq   0x00000000036d1c52
  0x00000000036d1c02: cmpq   $0x0,0x2d0(%rdi)
  0x00000000036d1c0d: jne    0x00000000036d1c26
  0x00000000036d1c0f: mov    %rdx,0x2d0(%rdi)
  0x00000000036d1c16: movq   $0x1,0x2d8(%rdi)
  0x00000000036d1c21: jmpq   0x00000000036d1c52
  0x00000000036d1c26: cmpq   $0x0,0x2e0(%rdi)
  0x00000000036d1c31: jne    0x00000000036d1c4a
  0x00000000036d1c33: mov    %rdx,0x2e0(%rdi)
  0x00000000036d1c3a: movq   $0x1,0x2e8(%rdi)
  0x00000000036d1c45: jmpq   0x00000000036d1c52
  0x00000000036d1c4a: addq   $0x1,0x2c8(%rdi)
  0x00000000036d1c52: mov    %rsi,%rdx          ;*invokevirtual getClassPath
                                                ; - sun.misc.URLClassPath::getLoader@94 (line 522)

  0x00000000036d1c55: movabs $0xffffffffffffffff,%rax
  0x00000000036d1c5f: callq  0x00000000035d63e0  ; OopMap{[216]=Oop [200]=Oop [176]=Oop [224]=Oop [280]=Oop off=5124}
                                                ;*invokevirtual getClassPath
                                                ; - sun.misc.URLClassPath::getLoader@94 (line 522)
                                                ;   {virtual_call}
  0x00000000036d1c64: cmp    $0x0,%rax
  0x00000000036d1c68: movabs $0x1c731bb0,%r8    ;   {metadata(method data for {method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d1c72: movabs $0x2f8,%rdx
  0x00000000036d1c7c: je     0x00000000036d1c8c
  0x00000000036d1c82: movabs $0x308,%rdx
  0x00000000036d1c8c: mov    (%r8,%rdx,1),%rsi
  0x00000000036d1c90: lea    0x1(%rsi),%rsi
  0x00000000036d1c94: mov    %rsi,(%r8,%rdx,1)
  0x00000000036d1c98: je     0x00000000036d1ccc  ;*ifnull
                                                ; - sun.misc.URLClassPath::getLoader@101 (line 523)

  0x00000000036d1c9e: mov    0xb0(%rsp),%rdx
  0x00000000036d1ca6: movabs $0x1c731bb0,%r8    ;   {metadata(method data for {method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d1cb0: addq   $0x1,0x318(%r8)
  0x00000000036d1cb8: mov    %rax,%r8
  0x00000000036d1cbb: mov    0xb0(%rsp),%rdx    ;*invokespecial push
                                                ; - sun.misc.URLClassPath::getLoader@107 (line 524)

  0x00000000036d1cc3: nop
  0x00000000036d1cc4: nop
  0x00000000036d1cc5: nop
  0x00000000036d1cc6: nop
  0x00000000036d1cc7: callq  0x00000000035d61a0  ; OopMap{[216]=Oop [176]=Oop [224]=Oop [200]=Oop [280]=Oop off=5228}
                                                ;*invokespecial push
                                                ; - sun.misc.URLClassPath::getLoader@107 (line 524)
                                                ;   {optimized virtual_call}
  0x00000000036d1ccc: movabs $0x1c731bb0,%r8    ;   {metadata(method data for {method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d1cd6: incl   0x328(%r8)         ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@110 (line 537)

  0x00000000036d1cdd: mov    0xb0(%rsp),%rdx
  0x00000000036d1ce5: mov    0x18(%rdx),%r8d
  0x00000000036d1ce9: shl    $0x3,%r8           ;*getfield loaders
                                                ; - sun.misc.URLClassPath::getLoader@166 (line 539)

  0x00000000036d1ced: cmp    (%r8),%rax         ;*invokevirtual size
                                                ; - sun.misc.URLClassPath::getLoader@169 (line 539)
                                                ; implicit exception: dispatches to 0x00000000036d2f39
  0x00000000036d1cf0: mov    %r8,%r9
  0x00000000036d1cf3: movabs $0x1c731bb0,%rsi   ;   {metadata(method data for {method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d1cfd: addq   $0x1,0x4d0(%rsi)
  0x00000000036d1d05: mov    0x10(%r8),%r8d     ;*getfield size
                                                ; - java.util.ArrayList::size@1 (line 282)
                                                ; - sun.misc.URLClassPath::getLoader@169 (line 539)

  0x00000000036d1d09: mov    %rdx,%r9
  0x00000000036d1d0c: movabs $0x1c731bb0,%rsi   ;   {metadata(method data for {method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d1d16: addq   $0x1,0x4f0(%rsi)
  0x00000000036d1d1e: mov    0xd8(%rsp),%r9
  0x00000000036d1d26: mov    %rdx,%rsi
  0x00000000036d1d29: mov    %rsi,%rdx          ;*invokespecial validateLookupCache
                                                ; - sun.misc.URLClassPath::getLoader@173 (line 539)

  0x00000000036d1d2c: nop
  0x00000000036d1d2d: nop
  0x00000000036d1d2e: nop
  0x00000000036d1d2f: callq  0x00000000035d61a0  ; OopMap{[216]=Oop [224]=Oop [176]=Oop [280]=Oop off=5332}
                                                ;*invokespecial validateLookupCache
                                                ; - sun.misc.URLClassPath::getLoader@173 (line 539)
                                                ;   {optimized virtual_call}
  0x00000000036d1d34: mov    0xb0(%rsp),%rdx
  0x00000000036d1d3c: mov    0x18(%rdx),%esi
  0x00000000036d1d3f: shl    $0x3,%rsi          ;*getfield loaders
                                                ; - sun.misc.URLClassPath::getLoader@177 (line 540)

  0x00000000036d1d43: cmp    (%rsi),%rax        ;*invokevirtual add
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ; implicit exception: dispatches to 0x00000000036d2f3e
  0x00000000036d1d46: mov    %rsi,%r8
  0x00000000036d1d49: movabs $0x1c731bb0,%rdi   ;   {metadata(method data for {method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d1d53: addq   $0x1,0x510(%rdi)
  0x00000000036d1d5b: movabs $0x1c6dbc68,%r8    ;   {metadata(method data for {method} {0x000000001c55f368} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000036d1d65: mov    0xdc(%r8),%edi
  0x00000000036d1d6c: add    $0x8,%edi
  0x00000000036d1d6f: mov    %edi,0xdc(%r8)
  0x00000000036d1d76: movabs $0x1c55f360,%r8    ;   {metadata({method} {0x000000001c55f368} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000036d1d80: and    $0x7ffff8,%edi
  0x00000000036d1d86: cmp    $0x0,%edi
  0x00000000036d1d89: je     0x00000000036d2f43
  0x00000000036d1d8f: mov    0x10(%rsi),%r8d    ;*getfield size
                                                ; - java.util.ArrayList::add@2 (line 462)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00000000036d1d93: inc    %r8d
  0x00000000036d1d96: mov    %rsi,%rdi
  0x00000000036d1d99: movabs $0x1c6dbc68,%rbx   ;   {metadata(method data for {method} {0x000000001c55f368} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000036d1da3: addq   $0x1,0x108(%rbx)
  0x00000000036d1dab: movabs $0x1c6dbdf8,%rdi   ;   {metadata(method data for {method} {0x000000001c55e8e0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000036d1db5: mov    0xdc(%rdi),%ebx
  0x00000000036d1dbb: add    $0x8,%ebx
  0x00000000036d1dbe: mov    %ebx,0xdc(%rdi)
  0x00000000036d1dc4: movabs $0x1c55e8d8,%rdi   ;   {metadata({method} {0x000000001c55e8e0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000036d1dce: and    $0x7ffff8,%ebx
  0x00000000036d1dd4: cmp    $0x0,%ebx
  0x00000000036d1dd7: je     0x00000000036d2f5a
  0x00000000036d1ddd: mov    0x14(%rsi),%edi
  0x00000000036d1de0: shl    $0x3,%rdi          ;*getfield elementData
                                                ; - java.util.ArrayList::ensureCapacityInternal@2 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00000000036d1de4: movabs $0x1c6dbdf8,%rbx   ;   {metadata(method data for {method} {0x000000001c55e8e0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000036d1dee: addq   $0x1,0x108(%rbx)
  0x00000000036d1df6: movabs $0x1c6dbf68,%rbx   ;   {metadata(method data for {method} {0x000000001c55e840} &apos;calculateCapacity&apos; &apos;([Ljava/lang/Object;I)I&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000036d1e00: mov    0xdc(%rbx),%eax
  0x00000000036d1e06: add    $0x8,%eax
  0x00000000036d1e09: mov    %eax,0xdc(%rbx)
  0x00000000036d1e0f: movabs $0x1c55e838,%rbx   ;   {metadata({method} {0x000000001c55e840} &apos;calculateCapacity&apos; &apos;([Ljava/lang/Object;I)I&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000036d1e19: and    $0x7ffff8,%eax
  0x00000000036d1e1f: cmp    $0x0,%eax
  0x00000000036d1e22: je     0x00000000036d2f71
  0x00000000036d1e28: movabs $0x76c106db8,%r10  ;   {oop(a &apos;java/lang/Object&apos;[0] )}
  0x00000000036d1e32: cmp    %r10,%rdi
  0x00000000036d1e35: movabs $0x1c6dbf68,%rbx   ;   {metadata(method data for {method} {0x000000001c55e840} &apos;calculateCapacity&apos; &apos;([Ljava/lang/Object;I)I&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000036d1e3f: movabs $0x108,%rax
  0x00000000036d1e49: jne    0x00000000036d1e59
  0x00000000036d1e4f: movabs $0x118,%rax
  0x00000000036d1e59: mov    (%rbx,%rax,1),%rcx
  0x00000000036d1e5d: lea    0x1(%rcx),%rcx
  0x00000000036d1e61: mov    %rcx,(%rbx,%rax,1)
  0x00000000036d1e65: jne    0x00000000036d1f00  ;*if_acmpne
                                                ; - java.util.ArrayList::calculateCapacity@4 (line 224)
                                                ; - java.util.ArrayList::ensureCapacityInternal@6 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00000000036d1e6b: movabs $0x1c6dbf68,%rbx   ;   {metadata(method data for {method} {0x000000001c55e840} &apos;calculateCapacity&apos; &apos;([Ljava/lang/Object;I)I&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000036d1e75: addq   $0x1,0x128(%rbx)
  0x00000000036d1e7d: movabs $0x1c6d0da8,%rbx   ;   {metadata(method data for {method} {0x000000001c584388} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000036d1e87: mov    0xdc(%rbx),%eax
  0x00000000036d1e8d: add    $0x8,%eax
  0x00000000036d1e90: mov    %eax,0xdc(%rbx)
  0x00000000036d1e96: movabs $0x1c584380,%rbx   ;   {metadata({method} {0x000000001c584388} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000036d1ea0: and    $0x7ffff8,%eax
  0x00000000036d1ea6: cmp    $0x0,%eax
  0x00000000036d1ea9: je     0x00000000036d2f88
  0x00000000036d1eaf: cmp    $0xa,%r8d
  0x00000000036d1eb3: movabs $0x1c6d0da8,%rbx   ;   {metadata(method data for {method} {0x000000001c584388} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000036d1ebd: movabs $0x108,%rax
  0x00000000036d1ec7: jg     0x00000000036d1ed7
  0x00000000036d1ecd: movabs $0x118,%rax
  0x00000000036d1ed7: mov    (%rbx,%rax,1),%rcx
  0x00000000036d1edb: lea    0x1(%rcx),%rcx
  0x00000000036d1edf: mov    %rcx,(%rbx,%rax,1)
  0x00000000036d1ee3: jg     0x00000000036d1f00  ;*if_icmplt
                                                ; - java.lang.Math::max@2 (line 1252)
                                                ; - java.util.ArrayList::calculateCapacity@10 (line 225)
                                                ; - java.util.ArrayList::ensureCapacityInternal@6 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00000000036d1ee9: movabs $0x1c6d0da8,%r8    ;   {metadata(method data for {method} {0x000000001c584388} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000036d1ef3: incl   0x128(%r8)
  0x00000000036d1efa: mov    $0xa,%r8d          ;*goto
                                                ; - java.lang.Math::max@6 (line 1252)
                                                ; - java.util.ArrayList::calculateCapacity@10 (line 225)
                                                ; - java.util.ArrayList::ensureCapacityInternal@6 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00000000036d1f00: mov    %rsi,%rbx
  0x00000000036d1f03: movabs $0x1c6dbdf8,%rax   ;   {metadata(method data for {method} {0x000000001c55e8e0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000036d1f0d: addq   $0x1,0x118(%rax)
  0x00000000036d1f15: movabs $0x1c6dc0e8,%rbx   ;   {metadata(method data for {method} {0x000000001c55e990} &apos;ensureExplicitCapacity&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000036d1f1f: mov    0xdc(%rbx),%eax
  0x00000000036d1f25: add    $0x8,%eax
  0x00000000036d1f28: mov    %eax,0xdc(%rbx)
  0x00000000036d1f2e: movabs $0x1c55e988,%rbx   ;   {metadata({method} {0x000000001c55e990} &apos;ensureExplicitCapacity&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000036d1f38: and    $0x7ffff8,%eax
  0x00000000036d1f3e: cmp    $0x0,%eax
  0x00000000036d1f41: je     0x00000000036d2f9f
  0x00000000036d1f47: mov    0xc(%rsi),%ebx     ;*getfield modCount
                                                ; - java.util.ArrayList::ensureExplicitCapacity@2 (line 235)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00000000036d1f4a: inc    %ebx
  0x00000000036d1f4c: mov    %ebx,0xc(%rsi)     ;*putfield modCount
                                                ; - java.util.ArrayList::ensureExplicitCapacity@7 (line 235)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00000000036d1f4f: mov    0xc(%rdi),%edi     ;*arraylength
                                                ; - java.util.ArrayList::ensureExplicitCapacity@15 (line 238)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ; implicit exception: dispatches to 0x00000000036d2fb6
  0x00000000036d1f52: mov    %r8,%rbx
  0x00000000036d1f55: sub    %edi,%ebx
  0x00000000036d1f57: cmp    $0x0,%ebx
  0x00000000036d1f5a: movabs $0x1c6dc0e8,%rdi   ;   {metadata(method data for {method} {0x000000001c55e990} &apos;ensureExplicitCapacity&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000036d1f64: movabs $0x108,%rbx
  0x00000000036d1f6e: jle    0x00000000036d1f7e
  0x00000000036d1f74: movabs $0x118,%rbx
  0x00000000036d1f7e: mov    (%rdi,%rbx,1),%rax
  0x00000000036d1f82: lea    0x1(%rax),%rax
  0x00000000036d1f86: mov    %rax,(%rdi,%rbx,1)
  0x00000000036d1f8a: jg     0x00000000036d1f9d  ;*ifle
                                                ; - java.util.ArrayList::ensureExplicitCapacity@17 (line 238)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00000000036d1f90: mov    %rsi,0xe8(%rsp)
  0x00000000036d1f98: jmpq   0x00000000036d1fc4  ;*return
                                                ; - java.util.ArrayList::ensureExplicitCapacity@25 (line 240)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00000000036d1f9d: mov    %rsi,%rdi
  0x00000000036d1fa0: movabs $0x1c6dc0e8,%rbx   ;   {metadata(method data for {method} {0x000000001c55e990} &apos;ensureExplicitCapacity&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000036d1faa: addq   $0x1,0x128(%rbx)
  0x00000000036d1fb2: mov    %rsi,%rdx          ;*invokespecial grow
                                                ; - java.util.ArrayList::ensureExplicitCapacity@22 (line 239)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00000000036d1fb5: mov    %rsi,0xe8(%rsp)
  0x00000000036d1fbd: nop
  0x00000000036d1fbe: nop
  0x00000000036d1fbf: callq  0x00000000035d61a0  ; OopMap{[216]=Oop [224]=Oop [232]=Oop [176]=Oop [280]=Oop off=5988}
                                                ;*invokespecial grow
                                                ; - java.util.ArrayList::ensureExplicitCapacity@22 (line 239)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ;   {optimized virtual_call}
  0x00000000036d1fc4: mov    0xe8(%rsp),%rsi
  0x00000000036d1fcc: mov    0xe0(%rsp),%rdi
  0x00000000036d1fd4: mov    0x14(%rsi),%edx
  0x00000000036d1fd7: shl    $0x3,%rdx          ;*getfield elementData
                                                ; - java.util.ArrayList::add@11 (line 463)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00000000036d1fdb: mov    0x10(%rsi),%ebx    ;*getfield size
                                                ; - java.util.ArrayList::add@16 (line 463)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00000000036d1fde: mov    %rbx,%rax
  0x00000000036d1fe1: inc    %eax
  0x00000000036d1fe3: mov    %eax,0x10(%rsi)    ;*putfield size
                                                ; - java.util.ArrayList::add@22 (line 463)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00000000036d1fe6: movslq %ebx,%rsi
  0x00000000036d1fe9: lea    0x10(%rdx,%rsi,4),%rsi
  0x00000000036d1fee: cmp    0xc(%rdx),%ebx     ; implicit exception: dispatches to 0x00000000036d2fbb
  0x00000000036d1ff1: jae    0x00000000036d2fc5
  0x00000000036d1ff7: cmp    $0x0,%rdi
  0x00000000036d1ffb: jne    0x00000000036d2016
  0x00000000036d1ffd: movabs $0x1c6dbc68,%rbx   ;   {metadata(method data for {method} {0x000000001c55f368} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000036d2007: orl    $0x100,0x110(%rbx)
  0x00000000036d2011: jmpq   0x00000000036d20fa
  0x00000000036d2016: mov    0x8(%rdx),%edx     ; implicit exception: dispatches to 0x00000000036d2fce
  0x00000000036d2019: shl    $0x3,%rdx
  0x00000000036d201d: mov    0x8(%rdi),%ebx
  0x00000000036d2020: shl    $0x3,%rbx
  0x00000000036d2024: mov    0xf0(%rdx),%rdx
  0x00000000036d202b: cmp    %rdx,%rbx
  0x00000000036d202e: je     0x00000000036d205c
  0x00000000036d2034: mov    0xc(%rdx),%eax
  0x00000000036d2037: cmp    (%rbx,%rax,1),%rdx
  0x00000000036d203b: je     0x00000000036d205c
  0x00000000036d2041: cmp    $0x18,%eax
  0x00000000036d2044: jne    0x00000000036d20e3
  0x00000000036d204a: push   %rbx
  0x00000000036d204b: push   %rdx
  0x00000000036d204c: callq  0x000000000368f960  ;   {runtime_call}
  0x00000000036d2051: pop    %rbx
  0x00000000036d2052: pop    %rdx
  0x00000000036d2053: cmp    $0x0,%edx
  0x00000000036d2056: je     0x00000000036d20e3
  0x00000000036d205c: movabs $0x1c6dbc68,%rbx   ;   {metadata(method data for {method} {0x000000001c55f368} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000036d2066: mov    0x8(%rdi),%edx
  0x00000000036d2069: shl    $0x3,%rdx
  0x00000000036d206d: cmp    0x120(%rbx),%rdx
  0x00000000036d2074: jne    0x00000000036d2083
  0x00000000036d2076: addq   $0x1,0x128(%rbx)
  0x00000000036d207e: jmpq   0x00000000036d20fa
  0x00000000036d2083: cmp    0x130(%rbx),%rdx
  0x00000000036d208a: jne    0x00000000036d2099
  0x00000000036d208c: addq   $0x1,0x138(%rbx)
  0x00000000036d2094: jmpq   0x00000000036d20fa
  0x00000000036d2099: cmpq   $0x0,0x120(%rbx)
  0x00000000036d20a4: jne    0x00000000036d20bd
  0x00000000036d20a6: mov    %rdx,0x120(%rbx)
  0x00000000036d20ad: movq   $0x1,0x128(%rbx)
  0x00000000036d20b8: jmpq   0x00000000036d20fa
  0x00000000036d20bd: cmpq   $0x0,0x130(%rbx)
  0x00000000036d20c8: jne    0x00000000036d20e1
  0x00000000036d20ca: mov    %rdx,0x130(%rbx)
  0x00000000036d20d1: movq   $0x1,0x138(%rbx)
  0x00000000036d20dc: jmpq   0x00000000036d20fa
  0x00000000036d20e1: jmp    0x00000000036d20fa
  0x00000000036d20e3: movabs $0x1c6dbc68,%rbx   ;   {metadata(method data for {method} {0x000000001c55f368} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000036d20ed: subq   $0x1,0x118(%rbx)
  0x00000000036d20f5: jmpq   0x00000000036d2fd3
  0x00000000036d20fa: mov    %rdi,%r10
  0x00000000036d20fd: shr    $0x3,%r10
  0x00000000036d2101: mov    %r10d,(%rsi)
  0x00000000036d2104: shr    $0x9,%rsi
  0x00000000036d2108: movabs $0xf32f000,%rdx
  0x00000000036d2112: movb   $0x0,(%rsi,%rdx,1)  ;*aastore
                                                ; - java.util.ArrayList::add@26 (line 463)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)

  0x00000000036d2116: mov    0xd8(%rsp),%rax
  0x00000000036d211e: mov    0xb0(%rsp),%rdx
  0x00000000036d2126: mov    0x1c(%rdx),%esi
  0x00000000036d2129: shl    $0x3,%rsi          ;*getfield lmap
                                                ; - sun.misc.URLClassPath::getLoader@187 (line 541)

  0x00000000036d212d: cmp    (%rsi),%rax        ;*invokevirtual put
                                                ; - sun.misc.URLClassPath::getLoader@193 (line 541)
                                                ; implicit exception: dispatches to 0x00000000036d2fdc
  0x00000000036d2130: mov    %rsi,%rbx
  0x00000000036d2133: movabs $0x1c731bb0,%rcx   ;   {metadata(method data for {method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d213d: mov    0x8(%rbx),%ebx
  0x00000000036d2140: shl    $0x3,%rbx
  0x00000000036d2144: cmp    0x538(%rcx),%rbx
  0x00000000036d214b: jne    0x00000000036d215a
  0x00000000036d214d: addq   $0x1,0x540(%rcx)
  0x00000000036d2155: jmpq   0x00000000036d21c0
  0x00000000036d215a: cmp    0x548(%rcx),%rbx
  0x00000000036d2161: jne    0x00000000036d2170
  0x00000000036d2163: addq   $0x1,0x550(%rcx)
  0x00000000036d216b: jmpq   0x00000000036d21c0
  0x00000000036d2170: cmpq   $0x0,0x538(%rcx)
  0x00000000036d217b: jne    0x00000000036d2194
  0x00000000036d217d: mov    %rbx,0x538(%rcx)
  0x00000000036d2184: movq   $0x1,0x540(%rcx)
  0x00000000036d218f: jmpq   0x00000000036d21c0
  0x00000000036d2194: cmpq   $0x0,0x548(%rcx)
  0x00000000036d219f: jne    0x00000000036d21b8
  0x00000000036d21a1: mov    %rbx,0x548(%rcx)
  0x00000000036d21a8: movq   $0x1,0x550(%rcx)
  0x00000000036d21b3: jmpq   0x00000000036d21c0
  0x00000000036d21b8: addq   $0x1,0x530(%rcx)
  0x00000000036d21c0: movabs $0x1c696b08,%rbx   ;   {metadata(method data for {method} {0x000000001c578860} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036d21ca: mov    0xdc(%rbx),%ecx
  0x00000000036d21d0: add    $0x8,%ecx
  0x00000000036d21d3: mov    %ecx,0xdc(%rbx)
  0x00000000036d21d9: movabs $0x1c578858,%rbx   ;   {metadata({method} {0x000000001c578860} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036d21e3: and    $0x7ffff8,%ecx
  0x00000000036d21e9: cmp    $0x0,%ecx
  0x00000000036d21ec: je     0x00000000036d2fe1
  0x00000000036d21f2: movabs $0x1c696b08,%rbx   ;   {metadata(method data for {method} {0x000000001c578860} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036d21fc: addq   $0x1,0x108(%rbx)
  0x00000000036d2204: movabs $0x1c6803c8,%rbx   ;   {metadata(method data for {method} {0x000000001c577d70} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036d220e: mov    0xdc(%rbx),%ecx
  0x00000000036d2214: add    $0x8,%ecx
  0x00000000036d2217: mov    %ecx,0xdc(%rbx)
  0x00000000036d221d: movabs $0x1c577d68,%rbx   ;   {metadata({method} {0x000000001c577d70} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036d2227: and    $0x7ffff8,%ecx
  0x00000000036d222d: cmp    $0x0,%ecx
  0x00000000036d2230: je     0x00000000036d2ff8
  0x00000000036d2236: cmp    $0x0,%rax
  0x00000000036d223a: movabs $0x1c6803c8,%rbx   ;   {metadata(method data for {method} {0x000000001c577d70} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036d2244: movabs $0x108,%rcx
  0x00000000036d224e: jne    0x00000000036d225e
  0x00000000036d2254: movabs $0x118,%rcx
  0x00000000036d225e: mov    (%rbx,%rcx,1),%r8
  0x00000000036d2262: lea    0x1(%r8),%r8
  0x00000000036d2266: mov    %r8,(%rbx,%rcx,1)
  0x00000000036d226a: jne    0x00000000036d2292  ;*ifnonnull
                                                ; - java.util.HashMap::hash@1 (line 339)
                                                ; - java.util.HashMap::put@2 (line 612)
                                                ; - sun.misc.URLClassPath::getLoader@193 (line 541)

  0x00000000036d2270: movabs $0x1c6803c8,%rbx   ;   {metadata(method data for {method} {0x000000001c577d70} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036d227a: incl   0x128(%rbx)
  0x00000000036d2280: mov    $0x0,%ebx
  0x00000000036d2285: mov    %rsi,0xf0(%rsp)
  0x00000000036d228d: jmpq   0x00000000036d22c9  ;*goto
                                                ; - java.util.HashMap::hash@5 (line 339)
                                                ; - java.util.HashMap::put@2 (line 612)
                                                ; - sun.misc.URLClassPath::getLoader@193 (line 541)

  0x00000000036d2292: mov    %rsi,0xf0(%rsp)
  0x00000000036d229a: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x00000000036d300f
  0x00000000036d229d: mov    %rax,%rbx
  0x00000000036d22a0: movabs $0x1c6803c8,%rcx   ;   {metadata(method data for {method} {0x000000001c577d70} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036d22aa: addq   $0x1,0x150(%rcx)
  0x00000000036d22b2: mov    %rax,%rdx          ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.HashMap::put@2 (line 612)
                                                ; - sun.misc.URLClassPath::getLoader@193 (line 541)

  0x00000000036d22b5: nop
  0x00000000036d22b6: nop
  0x00000000036d22b7: callq  0x00000000035d61a0  ; OopMap{[224]=Oop [216]=Oop [176]=Oop [240]=Oop [280]=Oop off=6748}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.HashMap::put@2 (line 612)
                                                ; - sun.misc.URLClassPath::getLoader@193 (line 541)
                                                ;   {optimized virtual_call}
  0x00000000036d22bc: mov    %rax,%r8
  0x00000000036d22bf: shr    $0x10,%r8d
  0x00000000036d22c3: xor    %rax,%r8
  0x00000000036d22c6: mov    %r8,%rbx           ;*ireturn
                                                ; - java.util.HashMap::hash@19 (line 339)
                                                ; - java.util.HashMap::put@2 (line 612)
                                                ; - sun.misc.URLClassPath::getLoader@193 (line 541)

  0x00000000036d22c9: mov    0xf0(%rsp),%rdx
  0x00000000036d22d1: mov    0xe0(%rsp),%rsi
  0x00000000036d22d9: mov    %rdx,%r8
  0x00000000036d22dc: movabs $0x1c696b08,%r9    ;   {metadata(method data for {method} {0x000000001c578860} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000036d22e6: mov    0x8(%r8),%r8d
  0x00000000036d22ea: shl    $0x3,%r8
  0x00000000036d22ee: cmp    0x120(%r9),%r8
  0x00000000036d22f5: jne    0x00000000036d2304
  0x00000000036d22f7: addq   $0x1,0x128(%r9)
  0x00000000036d22ff: jmpq   0x00000000036d236a
  0x00000000036d2304: cmp    0x130(%r9),%r8
  0x00000000036d230b: jne    0x00000000036d231a
  0x00000000036d230d: addq   $0x1,0x138(%r9)
  0x00000000036d2315: jmpq   0x00000000036d236a
  0x00000000036d231a: cmpq   $0x0,0x120(%r9)
  0x00000000036d2325: jne    0x00000000036d233e
  0x00000000036d2327: mov    %r8,0x120(%r9)
  0x00000000036d232e: movq   $0x1,0x128(%r9)
  0x00000000036d2339: jmpq   0x00000000036d236a
  0x00000000036d233e: cmpq   $0x0,0x130(%r9)
  0x00000000036d2349: jne    0x00000000036d2362
  0x00000000036d234b: mov    %r8,0x130(%r9)
  0x00000000036d2352: movq   $0x1,0x138(%r9)
  0x00000000036d235d: jmpq   0x00000000036d236a
  0x00000000036d2362: addq   $0x1,0x118(%r9)
  0x00000000036d236a: mov    %rbx,%r8
  0x00000000036d236d: mov    0xd8(%rsp),%r9
  0x00000000036d2375: mov    %rsi,%rdi
  0x00000000036d2378: mov    $0x0,%esi
  0x00000000036d237d: mov    $0x1,%ecx          ;*invokevirtual putVal
                                                ; - java.util.HashMap::put@9 (line 612)
                                                ; - sun.misc.URLClassPath::getLoader@193 (line 541)

  0x00000000036d2382: nop
  0x00000000036d2383: nop
  0x00000000036d2384: nop
  0x00000000036d2385: nop
  0x00000000036d2386: nop
  0x00000000036d2387: callq  0x00000000035d61a0  ; OopMap{[176]=Oop [280]=Oop off=6956}
                                                ;*invokevirtual putVal
                                                ; - java.util.HashMap::put@9 (line 612)
                                                ; - sun.misc.URLClassPath::getLoader@193 (line 541)
                                                ;   {optimized virtual_call}
  0x00000000036d238c: jmpq   0x00000000036d2564  ;*pop
                                                ; - sun.misc.URLClassPath::getLoader@196 (line 541)

  0x00000000036d2391: mov    0xd8(%rsp),%r8
  0x00000000036d2399: mov    0xc8(%rsp),%rsi
  0x00000000036d23a1: mov    0x2a8(%r15),%rax
  0x00000000036d23a8: xor    %r10,%r10
  0x00000000036d23ab: mov    %r10,0x2a8(%r15)
  0x00000000036d23b2: xor    %r10,%r10
  0x00000000036d23b5: mov    %r10,0x2b0(%r15)
  0x00000000036d23bc: mov    %rax,%rdx
  0x00000000036d23bf: movabs $0x1c816a20,%rdi   ;   {metadata(method data for {method} {0x000000001c67b540} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d23c9: movabs $0x7c006abd8,%r10  ;   {metadata(&apos;java/security/PrivilegedActionException&apos;)}
  0x00000000036d23d3: mov    %r10,0x160(%rdi)
  0x00000000036d23da: addq   $0x1,0x168(%rdi)
  0x00000000036d23e2: mov    0x20(%rax),%eax
  0x00000000036d23e5: shl    $0x3,%rax          ;*getfield exception
                                                ; - java.security.PrivilegedActionException::getException@1 (line 86)
                                                ; - sun.misc.URLClassPath::getLoader@22 (line 570)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)

  0x00000000036d23e9: cmp    $0x0,%rax
  0x00000000036d23ed: jne    0x00000000036d2408
  0x00000000036d23ef: movabs $0x1c816a20,%rdi   ;   {metadata(method data for {method} {0x000000001c67b540} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d23f9: orl    $0x100,0x180(%rdi)
  0x00000000036d2403: jmpq   0x00000000036d24c9
  0x00000000036d2408: movabs $0x7c006a6c8,%rbx  ;   {metadata(&apos;java/io/IOException&apos;)}
  0x00000000036d2412: mov    0x8(%rax),%edi
  0x00000000036d2415: shl    $0x3,%rdi
  0x00000000036d2419: cmp    0x40(%rdi),%rbx
  0x00000000036d241d: jne    0x00000000036d24ad
  0x00000000036d2423: movabs $0x1c816a20,%rdi   ;   {metadata(method data for {method} {0x000000001c67b540} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d242d: mov    0x8(%rax),%ebx
  0x00000000036d2430: shl    $0x3,%rbx
  0x00000000036d2434: cmp    0x190(%rdi),%rbx
  0x00000000036d243b: jne    0x00000000036d244a
  0x00000000036d243d: addq   $0x1,0x198(%rdi)
  0x00000000036d2445: jmpq   0x00000000036d24c9
  0x00000000036d244a: cmp    0x1a0(%rdi),%rbx
  0x00000000036d2451: jne    0x00000000036d2460
  0x00000000036d2453: addq   $0x1,0x1a8(%rdi)
  0x00000000036d245b: jmpq   0x00000000036d24c9
  0x00000000036d2460: cmpq   $0x0,0x190(%rdi)
  0x00000000036d246b: jne    0x00000000036d2484
  0x00000000036d246d: mov    %rbx,0x190(%rdi)
  0x00000000036d2474: movq   $0x1,0x198(%rdi)
  0x00000000036d247f: jmpq   0x00000000036d24c9
  0x00000000036d2484: cmpq   $0x0,0x1a0(%rdi)
  0x00000000036d248f: jne    0x00000000036d24a8
  0x00000000036d2491: mov    %rbx,0x1a0(%rdi)
  0x00000000036d2498: movq   $0x1,0x1a8(%rdi)
  0x00000000036d24a3: jmpq   0x00000000036d24c9
  0x00000000036d24a8: jmpq   0x00000000036d24c9
  0x00000000036d24ad: movabs $0x1c816a20,%rdi   ;   {metadata(method data for {method} {0x000000001c67b540} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d24b7: subq   $0x1,0x188(%rdi)
  0x00000000036d24bf: jmpq   0x00000000036d3014
  0x00000000036d24c4: jmpq   0x00000000036d24c9  ;*checkcast
                                                ; - sun.misc.URLClassPath::getLoader@25 (line 570)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)

  0x00000000036d24c9: cmp    (%rax),%rax        ; OopMap{[176]=Oop rsi=Oop [200]=Oop r8=Oop [216]=Oop [280]=Oop rax=Oop off=7276}
                                                ;*athrow
                                                ; - sun.misc.URLClassPath::getLoader@28 (line 570)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)
                                                ; implicit exception: dispatches to 0x00000000036d301d
  0x00000000036d24cc: movabs $0x36d24cc,%rdx    ;   {section_word}
  0x00000000036d24d6: callq  0x000000000368eda0  ;   {runtime_call}
  0x00000000036d24db: nop                       ;*athrow
                                                ; - sun.misc.URLClassPath::getLoader@28 (line 570)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)

  0x00000000036d24dc: mov    0x2a8(%r15),%rax
  0x00000000036d24e3: xor    %r10,%r10
  0x00000000036d24e6: mov    %r10,0x2a8(%r15)
  0x00000000036d24ed: xor    %r10,%r10
  0x00000000036d24f0: mov    %r10,0x2b0(%r15)
  0x00000000036d24f7: movabs $0x1c731bb0,%rax   ;   {metadata(method data for {method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d2501: incl   0x358(%rax)        ;*ifeq
                                                ; - sun.misc.URLClassPath::getLoader@123 (line 533)

  0x00000000036d2507: movabs $0x1c731bb0,%rax   ;   {metadata(method data for {method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d2511: mov    0xe0(%rax),%edx
  0x00000000036d2517: add    $0x8,%edx
  0x00000000036d251a: mov    %edx,0xe0(%rax)
  0x00000000036d2520: movabs $0x1c67b478,%rax   ;   {metadata({method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d252a: and    $0xfff8,%edx
  0x00000000036d2530: cmp    $0x0,%edx
  0x00000000036d2533: je     0x00000000036d3022  ; OopMap{[176]=Oop [280]=Oop off=7385}
                                                ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@161 (line 536)

  0x00000000036d2539: test   %eax,-0x20e243f(%rip)        # 0x00000000015f0100
                                                ;   {poll}
  0x00000000036d253f: movabs $0x1c731bb0,%rax   ;   {metadata(method data for {method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d2549: incl   0x4a8(%rax)
  0x00000000036d254f: mov    0xac(%rsp),%r8d
  0x00000000036d2557: mov    0xb0(%rsp),%rdx
  0x00000000036d255f: jmpq   0x00000000036d09d8  ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@161 (line 536)

  0x00000000036d2564: movabs $0x1c731bb0,%rax   ;   {metadata(method data for {method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d256e: mov    0xe0(%rax),%edx
  0x00000000036d2574: add    $0x8,%edx
  0x00000000036d2577: mov    %edx,0xe0(%rax)
  0x00000000036d257d: movabs $0x1c67b478,%rax   ;   {metadata({method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d2587: and    $0xfff8,%edx
  0x00000000036d258d: cmp    $0x0,%edx
  0x00000000036d2590: je     0x00000000036d3039  ; OopMap{[176]=Oop [280]=Oop off=7478}
                                                ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@197 (line 542)

  0x00000000036d2596: test   %eax,-0x20e249c(%rip)        # 0x00000000015f0100
                                                ;   {poll}
  0x00000000036d259c: movabs $0x1c731bb0,%rax   ;   {metadata(method data for {method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d25a6: incl   0x560(%rax)
  0x00000000036d25ac: mov    0xac(%rsp),%r8d
  0x00000000036d25b4: mov    0xb0(%rsp),%rdx
  0x00000000036d25bc: jmpq   0x00000000036d09d8  ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@197 (line 542)

  0x00000000036d25c1: movabs $0x1c731bb0,%rax   ;   {metadata(method data for {method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d25cb: mov    0xe0(%rax),%edx
  0x00000000036d25d1: add    $0x8,%edx
  0x00000000036d25d4: mov    %edx,0xe0(%rax)
  0x00000000036d25da: movabs $0x1c67b478,%rax   ;   {metadata({method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d25e4: and    $0xfff8,%edx
  0x00000000036d25ea: cmp    $0x0,%edx
  0x00000000036d25ed: je     0x00000000036d3050  ; OopMap{[176]=Oop [280]=Oop off=7571}
                                                ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@82 (line 514)

  0x00000000036d25f3: test   %eax,-0x20e24f9(%rip)        # 0x00000000015f0100
                                                ;   {poll}
  0x00000000036d25f9: movabs $0x1c731bb0,%rax   ;   {metadata(method data for {method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d2603: incl   0x2a0(%rax)
  0x00000000036d2609: mov    0xac(%rsp),%r8d
  0x00000000036d2611: mov    0xb0(%rsp),%rdx
  0x00000000036d2619: jmpq   0x00000000036d09d8  ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@82 (line 514)

  0x00000000036d261e: mov    0x2a8(%r15),%rax
  0x00000000036d2625: xor    %r10,%r10
  0x00000000036d2628: mov    %r10,0x2a8(%r15)
  0x00000000036d262f: xor    %r10,%r10
  0x00000000036d2632: mov    %r10,0x2b0(%r15)
  0x00000000036d2639: movabs $0x1c731bb0,%rax   ;   {metadata(method data for {method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d2643: mov    0xe0(%rax),%edx
  0x00000000036d2649: add    $0x8,%edx
  0x00000000036d264c: mov    %edx,0xe0(%rax)
  0x00000000036d2652: movabs $0x1c67b478,%rax   ;   {metadata({method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d265c: and    $0xfff8,%edx
  0x00000000036d2662: cmp    $0x0,%edx
  0x00000000036d2665: je     0x00000000036d3067  ; OopMap{[176]=Oop [280]=Oop off=7691}
                                                ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@115 (line 528)

  0x00000000036d266b: test   %eax,-0x20e2571(%rip)        # 0x00000000015f0100
                                                ;   {poll}
  0x00000000036d2671: movabs $0x1c731bb0,%rax   ;   {metadata(method data for {method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d267b: incl   0x340(%rax)
  0x00000000036d2681: mov    0xac(%rsp),%r8d
  0x00000000036d2689: mov    0xb0(%rsp),%rdx
  0x00000000036d2691: jmpq   0x00000000036d09d8  ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@115 (line 528)

  0x00000000036d2696: movabs $0x1c731bb0,%rax   ;   {metadata(method data for {method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d26a0: incl   0x578(%rax)        ;*ifeq
                                                ; - sun.misc.URLClassPath::getLoader@203 (line 543)

  0x00000000036d26a6: mov    0xac(%rsp),%r8d
  0x00000000036d26ae: mov    %rsi,%rax
  0x00000000036d26b1: movabs $0x1c731bb0,%rdx   ;   {metadata(method data for {method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d26bb: addq   $0x1,0x678(%rdx)
  0x00000000036d26c3: movabs $0x1c7322c0,%rax   ;   {metadata(method data for {method} {0x000000001c55f210} &apos;get&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000036d26cd: mov    0xdc(%rax),%edx
  0x00000000036d26d3: add    $0x8,%edx
  0x00000000036d26d6: mov    %edx,0xdc(%rax)
  0x00000000036d26dc: movabs $0x1c55f208,%rax   ;   {metadata({method} {0x000000001c55f210} &apos;get&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000036d26e6: and    $0x7ffff8,%edx
  0x00000000036d26ec: cmp    $0x0,%edx
  0x00000000036d26ef: je     0x00000000036d307e
  0x00000000036d26f5: mov    %rsi,%rax
  0x00000000036d26f8: movabs $0x1c7322c0,%rdx   ;   {metadata(method data for {method} {0x000000001c55f210} &apos;get&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000036d2702: addq   $0x1,0x108(%rdx)
  0x00000000036d270a: movabs $0x1c732450,%rax   ;   {metadata(method data for {method} {0x000000001c55faf0} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000036d2714: mov    0xdc(%rax),%edx
  0x00000000036d271a: add    $0x8,%edx
  0x00000000036d271d: mov    %edx,0xdc(%rax)
  0x00000000036d2723: movabs $0x1c55fae8,%rax   ;   {metadata({method} {0x000000001c55faf0} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000036d272d: and    $0x7ffff8,%edx
  0x00000000036d2733: cmp    $0x0,%edx
  0x00000000036d2736: je     0x00000000036d3095
  0x00000000036d273c: cmp    %edi,%r8d
  0x00000000036d273f: movabs $0x1c732450,%rax   ;   {metadata(method data for {method} {0x000000001c55faf0} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000036d2749: movabs $0x108,%rdx
  0x00000000036d2753: jl     0x00000000036d2763
  0x00000000036d2759: movabs $0x118,%rdx
  0x00000000036d2763: mov    (%rax,%rdx,1),%rdi
  0x00000000036d2767: lea    0x1(%rdi),%rdi
  0x00000000036d276b: mov    %rdi,(%rax,%rdx,1)
  0x00000000036d276f: jge    0x00000000036d29d1  ;*if_icmplt
                                                ; - java.util.ArrayList::rangeCheck@5 (line 656)
                                                ; - java.util.ArrayList::get@2 (line 433)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)

  0x00000000036d2775: mov    %rsi,%rax
  0x00000000036d2778: movabs $0x1c7322c0,%rdx   ;   {metadata(method data for {method} {0x000000001c55f210} &apos;get&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000036d2782: addq   $0x1,0x128(%rdx)
  0x00000000036d278a: movabs $0x1c7325b8,%rax   ;   {metadata(method data for {method} {0x000000001c55f170} &apos;elementData&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000036d2794: mov    0xdc(%rax),%edx
  0x00000000036d279a: add    $0x8,%edx
  0x00000000036d279d: mov    %edx,0xdc(%rax)
  0x00000000036d27a3: movabs $0x1c55f168,%rax   ;   {metadata({method} {0x000000001c55f170} &apos;elementData&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000036d27ad: and    $0x7ffff8,%edx
  0x00000000036d27b3: cmp    $0x0,%edx
  0x00000000036d27b6: je     0x00000000036d30ac
  0x00000000036d27bc: mov    0x14(%rsi),%eax
  0x00000000036d27bf: shl    $0x3,%rax          ;*getfield elementData
                                                ; - java.util.ArrayList::elementData@1 (line 422)
                                                ; - java.util.ArrayList::get@7 (line 435)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)

  0x00000000036d27c3: movslq %r8d,%rdx
  0x00000000036d27c6: cmp    0xc(%rax),%r8d     ; implicit exception: dispatches to 0x00000000036d30c3
  0x00000000036d27ca: jae    0x00000000036d30cd
  0x00000000036d27d0: mov    0x10(%rax,%rdx,4),%eax
  0x00000000036d27d4: shl    $0x3,%rax          ;*aaload
                                                ; - java.util.ArrayList::elementData@5 (line 422)
                                                ; - java.util.ArrayList::get@7 (line 435)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)

  0x00000000036d27d8: cmp    $0x0,%rax
  0x00000000036d27dc: jne    0x00000000036d27f8
  0x00000000036d27de: movabs $0x1c731bb0,%r8    ;   {metadata(method data for {method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d27e8: orl    $0x100,0x690(%r8)
  0x00000000036d27f3: jmpq   0x00000000036d28ba
  0x00000000036d27f8: movabs $0x7c003e0b8,%rsi  ;   {metadata(&apos;sun/misc/URLClassPath$Loader&apos;)}
  0x00000000036d2802: mov    0x8(%rax),%r8d
  0x00000000036d2806: shl    $0x3,%r8
  0x00000000036d280a: cmp    0x30(%r8),%rsi
  0x00000000036d280e: jne    0x00000000036d289e
  0x00000000036d2814: movabs $0x1c731bb0,%r8    ;   {metadata(method data for {method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d281e: mov    0x8(%rax),%esi
  0x00000000036d2821: shl    $0x3,%rsi
  0x00000000036d2825: cmp    0x6a0(%r8),%rsi
  0x00000000036d282c: jne    0x00000000036d283b
  0x00000000036d282e: addq   $0x1,0x6a8(%r8)
  0x00000000036d2836: jmpq   0x00000000036d28ba
  0x00000000036d283b: cmp    0x6b0(%r8),%rsi
  0x00000000036d2842: jne    0x00000000036d2851
  0x00000000036d2844: addq   $0x1,0x6b8(%r8)
  0x00000000036d284c: jmpq   0x00000000036d28ba
  0x00000000036d2851: cmpq   $0x0,0x6a0(%r8)
  0x00000000036d285c: jne    0x00000000036d2875
  0x00000000036d285e: mov    %rsi,0x6a0(%r8)
  0x00000000036d2865: movq   $0x1,0x6a8(%r8)
  0x00000000036d2870: jmpq   0x00000000036d28ba
  0x00000000036d2875: cmpq   $0x0,0x6b0(%r8)
  0x00000000036d2880: jne    0x00000000036d2899
  0x00000000036d2882: mov    %rsi,0x6b0(%r8)
  0x00000000036d2889: movq   $0x1,0x6b8(%r8)
  0x00000000036d2894: jmpq   0x00000000036d28ba
  0x00000000036d2899: jmpq   0x00000000036d28ba
  0x00000000036d289e: movabs $0x1c731bb0,%r8    ;   {metadata(method data for {method} {0x000000001c67b480} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000036d28a8: subq   $0x1,0x698(%r8)
  0x00000000036d28b0: jmpq   0x00000000036d30d6
  0x00000000036d28b5: jmpq   0x00000000036d28ba
  0x00000000036d28ba: mov    %rax,%rdx          ;*checkcast
                                                ; - sun.misc.URLClassPath::getLoader@239 (line 546)

  0x00000000036d28bd: lea    0x110(%rsp),%rax
  0x00000000036d28c5: mov    0x8(%rax),%rsi
  0x00000000036d28c9: mov    (%rsi),%r8
  0x00000000036d28cc: and    $0x7,%r8
  0x00000000036d28d0: cmp    $0x5,%r8
  0x00000000036d28d4: je     0x00000000036d28f1
  0x00000000036d28da: mov    (%rax),%r8
  0x00000000036d28dd: test   %r8,%r8
  0x00000000036d28e0: je     0x00000000036d28f1
  0x00000000036d28e6: lock cmpxchg %r8,(%rsi)
  0x00000000036d28eb: jne    0x00000000036d30df
  0x00000000036d28f1: mov    %rdx,%rax
  0x00000000036d28f4: add    $0x170,%rsp
  0x00000000036d28fb: pop    %rbp
  0x00000000036d28fc: test   %eax,-0x20e2802(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036d2902: retq                      ;*areturn
                                                ; - sun.misc.URLClassPath::getLoader@242 (line 546)

  0x00000000036d2903: lea    0x120(%rsp),%rax
  0x00000000036d290b: mov    0x8(%rax),%r8
  0x00000000036d290f: mov    (%r8),%rdx
  0x00000000036d2912: and    $0x7,%rdx
  0x00000000036d2916: cmp    $0x5,%rdx
  0x00000000036d291a: je     0x00000000036d2937
  0x00000000036d2920: mov    (%rax),%rdx
  0x00000000036d2923: test   %rdx,%rdx
  0x00000000036d2926: je     0x00000000036d2937
  0x00000000036d292c: lock cmpxchg %rdx,(%r8)
  0x00000000036d2931: jne    0x00000000036d30f5  ;*monitorexit
                                                ; - sun.misc.URLClassPath::getLoader@41 (line 504)

  0x00000000036d2937: lea    0x110(%rsp),%rax
  0x00000000036d293f: mov    0x8(%rax),%r8
  0x00000000036d2943: mov    (%r8),%rdx
  0x00000000036d2946: and    $0x7,%rdx
  0x00000000036d294a: cmp    $0x5,%rdx
  0x00000000036d294e: je     0x00000000036d296b
  0x00000000036d2954: mov    (%rax),%rdx
  0x00000000036d2957: test   %rdx,%rdx
  0x00000000036d295a: je     0x00000000036d296b
  0x00000000036d2960: lock cmpxchg %rdx,(%r8)
  0x00000000036d2965: jne    0x00000000036d310b
  0x00000000036d296b: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00000000036d2975: add    $0x170,%rsp
  0x00000000036d297c: pop    %rbp
  0x00000000036d297d: test   %eax,-0x20e2883(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036d2983: retq                      ;*areturn
                                                ; - sun.misc.URLClassPath::getLoader@42 (line 504)

  0x00000000036d2984: lea    0x110(%rsp),%rax
  0x00000000036d298c: mov    0x8(%rax),%r8
  0x00000000036d2990: mov    (%r8),%rdx
  0x00000000036d2993: and    $0x7,%rdx
  0x00000000036d2997: cmp    $0x5,%rdx
  0x00000000036d299b: je     0x00000000036d29b8
  0x00000000036d29a1: mov    (%rax),%rdx
  0x00000000036d29a4: test   %rdx,%rdx
  0x00000000036d29a7: je     0x00000000036d29b8
  0x00000000036d29ad: lock cmpxchg %rdx,(%r8)
  0x00000000036d29b2: jne    0x00000000036d3121
  0x00000000036d29b8: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00000000036d29c2: add    $0x170,%rsp
  0x00000000036d29c9: pop    %rbp
  0x00000000036d29ca: test   %eax,-0x20e28d0(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036d29d0: retq                      ;*areturn
                                                ; - sun.misc.URLClassPath::getLoader@8 (line 495)

  0x00000000036d29d1: nopl   0x0(%rax)
  0x00000000036d29d8: jmpq   0x00000000036d3146  ;   {no_reloc}
  0x00000000036d29dd: add    %al,(%rax)
  0x00000000036d29df: add    %al,(%rax)
  0x00000000036d29e1: add    %ch,%cl
  0x00000000036d29e3: imul   $0x8b480000,(%rdi),%eax  ;*new
                                                ; - java.util.ArrayList::rangeCheck@8 (line 657)
                                                ; - java.util.ArrayList::get@2 (line 433)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)

  0x00000000036d29e9: (bad)  
  0x00000000036d29ea: movabs $0x1c732450,%rdi   ;   {metadata(method data for {method} {0x000000001c55faf0} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000036d29f4: addq   $0x1,0x128(%rdi)
  0x00000000036d29fc: mov    %r8,%rdi
  0x00000000036d29ff: mov    %rdi,%r8
  0x00000000036d2a02: mov    %rsi,%rdx          ;*invokespecial outOfBoundsMsg
                                                ; - java.util.ArrayList::rangeCheck@14 (line 657)
                                                ; - java.util.ArrayList::get@2 (line 433)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)

  0x00000000036d2a05: mov    %rsi,0x100(%rsp)
  0x00000000036d2a0d: mov    %rax,0xf8(%rsp)
  0x00000000036d2a15: nop
  0x00000000036d2a16: nop
  0x00000000036d2a17: callq  0x00000000035d61a0  ; OopMap{[248]=Oop [256]=Oop [280]=Oop off=8636}
                                                ;*invokespecial outOfBoundsMsg
                                                ; - java.util.ArrayList::rangeCheck@14 (line 657)
                                                ; - java.util.ArrayList::get@2 (line 433)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)
                                                ;   {optimized virtual_call}
  0x00000000036d2a1c: mov    0xf8(%rsp),%r8
  0x00000000036d2a24: movabs $0x1c732450,%rdx   ;   {metadata(method data for {method} {0x000000001c55faf0} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000036d2a2e: addq   $0x1,0x138(%rdx)
  0x00000000036d2a36: mov    %rax,%r8
  0x00000000036d2a39: mov    0xf8(%rsp),%rdx    ;*invokespecial &lt;init&gt;
                                                ; - java.util.ArrayList::rangeCheck@17 (line 657)
                                                ; - java.util.ArrayList::get@2 (line 433)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)

  0x00000000036d2a41: nop
  0x00000000036d2a42: nop
  0x00000000036d2a43: nop
  0x00000000036d2a44: nop
  0x00000000036d2a45: nop
  0x00000000036d2a46: nop
  0x00000000036d2a47: callq  0x00000000035d61a0  ; OopMap{[248]=Oop [256]=Oop [280]=Oop off=8684}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.util.ArrayList::rangeCheck@17 (line 657)
                                                ; - java.util.ArrayList::get@2 (line 433)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)
                                                ;   {optimized virtual_call}
  0x00000000036d2a4c: mov    0xf8(%rsp),%rax
  0x00000000036d2a54: jmpq   0x00000000036d327a  ;*athrow
                                                ; - java.util.ArrayList::rangeCheck@20 (line 657)
                                                ; - java.util.ArrayList::get@2 (line 433)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)

  0x00000000036d2a59: mov    %rdi,0xa0(%rsp)
  0x00000000036d2a61: mov    %rsi,0xb8(%rsp)
  0x00000000036d2a69: nopl   0x0(%rax)
  0x00000000036d2a70: jmpq   0x00000000036d316c  ;   {no_reloc}
  0x00000000036d2a75: add    %al,(%rax)
  0x00000000036d2a77: add    %al,(%rax)
  0x00000000036d2a79: add    %ch,%cl
  0x00000000036d2a7b: testl  $0x8b480000,(%rsi)  ;*new
                                                ; - java.util.Stack::peek@9 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00000000036d2a81: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x000000001c558928} &apos;peek&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00000000036d2a84: pushq  $0x1c815c
  0x00000000036d2a89: add    %al,(%rax)
  0x00000000036d2a8b: add    %cl,-0x7d(%rax)
  0x00000000036d2a8e: xchg   %bl,0x1(%rax)
  0x00000000036d2a91: add    %al,(%rax)
  0x00000000036d2a93: add    %ecx,-0x75(%rax)
  0x00000000036d2a96: rorb   -0x77(%rax)        ;*invokespecial &lt;init&gt;
                                                ; - java.util.Stack::peek@13 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00000000036d2a99: test   %ah,(%rax,%rcx,1)
  0x00000000036d2a9c: add    %eax,(%rax)
  0x00000000036d2a9e: add    %ch,%al            ;   {optimized virtual_call}
  0x00000000036d2aa0: cld    
  0x00000000036d2aa1: lock decl %ss:-0x75(%rax)  ; OopMap{[160]=Oop [184]=Oop [176]=Oop [264]=Oop [280]=Oop [296]=Oop [312]=Oop [328]=Oop off=8772}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.util.Stack::peek@13 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00000000036d2aa6: test   %ah,(%rax,%rcx,1)
  0x00000000036d2aa9: add    %eax,(%rax)
  0x00000000036d2aab: add    %cl,-0x46(%rax)    ; OopMap{[160]=Oop [184]=Oop [176]=Oop [280]=Oop [296]=Oop [312]=Oop [328]=Oop rax=Oop off=8780}
                                                ;*athrow
                                                ; - java.util.Stack::peek@16 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)
                                                ;   {section_word}
  0x00000000036d2aae: lods   %ds:(%rsi),%al
  0x00000000036d2aaf: sub    0x3(%rbp),%ch
  0x00000000036d2ab2: add    %al,(%rax)
  0x00000000036d2ab4: add    %al,(%rax)
  0x00000000036d2ab6: callq  0x000000000368eda0  ;   {runtime_call}
  0x00000000036d2abb: nop                       ;*athrow
                                                ; - java.util.Stack::peek@16 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00000000036d2abc: mov    0x2a8(%r15),%rax
  0x00000000036d2ac3: xor    %r10,%r10
  0x00000000036d2ac6: mov    %r10,0x2a8(%r15)
  0x00000000036d2acd: xor    %r10,%r10
  0x00000000036d2ad0: mov    %r10,0x2b0(%r15)
  0x00000000036d2ad7: mov    %rax,%rdx
  0x00000000036d2ada: lea    0x150(%rsp),%rax
  0x00000000036d2ae2: mov    0x8(%rax),%rdi
  0x00000000036d2ae6: mov    (%rdi),%rsi
  0x00000000036d2ae9: and    $0x7,%rsi
  0x00000000036d2aed: cmp    $0x5,%rsi
  0x00000000036d2af1: je     0x00000000036d2b0e
  0x00000000036d2af7: mov    (%rax),%rsi
  0x00000000036d2afa: test   %rsi,%rsi
  0x00000000036d2afd: je     0x00000000036d2b0e
  0x00000000036d2b03: lock cmpxchg %rsi,(%rdi)
  0x00000000036d2b08: jne    0x00000000036d3183  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00000000036d2b0e: mov    %rdx,%rax          ; OopMap{[160]=Oop [184]=Oop [176]=Oop [280]=Oop [296]=Oop [312]=Oop [328]=Oop rax=Oop off=8881}
                                                ;*invokevirtual size
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00000000036d2b11: movabs $0x36d2b11,%rdx    ;   {section_word}
  0x00000000036d2b1b: callq  0x000000000368eda0  ;   {runtime_call}
  0x00000000036d2b20: nop                       ;*invokevirtual size
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00000000036d2b21: mov    0x2a8(%r15),%rax
  0x00000000036d2b28: xor    %r10,%r10
  0x00000000036d2b2b: mov    %r10,0x2a8(%r15)
  0x00000000036d2b32: xor    %r10,%r10
  0x00000000036d2b35: mov    %r10,0x2b0(%r15)
  0x00000000036d2b3c: mov    %rax,%rdx
  0x00000000036d2b3f: lea    0x140(%rsp),%rax
  0x00000000036d2b47: mov    0x8(%rax),%rdi
  0x00000000036d2b4b: mov    (%rdi),%rsi
  0x00000000036d2b4e: and    $0x7,%rsi
  0x00000000036d2b52: cmp    $0x5,%rsi
  0x00000000036d2b56: je     0x00000000036d2b73
  0x00000000036d2b5c: mov    (%rax),%rsi
  0x00000000036d2b5f: test   %rsi,%rsi
  0x00000000036d2b62: je     0x00000000036d2b73
  0x00000000036d2b68: lock cmpxchg %rsi,(%rdi)
  0x00000000036d2b6d: jne    0x00000000036d3199  ;*synchronization entry
                                                ; - java.util.Stack::peek@-1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00000000036d2b73: mov    %rdx,%rax          ; OopMap{[160]=Oop [184]=Oop [176]=Oop [280]=Oop [296]=Oop [312]=Oop rax=Oop off=8982}
                                                ;*invokevirtual peek
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00000000036d2b76: movabs $0x36d2b76,%rdx    ;   {section_word}
  0x00000000036d2b80: callq  0x000000000368eda0  ;   {runtime_call}
  0x00000000036d2b85: nop                       ;*invokevirtual peek
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00000000036d2b86: mov    0x2a8(%r15),%rax
  0x00000000036d2b8d: xor    %r10,%r10
  0x00000000036d2b90: mov    %r10,0x2a8(%r15)
  0x00000000036d2b97: xor    %r10,%r10
  0x00000000036d2b9a: mov    %r10,0x2b0(%r15)
  0x00000000036d2ba1: mov    %rax,%rdx
  0x00000000036d2ba4: lea    0x140(%rsp),%rax
  0x00000000036d2bac: mov    0x8(%rax),%rbx
  0x00000000036d2bb0: mov    (%rbx),%rsi
  0x00000000036d2bb3: and    $0x7,%rsi
  0x00000000036d2bb7: cmp    $0x5,%rsi
  0x00000000036d2bbb: je     0x00000000036d2bd8
  0x00000000036d2bc1: mov    (%rax),%rsi
  0x00000000036d2bc4: test   %rsi,%rsi
  0x00000000036d2bc7: je     0x00000000036d2bd8
  0x00000000036d2bcd: lock cmpxchg %rsi,(%rbx)
  0x00000000036d2bd2: jne    0x00000000036d31af  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00000000036d2bd8: mov    %rdx,%rax          ; OopMap{[184]=Oop [176]=Oop rdi=Oop [280]=Oop [296]=Oop [312]=Oop rax=Oop off=9083}
                                                ;*invokevirtual size
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00000000036d2bdb: movabs $0x36d2bdb,%rdx    ;   {section_word}
  0x00000000036d2be5: callq  0x000000000368eda0  ;   {runtime_call}
  0x00000000036d2bea: nop                       ;*invokevirtual size
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00000000036d2beb: mov    0x2a8(%r15),%rax
  0x00000000036d2bf2: xor    %r10,%r10
  0x00000000036d2bf5: mov    %r10,0x2a8(%r15)
  0x00000000036d2bfc: xor    %r10,%r10
  0x00000000036d2bff: mov    %r10,0x2b0(%r15)
  0x00000000036d2c06: mov    %rax,%rdx
  0x00000000036d2c09: lea    0x130(%rsp),%rax
  0x00000000036d2c11: mov    0x8(%rax),%rdi
  0x00000000036d2c15: mov    (%rdi),%rsi
  0x00000000036d2c18: and    $0x7,%rsi
  0x00000000036d2c1c: cmp    $0x5,%rsi
  0x00000000036d2c20: je     0x00000000036d2c3d
  0x00000000036d2c26: mov    (%rax),%rsi
  0x00000000036d2c29: test   %rsi,%rsi
  0x00000000036d2c2c: je     0x00000000036d2c3d
  0x00000000036d2c32: lock cmpxchg %rsi,(%rdi)
  0x00000000036d2c37: jne    0x00000000036d31c5  ;*synchronization entry
                                                ; - java.util.Stack::pop@-1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00000000036d2c3d: mov    %rdx,%rax          ; OopMap{[184]=Oop [176]=Oop [280]=Oop [296]=Oop rax=Oop off=9184}
                                                ;*invokevirtual pop
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00000000036d2c40: movabs $0x36d2c40,%rdx    ;   {section_word}
  0x00000000036d2c4a: callq  0x000000000368eda0  ;   {runtime_call}
  0x00000000036d2c4f: nop                       ;*invokevirtual pop
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)

  0x00000000036d2c50: mov    0xac(%rsp),%r8d
  0x00000000036d2c58: mov    0xb0(%rsp),%rsi
  0x00000000036d2c60: mov    0x2a8(%r15),%rax
  0x00000000036d2c67: xor    %r10,%r10
  0x00000000036d2c6a: mov    %r10,0x2a8(%r15)
  0x00000000036d2c71: xor    %r10,%r10
  0x00000000036d2c74: mov    %r10,0x2b0(%r15)
  0x00000000036d2c7b: mov    %rax,%rdx
  0x00000000036d2c7e: lea    0x130(%rsp),%rax
  0x00000000036d2c86: mov    0x8(%rax),%rcx
  0x00000000036d2c8a: mov    (%rcx),%rbx
  0x00000000036d2c8d: and    $0x7,%rbx
  0x00000000036d2c91: cmp    $0x5,%rbx
  0x00000000036d2c95: je     0x00000000036d2cb2
  0x00000000036d2c9b: mov    (%rax),%rbx
  0x00000000036d2c9e: test   %rbx,%rbx
  0x00000000036d2ca1: je     0x00000000036d2cb2
  0x00000000036d2ca7: lock cmpxchg %rbx,(%rcx)
  0x00000000036d2cac: jne    0x00000000036d31db  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 503)

  0x00000000036d2cb2: mov    %rdx,%rax          ; OopMap{rdi=Oop rsi=Oop [176]=Oop [280]=Oop [296]=Oop rax=Oop off=9301}
                                                ;*invokevirtual size
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 503)

  0x00000000036d2cb5: movabs $0x36d2cb5,%rdx    ;   {section_word}
  0x00000000036d2cbf: callq  0x000000000368eda0  ;   {runtime_call}
  0x00000000036d2cc4: nop                       ;*invokevirtual size
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 503)

  0x00000000036d2cc5: mov    0x2a8(%r15),%rax
  0x00000000036d2ccc: xor    %r10,%r10
  0x00000000036d2ccf: mov    %r10,0x2a8(%r15)
  0x00000000036d2cd6: xor    %r10,%r10
  0x00000000036d2cd9: mov    %r10,0x2b0(%r15)
  0x00000000036d2ce0: mov    %rax,%rsi
  0x00000000036d2ce3: lea    0x120(%rsp),%rax
  0x00000000036d2ceb: mov    0x8(%rax),%rbx
  0x00000000036d2cef: mov    (%rbx),%rdi
  0x00000000036d2cf2: and    $0x7,%rdi
  0x00000000036d2cf6: cmp    $0x5,%rdi
  0x00000000036d2cfa: je     0x00000000036d2d17
  0x00000000036d2d00: mov    (%rax),%rdi
  0x00000000036d2d03: test   %rdi,%rdi
  0x00000000036d2d06: je     0x00000000036d2d17
  0x00000000036d2d0c: lock cmpxchg %rdi,(%rbx)
  0x00000000036d2d11: jne    0x00000000036d31f1  ;*monitorexit
                                                ; - sun.misc.URLClassPath::getLoader@62 (line 508)

  0x00000000036d2d17: mov    %rsi,%rax
  0x00000000036d2d1a: jmpq   0x00000000036d327a
  0x00000000036d2d1f: mov    %rdx,0x8(%rsp)
  0x00000000036d2d24: mov    %rsi,(%rsp)
  0x00000000036d2d28: callq  0x000000000368fce0  ; OopMap{rdx=Oop [176]=Oop [280]=Oop off=9421}
                                                ;*synchronization entry
                                                ; - sun.misc.URLClassPath::getLoader@-1 (line 494)
                                                ;   {runtime_call}
  0x00000000036d2d2d: jmpq   0x00000000036d0968
  0x00000000036d2d32: mov    %rax,0x8(%rsp)
  0x00000000036d2d37: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036d2d3f: callq  0x00000000036919e0  ; OopMap{rdx=Oop [176]=Oop [280]=Oop off=9444}
                                                ;*synchronization entry
                                                ; - sun.misc.URLClassPath::getLoader@-1 (line 494)
                                                ;   {runtime_call}
  0x00000000036d2d44: jmpq   0x00000000036d099a
  0x00000000036d2d49: callq  0x000000000368d080  ; OopMap{rdx=Oop [176]=Oop rsi=Oop [280]=Oop off=9454}
                                                ;*invokevirtual size
                                                ; - sun.misc.URLClassPath::getLoader@13 (line 499)
                                                ;   {runtime_call}
  0x00000000036d2d4e: callq  0x000000000368d080  ; OopMap{rdx=Oop [176]=Oop rsi=Oop [280]=Oop off=9459}
                                                ;*monitorenter
                                                ; - sun.misc.URLClassPath::getLoader@28 (line 502)
                                                ;   {runtime_call}
  0x00000000036d2d53: mov    %rsi,0x8(%rsp)
  0x00000000036d2d58: mov    %rdi,(%rsp)
  0x00000000036d2d5c: callq  0x000000000368fce0  ; OopMap{rdx=Oop [176]=Oop rsi=Oop [280]=Oop [296]=Oop off=9473}
                                                ;*monitorenter
                                                ; - sun.misc.URLClassPath::getLoader@28 (line 502)
                                                ;   {runtime_call}
  0x00000000036d2d61: jmpq   0x00000000036d0b07
  0x00000000036d2d66: callq  0x000000000368d080  ; OopMap{rdx=Oop [176]=Oop rsi=Oop rdi=Oop [280]=Oop [296]=Oop off=9483}
                                                ;*invokevirtual empty
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 503)
                                                ;   {runtime_call}
  0x00000000036d2d6b: mov    %rax,0x8(%rsp)
  0x00000000036d2d70: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036d2d78: callq  0x00000000036919e0  ; OopMap{rdx=Oop [176]=Oop rsi=Oop rdi=Oop [280]=Oop [296]=Oop off=9501}
                                                ;*synchronization entry
                                                ; - java.util.Stack::empty@-1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 503)
                                                ;   {runtime_call}
  0x00000000036d2d7d: jmpq   0x00000000036d0b58
  0x00000000036d2d82: mov    %rdi,0x8(%rsp)
  0x00000000036d2d87: mov    %rbx,(%rsp)
  0x00000000036d2d8b: callq  0x000000000368fce0  ; OopMap{rdx=Oop [176]=Oop rsi=Oop rdi=Oop [280]=Oop [296]=Oop [312]=Oop off=9520}
                                                ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 503)
                                                ;   {runtime_call}
  0x00000000036d2d90: jmpq   0x00000000036d0cb1
  0x00000000036d2d95: lea    0x130(%rsp),%rax
  0x00000000036d2d9d: mov    %rax,(%rsp)
  0x00000000036d2da1: callq  0x00000000036900e0  ;   {runtime_call}
  0x00000000036d2da6: jmpq   0x00000000036d0ce8
  0x00000000036d2dab: callq  0x000000000368d080  ; OopMap{rdx=Oop [176]=Oop rsi=Oop rdi=Oop [280]=Oop [296]=Oop off=9552}
                                                ;*invokevirtual pop
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)
                                                ;   {runtime_call}
  0x00000000036d2db0: mov    %rdi,0x8(%rsp)
  0x00000000036d2db5: mov    %rbx,(%rsp)
  0x00000000036d2db9: callq  0x000000000368fce0  ; OopMap{rdx=Oop [176]=Oop rsi=Oop rdi=Oop [280]=Oop [296]=Oop [312]=Oop off=9566}
                                                ;*synchronization entry
                                                ; - java.util.Stack::pop@-1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)
                                                ;   {runtime_call}
  0x00000000036d2dbe: jmpq   0x00000000036d0e64
  0x00000000036d2dc3: mov    %rax,0x8(%rsp)
  0x00000000036d2dc8: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036d2dd0: callq  0x00000000036919e0  ; OopMap{rdx=Oop [176]=Oop rsi=Oop rdi=Oop [280]=Oop [296]=Oop [312]=Oop off=9589}
                                                ;*synchronization entry
                                                ; - java.util.Stack::pop@-1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)
                                                ;   {runtime_call}
  0x00000000036d2dd5: jmpq   0x00000000036d0e96
  0x00000000036d2dda: mov    %rdi,0x8(%rsp)
  0x00000000036d2ddf: mov    %rbx,(%rsp)
  0x00000000036d2de3: callq  0x000000000368fce0  ; OopMap{rdx=Oop [176]=Oop rsi=Oop rdi=Oop [280]=Oop [296]=Oop [312]=Oop [328]=Oop off=9608}
                                                ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)
                                                ;   {runtime_call}
  0x00000000036d2de8: jmpq   0x00000000036d0fef
  0x00000000036d2ded: lea    0x140(%rsp),%rax
  0x00000000036d2df5: mov    %rax,(%rsp)
  0x00000000036d2df9: callq  0x00000000036900e0  ;   {runtime_call}
  0x00000000036d2dfe: jmpq   0x00000000036d1026
  0x00000000036d2e03: mov    %rdi,0x8(%rsp)
  0x00000000036d2e08: mov    %rcx,(%rsp)
  0x00000000036d2e0c: callq  0x000000000368fce0  ; OopMap{rdx=Oop [176]=Oop rsi=Oop rdi=Oop [280]=Oop [296]=Oop [312]=Oop [328]=Oop off=9649}
                                                ;*synchronization entry
                                                ; - java.util.Stack::peek@-1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)
                                                ;   {runtime_call}
  0x00000000036d2e11: jmpq   0x00000000036d1118
  0x00000000036d2e16: mov    %rax,0x8(%rsp)
  0x00000000036d2e1b: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036d2e23: callq  0x00000000036919e0  ; OopMap{rdx=Oop [176]=Oop rsi=Oop rdi=Oop [280]=Oop [296]=Oop [312]=Oop [328]=Oop off=9672}
                                                ;*synchronization entry
                                                ; - java.util.Stack::peek@-1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)
                                                ;   {runtime_call}
  0x00000000036d2e28: jmpq   0x00000000036d114a
  0x00000000036d2e2d: mov    %rdi,0x8(%rsp)
  0x00000000036d2e32: mov    %rcx,(%rsp)
  0x00000000036d2e36: callq  0x000000000368fce0  ; OopMap{rdx=Oop [176]=Oop rsi=Oop rdi=Oop [280]=Oop [296]=Oop [312]=Oop [328]=Oop [344]=Oop off=9691}
                                                ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)
                                                ;   {runtime_call}
  0x00000000036d2e3b: jmpq   0x00000000036d12a6
  0x00000000036d2e40: lea    0x150(%rsp),%rax
  0x00000000036d2e48: mov    %rax,(%rsp)
  0x00000000036d2e4c: callq  0x00000000036900e0  ;   {runtime_call}
  0x00000000036d2e51: jmpq   0x00000000036d12dd
  0x00000000036d2e56: lea    0x140(%rsp),%rax
  0x00000000036d2e5e: mov    %rax,(%rsp)
  0x00000000036d2e62: callq  0x00000000036900e0  ;   {runtime_call}
  0x00000000036d2e67: jmpq   0x00000000036d1408
  0x00000000036d2e6c: lea    0x130(%rsp),%rax
  0x00000000036d2e74: mov    %rax,(%rsp)
  0x00000000036d2e78: callq  0x00000000036900e0  ;   {runtime_call}
  0x00000000036d2e7d: jmpq   0x00000000036d14f0
  0x00000000036d2e82: mov    %rax,(%rsp)
  0x00000000036d2e86: callq  0x000000000368f500  ; OopMap{[184]=Oop [176]=Oop [280]=Oop [296]=Oop off=9771}
                                                ;*checkcast
                                                ; - sun.misc.URLClassPath::getLoader@50 (line 506)
                                                ;   {runtime_call}
  0x00000000036d2e8b: lea    0x120(%rsp),%rax
  0x00000000036d2e93: mov    %rax,(%rsp)
  0x00000000036d2e97: callq  0x00000000036900e0  ;   {runtime_call}
  0x00000000036d2e9c: jmpq   0x00000000036d1616
  0x00000000036d2ea1: callq  0x000000000368d080  ; OopMap{[200]=Oop rax=Oop [216]=Oop rdx=Oop [176]=Oop rsi=Oop [280]=Oop off=9798}
                                                ;*invokevirtual containsKey
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)
                                                ;   {runtime_call}
  0x00000000036d2ea6: mov    %rdi,0x8(%rsp)
  0x00000000036d2eab: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036d2eb3: callq  0x00000000036919e0  ; OopMap{[200]=Oop rax=Oop [216]=Oop rdx=Oop [176]=Oop rsi=Oop [280]=Oop off=9816}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::containsKey@-1 (line 596)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)
                                                ;   {runtime_call}
  0x00000000036d2eb8: jmpq   0x00000000036d1720
  0x00000000036d2ebd: mov    %rdi,0x8(%rsp)
  0x00000000036d2ec2: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036d2eca: callq  0x00000000036919e0  ; OopMap{[200]=Oop rax=Oop [216]=Oop rdx=Oop [176]=Oop rsi=Oop [280]=Oop off=9839}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 339)
                                                ; - java.util.HashMap::containsKey@2 (line 596)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)
                                                ;   {runtime_call}
  0x00000000036d2ecf: jmpq   0x00000000036d1764
  0x00000000036d2ed4: callq  0x000000000368d080  ; OopMap{[200]=Oop rax=Oop [216]=Oop [208]=Oop [176]=Oop [280]=Oop off=9849}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.HashMap::containsKey@2 (line 596)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 513)
                                                ;   {runtime_call}
  0x00000000036d2ed9: mov    %rdi,0x8(%rsp)
  0x00000000036d2ede: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036d2ee6: callq  0x00000000036919e0  ; OopMap{[216]=Oop rdx=Oop [176]=Oop rsi=Oop [200]=Oop [280]=Oop off=9867}
                                                ;*synchronization entry
                                                ; - sun.misc.URLClassPath::getLoader@-1 (line 554)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)
                                                ;   {runtime_call}
  0x00000000036d2eeb: jmpq   0x00000000036d1998
  0x00000000036d2ef0: mov    %rdx,%rdx
  0x00000000036d2ef3: callq  0x000000000368d300  ; OopMap{[216]=Oop rbx=Oop [176]=Oop r9=Oop [200]=Oop [280]=Oop off=9880}
                                                ;*new  ; - sun.misc.URLClassPath::getLoader@0 (line 554)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)
                                                ;   {runtime_call}
  0x00000000036d2ef8: jmpq   0x00000000036d19df
  0x00000000036d2efd: mov    %rdx,0x8(%rsp)
  0x00000000036d2f02: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036d2f0a: callq  0x00000000036919e0  ; OopMap{[216]=Oop rbx=Oop [176]=Oop r9=Oop [200]=Oop rax=Oop [280]=Oop off=9903}
                                                ;*synchronization entry
                                                ; - sun.misc.URLClassPath$3::&lt;init&gt;@-1 (line 555)
                                                ; - sun.misc.URLClassPath::getLoader@6 (line 554)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)
                                                ;   {runtime_call}
  0x00000000036d2f0f: jmpq   0x00000000036d1a2b
  0x00000000036d2f14: mov    %rdx,0x8(%rsp)
  0x00000000036d2f19: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036d2f21: callq  0x00000000036919e0  ; OopMap{[216]=Oop rbx=Oop [176]=Oop r9=Oop [200]=Oop rax=Oop [280]=Oop off=9926}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - sun.misc.URLClassPath$3::&lt;init&gt;@11 (line 555)
                                                ; - sun.misc.URLClassPath::getLoader@6 (line 554)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)
                                                ;   {runtime_call}
  0x00000000036d2f26: jmpq   0x00000000036d1aaf
  0x00000000036d2f2b: mov    %rax,(%rsp)
  0x00000000036d2f2f: callq  0x000000000368f500  ; OopMap{[216]=Oop [200]=Oop [176]=Oop [280]=Oop off=9940}
                                                ;*checkcast
                                                ; - sun.misc.URLClassPath::getLoader@16 (line 554)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)
                                                ;   {runtime_call}
  0x00000000036d2f34: callq  0x000000000368d080  ; OopMap{[216]=Oop [200]=Oop [176]=Oop rsi=Oop [224]=Oop [280]=Oop off=9945}
                                                ;*invokevirtual getClassPath
                                                ; - sun.misc.URLClassPath::getLoader@94 (line 522)
                                                ;   {runtime_call}
  0x00000000036d2f39: callq  0x000000000368d080  ; OopMap{[216]=Oop [224]=Oop rdx=Oop [176]=Oop r8=Oop [280]=Oop off=9950}
                                                ;*invokevirtual size
                                                ; - sun.misc.URLClassPath::getLoader@169 (line 539)
                                                ;   {runtime_call}
  0x00000000036d2f3e: callq  0x000000000368d080  ; OopMap{[216]=Oop [224]=Oop rdx=Oop [176]=Oop rsi=Oop [280]=Oop off=9955}
                                                ;*invokevirtual add
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ;   {runtime_call}
  0x00000000036d2f43: mov    %r8,0x8(%rsp)
  0x00000000036d2f48: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036d2f50: callq  0x00000000036919e0  ; OopMap{[216]=Oop [224]=Oop rdx=Oop [176]=Oop rsi=Oop [280]=Oop off=9973}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::add@-1 (line 462)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ;   {runtime_call}
  0x00000000036d2f55: jmpq   0x00000000036d1d8f
  0x00000000036d2f5a: mov    %rdi,0x8(%rsp)
  0x00000000036d2f5f: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036d2f67: callq  0x00000000036919e0  ; OopMap{[216]=Oop [224]=Oop rdx=Oop [176]=Oop rsi=Oop [280]=Oop off=9996}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::ensureCapacityInternal@-1 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ;   {runtime_call}
  0x00000000036d2f6c: jmpq   0x00000000036d1ddd
  0x00000000036d2f71: mov    %rbx,0x8(%rsp)
  0x00000000036d2f76: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036d2f7e: callq  0x00000000036919e0  ; OopMap{[216]=Oop [224]=Oop rdx=Oop [176]=Oop rsi=Oop rdi=Oop [280]=Oop off=10019}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::calculateCapacity@-1 (line 224)
                                                ; - java.util.ArrayList::ensureCapacityInternal@6 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ;   {runtime_call}
  0x00000000036d2f83: jmpq   0x00000000036d1e28
  0x00000000036d2f88: mov    %rbx,0x8(%rsp)
  0x00000000036d2f8d: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036d2f95: callq  0x00000000036919e0  ; OopMap{[216]=Oop [224]=Oop rdx=Oop [176]=Oop rsi=Oop rdi=Oop [280]=Oop off=10042}
                                                ;*synchronization entry
                                                ; - java.lang.Math::max@-1 (line 1252)
                                                ; - java.util.ArrayList::calculateCapacity@10 (line 225)
                                                ; - java.util.ArrayList::ensureCapacityInternal@6 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ;   {runtime_call}
  0x00000000036d2f9a: jmpq   0x00000000036d1eaf
  0x00000000036d2f9f: mov    %rbx,0x8(%rsp)
  0x00000000036d2fa4: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036d2fac: callq  0x00000000036919e0  ; OopMap{[216]=Oop [224]=Oop rdx=Oop [176]=Oop rsi=Oop rdi=Oop [280]=Oop off=10065}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::ensureExplicitCapacity@-1 (line 235)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ;   {runtime_call}
  0x00000000036d2fb1: jmpq   0x00000000036d1f47
  0x00000000036d2fb6: callq  0x000000000368d080  ; OopMap{[216]=Oop [224]=Oop rdx=Oop [176]=Oop rsi=Oop [280]=Oop off=10075}
                                                ;*arraylength
                                                ; - java.util.ArrayList::ensureExplicitCapacity@15 (line 238)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ;   {runtime_call}
  0x00000000036d2fbb: callq  0x000000000368d080  ; OopMap{[216]=Oop [176]=Oop rdi=Oop [224]=Oop rdx=Oop [280]=Oop off=10080}
                                                ;*aastore
                                                ; - java.util.ArrayList::add@26 (line 463)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ;   {runtime_call}
  0x00000000036d2fc0: callq  0x000000000368d080  ; OopMap{[216]=Oop [176]=Oop rdi=Oop [224]=Oop rdx=Oop [280]=Oop off=10085}
                                                ;*aastore
                                                ; - java.util.ArrayList::add@26 (line 463)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ;   {runtime_call}
  0x00000000036d2fc5: mov    %rbx,(%rsp)
  0x00000000036d2fc9: callq  0x000000000368c9c0  ; OopMap{[216]=Oop [176]=Oop rdi=Oop [224]=Oop rdx=Oop [280]=Oop off=10094}
                                                ;*aastore
                                                ; - java.util.ArrayList::add@26 (line 463)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ;   {runtime_call}
  0x00000000036d2fce: callq  0x000000000368d080  ; OopMap{[216]=Oop [176]=Oop rdi=Oop [224]=Oop [280]=Oop off=10099}
                                                ;*aastore
                                                ; - java.util.ArrayList::add@26 (line 463)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ;   {runtime_call}
  0x00000000036d2fd3: mov    %rdi,(%rsp)
  0x00000000036d2fd7: callq  0x000000000368f2c0  ; OopMap{[216]=Oop [176]=Oop rdi=Oop [224]=Oop [280]=Oop off=10108}
                                                ;*aastore
                                                ; - java.util.ArrayList::add@26 (line 463)
                                                ; - sun.misc.URLClassPath::getLoader@182 (line 540)
                                                ;   {runtime_call}
  0x00000000036d2fdc: callq  0x000000000368d080  ; OopMap{rdi=Oop [224]=Oop rdx=Oop [176]=Oop rax=Oop [216]=Oop rsi=Oop [280]=Oop off=10113}
                                                ;*invokevirtual put
                                                ; - sun.misc.URLClassPath::getLoader@193 (line 541)
                                                ;   {runtime_call}
  0x00000000036d2fe1: mov    %rbx,0x8(%rsp)
  0x00000000036d2fe6: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036d2fee: callq  0x00000000036919e0  ; OopMap{rdi=Oop [224]=Oop rdx=Oop [176]=Oop rax=Oop [216]=Oop rsi=Oop [280]=Oop off=10131}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::put@-1 (line 612)
                                                ; - sun.misc.URLClassPath::getLoader@193 (line 541)
                                                ;   {runtime_call}
  0x00000000036d2ff3: jmpq   0x00000000036d21f2
  0x00000000036d2ff8: mov    %rbx,0x8(%rsp)
  0x00000000036d2ffd: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036d3005: callq  0x00000000036919e0  ; OopMap{rdi=Oop [224]=Oop rdx=Oop [176]=Oop rax=Oop [216]=Oop rsi=Oop [280]=Oop off=10154}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 339)
                                                ; - java.util.HashMap::put@2 (line 612)
                                                ; - sun.misc.URLClassPath::getLoader@193 (line 541)
                                                ;   {runtime_call}
  0x00000000036d300a: jmpq   0x00000000036d2236
  0x00000000036d300f: callq  0x000000000368d080  ; OopMap{rax=Oop [216]=Oop [224]=Oop [176]=Oop [240]=Oop [280]=Oop off=10164}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.HashMap::put@2 (line 612)
                                                ; - sun.misc.URLClassPath::getLoader@193 (line 541)
                                                ;   {runtime_call}
  0x00000000036d3014: mov    %rax,(%rsp)
  0x00000000036d3018: callq  0x000000000368f500  ; OopMap{[176]=Oop rsi=Oop [200]=Oop r8=Oop [216]=Oop [280]=Oop off=10173}
                                                ;*checkcast
                                                ; - sun.misc.URLClassPath::getLoader@25 (line 570)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)
                                                ;   {runtime_call}
  0x00000000036d301d: callq  0x000000000368d080  ; OopMap{[176]=Oop rsi=Oop [200]=Oop r8=Oop [216]=Oop rax=Oop [280]=Oop off=10178}
                                                ;*athrow
                                                ; - sun.misc.URLClassPath::getLoader@28 (line 570)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 519)
                                                ;   {runtime_call}
  0x00000000036d3022: mov    %rax,0x8(%rsp)
  0x00000000036d3027: movq   $0xa1,(%rsp)
  0x00000000036d302f: callq  0x00000000036919e0  ; OopMap{[176]=Oop [280]=Oop off=10196}
                                                ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@161 (line 536)
                                                ;   {runtime_call}
  0x00000000036d3034: jmpq   0x00000000036d2539
  0x00000000036d3039: mov    %rax,0x8(%rsp)
  0x00000000036d303e: movq   $0xc5,(%rsp)
  0x00000000036d3046: callq  0x00000000036919e0  ; OopMap{[176]=Oop [280]=Oop off=10219}
                                                ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@197 (line 542)
                                                ;   {runtime_call}
  0x00000000036d304b: jmpq   0x00000000036d2596
  0x00000000036d3050: mov    %rax,0x8(%rsp)
  0x00000000036d3055: movq   $0x52,(%rsp)
  0x00000000036d305d: callq  0x00000000036919e0  ; OopMap{[176]=Oop [280]=Oop off=10242}
                                                ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@82 (line 514)
                                                ;   {runtime_call}
  0x00000000036d3062: jmpq   0x00000000036d25f3
  0x00000000036d3067: mov    %rax,0x8(%rsp)
  0x00000000036d306c: movq   $0x73,(%rsp)
  0x00000000036d3074: callq  0x00000000036919e0  ; OopMap{[176]=Oop [280]=Oop off=10265}
                                                ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@115 (line 528)
                                                ;   {runtime_call}
  0x00000000036d3079: jmpq   0x00000000036d266b
  0x00000000036d307e: mov    %rax,0x8(%rsp)
  0x00000000036d3083: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036d308b: callq  0x00000000036919e0  ; OopMap{rsi=Oop [280]=Oop off=10288}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::get@-1 (line 433)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)
                                                ;   {runtime_call}
  0x00000000036d3090: jmpq   0x00000000036d26f5
  0x00000000036d3095: mov    %rax,0x8(%rsp)
  0x00000000036d309a: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036d30a2: callq  0x00000000036919e0  ; OopMap{rsi=Oop [280]=Oop off=10311}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::rangeCheck@-1 (line 656)
                                                ; - java.util.ArrayList::get@2 (line 433)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)
                                                ;   {runtime_call}
  0x00000000036d30a7: jmpq   0x00000000036d273c
  0x00000000036d30ac: mov    %rax,0x8(%rsp)
  0x00000000036d30b1: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036d30b9: callq  0x00000000036919e0  ; OopMap{rsi=Oop [280]=Oop off=10334}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::elementData@-1 (line 422)
                                                ; - java.util.ArrayList::get@7 (line 435)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)
                                                ;   {runtime_call}
  0x00000000036d30be: jmpq   0x00000000036d27bc
  0x00000000036d30c3: callq  0x000000000368d080  ; OopMap{rax=Oop [280]=Oop off=10344}
                                                ;*aaload
                                                ; - java.util.ArrayList::elementData@5 (line 422)
                                                ; - java.util.ArrayList::get@7 (line 435)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)
                                                ;   {runtime_call}
  0x00000000036d30c8: callq  0x000000000368d080  ; OopMap{rax=Oop [280]=Oop off=10349}
                                                ;*aaload
                                                ; - java.util.ArrayList::elementData@5 (line 422)
                                                ; - java.util.ArrayList::get@7 (line 435)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)
                                                ;   {runtime_call}
  0x00000000036d30cd: mov    %r8,(%rsp)
  0x00000000036d30d1: callq  0x000000000368c9c0  ; OopMap{rax=Oop [280]=Oop off=10358}
                                                ;*aaload
                                                ; - java.util.ArrayList::elementData@5 (line 422)
                                                ; - java.util.ArrayList::get@7 (line 435)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)
                                                ;   {runtime_call}
  0x00000000036d30d6: mov    %rax,(%rsp)
  0x00000000036d30da: callq  0x000000000368f500  ; OopMap{[280]=Oop off=10367}
                                                ;*checkcast
                                                ; - sun.misc.URLClassPath::getLoader@239 (line 546)
                                                ;   {runtime_call}
  0x00000000036d30df: lea    0x110(%rsp),%rax
  0x00000000036d30e7: mov    %rax,(%rsp)
  0x00000000036d30eb: callq  0x00000000036900e0  ;   {runtime_call}
  0x00000000036d30f0: jmpq   0x00000000036d28f1
  0x00000000036d30f5: lea    0x120(%rsp),%rax
  0x00000000036d30fd: mov    %rax,(%rsp)
  0x00000000036d3101: callq  0x00000000036900e0  ;   {runtime_call}
  0x00000000036d3106: jmpq   0x00000000036d2937
  0x00000000036d310b: lea    0x110(%rsp),%rax
  0x00000000036d3113: mov    %rax,(%rsp)
  0x00000000036d3117: callq  0x00000000036900e0  ;   {runtime_call}
  0x00000000036d311c: jmpq   0x00000000036d296b
  0x00000000036d3121: lea    0x110(%rsp),%rax
  0x00000000036d3129: mov    %rax,(%rsp)
  0x00000000036d312d: callq  0x00000000036900e0  ;   {runtime_call}
  0x00000000036d3132: jmpq   0x00000000036d29b8
  0x00000000036d3137: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000036d3141: mov    $0xa050f00,%eax
  0x00000000036d3146: callq  0x0000000003690920  ; OopMap{rsi=Oop [280]=Oop off=10475}
                                                ;*new  ; - java.util.ArrayList::rangeCheck@8 (line 657)
                                                ; - java.util.ArrayList::get@2 (line 433)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)
                                                ;   {runtime_call}
  0x00000000036d314b: jmpq   0x00000000036d29d8
  0x00000000036d3150: mov    %rdx,%rdx
  0x00000000036d3153: callq  0x000000000368d720  ; OopMap{rsi=Oop [280]=Oop off=10488}
                                                ;*new  ; - java.util.ArrayList::rangeCheck@8 (line 657)
                                                ; - java.util.ArrayList::get@2 (line 433)
                                                ; - sun.misc.URLClassPath::getLoader@236 (line 546)
                                                ;   {runtime_call}
  0x00000000036d3158: jmpq   0x00000000036d29e7
  0x00000000036d315d: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000036d3167: mov    $0xa050f00,%eax
  0x00000000036d316c: callq  0x0000000003690920  ; OopMap{[160]=Oop [184]=Oop [176]=Oop [280]=Oop [296]=Oop [312]=Oop [328]=Oop off=10513}
                                                ;*new  ; - java.util.Stack::peek@9 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)
                                                ;   {runtime_call}
  0x00000000036d3171: jmpq   0x00000000036d2a70
  0x00000000036d3176: mov    %rdx,%rdx
  0x00000000036d3179: callq  0x000000000368d720  ; OopMap{[160]=Oop [184]=Oop [176]=Oop [280]=Oop [296]=Oop [312]=Oop [328]=Oop off=10526}
                                                ;*new  ; - java.util.Stack::peek@9 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 506)
                                                ;   {runtime_call}
  0x00000000036d317e: jmpq   0x00000000036d2a7f
  0x00000000036d3183: lea    0x150(%rsp),%rax
  0x00000000036d318b: mov    %rax,(%rsp)
  0x00000000036d318f: callq  0x00000000036900e0  ;   {runtime_call}
  0x00000000036d3194: jmpq   0x00000000036d2b0e
  0x00000000036d3199: lea    0x140(%rsp),%rax
  0x00000000036d31a1: mov    %rax,(%rsp)
  0x00000000036d31a5: callq  0x00000000036900e0  ;   {runtime_call}
  0x00000000036d31aa: jmpq   0x00000000036d2b73
  0x00000000036d31af: lea    0x140(%rsp),%rax
  0x00000000036d31b7: mov    %rax,(%rsp)
  0x00000000036d31bb: callq  0x00000000036900e0  ;   {runtime_call}
  0x00000000036d31c0: jmpq   0x00000000036d2bd8
  0x00000000036d31c5: lea    0x130(%rsp),%rax
  0x00000000036d31cd: mov    %rax,(%rsp)
  0x00000000036d31d1: callq  0x00000000036900e0  ;   {runtime_call}
  0x00000000036d31d6: jmpq   0x00000000036d2c3d
  0x00000000036d31db: lea    0x130(%rsp),%rax
  0x00000000036d31e3: mov    %rax,(%rsp)
  0x00000000036d31e7: callq  0x00000000036900e0  ;   {runtime_call}
  0x00000000036d31ec: jmpq   0x00000000036d2cb2
  0x00000000036d31f1: lea    0x120(%rsp),%rax
  0x00000000036d31f9: mov    %rax,(%rsp)
  0x00000000036d31fd: callq  0x00000000036900e0  ;   {runtime_call}
  0x00000000036d3202: jmpq   0x00000000036d2d17
  0x00000000036d3207: mov    0xa8(%rsp),%ebx
  0x00000000036d320e: jmpq   0x00000000036d2b21
  0x00000000036d3213: mov    0xa8(%rsp),%ebx
  0x00000000036d321a: jmpq   0x00000000036d2b21
  0x00000000036d321f: mov    0xa8(%rsp),%ebx
  0x00000000036d3226: jmpq   0x00000000036d2b21
  0x00000000036d322b: mov    0xa8(%rsp),%ebx
  0x00000000036d3232: jmpq   0x00000000036d2b21
  0x00000000036d3237: mov    0xa8(%rsp),%ebx
  0x00000000036d323e: jmpq   0x00000000036d2b21
  0x00000000036d3243: mov    0xa8(%rsp),%ebx
  0x00000000036d324a: jmpq   0x00000000036d2b21
  0x00000000036d324f: nop
  0x00000000036d3250: nop
  0x00000000036d3251: mov    0x2a8(%r15),%rax
  0x00000000036d3258: movabs $0x0,%r10
  0x00000000036d3262: mov    %r10,0x2a8(%r15)
  0x00000000036d3269: movabs $0x0,%r10
  0x00000000036d3273: mov    %r10,0x2b0(%r15)
  0x00000000036d327a: mov    %rax,%rbx
  0x00000000036d327d: lea    0x110(%rsp),%rax
  0x00000000036d3285: mov    0x8(%rax),%rsi
  0x00000000036d3289: mov    (%rsi),%rdi
  0x00000000036d328c: and    $0x7,%rdi
  0x00000000036d3290: cmp    $0x5,%rdi
  0x00000000036d3294: je     0x00000000036d32b1
  0x00000000036d329a: mov    (%rax),%rdi
  0x00000000036d329d: test   %rdi,%rdi
  0x00000000036d32a0: je     0x00000000036d32b1
  0x00000000036d32a6: lock cmpxchg %rdi,(%rsi)
  0x00000000036d32ab: jne    0x00000000036d32c1
  0x00000000036d32b1: mov    %rbx,%rax
  0x00000000036d32b4: add    $0x170,%rsp
  0x00000000036d32bb: pop    %rbp
  0x00000000036d32bc: jmpq   0x000000000368c620  ;   {runtime_call}
  0x00000000036d32c1: lea    0x110(%rsp),%rax
  0x00000000036d32c9: mov    %rax,(%rsp)
  0x00000000036d32cd: callq  0x00000000036900e0  ;   {runtime_call}
  0x00000000036d32d2: jmp    0x00000000036d32b1
  0x00000000036d32d4: hlt    
  0x00000000036d32d5: hlt    
  0x00000000036d32d6: hlt    
  0x00000000036d32d7: hlt    
  0x00000000036d32d8: hlt    
  0x00000000036d32d9: hlt    
  0x00000000036d32da: hlt    
  0x00000000036d32db: hlt    
  0x00000000036d32dc: hlt    
  0x00000000036d32dd: hlt    
  0x00000000036d32de: hlt    
  0x00000000036d32df: hlt    
[Stub Code]
  0x00000000036d32e0: nop                       ;   {no_reloc}
  0x00000000036d32e1: nop
  0x00000000036d32e2: nop
  0x00000000036d32e3: nop
  0x00000000036d32e4: nop
  0x00000000036d32e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036d32ef: jmpq   0x00000000036d32ef  ;   {runtime_call}
  0x00000000036d32f4: nop
  0x00000000036d32f5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036d32ff: jmpq   0x00000000036d32ff  ;   {runtime_call}
  0x00000000036d3304: nop
  0x00000000036d3305: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036d330f: jmpq   0x00000000036d330f  ;   {runtime_call}
  0x00000000036d3314: nop
  0x00000000036d3315: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036d331f: jmpq   0x00000000036d331f  ;   {runtime_call}
  0x00000000036d3324: nop
  0x00000000036d3325: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036d332f: jmpq   0x00000000036d332f  ;   {runtime_call}
  0x00000000036d3334: nop
  0x00000000036d3335: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036d333f: jmpq   0x00000000036d333f  ;   {runtime_call}
  0x00000000036d3344: nop
  0x00000000036d3345: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036d334f: jmpq   0x00000000036d334f  ;   {runtime_call}
  0x00000000036d3354: nop
  0x00000000036d3355: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036d335f: jmpq   0x00000000036d335f  ;   {runtime_call}
  0x00000000036d3364: nop
  0x00000000036d3365: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036d336f: jmpq   0x00000000036d336f  ;   {runtime_call}
  0x00000000036d3374: nop
  0x00000000036d3375: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036d337f: jmpq   0x00000000036d337f  ;   {runtime_call}
  0x00000000036d3384: nop
  0x00000000036d3385: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036d338f: jmpq   0x00000000036d338f  ;   {runtime_call}
  0x00000000036d3394: nop
  0x00000000036d3395: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036d339f: jmpq   0x00000000036d339f  ;   {runtime_call}
  0x00000000036d33a4: nop
  0x00000000036d33a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036d33af: jmpq   0x00000000036d33af  ;   {runtime_call}
  0x00000000036d33b4: nop
  0x00000000036d33b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036d33bf: jmpq   0x00000000036d33bf  ;   {runtime_call}
  0x00000000036d33c4: nop
  0x00000000036d33c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036d33cf: jmpq   0x00000000036d33cf  ;   {runtime_call}
[Exception Handler]
  0x00000000036d33d4: callq  0x000000000368f1a0  ;   {runtime_call}
  0x00000000036d33d9: mov    %rsp,-0x28(%rsp)
  0x00000000036d33de: sub    $0x80,%rsp
  0x00000000036d33e5: mov    %rax,0x78(%rsp)
  0x00000000036d33ea: mov    %rcx,0x70(%rsp)
  0x00000000036d33ef: mov    %rdx,0x68(%rsp)
  0x00000000036d33f4: mov    %rbx,0x60(%rsp)
  0x00000000036d33f9: mov    %rbp,0x50(%rsp)
  0x00000000036d33fe: mov    %rsi,0x48(%rsp)
  0x00000000036d3403: mov    %rdi,0x40(%rsp)
  0x00000000036d3408: mov    %r8,0x38(%rsp)
  0x00000000036d340d: mov    %r9,0x30(%rsp)
  0x00000000036d3412: mov    %r10,0x28(%rsp)
  0x00000000036d3417: mov    %r11,0x20(%rsp)
  0x00000000036d341c: mov    %r12,0x18(%rsp)
  0x00000000036d3421: mov    %r13,0x10(%rsp)
  0x00000000036d3426: mov    %r14,0x8(%rsp)
  0x00000000036d342b: mov    %r15,(%rsp)
  0x00000000036d342f: movabs $0x553ec320,%rcx   ;   {external_word}
  0x00000000036d3439: movabs $0x36d33d9,%rdx    ;   {internal_word}
  0x00000000036d3443: mov    %rsp,%r8
  0x00000000036d3446: and    $0xfffffffffffffff0,%rsp
  0x00000000036d344a: callq  0x00000000550a41d0  ;   {runtime_call}
  0x00000000036d344f: hlt    
[Deopt Handler Code]
  0x00000000036d3450: movabs $0x36d3450,%r10    ;   {section_word}
  0x00000000036d345a: push   %r10
  0x00000000036d345c: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036d3461: hlt    
  0x00000000036d3462: hlt    
  0x00000000036d3463: hlt    
  0x00000000036d3464: hlt    
  0x00000000036d3465: hlt    
  0x00000000036d3466: hlt    
  0x00000000036d3467: hlt    
<nmethod compile_id='93' compiler='C1' level='3' entry='0x00000000036d0860' size='19064' address='0x00000000036d0450' relocation_offset='288' insts_offset='1040' stub_offset='11920' scopes_data_offset='12512' scopes_pcs_offset='14840' dependencies_offset='18200' handler_table_offset='18216' nul_chk_table_offset='18912' method='sun/misc/URLClassPath getLoader (I)Lsun/misc/URLClassPath$Loader;' bytes='243' count='921' backedge_count='276' iicount='921' stamp='2.380'/>
<writer thread='17528'/>
<task_queued compile_id='109' method='java/nio/charset/CoderResult isUnderflow ()Z' bytes='13' count='1024' iicount='1024' level='3' stamp='2.380' comment='tiered' hot_count='1024'/>
<task_queued compile_id='110' method='java/nio/Buffer limit ()I' bytes='5' count='1536' iicount='1536' level='1' stamp='2.380' comment='tiered' hot_count='1536'/>
<writer thread='7332'/>
Decoding compiled method 0x00000000036aea10:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001c4c4b78} &apos;toHex&apos; &apos;(I)C&apos; in &apos;java/util/Properties&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00000000036aeb60: mov    %eax,-0x6000(%rsp)
  0x00000000036aeb67: push   %rbp
  0x00000000036aeb68: sub    $0x30,%rsp
  0x00000000036aeb6c: movabs $0x1c817268,%rax   ;   {metadata(method data for {method} {0x000000001c4c4b78} &apos;toHex&apos; &apos;(I)C&apos; in &apos;java/util/Properties&apos;)}
  0x00000000036aeb76: mov    0xdc(%rax),%esi
  0x00000000036aeb7c: add    $0x8,%esi
  0x00000000036aeb7f: mov    %esi,0xdc(%rax)
  0x00000000036aeb85: movabs $0x1c4c4b70,%rax   ;   {metadata({method} {0x000000001c4c4b78} &apos;toHex&apos; &apos;(I)C&apos; in &apos;java/util/Properties&apos;)}
  0x00000000036aeb8f: and    $0x1ff8,%esi
  0x00000000036aeb95: cmp    $0x0,%esi
  0x00000000036aeb98: je     0x00000000036aebce  ;*getstatic hexDigit
                                                ; - java.util.Properties::toHex@0 (line 1125)

  0x00000000036aeb9e: and    $0xf,%edx
  0x00000000036aeba1: movabs $0x76c108b98,%rax  ;   {oop([C)}
  0x00000000036aebab: movslq %edx,%rsi
  0x00000000036aebae: cmp    0xc(%rax),%edx     ; implicit exception: dispatches to 0x00000000036aebe2
  0x00000000036aebb1: jae    0x00000000036aebec
  0x00000000036aebb7: movzwl 0x10(%rax,%rsi,2),%eax  ;*caload
                                                ; - java.util.Properties::toHex@7 (line 1125)

  0x00000000036aebbc: and    $0xffff,%eax
  0x00000000036aebc2: add    $0x30,%rsp
  0x00000000036aebc6: pop    %rbp
  0x00000000036aebc7: test   %eax,-0x20beacd(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036aebcd: retq   
  0x00000000036aebce: mov    %rax,0x8(%rsp)
  0x00000000036aebd3: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036aebdb: callq  0x00000000036919e0  ; OopMap{off=128}
                                                ;*synchronization entry
                                                ; - java.util.Properties::toHex@-1 (line 1125)
                                                ;   {runtime_call}
  0x00000000036aebe0: jmp    0x00000000036aeb9e
  0x00000000036aebe2: callq  0x000000000368d080  ; OopMap{rax=Oop off=135}
                                                ;*caload
                                                ; - java.util.Properties::toHex@7 (line 1125)
                                                ;   {runtime_call}
  0x00000000036aebe7: callq  0x000000000368d080  ; OopMap{rax=Oop off=140}
                                                ;*caload
                                                ; - java.util.Properties::toHex@7 (line 1125)
                                                ;   {runtime_call}
  0x00000000036aebec: mov    %rdx,(%rsp)
  0x00000000036aebf0: callq  0x000000000368c9c0  ; OopMap{rax=Oop off=149}
                                                ;*caload
                                                ; - java.util.Properties::toHex@7 (line 1125)
                                                ;   {runtime_call}
  0x00000000036aebf5: nop
  0x00000000036aebf6: nop
  0x00000000036aebf7: mov    0x2a8(%r15),%rax
  0x00000000036aebfe: movabs $0x0,%r10
  0x00000000036aec08: mov    %r10,0x2a8(%r15)
  0x00000000036aec0f: movabs $0x0,%r10
  0x00000000036aec19: mov    %r10,0x2b0(%r15)
  0x00000000036aec20: add    $0x30,%rsp
  0x00000000036aec24: pop    %rbp
  0x00000000036aec25: jmpq   0x000000000368c620  ;   {runtime_call}
  0x00000000036aec2a: hlt    
  0x00000000036aec2b: hlt    
  0x00000000036aec2c: hlt    
  0x00000000036aec2d: hlt    
  0x00000000036aec2e: hlt    
  0x00000000036aec2f: hlt    
  0x00000000036aec30: hlt    
  0x00000000036aec31: hlt    
  0x00000000036aec32: hlt    
  0x00000000036aec33: hlt    
  0x00000000036aec34: hlt    
  0x00000000036aec35: hlt    
  0x00000000036aec36: hlt    
  0x00000000036aec37: hlt    
  0x00000000036aec38: hlt    
  0x00000000036aec39: hlt    
  0x00000000036aec3a: hlt    
  0x00000000036aec3b: hlt    
  0x00000000036aec3c: hlt    
  0x00000000036aec3d: hlt    
  0x00000000036aec3e: hlt    
  0x00000000036aec3f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000036aec40: callq  0x000000000368f1a0  ;   {no_reloc}
  0x00000000036aec45: mov    %rsp,-0x28(%rsp)
  0x00000000036aec4a: sub    $0x80,%rsp
  0x00000000036aec51: mov    %rax,0x78(%rsp)
  0x00000000036aec56: mov    %rcx,0x70(%rsp)
  0x00000000036aec5b: mov    %rdx,0x68(%rsp)
  0x00000000036aec60: mov    %rbx,0x60(%rsp)
  0x00000000036aec65: mov    %rbp,0x50(%rsp)
  0x00000000036aec6a: mov    %rsi,0x48(%rsp)
  0x00000000036aec6f: mov    %rdi,0x40(%rsp)
  0x00000000036aec74: mov    %r8,0x38(%rsp)
  0x00000000036aec79: mov    %r9,0x30(%rsp)
  0x00000000036aec7e: mov    %r10,0x28(%rsp)
  0x00000000036aec83: mov    %r11,0x20(%rsp)
  0x00000000036aec88: mov    %r12,0x18(%rsp)
  0x00000000036aec8d: mov    %r13,0x10(%rsp)
  0x00000000036aec92: mov    %r14,0x8(%rsp)
  0x00000000036aec97: mov    %r15,(%rsp)
  0x00000000036aec9b: movabs $0x553ec320,%rcx   ;   {external_word}
  0x00000000036aeca5: movabs $0x36aec45,%rdx    ;   {internal_word}
  0x00000000036aecaf: mov    %rsp,%r8
  0x00000000036aecb2: and    $0xfffffffffffffff0,%rsp
  0x00000000036aecb6: callq  0x00000000550a41d0  ;   {runtime_call}
  0x00000000036aecbb: hlt    
[Deopt Handler Code]
  0x00000000036aecbc: movabs $0x36aecbc,%r10    ;   {section_word}
  0x00000000036aecc6: push   %r10
  0x00000000036aecc8: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036aeccd: hlt    
  0x00000000036aecce: hlt    
  0x00000000036aeccf: hlt    
<nmethod compile_id='108' compiler='C1' level='3' entry='0x00000000036aeb60' size='904' address='0x00000000036aea10' relocation_offset='288' insts_offset='336' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='744' dependencies_offset='872' nul_chk_table_offset='880' method='java/util/Properties toHex (I)C' bytes='9' count='2796' iicount='2796' stamp='2.389'/>
<writer thread='17528'/>
<task_queued compile_id='111' method='java/lang/StringBuffer &lt;init&gt; (I)V' bytes='6' count='1152' iicount='1152' level='3' stamp='2.390' comment='tiered' hot_count='1152'/>
<task_queued compile_id='112' method='java/lang/StringBuffer toString ()Ljava/lang/String;' bytes='36' count='1152' iicount='1152' level='3' stamp='2.390' comment='tiered' hot_count='1152'/>
<task_queued compile_id='113' method='java/nio/CharBuffer arrayOffset ()I' bytes='35' count='1536' iicount='1536' level='3' stamp='2.390' comment='tiered' hot_count='1536'/>
<writer thread='7332'/>
Decoding compiled method 0x00000000036ae550:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c503a08} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x00000000036ae6c0: mov    0x8(%rdx),%r10d
  0x00000000036ae6c4: shl    $0x3,%r10
  0x00000000036ae6c8: cmp    %rax,%r10
  0x00000000036ae6cb: jne    0x00000000035d5f60  ;   {runtime_call}
  0x00000000036ae6d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000036ae6dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000036ae6e0: mov    %eax,-0x6000(%rsp)
  0x00000000036ae6e7: push   %rbp
  0x00000000036ae6e8: sub    $0x30,%rsp
  0x00000000036ae6ec: mov    %rdx,%r9
  0x00000000036ae6ef: movabs $0x1c6c9f78,%rbx   ;   {metadata(method data for {method} {0x000000001c503a08} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036ae6f9: mov    0xdc(%rbx),%edx
  0x00000000036ae6ff: add    $0x8,%edx
  0x00000000036ae702: mov    %edx,0xdc(%rbx)
  0x00000000036ae708: movabs $0x1c503a00,%rbx   ;   {metadata({method} {0x000000001c503a08} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036ae712: and    $0x1ff8,%edx
  0x00000000036ae718: cmp    $0x0,%edx
  0x00000000036ae71b: je     0x00000000036ae80c  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@0 (line 67)

  0x00000000036ae721: mov    %r9,%rbx
  0x00000000036ae724: movabs $0x1c6c9f78,%rdx   ;   {metadata(method data for {method} {0x000000001c503a08} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000036ae72e: addq   $0x1,0x108(%rdx)
  0x00000000036ae736: movabs $0x1c5c3748,%rbx   ;   {metadata(method data for {method} {0x000000001c490488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000036ae740: mov    0xdc(%rbx),%edx
  0x00000000036ae746: add    $0x8,%edx
  0x00000000036ae749: mov    %edx,0xdc(%rbx)
  0x00000000036ae74f: movabs $0x1c490480,%rbx   ;   {metadata({method} {0x000000001c490488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000036ae759: and    $0x7ffff8,%edx
  0x00000000036ae75f: cmp    $0x0,%edx
  0x00000000036ae762: je     0x00000000036ae823
  0x00000000036ae768: mov    %r8,%rbx
  0x00000000036ae76b: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000000036ae775: movslq %ebx,%rbx
  0x00000000036ae778: mov    %rbx,%rdi
  0x00000000036ae77b: cmp    $0xffffff,%rbx
  0x00000000036ae782: ja     0x00000000036ae83a
  0x00000000036ae788: movabs $0x17,%rsi
  0x00000000036ae792: lea    (%rsi,%rbx,2),%rsi
  0x00000000036ae796: and    $0xfffffffffffffff8,%rsi
  0x00000000036ae79a: mov    0x60(%r15),%rax
  0x00000000036ae79e: lea    (%rax,%rsi,1),%rsi
  0x00000000036ae7a2: cmp    0x70(%r15),%rsi
  0x00000000036ae7a6: ja     0x00000000036ae83a
  0x00000000036ae7ac: mov    %rsi,0x60(%r15)
  0x00000000036ae7b0: sub    %rax,%rsi
  0x00000000036ae7b3: movq   $0x1,(%rax)
  0x00000000036ae7ba: mov    %rdx,%rcx
  0x00000000036ae7bd: shr    $0x3,%rcx
  0x00000000036ae7c1: mov    %ecx,0x8(%rax)
  0x00000000036ae7c4: mov    %ebx,0xc(%rax)
  0x00000000036ae7c7: sub    $0x10,%rsi
  0x00000000036ae7cb: je     0x00000000036ae7e2
  0x00000000036ae7d1: xor    %rbx,%rbx
  0x00000000036ae7d4: shr    $0x3,%rsi
  0x00000000036ae7d8: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000000036ae7dd: dec    %rsi
  0x00000000036ae7e0: jne    0x00000000036ae7d8  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)

  0x00000000036ae7e2: mov    %rax,%r10
  0x00000000036ae7e5: shr    $0x3,%r10
  0x00000000036ae7e9: mov    %r10d,0x10(%r9)
  0x00000000036ae7ed: shr    $0x9,%r9
  0x00000000036ae7f1: movabs $0xf32f000,%rsi
  0x00000000036ae7fb: movb   $0x0,(%r9,%rsi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)

  0x00000000036ae800: add    $0x30,%rsp
  0x00000000036ae804: pop    %rbp
  0x00000000036ae805: test   %eax,-0x20be70b(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036ae80b: retq   
  0x00000000036ae80c: mov    %rbx,0x8(%rsp)
  0x00000000036ae811: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036ae819: callq  0x00000000036919e0  ; OopMap{r9=Oop off=350}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ;   {runtime_call}
  0x00000000036ae81e: jmpq   0x00000000036ae721
  0x00000000036ae823: mov    %rbx,0x8(%rsp)
  0x00000000036ae828: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036ae830: callq  0x00000000036919e0  ; OopMap{r9=Oop off=373}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ;   {runtime_call}
  0x00000000036ae835: jmpq   0x00000000036ae768
  0x00000000036ae83a: callq  0x000000000368e200  ; OopMap{r9=Oop off=383}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ;   {runtime_call}
  0x00000000036ae83f: jmp    0x00000000036ae7e2
  0x00000000036ae841: nop
  0x00000000036ae842: nop
  0x00000000036ae843: mov    0x2a8(%r15),%rax
  0x00000000036ae84a: movabs $0x0,%r10
  0x00000000036ae854: mov    %r10,0x2a8(%r15)
  0x00000000036ae85b: movabs $0x0,%r10
  0x00000000036ae865: mov    %r10,0x2b0(%r15)
  0x00000000036ae86c: add    $0x30,%rsp
  0x00000000036ae870: pop    %rbp
  0x00000000036ae871: jmpq   0x000000000368c620  ;   {runtime_call}
  0x00000000036ae876: hlt    
  0x00000000036ae877: hlt    
  0x00000000036ae878: hlt    
  0x00000000036ae879: hlt    
  0x00000000036ae87a: hlt    
  0x00000000036ae87b: hlt    
  0x00000000036ae87c: hlt    
  0x00000000036ae87d: hlt    
  0x00000000036ae87e: hlt    
  0x00000000036ae87f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000036ae880: callq  0x000000000368f1a0  ;   {no_reloc}
  0x00000000036ae885: mov    %rsp,-0x28(%rsp)
  0x00000000036ae88a: sub    $0x80,%rsp
  0x00000000036ae891: mov    %rax,0x78(%rsp)
  0x00000000036ae896: mov    %rcx,0x70(%rsp)
  0x00000000036ae89b: mov    %rdx,0x68(%rsp)
  0x00000000036ae8a0: mov    %rbx,0x60(%rsp)
  0x00000000036ae8a5: mov    %rbp,0x50(%rsp)
  0x00000000036ae8aa: mov    %rsi,0x48(%rsp)
  0x00000000036ae8af: mov    %rdi,0x40(%rsp)
  0x00000000036ae8b4: mov    %r8,0x38(%rsp)
  0x00000000036ae8b9: mov    %r9,0x30(%rsp)
  0x00000000036ae8be: mov    %r10,0x28(%rsp)
  0x00000000036ae8c3: mov    %r11,0x20(%rsp)
  0x00000000036ae8c8: mov    %r12,0x18(%rsp)
  0x00000000036ae8cd: mov    %r13,0x10(%rsp)
  0x00000000036ae8d2: mov    %r14,0x8(%rsp)
  0x00000000036ae8d7: mov    %r15,(%rsp)
  0x00000000036ae8db: movabs $0x553ec320,%rcx   ;   {external_word}
  0x00000000036ae8e5: movabs $0x36ae885,%rdx    ;   {internal_word}
  0x00000000036ae8ef: mov    %rsp,%r8
  0x00000000036ae8f2: and    $0xfffffffffffffff0,%rsp
  0x00000000036ae8f6: callq  0x00000000550a41d0  ;   {runtime_call}
  0x00000000036ae8fb: hlt    
[Deopt Handler Code]
  0x00000000036ae8fc: movabs $0x36ae8fc,%r10    ;   {section_word}
  0x00000000036ae906: push   %r10
  0x00000000036ae908: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036ae90d: hlt    
  0x00000000036ae90e: hlt    
  0x00000000036ae90f: hlt    
<nmethod compile_id='100' compiler='C1' level='3' entry='0x00000000036ae6c0' size='1184' address='0x00000000036ae550' relocation_offset='288' insts_offset='368' stub_offset='816' scopes_data_offset='984' scopes_pcs_offset='1048' dependencies_offset='1176' method='java/lang/AbstractStringBuilder &lt;init&gt; (I)V' bytes='12' count='2738' iicount='2738' stamp='2.401'/>
Decoding compiled method 0x00000000036ae110:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c493b88} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;[C&apos;
  # parm1:    r9        = boolean
  #           [sp+0x40]  (sp of caller)
  0x00000000036ae260: mov    0x8(%rdx),%r10d
  0x00000000036ae264: shl    $0x3,%r10
  0x00000000036ae268: cmp    %rax,%r10
  0x00000000036ae26b: jne    0x00000000035d5f60  ;   {runtime_call}
  0x00000000036ae271: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000036ae27c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000036ae280: mov    %eax,-0x6000(%rsp)
  0x00000000036ae287: push   %rbp
  0x00000000036ae288: sub    $0x30,%rsp
  0x00000000036ae28c: movabs $0x1c6d3a00,%rsi   ;   {metadata(method data for {method} {0x000000001c493b88} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000036ae296: mov    0xdc(%rsi),%edi
  0x00000000036ae29c: add    $0x8,%edi
  0x00000000036ae29f: mov    %edi,0xdc(%rsi)
  0x00000000036ae2a5: movabs $0x1c493b80,%rsi   ;   {metadata({method} {0x000000001c493b88} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000036ae2af: and    $0x1ff8,%edi
  0x00000000036ae2b5: cmp    $0x0,%edi
  0x00000000036ae2b8: je     0x00000000036ae32e  ;*aload_0
                                                ; - java.lang.String::&lt;init&gt;@0 (line 609)

  0x00000000036ae2be: mov    %rdx,%rsi
  0x00000000036ae2c1: movabs $0x1c6d3a00,%rdi   ;   {metadata(method data for {method} {0x000000001c493b88} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000036ae2cb: addq   $0x1,0x108(%rdi)
  0x00000000036ae2d3: movabs $0x1c5c3748,%rsi   ;   {metadata(method data for {method} {0x000000001c490488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000036ae2dd: mov    0xdc(%rsi),%edi
  0x00000000036ae2e3: add    $0x8,%edi
  0x00000000036ae2e6: mov    %edi,0xdc(%rsi)
  0x00000000036ae2ec: movabs $0x1c490480,%rsi   ;   {metadata({method} {0x000000001c490488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000036ae2f6: and    $0x7ffff8,%edi
  0x00000000036ae2fc: cmp    $0x0,%edi
  0x00000000036ae2ff: je     0x00000000036ae345
  0x00000000036ae305: mov    %r8,%r10
  0x00000000036ae308: shr    $0x3,%r10
  0x00000000036ae30c: mov    %r10d,0xc(%rdx)
  0x00000000036ae310: shr    $0x9,%rdx
  0x00000000036ae314: movabs $0xf32f000,%rsi
  0x00000000036ae31e: movb   $0x0,(%rdx,%rsi,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@6 (line 611)

  0x00000000036ae322: add    $0x30,%rsp
  0x00000000036ae326: pop    %rbp
  0x00000000036ae327: test   %eax,-0x20be22d(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036ae32d: retq   
  0x00000000036ae32e: mov    %rsi,0x8(%rsp)
  0x00000000036ae333: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036ae33b: callq  0x00000000036919e0  ; OopMap{rdx=Oop r8=Oop off=224}
                                                ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 609)
                                                ;   {runtime_call}
  0x00000000036ae340: jmpq   0x00000000036ae2be
  0x00000000036ae345: mov    %rsi,0x8(%rsp)
  0x00000000036ae34a: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036ae352: callq  0x00000000036919e0  ; OopMap{rdx=Oop r8=Oop off=247}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ;   {runtime_call}
  0x00000000036ae357: jmp    0x00000000036ae305
  0x00000000036ae359: nop
  0x00000000036ae35a: nop
  0x00000000036ae35b: mov    0x2a8(%r15),%rax
  0x00000000036ae362: movabs $0x0,%r10
  0x00000000036ae36c: mov    %r10,0x2a8(%r15)
  0x00000000036ae373: movabs $0x0,%r10
  0x00000000036ae37d: mov    %r10,0x2b0(%r15)
  0x00000000036ae384: add    $0x30,%rsp
  0x00000000036ae388: pop    %rbp
  0x00000000036ae389: jmpq   0x000000000368c620  ;   {runtime_call}
  0x00000000036ae38e: hlt    
  0x00000000036ae38f: hlt    
  0x00000000036ae390: hlt    
  0x00000000036ae391: hlt    
  0x00000000036ae392: hlt    
  0x00000000036ae393: hlt    
  0x00000000036ae394: hlt    
  0x00000000036ae395: hlt    
  0x00000000036ae396: hlt    
  0x00000000036ae397: hlt    
  0x00000000036ae398: hlt    
  0x00000000036ae399: hlt    
  0x00000000036ae39a: hlt    
  0x00000000036ae39b: hlt    
  0x00000000036ae39c: hlt    
  0x00000000036ae39d: hlt    
  0x00000000036ae39e: hlt    
  0x00000000036ae39f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000036ae3a0: callq  0x000000000368f1a0  ;   {no_reloc}
  0x00000000036ae3a5: mov    %rsp,-0x28(%rsp)
  0x00000000036ae3aa: sub    $0x80,%rsp
  0x00000000036ae3b1: mov    %rax,0x78(%rsp)
  0x00000000036ae3b6: mov    %rcx,0x70(%rsp)
  0x00000000036ae3bb: mov    %rdx,0x68(%rsp)
  0x00000000036ae3c0: mov    %rbx,0x60(%rsp)
  0x00000000036ae3c5: mov    %rbp,0x50(%rsp)
  0x00000000036ae3ca: mov    %rsi,0x48(%rsp)
  0x00000000036ae3cf: mov    %rdi,0x40(%rsp)
  0x00000000036ae3d4: mov    %r8,0x38(%rsp)
  0x00000000036ae3d9: mov    %r9,0x30(%rsp)
  0x00000000036ae3de: mov    %r10,0x28(%rsp)
  0x00000000036ae3e3: mov    %r11,0x20(%rsp)
  0x00000000036ae3e8: mov    %r12,0x18(%rsp)
  0x00000000036ae3ed: mov    %r13,0x10(%rsp)
  0x00000000036ae3f2: mov    %r14,0x8(%rsp)
  0x00000000036ae3f7: mov    %r15,(%rsp)
  0x00000000036ae3fb: movabs $0x553ec320,%rcx   ;   {external_word}
  0x00000000036ae405: movabs $0x36ae3a5,%rdx    ;   {internal_word}
  0x00000000036ae40f: mov    %rsp,%r8
  0x00000000036ae412: and    $0xfffffffffffffff0,%rsp
  0x00000000036ae416: callq  0x00000000550a41d0  ;   {runtime_call}
  0x00000000036ae41b: hlt    
[Deopt Handler Code]
  0x00000000036ae41c: movabs $0x36ae41c,%r10    ;   {section_word}
  0x00000000036ae426: push   %r10
  0x00000000036ae428: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036ae42d: hlt    
  0x00000000036ae42e: hlt    
  0x00000000036ae42f: hlt    
<nmethod compile_id='106' compiler='C1' level='3' entry='0x00000000036ae260' size='976' address='0x00000000036ae110' relocation_offset='288' insts_offset='336' stub_offset='656' scopes_data_offset='816' scopes_pcs_offset='872' dependencies_offset='968' method='java/lang/String &lt;init&gt; ([CZ)V' bytes='10' count='1480' iicount='1480' stamp='2.411'/>
Decoding compiled method 0x00000000036ce490:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c5241a8} &apos;position&apos; &apos;(I)Ljava/nio/Buffer;&apos; in &apos;java/nio/Buffer&apos;
  # this:     rdx:rdx   = &apos;java/nio/Buffer&apos;
  # parm0:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x00000000036ce600: mov    0x8(%rdx),%r10d
  0x00000000036ce604: shl    $0x3,%r10
  0x00000000036ce608: cmp    %rax,%r10
  0x00000000036ce60b: jne    0x00000000035d5f60  ;   {runtime_call}
  0x00000000036ce611: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000036ce61c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000036ce620: mov    %eax,-0x6000(%rsp)
  0x00000000036ce627: push   %rbp
  0x00000000036ce628: sub    $0x30,%rsp
  0x00000000036ce62c: movabs $0x1c6d31b0,%rax   ;   {metadata(method data for {method} {0x000000001c5241a8} &apos;position&apos; &apos;(I)Ljava/nio/Buffer;&apos; in &apos;java/nio/Buffer&apos;)}
  0x00000000036ce636: mov    0xdc(%rax),%esi
  0x00000000036ce63c: add    $0x8,%esi
  0x00000000036ce63f: mov    %esi,0xdc(%rax)
  0x00000000036ce645: movabs $0x1c5241a0,%rax   ;   {metadata({method} {0x000000001c5241a8} &apos;position&apos; &apos;(I)Ljava/nio/Buffer;&apos; in &apos;java/nio/Buffer&apos;)}
  0x00000000036ce64f: and    $0x1ff8,%esi
  0x00000000036ce655: cmp    $0x0,%esi
  0x00000000036ce658: je     0x00000000036ce7a6  ;*iload_1
                                                ; - java.nio.Buffer::position@0 (line 243)

  0x00000000036ce65e: mov    0x1c(%rdx),%eax    ;*getfield limit
                                                ; - java.nio.Buffer::position@2 (line 243)

  0x00000000036ce661: cmp    %eax,%r8d
  0x00000000036ce664: movabs $0x1c6d31b0,%rax   ;   {metadata(method data for {method} {0x000000001c5241a8} &apos;position&apos; &apos;(I)Ljava/nio/Buffer;&apos; in &apos;java/nio/Buffer&apos;)}
  0x00000000036ce66e: movabs $0x108,%rsi
  0x00000000036ce678: jg     0x00000000036ce688
  0x00000000036ce67e: movabs $0x118,%rsi
  0x00000000036ce688: mov    (%rax,%rsi,1),%rdi
  0x00000000036ce68c: lea    0x1(%rdi),%rdi
  0x00000000036ce690: mov    %rdi,(%rax,%rsi,1)
  0x00000000036ce694: jg     0x00000000036ce72a  ;*if_icmpgt
                                                ; - java.nio.Buffer::position@5 (line 243)

  0x00000000036ce69a: cmp    $0x0,%r8d
  0x00000000036ce69e: movabs $0x1c6d31b0,%rax   ;   {metadata(method data for {method} {0x000000001c5241a8} &apos;position&apos; &apos;(I)Ljava/nio/Buffer;&apos; in &apos;java/nio/Buffer&apos;)}
  0x00000000036ce6a8: movabs $0x128,%rsi
  0x00000000036ce6b2: jge    0x00000000036ce6c2
  0x00000000036ce6b8: movabs $0x138,%rsi
  0x00000000036ce6c2: mov    (%rax,%rsi,1),%rdi
  0x00000000036ce6c6: lea    0x1(%rdi),%rdi
  0x00000000036ce6ca: mov    %rdi,(%rax,%rsi,1)
  0x00000000036ce6ce: jl     0x00000000036ce72a  ;*ifge
                                                ; - java.nio.Buffer::position@9 (line 243)

  0x00000000036ce6d4: mov    %r8d,0x18(%rdx)    ;*putfield position
                                                ; - java.nio.Buffer::position@22 (line 245)

  0x00000000036ce6d8: mov    0xc(%rdx),%eax     ;*getfield mark
                                                ; - java.nio.Buffer::position@26 (line 246)

  0x00000000036ce6db: cmp    %r8d,%eax
  0x00000000036ce6de: movabs $0x1c6d31b0,%rax   ;   {metadata(method data for {method} {0x000000001c5241a8} &apos;position&apos; &apos;(I)Ljava/nio/Buffer;&apos; in &apos;java/nio/Buffer&apos;)}
  0x00000000036ce6e8: movabs $0x158,%rsi
  0x00000000036ce6f2: jle    0x00000000036ce702
  0x00000000036ce6f8: movabs $0x168,%rsi
  0x00000000036ce702: mov    (%rax,%rsi,1),%rdi
  0x00000000036ce706: lea    0x1(%rdi),%rdi
  0x00000000036ce70a: mov    %rdi,(%rax,%rsi,1)
  0x00000000036ce70e: jle    0x00000000036ce71b  ;*if_icmple
                                                ; - java.nio.Buffer::position@33 (line 246)

  0x00000000036ce714: movl   $0xffffffff,0xc(%rdx)  ;*putfield mark
                                                ; - java.nio.Buffer::position@38 (line 246)

  0x00000000036ce71b: mov    %rdx,%rax
  0x00000000036ce71e: add    $0x30,%rsp
  0x00000000036ce722: pop    %rbp
  0x00000000036ce723: test   %eax,-0x20de629(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036ce729: retq                      ;*areturn
                                                ; - java.nio.Buffer::position@42 (line 247)

  0x00000000036ce72a: nopw   0x0(%rax,%rax,1)
  0x00000000036ce730: jmpq   0x00000000036ce7cc  ;   {no_reloc}
  0x00000000036ce735: add    %al,(%rax)
  0x00000000036ce737: add    %al,(%rax)
  0x00000000036ce739: add    %cl,-0x75(%rcx)
  0x00000000036ce73c: rex.RXB (bad) 
  0x00000000036ce73e: lea    0x20(%rax),%rdi
  0x00000000036ce742: cmp    0x70(%r15),%rdi
  0x00000000036ce746: ja     0x00000000036ce7d6
  0x00000000036ce74c: mov    %rdi,0x60(%r15)
  0x00000000036ce750: mov    0xa8(%rdx),%rcx
  0x00000000036ce757: mov    %rcx,(%rax)
  0x00000000036ce75a: mov    %rdx,%rcx
  0x00000000036ce75d: shr    $0x3,%rcx
  0x00000000036ce761: mov    %ecx,0x8(%rax)
  0x00000000036ce764: xor    %rcx,%rcx
  0x00000000036ce767: mov    %ecx,0xc(%rax)
  0x00000000036ce76a: xor    %rcx,%rcx
  0x00000000036ce76d: mov    %rcx,0x10(%rax)
  0x00000000036ce771: mov    %rcx,0x18(%rax)    ;*new  ; - java.nio.Buffer::position@12 (line 244)

  0x00000000036ce775: mov    %rax,%rdx
  0x00000000036ce778: movabs $0x1c6d31b0,%rsi   ;   {metadata(method data for {method} {0x000000001c5241a8} &apos;position&apos; &apos;(I)Ljava/nio/Buffer;&apos; in &apos;java/nio/Buffer&apos;)}
  0x00000000036ce782: addq   $0x1,0x148(%rsi)
  0x00000000036ce78a: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.nio.Buffer::position@16 (line 244)

  0x00000000036ce78d: mov    %rax,0x20(%rsp)
  0x00000000036ce792: nop
  0x00000000036ce793: nop
  0x00000000036ce794: nop
  0x00000000036ce795: nop
  0x00000000036ce796: nop
  0x00000000036ce797: callq  0x00000000035d61a0  ; OopMap{[32]=Oop off=412}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.nio.Buffer::position@16 (line 244)
                                                ;   {optimized virtual_call}
  0x00000000036ce79c: mov    0x20(%rsp),%rax
  0x00000000036ce7a1: jmpq   0x00000000036ce80b
  0x00000000036ce7a6: mov    %rax,0x8(%rsp)
  0x00000000036ce7ab: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036ce7b3: callq  0x00000000036919e0  ; OopMap{rdx=Oop off=440}
                                                ;*synchronization entry
                                                ; - java.nio.Buffer::position@-1 (line 243)
                                                ;   {runtime_call}
  0x00000000036ce7b8: jmpq   0x00000000036ce65e
  0x00000000036ce7bd: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000036ce7c7: mov    $0xa050f00,%eax
  0x00000000036ce7cc: callq  0x0000000003690920  ; OopMap{off=465}
                                                ;*new  ; - java.nio.Buffer::position@12 (line 244)
                                                ;   {runtime_call}
  0x00000000036ce7d1: jmpq   0x00000000036ce730
  0x00000000036ce7d6: mov    %rdx,%rdx
  0x00000000036ce7d9: callq  0x000000000368d300  ; OopMap{off=478}
                                                ;*new  ; - java.nio.Buffer::position@12 (line 244)
                                                ;   {runtime_call}
  0x00000000036ce7de: jmp    0x00000000036ce775
  0x00000000036ce7e0: nop
  0x00000000036ce7e1: nop
  0x00000000036ce7e2: mov    0x2a8(%r15),%rax
  0x00000000036ce7e9: movabs $0x0,%r10
  0x00000000036ce7f3: mov    %r10,0x2a8(%r15)
  0x00000000036ce7fa: movabs $0x0,%r10
  0x00000000036ce804: mov    %r10,0x2b0(%r15)
  0x00000000036ce80b: add    $0x30,%rsp
  0x00000000036ce80f: pop    %rbp
  0x00000000036ce810: jmpq   0x000000000368c620  ;   {runtime_call}
  0x00000000036ce815: hlt    
  0x00000000036ce816: hlt    
  0x00000000036ce817: hlt    
  0x00000000036ce818: hlt    
  0x00000000036ce819: hlt    
  0x00000000036ce81a: hlt    
  0x00000000036ce81b: hlt    
  0x00000000036ce81c: hlt    
  0x00000000036ce81d: hlt    
  0x00000000036ce81e: hlt    
  0x00000000036ce81f: hlt    
[Stub Code]
  0x00000000036ce820: nop                       ;   {no_reloc}
  0x00000000036ce821: nop
  0x00000000036ce822: nop
  0x00000000036ce823: nop
  0x00000000036ce824: nop
  0x00000000036ce825: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036ce82f: jmpq   0x00000000036ce82f  ;   {runtime_call}
[Exception Handler]
  0x00000000036ce834: callq  0x000000000368f1a0  ;   {runtime_call}
  0x00000000036ce839: mov    %rsp,-0x28(%rsp)
  0x00000000036ce83e: sub    $0x80,%rsp
  0x00000000036ce845: mov    %rax,0x78(%rsp)
  0x00000000036ce84a: mov    %rcx,0x70(%rsp)
  0x00000000036ce84f: mov    %rdx,0x68(%rsp)
  0x00000000036ce854: mov    %rbx,0x60(%rsp)
  0x00000000036ce859: mov    %rbp,0x50(%rsp)
  0x00000000036ce85e: mov    %rsi,0x48(%rsp)
  0x00000000036ce863: mov    %rdi,0x40(%rsp)
  0x00000000036ce868: mov    %r8,0x38(%rsp)
  0x00000000036ce86d: mov    %r9,0x30(%rsp)
  0x00000000036ce872: mov    %r10,0x28(%rsp)
  0x00000000036ce877: mov    %r11,0x20(%rsp)
  0x00000000036ce87c: mov    %r12,0x18(%rsp)
  0x00000000036ce881: mov    %r13,0x10(%rsp)
  0x00000000036ce886: mov    %r14,0x8(%rsp)
  0x00000000036ce88b: mov    %r15,(%rsp)
  0x00000000036ce88f: movabs $0x553ec320,%rcx   ;   {external_word}
  0x00000000036ce899: movabs $0x36ce839,%rdx    ;   {internal_word}
  0x00000000036ce8a3: mov    %rsp,%r8
  0x00000000036ce8a6: and    $0xfffffffffffffff0,%rsp
  0x00000000036ce8aa: callq  0x00000000550a41d0  ;   {runtime_call}
  0x00000000036ce8af: hlt    
[Deopt Handler Code]
  0x00000000036ce8b0: movabs $0x36ce8b0,%r10    ;   {section_word}
  0x00000000036ce8ba: push   %r10
  0x00000000036ce8bc: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036ce8c1: hlt    
  0x00000000036ce8c2: hlt    
  0x00000000036ce8c3: hlt    
  0x00000000036ce8c4: hlt    
  0x00000000036ce8c5: hlt    
  0x00000000036ce8c6: hlt    
  0x00000000036ce8c7: hlt    
<nmethod compile_id='105' compiler='C1' level='3' entry='0x00000000036ce600' size='1472' address='0x00000000036ce490' relocation_offset='288' insts_offset='368' stub_offset='912' scopes_data_offset='1088' scopes_pcs_offset='1192' dependencies_offset='1464' method='java/nio/Buffer position (I)Ljava/nio/Buffer;' bytes='43' count='2071' iicount='2071' stamp='2.427'/>
<writer thread='19284'/>
Decoding compiled method 0x00000000036da2d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c60c018} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;
  # this:     rdx:rdx   = &apos;java/io/WinNTFileSystem&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0xd0]  (sp of caller)
  0x00000000036da620: mov    0x8(%rdx),%r10d
  0x00000000036da624: shl    $0x3,%r10
  0x00000000036da628: cmp    %r10,%rax
  0x00000000036da62b: jne    0x00000000035d5f60  ;   {runtime_call}
  0x00000000036da631: data16 xchg %ax,%ax
  0x00000000036da634: nopl   0x0(%rax,%rax,1)
  0x00000000036da63c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000036da640: mov    %eax,-0x6000(%rsp)
  0x00000000036da647: push   %rbp
  0x00000000036da648: sub    $0xc0,%rsp         ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalizePrefix@9 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036da64f: mov    %rdx,%r10
  0x00000000036da652: mov    %r8,%rcx
  0x00000000036da655: mov    0xc(%r8),%ebx      ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ; implicit exception: dispatches to 0x00000000036dda8d
  0x00000000036da659: mov    0xc(%r12,%rbx,8),%r11d  ; implicit exception: dispatches to 0x00000000036dda99
  0x00000000036da65e: movzwl 0xc(%rdx),%r8d     ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalizePrefix@9 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036da663: test   %r11d,%r11d
  0x00000000036da666: jle    0x00000000036dbbcd  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalize@134 (line 127)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036da66c: movzwl 0xe(%rdx),%r9d     ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalizePrefix@9 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036da671: test   %r11d,%r11d
  0x00000000036da674: jbe    0x00000000036dcabd
  0x00000000036da67a: mov    %r11d,%edi
  0x00000000036da67d: dec    %edi
  0x00000000036da67f: cmp    %r11d,%edi
  0x00000000036da682: jae    0x00000000036dcabd  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 134)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036da688: mov    %r8d,0x5c(%rsp)
  0x00000000036da68d: mov    %rdx,0x60(%rsp)
  0x00000000036da692: mov    %rcx,0x50(%rsp)
  0x00000000036da697: movslq %r11d,%rcx
  0x00000000036da69a: mov    %r11d,%r8d
  0x00000000036da69d: add    $0xfffffffd,%r8d
  0x00000000036da6a1: shl    %rcx
  0x00000000036da6a4: lea    (%r12,%rbx,8),%r10
  0x00000000036da6a8: mov    %r10,0x30(%rsp)
  0x00000000036da6ad: mov    %ebx,0x58(%rsp)
  0x00000000036da6b1: add    $0x17,%rcx         ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@139 (line 127)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036da6b5: mov    %rcx,%r10
  0x00000000036da6b8: shr    $0x3,%r10
  0x00000000036da6bc: and    $0xfffffffffffffff8,%rcx  ;*invokespecial normalizePrefix
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036da6c0: mov    %rcx,0x20(%rsp)
  0x00000000036da6c5: add    $0xfffffffffffffffe,%r10  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036da6c9: mov    %r10,0x38(%rsp)
  0x00000000036da6ce: mov    $0xf8001ac1,%r10d  ;   {metadata(&apos;java/lang/StringBuffer&apos;)}
  0x00000000036da6d4: shl    $0x3,%r10
  0x00000000036da6d8: mov    %r10,0x40(%rsp)
  0x00000000036da6dd: mov    $0x80000000,%ecx
  0x00000000036da6e2: cmp    %r8d,%r11d
  0x00000000036da6e5: cmovl  %ecx,%r8d          ;*arraylength
                                                ; - java.util.Arrays::copyOf@9 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036da6e9: mov    %r8d,0x28(%rsp)
  0x00000000036da6ee: mov    $0xf80002da,%r10d  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000000036da6f4: shl    $0x3,%r10
  0x00000000036da6f8: mov    %r10,0x48(%rsp)
  0x00000000036da6fd: mov    $0x1,%r10d
  0x00000000036da703: cmp    %r10d,%r11d
  0x00000000036da706: mov    %r11d,%ebx
  0x00000000036da709: mov    $0x1,%r8d
  0x00000000036da70f: cmovg  %r8d,%r11d         ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036da713: mov    %r11d,0x2c(%rsp)
  0x00000000036da718: xor    %ecx,%ecx
  0x00000000036da71a: xor    %r8d,%r8d
  0x00000000036da71d: mov    $0x7,%r10d
  0x00000000036da723: mov    %r10,0xa0(%rsp)    ;*invokespecial normalizePrefix
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036da72b: test   %ecx,%ecx
  0x00000000036da72d: jl     0x00000000036dcae1  ;*if_icmpgt
                                                ; - java.io.WinNTFileSystem::isLetter@21 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036da733: cmp    %ebx,%ecx
  0x00000000036da735: jge    0x00000000036dcb1a  ;*iconst_1
                                                ; - java.io.WinNTFileSystem::isLetter@24 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036da73b: mov    0x30(%rsp),%r10
  0x00000000036da740: movzwl 0x10(%r10,%rcx,2),%r10d  ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@25 (line 86)

  0x00000000036da746: cmp    %r9d,%r10d
  0x00000000036da749: je     0x00000000036dbbbb  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@139 (line 127)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036da74f: cmp    0x5c(%rsp),%r10d
  0x00000000036da754: je     0x00000000036db07f  ;*invokevirtual toString
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036da75a: cmp    $0x3a,%r10d
  0x00000000036da75e: je     0x00000000036db311  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036da764: inc    %ecx
  0x00000000036da766: cmp    0x2c(%rsp),%ecx
  0x00000000036da76a: jge    0x00000000036da771  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@128 (line 96)

  0x00000000036da76c: mov    %r10d,%r8d
  0x00000000036da76f: jmp    0x00000000036da72b
  0x00000000036da771: mov    $0x2,%r11d
  0x00000000036da777: cmp    %r11d,%ebx
  0x00000000036da77a: mov    %ebx,%edi
  0x00000000036da77c: cmovg  %r11d,%edi
  0x00000000036da780: add    $0xfffffffd,%edi   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036da783: cmp    %edi,%ecx
  0x00000000036da785: jge    0x00000000036daba0  ;*invokestatic copyOfRange
                                                ; - java.lang.StringBuffer::toString@17 (line 669)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036da78b: jmp    0x00000000036da79b
  0x00000000036da78d: data16 xchg %ax,%ax       ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalizePrefix@99 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036da790: add    $0x4,%ecx
  0x00000000036da793: cmp    %edi,%ecx
  0x00000000036da795: jge    0x00000000036daba0  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036da79b: mov    0x30(%rsp),%r11
  0x00000000036da7a0: movzwl 0x10(%r11,%rcx,2),%r8d  ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036da7a6: cmp    %r9d,%r8d
  0x00000000036da7a9: je     0x00000000036da893
  0x00000000036da7af: cmp    0x5c(%rsp),%r8d
  0x00000000036da7b4: je     0x00000000036da831  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036da7b6: movslq %ecx,%r11
  0x00000000036da7b9: mov    0x30(%rsp),%r10
  0x00000000036da7be: movzwl 0x12(%r10,%r11,2),%r10d  ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036da7c4: mov    %ecx,%edx
  0x00000000036da7c6: inc    %edx               ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036da7c8: cmp    %r9d,%r10d
  0x00000000036da7cb: je     0x00000000036da8a2
  0x00000000036da7d1: cmp    0x5c(%rsp),%r10d
  0x00000000036da7d6: je     0x00000000036da879  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036da7dc: mov    0x30(%rsp),%r8
  0x00000000036da7e1: movzwl 0x14(%r8,%r11,2),%r8d  ;*getfield toStringCache
                                                ; - java.lang.StringBuffer::toString@28 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036da7e7: mov    %ecx,%edx
  0x00000000036da7e9: add    $0x2,%edx          ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036da7ec: cmp    %r9d,%r8d
  0x00000000036da7ef: je     0x00000000036da8ae
  0x00000000036da7f5: cmp    0x5c(%rsp),%r8d
  0x00000000036da7fa: je     0x00000000036da886  ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036da800: mov    0x30(%rsp),%r10
  0x00000000036da805: movzwl 0x16(%r10,%r11,2),%r10d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036da80b: mov    %ecx,%edx
  0x00000000036da80d: add    $0x3,%edx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036da810: cmp    %r9d,%r10d
  0x00000000036da813: je     0x00000000036da8ba  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@139 (line 127)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036da819: cmp    0x5c(%rsp),%r10d
  0x00000000036da81e: jne    0x00000000036da790  ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalize@182 (line 137)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036da824: cmp    0x5c(%rsp),%r8d
  0x00000000036da829: jne    0x00000000036da790  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036da82f: jmp    0x00000000036da847
  0x00000000036da831: cmp    0x5c(%rsp),%r10d
  0x00000000036da836: jne    0x00000000036da7b6
  0x00000000036da83c: mov    %ecx,%edx          ;*arraylength
                                                ; - java.util.Arrays::copyOf@9 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036da83e: mov    %r10d,%r11d
  0x00000000036da841: mov    %r8d,%r10d
  0x00000000036da844: mov    %r11d,%r8d         ;*getfield count
                                                ; - java.lang.StringBuffer::toString@14 (line 669)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036da847: mov    %r10d,%ebp
  0x00000000036da84a: mov    %r8d,%r10d
  0x00000000036da84d: mov    %edx,%ecx          ;*invokevirtual toString
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036da84f: mov    $0xffffff65,%edx
  0x00000000036da854: mov    %ebx,0x28(%rsp)
  0x00000000036da858: mov    0x5c(%rsp),%r8d
  0x00000000036da85d: mov    %r9d,0x30(%rsp)
  0x00000000036da862: mov    %ecx,0x34(%rsp)
  0x00000000036da866: mov    %r10d,0x38(%rsp)
  0x00000000036da86b: mov    %r8d,0x3c(%rsp)
  0x00000000036da870: data16 xchg %ax,%ax
  0x00000000036da873: callq  0x00000000035d57a0  ; OopMap{[80]=Oop [96]=Oop off=600}
                                                ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@74 (line 90)
                                                ;   {runtime_call}
  0x00000000036da878: int3   
  0x00000000036da879: cmp    0x5c(%rsp),%r8d
  0x00000000036da87e: jne    0x00000000036da7dc  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036da884: jmp    0x00000000036da847
  0x00000000036da886: cmp    0x5c(%rsp),%r10d
  0x00000000036da88b: jne    0x00000000036da800  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036da891: jmp    0x00000000036da83e
  0x00000000036da893: cmp    0x5c(%rsp),%r10d
  0x00000000036da898: je     0x00000000036dd1d9
  0x00000000036da89e: mov    %ecx,%edx
  0x00000000036da8a0: jmp    0x00000000036da8c5
  0x00000000036da8a2: cmp    0x5c(%rsp),%r8d
  0x00000000036da8a7: jne    0x00000000036da8c5
  0x00000000036da8a9: jmpq   0x00000000036dd1de
  0x00000000036da8ae: cmp    0x5c(%rsp),%r10d
  0x00000000036da8b3: jne    0x00000000036da8c5
  0x00000000036da8b5: jmpq   0x00000000036dd1db
  0x00000000036da8ba: cmp    0x5c(%rsp),%r8d
  0x00000000036da8bf: je     0x00000000036dd1de  ;*ifnonnull
                                                ; - java.lang.StringBuffer::toString@4 (line 668)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036da8c5: mov    %edx,%ecx          ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@64 (line 120)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036da8c7: test   %ebx,%ebx
  0x00000000036da8c9: je     0x00000000036dcddc
  0x00000000036da8cf: cmp    $0x3,%ecx
  0x00000000036da8d2: jge    0x00000000036dcdf5  ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@49 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036da8d8: mov    %ebx,%ebp
  0x00000000036da8da: mov    0x60(%r15),%rax
  0x00000000036da8de: mov    %rax,%r10
  0x00000000036da8e1: add    $0x18,%r10
  0x00000000036da8e5: cmp    0x70(%r15),%r10
  0x00000000036da8e9: jae    0x00000000036dc0d4  ;*new
                                                ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036da8ef: mov    %r10,0x60(%r15)
  0x00000000036da8f3: prefetchw 0xc0(%r10)
  0x00000000036da8fb: mov    0x40(%rsp),%r10
  0x00000000036da900: mov    0xa8(%r10),%r10    ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036da907: mov    %r10,(%rax)
  0x00000000036da90a: movl   $0xf8001ac1,0x8(%rax)  ;   {metadata(&apos;java/lang/StringBuffer&apos;)}
  0x00000000036da911: mov    %r12d,0xc(%rax)
  0x00000000036da915: mov    %r12,0x10(%rax)    ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalizePrefix@9 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036da919: mov    %ebp,%r10d
  0x00000000036da91c: cmp    $0x80000,%r10d
  0x00000000036da923: ja     0x00000000036dc0e9  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036da929: mov    %rax,%rbp
  0x00000000036da92c: mov    %r10d,0x68(%rsp)
  0x00000000036da931: mov    0x60(%r15),%r8
  0x00000000036da935: mov    %r8,%r10
  0x00000000036da938: mov    0x20(%rsp),%r11
  0x00000000036da93d: add    %r11,%r10
  0x00000000036da940: cmp    0x70(%r15),%r10
  0x00000000036da944: jae    0x00000000036dc0f1  ;*new
                                                ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036da94a: mov    %r10,0x60(%r15)    ;*getfield toStringCache
                                                ; - java.lang.StringBuffer::toString@28 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036da94e: mov    %r8,%rdi
  0x00000000036da951: add    $0x10,%rdi
  0x00000000036da955: movq   $0x1,(%r8)         ;*invokevirtual toString
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036da95c: prefetchw 0xc0(%r10)      ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036da964: movl   $0xf8000041,0x8(%r8)  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {metadata({type array char})}
  0x00000000036da96c: mov    0x68(%rsp),%r9d
  0x00000000036da971: mov    %r9d,0xc(%r8)      ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 609)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036da975: mov    0x38(%rsp),%rcx
  0x00000000036da97a: xor    %rax,%rax
  0x00000000036da97d: shl    $0x3,%rcx
  0x00000000036da981: rep rex.W stos %al,%es:(%rdi)  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036da984: prefetchw 0x100(%r10)
  0x00000000036da98c: prefetchw 0x140(%r10)     ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036da994: prefetchw 0x180(%r10)     ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036da99c: mov    %rbp,%r11
  0x00000000036da99f: mov    %rbp,%r10
  0x00000000036da9a2: mov    %r8,%r9
  0x00000000036da9a5: shr    $0x3,%r9
  0x00000000036da9a9: mov    %r9d,0x10(%rbp)    ;*invokespecial normalizePrefix
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036da9ad: shr    $0x9,%r10
  0x00000000036da9b1: mov    $0xf32f000,%r8d
  0x00000000036da9b7: mov    %r12b,(%r8,%r10,1)  ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalizePrefix@9 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036da9bb: xor    %r10d,%r10d        ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036da9be: test   %r10d,%r10d
  0x00000000036da9c1: jl     0x00000000036dccd3
  0x00000000036da9c7: cmp    0x68(%rsp),%r10d
  0x00000000036da9cc: jge    0x00000000036dcd09  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036da9d2: mov    0x30(%rsp),%r9
  0x00000000036da9d7: movzwl 0x10(%r9,%r10,2),%r8d  ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036da9dd: cmp    $0x5c,%r8d
  0x00000000036da9e1: je     0x00000000036db2bf
  0x00000000036da9e7: cmp    $0x2f,%r8d
  0x00000000036da9eb: je     0x00000000036db2bf  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036da9f1: mov    0x68(%rsp),%ecx
  0x00000000036da9f5: sub    %r10d,%ecx
  0x00000000036da9f8: cmp    $0x2,%ecx
  0x00000000036da9fb: jl     0x00000000036daab4  ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036daa01: test   %r10d,%r10d
  0x00000000036daa04: jl     0x00000000036dcfe5
  0x00000000036daa0a: cmp    0x68(%rsp),%r10d
  0x00000000036daa0f: jge    0x00000000036dd089
  0x00000000036daa15: cmp    0x68(%rsp),%r10d
  0x00000000036daa1a: jae    0x00000000036dcd39  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036daa20: movzwl 0x10(%r9,%r10,2),%r8d  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036daa26: cmp    $0x61,%r8d
  0x00000000036daa2a: jge    0x00000000036dd0b9  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036daa30: cmp    $0x41,%r8d
  0x00000000036daa34: jl     0x00000000036dd019
  0x00000000036daa3a: cmp    $0x5a,%r8d
  0x00000000036daa3e: jg     0x00000000036dd0f1  ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036daa44: mov    %r10d,%ebp
  0x00000000036daa47: inc    %ebp               ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036daa49: test   %ebp,%ebp
  0x00000000036daa4b: jl     0x00000000036dd051  ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036daa51: cmp    0x68(%rsp),%ebp
  0x00000000036daa55: jge    0x00000000036dd125  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036daa5b: cmp    0x68(%rsp),%ebp
  0x00000000036daa5f: jae    0x00000000036dcd5d  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036daa65: movslq %r10d,%rcx
  0x00000000036daa68: movzwl 0x12(%r9,%rcx,2),%r9d
  0x00000000036daa6e: cmp    $0x3a,%r9d
  0x00000000036daa72: jne    0x00000000036daab4  ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalizePrefix@16 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036daa74: mov    %r10d,0x28(%rsp)
  0x00000000036daa79: mov    %r11,0x20(%rsp)
  0x00000000036daa7e: mov    %r11,%rdx
  0x00000000036daa81: mov    0x5c(%rsp),%ebp
  0x00000000036daa85: xchg   %ax,%ax
  0x00000000036daa87: callq  0x00000000035d61a0  ; OopMap{[32]=Oop [80]=Oop [96]=Oop off=1132}
                                                ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {optimized virtual_call}
  0x00000000036daa8c: mov    0x20(%rsp),%rdx
  0x00000000036daa91: mov    $0x3a,%r8d
  0x00000000036daa97: mov    0x60(%rsp),%r10
  0x00000000036daa9c: mov    %r10,%rbp
  0x00000000036daa9f: callq  0x00000000035d61a0  ; OopMap{rbp=Oop [32]=Oop [80]=Oop [96]=Oop off=1156}
                                                ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {optimized virtual_call}
  0x00000000036daaa4: mov    0x28(%rsp),%r8d
  0x00000000036daaa9: add    $0x2,%r8d          ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036daaad: mov    0x20(%rsp),%r11
  0x00000000036daab2: jmp    0x00000000036daae6  ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalizePrefix@9 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036daab4: mov    0x68(%rsp),%r8d
  0x00000000036daab9: cmp    $0x2,%r8d
  0x00000000036daabd: jl     0x00000000036daae3  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 134)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036daabf: mov    0x58(%rsp),%r8d
  0x00000000036daac4: movzwl 0x10(%r12,%r8,8),%r10d  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036daaca: cmp    $0x5c,%r10d
  0x00000000036daace: je     0x00000000036dbb80  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036daad4: cmp    $0x2f,%r10d
  0x00000000036daad8: je     0x00000000036dbb80  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 134)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036daade: xor    %r8d,%r8d
  0x00000000036daae1: jmp    0x00000000036daae6
  0x00000000036daae3: xor    %r8d,%r8d          ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036daae6: cmp    0x68(%rsp),%r8d
  0x00000000036daaeb: jl     0x00000000036dae01  ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalize@93 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036daaf1: mov    (%r11),%rax
  0x00000000036daaf4: mov    %rax,%r10
  0x00000000036daaf7: and    $0x7,%r10
  0x00000000036daafb: cmp    $0x5,%r10
  0x00000000036daaff: jne    0x00000000036dcb4a
  0x00000000036dab05: mov    0x40(%rsp),%r10
  0x00000000036dab0a: mov    0xa8(%r10),%r10    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dab11: mov    %r10,%r8           ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dab14: or     %r15,%r8
  0x00000000036dab17: mov    %r8,%r9
  0x00000000036dab1a: xor    %rax,%r9
  0x00000000036dab1d: test   $0xffffffffffffff87,%r9
  0x00000000036dab24: jne    0x00000000036dcbbc  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dab2a: mov    0x14(%r11),%ebp    ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dab2e: test   %ebp,%ebp
  0x00000000036dab30: je     0x00000000036db091
  0x00000000036dab36: mov    0x60(%r15),%rbx
  0x00000000036dab3a: mov    %rbx,%r10
  0x00000000036dab3d: add    $0x18,%r10
  0x00000000036dab41: cmp    0x70(%r15),%r10
  0x00000000036dab45: jae    0x00000000036dc110  ;*new
                                                ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dab4b: mov    %r10,0x60(%r15)
  0x00000000036dab4f: prefetchw 0xc0(%r10)
  0x00000000036dab57: mov    0x48(%rsp),%r10
  0x00000000036dab5c: mov    0xa8(%r10),%r10
  0x00000000036dab63: mov    %r10,(%rbx)
  0x00000000036dab66: movl   $0xf80002da,0x8(%rbx)  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000000036dab6d: mov    %r12d,0xc(%rbx)
  0x00000000036dab71: mov    %r12,0x10(%rbx)    ;*invokespecial &lt;init&gt;
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dab75: mov    %ebp,0xc(%rbx)     ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dab78: mov    %rbx,%r10
  0x00000000036dab7b: shr    $0x9,%r10
  0x00000000036dab7f: mov    $0xf32f000,%r8d
  0x00000000036dab85: mov    %r12b,(%r8,%r10,1)  ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalizePrefix@6 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dab89: mov    0xa0(%rsp),%r10
  0x00000000036dab91: and    (%r11),%r10
  0x00000000036dab94: cmp    $0x5,%r10
  0x00000000036dab98: jne    0x00000000036dcbeb  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dab9e: jmp    0x00000000036dac0a  ;*ifnonnull
                                                ; - java.lang.StringBuffer::toString@4 (line 668)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036daba0: cmp    %ebx,%ecx
  0x00000000036daba2: jge    0x00000000036dabf7  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036daba4: test   %ecx,%ecx
  0x00000000036daba6: jl     0x00000000036dcae4  ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dabac: cmp    %ebx,%ecx
  0x00000000036dabae: jge    0x00000000036dcb1d  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dabb4: mov    0x30(%rsp),%r11
  0x00000000036dabb9: movzwl 0x10(%r11,%rcx,2),%ebp  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 145)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dabbf: cmp    %r9d,%ebp
  0x00000000036dabc2: je     0x00000000036dbf0c
  0x00000000036dabc8: cmp    0x5c(%rsp),%ebp
  0x00000000036dabcc: je     0x00000000036dbb70
  0x00000000036dabd2: cmp    $0x3a,%ebp
  0x00000000036dabd5: je     0x00000000036dbbdd  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dabdb: inc    %ecx               ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 145)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dabdd: cmp    %ebx,%ecx
  0x00000000036dabdf: jge    0x00000000036dabe6  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dabe1: mov    %ebp,%r10d
  0x00000000036dabe4: jmp    0x00000000036daba4
  0x00000000036dabe6: cmp    0x5c(%rsp),%ebp
  0x00000000036dabea: je     0x00000000036dd27f
  0x00000000036dabf0: mov    0x50(%rsp),%rcx
  0x00000000036dabf5: jmp    0x00000000036dac07
  0x00000000036dabf7: cmp    0x5c(%rsp),%r10d
  0x00000000036dabfc: je     0x00000000036dd27c  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dac02: mov    0x50(%rsp),%rcx    ;*invokespecial &lt;init&gt;
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dac07: mov    %rcx,%rbx          ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)

  0x00000000036dac0a: mov    %rbx,%rax
  0x00000000036dac0d: add    $0xc0,%rsp
  0x00000000036dac14: pop    %rbp
  0x00000000036dac15: test   %eax,-0x20eac1b(%rip)        # 0x00000000015f0000
                                                ;   {poll_return}
  0x00000000036dac1b: retq                      ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dac1c: cmp    0x68(%rsp),%r14d
  0x00000000036dac21: jge    0x00000000036dac5b  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalize@179 (line 137)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dac23: test   %r14d,%r14d
  0x00000000036dac26: jl     0x00000000036dc6e3
  0x00000000036dac2c: cmp    %r9d,%r14d
  0x00000000036dac2f: jge    0x00000000036dc70d
  0x00000000036dac35: cmp    %r9d,%r14d
  0x00000000036dac38: jae    0x00000000036dc4d9  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dac3e: movslq %r8d,%r10
  0x00000000036dac41: movzwl 0x12(%rcx,%r10,2),%r8d  ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalizePrefix@99 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dac47: cmp    $0x5c,%r8d
  0x00000000036dac4b: je     0x00000000036dc4fd  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dac51: cmp    $0x2f,%r8d
  0x00000000036dac55: je     0x00000000036dc4fd  ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dac5b: cmp    0x68(%rsp),%r14d
  0x00000000036dac60: je     0x00000000036dbc32  ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dac66: mov    (%r11),%rax        ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dac69: mov    %rax,%r10
  0x00000000036dac6c: and    $0x7,%r10
  0x00000000036dac70: cmp    $0x5,%r10
  0x00000000036dac74: jne    0x00000000036dc546  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dac7a: mov    %rdx,%r10          ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dac7d: or     %r15,%r10
  0x00000000036dac80: mov    %r10,%r8
  0x00000000036dac83: xor    %rax,%r8           ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dac86: test   $0xffffffffffffff87,%r8
  0x00000000036dac8d: jne    0x00000000036dc5f8  ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dac93: mov    0x10(%r11),%edx    ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalizePrefix@6 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dac97: mov    %r12d,0x14(%r11)   ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dac9b: mov    0xc(%r12,%rdx,8),%ecx  ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ; implicit exception: dispatches to 0x00000000036dda4d
  0x00000000036daca0: mov    0xc(%r11),%r9d     ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@16 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036daca4: mov    %r9d,%r10d
  0x00000000036daca7: sub    %ecx,%r10d
  0x00000000036dacaa: mov    %rdx,%rbp
  0x00000000036dacad: shl    $0x3,%rbp          ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalize@134 (line 127)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dacb1: inc    %r10d
  0x00000000036dacb4: mov    %r9d,%r8d
  0x00000000036dacb7: inc    %r8d               ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@74 (line 90)

  0x00000000036dacba: test   %r10d,%r10d
  0x00000000036dacbd: jg     0x00000000036db0d9  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dacc3: mov    %r8d,0xc(%r11)     ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dacc7: mov    0xc(%rbp),%r10d    ; implicit exception: dispatches to 0x00000000036dda5d
  0x00000000036daccb: cmp    %r10d,%r9d
  0x00000000036dacce: jae    0x00000000036dc515  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dacd4: mov    0x5c(%rsp),%r8d
  0x00000000036dacd9: mov    %r8w,0x10(%rbp,%r9,2)  ;*if_icmpgt
                                                ; - java.io.WinNTFileSystem::isLetter@21 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dacdf: mov    $0x7,%r10d
  0x00000000036dace5: and    (%r11),%r10
  0x00000000036dace8: cmp    $0x5,%r10
  0x00000000036dacec: je     0x00000000036dadee  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dacf2: lea    0xb0(%rsp),%rax    ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dacfa: cmpq   $0x0,(%rax)
  0x00000000036dad01: je     0x00000000036dad7b
  0x00000000036dad07: mov    (%r11),%r10
  0x00000000036dad0a: test   $0x2,%r10
  0x00000000036dad11: je     0x00000000036dad73
  0x00000000036dad13: mov    0x16(%r10),%rax
  0x00000000036dad17: xor    %r15,%rax
  0x00000000036dad1a: or     0x26(%r10),%rax
  0x00000000036dad1e: jne    0x00000000036dad7b
  0x00000000036dad20: mov    0x36(%r10),%rax
  0x00000000036dad24: or     0x3e(%r10),%rax
  0x00000000036dad28: jne    0x00000000036dad34
  0x00000000036dad2a: movq   $0x0,0x16(%r10)
  0x00000000036dad32: jmp    0x00000000036dad7b
  0x00000000036dad34: cmpq   $0x0,0x46(%r10)
  0x00000000036dad3c: je     0x00000000036dad67
  0x00000000036dad3e: movq   $0x0,0x16(%r10)
  0x00000000036dad46: lock addl $0x0,(%rsp)
  0x00000000036dad4b: cmpq   $0x0,0x46(%r10)
  0x00000000036dad53: jne    0x00000000036dad6c
  0x00000000036dad55: movabs $0x0,%rax
  0x00000000036dad5f: lock cmpxchg %r15,0x16(%r10)
  0x00000000036dad65: jne    0x00000000036dad6c
  0x00000000036dad67: or     $0x1,%eax
  0x00000000036dad6a: jmp    0x00000000036dad7b
  0x00000000036dad6c: test   $0x0,%eax
  0x00000000036dad71: jmp    0x00000000036dad7b
  0x00000000036dad73: mov    (%rax),%r10
  0x00000000036dad76: lock cmpxchg %r10,(%r11)
  0x00000000036dad7b: je     0x00000000036dadee  ;*areturn
                                                ; - java.lang.StringBuffer::toString@35 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dad7d: mov    %r14d,0x28(%rsp)
  0x00000000036dad82: mov    %r11,0x20(%rsp)
  0x00000000036dad87: mov    %r11,%rcx
  0x00000000036dad8a: lea    0xb0(%rsp),%rdx    ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dad92: movabs $0x54fdce00,%r10
  0x00000000036dad9c: callq  *%r10              ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@150 (line 130)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dad9f: mov    0x5c(%rsp),%r8d
  0x00000000036dada4: mov    0x20(%rsp),%r11
  0x00000000036dada9: mov    0x28(%rsp),%r14d
  0x00000000036dadae: jmp    0x00000000036dadee
  0x00000000036dadb0: mov    %r8d,%ecx
  0x00000000036dadb3: jmpq   0x00000000036daec8
  0x00000000036dadb8: nopl   0x0(%rax,%rax,1)
  0x00000000036dadc0: mov    %r8d,0xc(%r11)     ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@128 (line 127)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dadc4: mov    0xc(%rbp),%r8d
  0x00000000036dadc8: cmp    %r8d,%esi
  0x00000000036dadcb: jae    0x00000000036dc131  ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dadd1: mov    %di,0x10(%rbp,%rsi,2)  ;*if_icmpgt
                                                ; - java.io.WinNTFileSystem::isLetter@21 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dadd6: mov    $0x7,%r10d
  0x00000000036daddc: and    (%r11),%r10
  0x00000000036daddf: cmp    $0x5,%r10
  0x00000000036dade3: jne    0x00000000036dc253  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dade9: mov    0x5c(%rsp),%r8d    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dadee: cmp    0x68(%rsp),%r14d
  0x00000000036dadf3: jge    0x00000000036daaf1  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dadf9: mov    %r8d,0x5c(%rsp)
  0x00000000036dadfe: mov    %r14d,%r8d         ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dae01: mov    %r8d,%r14d
  0x00000000036dae04: inc    %r14d              ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dae07: test   %r8d,%r8d
  0x00000000036dae0a: jl     0x00000000036dc3d5  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dae10: mov    0x50(%rsp),%r10
  0x00000000036dae15: mov    0xc(%r10),%r10d    ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dae19: mov    0xc(%r12,%r10,8),%r9d  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ; implicit exception: dispatches to 0x00000000036dda32
  0x00000000036dae1e: cmp    %r9d,%r8d
  0x00000000036dae21: jge    0x00000000036dc3f1
  0x00000000036dae27: cmp    %r9d,%r8d
  0x00000000036dae2a: jae    0x00000000036dc091  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dae30: mov    0x40(%rsp),%rcx
  0x00000000036dae35: mov    0xa8(%rcx),%rdx    ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dae3c: lea    (%r12,%r10,8),%rcx
  0x00000000036dae40: movzwl 0x10(%rcx,%r8,2),%edi  ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@15 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dae46: cmp    $0x5c,%edi
  0x00000000036dae49: je     0x00000000036dac1c
  0x00000000036dae4f: cmp    $0x2f,%edi
  0x00000000036dae52: je     0x00000000036dac1c  ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalizePrefix@99 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dae58: mov    (%r11),%rax        ;*iload_1
                                                ; - java.util.Arrays::copyOf@0 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dae5b: mov    %rax,%r10
  0x00000000036dae5e: and    $0x7,%r10
  0x00000000036dae62: cmp    $0x5,%r10
  0x00000000036dae66: jne    0x00000000036dc162  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dae6c: mov    %rdx,%r10          ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dae6f: or     %r15,%r10
  0x00000000036dae72: mov    %r10,%r8
  0x00000000036dae75: xor    %rax,%r8
  0x00000000036dae78: test   $0xffffffffffffff87,%r8
  0x00000000036dae7f: jne    0x00000000036dc220  ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::normalize@120 (line 126)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dae85: mov    0x10(%r11),%r10d   ;*invokespecial &lt;init&gt;
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dae89: mov    %r12d,0x14(%r11)   ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dae8d: mov    0xc(%r12,%r10,8),%r9d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ; implicit exception: dispatches to 0x00000000036dda3d
  0x00000000036dae92: mov    0xc(%r11),%esi     ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@19 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dae96: mov    %esi,%ecx
  0x00000000036dae98: sub    %r9d,%ecx
  0x00000000036dae9b: mov    %r10,%rbp
  0x00000000036dae9e: shl    $0x3,%rbp          ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.WinNTFileSystem::normalize@120 (line 126)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036daea2: inc    %ecx
  0x00000000036daea4: mov    %esi,%r8d
  0x00000000036daea7: inc    %r8d               ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@74 (line 90)

  0x00000000036daeaa: test   %ecx,%ecx
  0x00000000036daeac: jle    0x00000000036dadc0  ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036daeb2: mov    %r9d,%ecx
  0x00000000036daeb5: shl    %ecx               ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036daeb7: mov    %ecx,%edx
  0x00000000036daeb9: sub    %esi,%edx
  0x00000000036daebb: inc    %edx
  0x00000000036daebd: test   %edx,%edx
  0x00000000036daebf: jl     0x00000000036dadb0  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036daec5: add    $0x2,%ecx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036daec8: test   %ecx,%ecx
  0x00000000036daeca: jle    0x00000000036daed7  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036daecc: mov    $0x7ffffff7,%edx
  0x00000000036daed1: sub    %ecx,%edx
  0x00000000036daed3: test   %edx,%edx
  0x00000000036daed5: jge    0x00000000036daf12  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036daed7: mov    %r9d,0x58(%rsp)
  0x00000000036daedc: mov    %r10d,0x3c(%rsp)
  0x00000000036daee1: mov    %edi,0x2c(%rsp)
  0x00000000036daee5: mov    %r14d,0x28(%rsp)
  0x00000000036daeea: mov    %r11,0x20(%rsp)    ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@74 (line 90)

  0x00000000036daeef: mov    %r11,%rdx
  0x00000000036daef2: nop
  0x00000000036daef3: callq  0x00000000035d61a0  ; OopMap{rbp=Oop [32]=Oop [60]=NarrowOop [80]=Oop [96]=Oop off=2264}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {optimized virtual_call}
  0x00000000036daef8: mov    0x20(%rsp),%r11
  0x00000000036daefd: mov    0x28(%rsp),%r14d
  0x00000000036daf02: mov    0x2c(%rsp),%edi
  0x00000000036daf06: mov    %eax,%ecx
  0x00000000036daf08: mov    0x3c(%rsp),%r10d
  0x00000000036daf0d: mov    0x58(%rsp),%r9d    ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036daf12: cmp    $0x80000,%ecx
  0x00000000036daf18: ja     0x00000000036dcc97  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036daf1e: movslq %ecx,%rbx          ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036daf21: shl    %rbx
  0x00000000036daf24: add    $0x17,%rbx
  0x00000000036daf28: mov    %rbx,%r8
  0x00000000036daf2b: and    $0xfffffffffffffff8,%r8  ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.WinNTFileSystem::normalize@120 (line 126)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036daf2f: cmp    $0x80000,%ecx
  0x00000000036daf35: ja     0x00000000036dc36f  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036daf3b: mov    %r9d,0x98(%rsp)
  0x00000000036daf43: mov    %r10d,0x6c(%rsp)
  0x00000000036daf48: mov    0x60(%r15),%r9
  0x00000000036daf4c: mov    %r9,%r10
  0x00000000036daf4f: add    %r8,%r10
  0x00000000036daf52: cmp    0x70(%r15),%r10
  0x00000000036daf56: jae    0x00000000036dc37c  ;*new
                                                ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036daf5c: mov    %r10,0x60(%r15)    ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036daf60: prefetchw 0xc0(%r10)      ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036daf68: movq   $0x1,(%r9)
  0x00000000036daf6f: prefetchw 0x100(%r10)     ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036daf77: movl   $0xf8000041,0x8(%r9)  ;   {metadata({type array char})}
  0x00000000036daf7f: mov    %ecx,0xc(%r9)      ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036daf83: prefetchw 0x140(%r10)     ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036daf8b: prefetchw 0x180(%r10)     ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036daf93: mov    %r11,0x20(%rsp)
  0x00000000036daf98: mov    %r14d,0x28(%rsp)
  0x00000000036daf9d: mov    %edi,0x2c(%rsp)
  0x00000000036dafa1: mov    %ecx,0x30(%rsp)
  0x00000000036dafa5: mov    %rbx,0x38(%rsp)
  0x00000000036dafaa: mov    %r8,0x70(%rsp)
  0x00000000036dafaf: mov    0x98(%rsp),%r10d
  0x00000000036dafb7: cmp    0x30(%rsp),%r10d
  0x00000000036dafbc: mov    0x30(%rsp),%esi
  0x00000000036dafc0: cmovl  0x98(%rsp),%esi    ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@19 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dafc8: mov    %r9,%rbx
  0x00000000036dafcb: add    $0x10,%rbx         ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dafcf: mov    %r9,0x78(%rsp)
  0x00000000036dafd4: mov    0x6c(%rsp),%ebp
  0x00000000036dafd8: lea    (%r12,%rbp,8),%rdx  ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.WinNTFileSystem::normalize@120 (line 126)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dafdc: mov    0x38(%rsp),%r11
  0x00000000036dafe1: shr    $0x3,%r11          ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@67 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dafe5: mov    %r11,%rcx
  0x00000000036dafe8: add    $0xfffffffffffffffe,%rcx  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dafec: cmp    %esi,%r10d
  0x00000000036dafef: jb     0x00000000036dcc9f  ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036daff5: mov    0x30(%rsp),%r10d
  0x00000000036daffa: cmp    %esi,%r10d
  0x00000000036daffd: jb     0x00000000036dcc9f  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db003: test   %esi,%esi
  0x00000000036db005: jle    0x00000000036dccc1  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::isSlash@-1 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db00b: lea    0x10(%r12,%rbp,8),%rcx
  0x00000000036db010: cmp    0x30(%rsp),%esi
  0x00000000036db014: jl     0x00000000036dbf57
  0x00000000036db01a: mov    0x70(%rsp),%r10
  0x00000000036db01f: add    $0xfffffffffffffff0,%r10
  0x00000000036db023: shr    $0x3,%r10          ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db027: mov    %rbx,%rdx
  0x00000000036db02a: mov    %r10,%r8
  0x00000000036db02d: movabs $0x35e2ca0,%r10
  0x00000000036db037: callq  *%r10              ;*ireturn
                                                ; - java.lang.StringBuffer::length@4 (line 163)
                                                ; - java.io.WinNTFileSystem::normalize@120 (line 126)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db03a: mov    0x20(%rsp),%r11
  0x00000000036db03f: mov    0xc(%r11),%esi     ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.WinNTFileSystem::normalize@120 (line 126)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db043: mov    0x78(%rsp),%r8
  0x00000000036db048: mov    %r8,%r10
  0x00000000036db04b: shr    $0x3,%r10          ;*invokespecial normalizePrefix
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db04f: mov    %r10d,0x10(%r11)   ;*ireturn
                                                ; - java.lang.StringBuffer::length@4 (line 163)
                                                ; - java.io.WinNTFileSystem::normalize@120 (line 126)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db053: mov    %esi,%r10d
  0x00000000036db056: inc    %r10d
  0x00000000036db059: mov    %r10d,0xc(%r11)    ;*ireturn
                                                ; - java.lang.StringBuffer::length@4 (line 163)
                                                ; - java.io.WinNTFileSystem::normalize@120 (line 126)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db05d: mov    %r11,%r10
  0x00000000036db060: shr    $0x9,%r10
  0x00000000036db064: mov    $0xf32f000,%r9d
  0x00000000036db06a: mov    %r12b,(%r9,%r10,1)  ;*ireturn
                                                ; - java.lang.StringBuffer::length@4 (line 163)
                                                ; - java.io.WinNTFileSystem::normalize@120 (line 126)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db06e: mov    %r8,%rbp
  0x00000000036db071: mov    0x28(%rsp),%r14d
  0x00000000036db076: mov    0x2c(%rsp),%edi
  0x00000000036db07a: jmpq   0x00000000036dadc4
  0x00000000036db07f: cmp    0x5c(%rsp),%r8d
  0x00000000036db084: jne    0x00000000036da75a  ;*invokevirtual toString
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db08a: mov    %ecx,%edx
  0x00000000036db08c: jmpq   0x00000000036da847
  0x00000000036db091: mov    0xc(%r11),%r9d     ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@98 (line 92)

  0x00000000036db095: mov    0x10(%r11),%r8d
  0x00000000036db099: mov    %r11,0x20(%rsp)
  0x00000000036db09e: mov    %r8,%rdx
  0x00000000036db0a1: shl    $0x3,%rdx          ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@74 (line 90)

  0x00000000036db0a5: xor    %r8d,%r8d
  0x00000000036db0a8: mov    %r11,%rbp
  0x00000000036db0ab: callq  0x00000000035d6620  ; OopMap{rbp=Oop [32]=Oop off=2704}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.StringBuffer::toString@17 (line 669)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {static_call}
  0x00000000036db0b0: mov    %rbp,%r11
  0x00000000036db0b3: mov    %r11,%r10
  0x00000000036db0b6: mov    %rax,%rbp
  0x00000000036db0b9: shr    $0x3,%rbp          ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db0bd: mov    %ebp,0x14(%r11)
  0x00000000036db0c1: shr    $0x9,%r10
  0x00000000036db0c5: mov    $0xf32f000,%r8d
  0x00000000036db0cb: mov    %r12b,(%r8,%r10,1)  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db0cf: jmpq   0x00000000036dab36
  0x00000000036db0d4: mov    %r8d,%ebx
  0x00000000036db0d7: jmp    0x00000000036db0eb
  0x00000000036db0d9: mov    %ecx,%ebx
  0x00000000036db0db: shl    %ebx               ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db0dd: mov    %ebx,%edi
  0x00000000036db0df: sub    %r9d,%edi
  0x00000000036db0e2: inc    %edi
  0x00000000036db0e4: test   %edi,%edi
  0x00000000036db0e6: jl     0x00000000036db0d4  ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db0e8: add    $0x2,%ebx          ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalizePrefix@6 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db0eb: test   %ebx,%ebx
  0x00000000036db0ed: jle    0x00000000036db0fa  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db0ef: mov    $0x7ffffff7,%edi
  0x00000000036db0f4: sub    %ebx,%edi
  0x00000000036db0f6: test   %edi,%edi
  0x00000000036db0f8: jge    0x00000000036db16d
  0x00000000036db0fa: mov    %ecx,0x88(%rsp)
  0x00000000036db101: mov    %edx,0x58(%rsp)
  0x00000000036db105: mov    %r14d,0x2c(%rsp)
  0x00000000036db10a: mov    %r11,0x38(%rsp)
  0x00000000036db10f: rex.W pushq 0x40(%rsp)
  0x00000000036db114: rex.W popq 0x30(%rsp)
  0x00000000036db119: mov    0x68(%rsp),%r10d
  0x00000000036db11e: mov    %r10d,0x28(%rsp)
  0x00000000036db123: mov    0x50(%rsp),%r10
  0x00000000036db128: mov    %r10,0x20(%rsp)    ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@74 (line 90)

  0x00000000036db12d: mov    %r11,%rdx
  0x00000000036db130: data16 xchg %ax,%ax
  0x00000000036db133: callq  0x00000000035d61a0  ; OopMap{rbp=Oop [32]=Oop [56]=Oop [88]=NarrowOop [96]=Oop off=2840}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {optimized virtual_call}
  0x00000000036db138: mov    0x20(%rsp),%r11
  0x00000000036db13d: mov    %r11,0x50(%rsp)
  0x00000000036db142: mov    0x28(%rsp),%r8d
  0x00000000036db147: mov    %r8d,0x68(%rsp)
  0x00000000036db14c: rex.W pushq 0x30(%rsp)
  0x00000000036db151: rex.W popq 0x40(%rsp)
  0x00000000036db156: mov    0x38(%rsp),%r11
  0x00000000036db15b: mov    0x2c(%rsp),%r14d
  0x00000000036db160: mov    %eax,%ebx
  0x00000000036db162: mov    0x58(%rsp),%edx
  0x00000000036db166: mov    0x88(%rsp),%ecx    ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@128 (line 127)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db16d: cmp    $0x80000,%ebx
  0x00000000036db173: ja     0x00000000036dd1f9  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db179: movslq %ebx,%r9           ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db17c: shl    %r9
  0x00000000036db17f: add    $0x17,%r9          ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalizePrefix@6 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db183: mov    %r9,%r10
  0x00000000036db186: and    $0xfffffffffffffff8,%r10  ;*iload
                                                ; - java.io.WinNTFileSystem::normalize@153 (line 132)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db18a: cmp    $0x80000,%ebx
  0x00000000036db190: ja     0x00000000036dc62b
  0x00000000036db196: mov    0x60(%r15),%r13
  0x00000000036db19a: mov    %r13,%r8
  0x00000000036db19d: add    %r10,%r8
  0x00000000036db1a0: cmp    0x70(%r15),%r8
  0x00000000036db1a4: jae    0x00000000036dc62b  ;*new
                                                ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db1aa: mov    %r8,0x60(%r15)     ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db1ae: prefetchw 0xc0(%r8)       ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db1b6: movq   $0x1,0x0(%r13)
  0x00000000036db1be: prefetchw 0x100(%r8)
  0x00000000036db1c6: movl   $0xf8000041,0x8(%r13)  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {metadata({type array char})}
  0x00000000036db1ce: mov    %ebx,0xc(%r13)     ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db1d2: prefetchw 0x140(%r8)
  0x00000000036db1da: prefetchw 0x180(%r8)      ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db1e2: mov    %edx,0x98(%rsp)
  0x00000000036db1e9: mov    %ecx,0x9c(%rsp)
  0x00000000036db1f0: mov    0x9c(%rsp),%ecx
  0x00000000036db1f7: cmp    %ebx,%ecx
  0x00000000036db1f9: mov    %ebx,%esi
  0x00000000036db1fb: cmovl  0x9c(%rsp),%esi    ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalizePrefix@9 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db203: mov    %r13,%rdi
  0x00000000036db206: add    $0x10,%rdi         ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@3 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db20a: mov    0x98(%rsp),%r8d
  0x00000000036db212: lea    (%r12,%r8,8),%rdx  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalize@134 (line 127)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db216: shr    $0x3,%r9           ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db21a: mov    %r9,%rcx
  0x00000000036db21d: add    $0xfffffffffffffffe,%rcx
  0x00000000036db221: mov    0x9c(%rsp),%r8d
  0x00000000036db229: cmp    %esi,%r8d
  0x00000000036db22c: jb     0x00000000036dd201
  0x00000000036db232: cmp    %esi,%ebx
  0x00000000036db234: jb     0x00000000036dd201
  0x00000000036db23a: test   %esi,%esi
  0x00000000036db23c: jle    0x00000000036dd26d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db242: mov    0x98(%rsp),%r8d
  0x00000000036db24a: lea    0x10(%r12,%r8,8),%r8  ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@3 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db24f: cmp    %ebx,%esi
  0x00000000036db251: jl     0x00000000036dc30f  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db257: mov    %r8,%r9
  0x00000000036db25a: mov    %r13,0x28(%rsp)
  0x00000000036db25f: mov    %r14d,0x20(%rsp)
  0x00000000036db264: mov    %r11,%r14
  0x00000000036db267: add    $0xfffffffffffffff0,%r10
  0x00000000036db26b: shr    $0x3,%r10          ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@3 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db26f: mov    %r9,%rcx
  0x00000000036db272: mov    %rdi,%rdx
  0x00000000036db275: mov    %r10,%r8
  0x00000000036db278: movabs $0x35e2ca0,%r10
  0x00000000036db282: callq  *%r10              ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db285: mov    %r14,%r11
  0x00000000036db288: mov    0x20(%rsp),%r14d
  0x00000000036db28d: mov    0x28(%rsp),%r13    ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@67 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db292: mov    0xc(%r11),%r9d     ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalize@134 (line 127)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db296: mov    %r13,%r10
  0x00000000036db299: shr    $0x3,%r10          ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 134)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db29d: mov    %r10d,0x10(%r11)   ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@67 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db2a1: mov    %r9d,%r8d
  0x00000000036db2a4: inc    %r8d               ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalize@134 (line 127)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db2a7: mov    %r11,%r10
  0x00000000036db2aa: shr    $0x9,%r10
  0x00000000036db2ae: mov    $0xf32f000,%ecx
  0x00000000036db2b3: mov    %r12b,(%rcx,%r10,1)  ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@67 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db2b7: mov    %r13,%rbp
  0x00000000036db2ba: jmpq   0x00000000036dacc3  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db2bf: inc    %r10d              ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db2c2: cmp    0x2c(%rsp),%r10d
  0x00000000036db2c7: jl     0x00000000036da9be  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db2cd: cmp    0x28(%rsp),%r10d
  0x00000000036db2d2: jge    0x00000000036dcd98
  0x00000000036db2d8: movzwl 0x10(%r9,%r10,2),%r8d
  0x00000000036db2de: cmp    $0x5c,%r8d
  0x00000000036db2e2: je     0x00000000036db2ee
  0x00000000036db2e4: cmp    $0x2f,%r8d
  0x00000000036db2e8: jne    0x00000000036da9f1
  0x00000000036db2ee: movslq %r10d,%r8
  0x00000000036db2f1: movzwl 0x12(%r9,%r8,2),%ecx
  0x00000000036db2f7: cmp    $0x5c,%ecx
  0x00000000036db2fa: je     0x00000000036dc3b4
  0x00000000036db300: cmp    $0x2f,%ecx
  0x00000000036db303: je     0x00000000036dc3b4
  0x00000000036db309: inc    %r10d              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db30c: jmpq   0x00000000036da9f1
  0x00000000036db311: cmp    $0x1,%ecx
  0x00000000036db314: jle    0x00000000036da764  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db31a: mov    %ebx,%r11d
  0x00000000036db31d: test   %r11d,%r11d
  0x00000000036db320: je     0x00000000036dd4f4  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db326: mov    %r11d,%ebp         ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db329: mov    0x60(%r15),%rax    ;*invokespecial &lt;init&gt;
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db32d: mov    %rax,%r10
  0x00000000036db330: add    $0x18,%r10
  0x00000000036db334: cmp    0x70(%r15),%r10
  0x00000000036db338: jae    0x00000000036dc75d  ;*new
                                                ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db33e: mov    %r10,0x60(%r15)    ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db342: prefetchw 0xc0(%r10)      ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db34a: mov    0x40(%rsp),%r10
  0x00000000036db34f: mov    0xa8(%r10),%r10    ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db356: mov    %r10,(%rax)
  0x00000000036db359: movl   $0xf8001ac1,0x8(%rax)  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {metadata(&apos;java/lang/StringBuffer&apos;)}
  0x00000000036db360: mov    %r12d,0xc(%rax)    ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db364: mov    %r12,0x10(%rax)    ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db368: mov    %rax,%r10          ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db36b: mov    %ebp,%r11d
  0x00000000036db36e: cmp    $0x80000,%r11d
  0x00000000036db375: ja     0x00000000036dc771  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db37b: mov    %r10,%rbp
  0x00000000036db37e: mov    %r11d,0x68(%rsp)   ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db383: mov    0x60(%r15),%r10    ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db387: mov    %r10,%r11
  0x00000000036db38a: mov    0x20(%rsp),%r8
  0x00000000036db38f: add    %r8,%r11
  0x00000000036db392: cmp    0x70(%r15),%r11
  0x00000000036db396: jae    0x00000000036dc779  ;*new
                                                ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db39c: mov    %r11,0x60(%r15)    ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db3a0: mov    %r10,%rdi
  0x00000000036db3a3: add    $0x10,%rdi
  0x00000000036db3a7: movq   $0x1,(%r10)
  0x00000000036db3ae: prefetchw 0xc0(%r11)      ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db3b6: movl   $0xf8000041,0x8(%r10)  ;   {metadata({type array char})}
  0x00000000036db3be: mov    0x68(%rsp),%r9d
  0x00000000036db3c3: mov    %r9d,0xc(%r10)
  0x00000000036db3c7: mov    0x38(%rsp),%rcx
  0x00000000036db3cc: xor    %rax,%rax
  0x00000000036db3cf: shl    $0x3,%rcx
  0x00000000036db3d3: rep rex.W stos %al,%es:(%rdi)
  0x00000000036db3d6: prefetchw 0x100(%r11)     ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db3de: prefetchw 0x140(%r11)     ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db3e6: prefetchw 0x180(%r11)     ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db3ee: mov    %r10,%r8
  0x00000000036db3f1: mov    %rbp,%r11
  0x00000000036db3f4: mov    %rbp,%r10
  0x00000000036db3f7: shr    $0x3,%r8
  0x00000000036db3fb: mov    %r8d,0x10(%rbp)    ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalizePrefix@62 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db3ff: shr    $0x9,%r10
  0x00000000036db403: mov    $0xf32f000,%r8d
  0x00000000036db409: mov    %r12b,(%r8,%r10,1)  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db40d: xor    %r10d,%r10d
  0x00000000036db410: test   %r10d,%r10d
  0x00000000036db413: jl     0x00000000036dd3b7
  0x00000000036db419: cmp    0x68(%rsp),%r10d
  0x00000000036db41e: jge    0x00000000036dd41d  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db424: mov    0x30(%rsp),%rbx
  0x00000000036db429: movzwl 0x10(%rbx,%r10,2),%r9d  ;*arraylength
                                                ; - java.util.Arrays::copyOf@9 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db42f: cmp    $0x5c,%r9d
  0x00000000036db433: je     0x00000000036dbeb8
  0x00000000036db439: cmp    $0x2f,%r9d
  0x00000000036db43d: je     0x00000000036dbeb8  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db443: mov    0x68(%rsp),%r8d
  0x00000000036db448: sub    %r10d,%r8d
  0x00000000036db44b: cmp    $0x2,%r8d
  0x00000000036db44f: jl     0x00000000036db500  ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@185 (line 137)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db455: test   %r10d,%r10d
  0x00000000036db458: jl     0x00000000036dd509
  0x00000000036db45e: cmp    0x68(%rsp),%r10d
  0x00000000036db463: jge    0x00000000036dd5ad  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db469: cmp    0x68(%rsp),%r10d
  0x00000000036db46e: jae    0x00000000036dd44d  ;*invokespecial normalizePrefix
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db474: movzwl 0x10(%rbx,%r10,2),%ecx  ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalizePrefix@16 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db47a: cmp    $0x61,%ecx
  0x00000000036db47d: jge    0x00000000036dd5dd
  0x00000000036db483: cmp    $0x41,%ecx
  0x00000000036db486: jl     0x00000000036dd53d  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db48c: cmp    $0x5a,%ecx
  0x00000000036db48f: jg     0x00000000036dd615  ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db495: mov    %r10d,%ebp
  0x00000000036db498: inc    %ebp               ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalizePrefix@16 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db49a: test   %ebp,%ebp
  0x00000000036db49c: jl     0x00000000036dd575
  0x00000000036db4a2: cmp    0x68(%rsp),%ebp
  0x00000000036db4a6: jge    0x00000000036dd649
  0x00000000036db4ac: cmp    0x68(%rsp),%ebp
  0x00000000036db4b0: jae    0x00000000036dd471  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db4b6: movslq %r10d,%r8
  0x00000000036db4b9: movzwl 0x12(%rbx,%r8,2),%r9d
  0x00000000036db4bf: cmp    $0x3a,%r9d
  0x00000000036db4c3: jne    0x00000000036db500  ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@19 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db4c5: mov    %r10d,0x20(%rsp)
  0x00000000036db4ca: mov    %r11,%rbp
  0x00000000036db4cd: mov    %rbp,%rdx
  0x00000000036db4d0: mov    %ecx,%r8d
  0x00000000036db4d3: callq  0x00000000035d61a0  ; OopMap{rbp=Oop [80]=Oop [96]=Oop off=3768}
                                                ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {optimized virtual_call}
  0x00000000036db4d8: mov    %rbp,%rdx
  0x00000000036db4db: mov    $0x3a,%r8d
  0x00000000036db4e1: xchg   %ax,%ax
  0x00000000036db4e3: callq  0x00000000035d61a0  ; OopMap{rbp=Oop [80]=Oop [96]=Oop off=3784}
                                                ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {optimized virtual_call}
  0x00000000036db4e8: mov    0x20(%rsp),%r8d
  0x00000000036db4ed: add    $0x2,%r8d          ;*iinc
                                                ; - java.io.WinNTFileSystem::normalizePrefix@79 (line 188)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db4f1: mov    0x68(%rsp),%r10d
  0x00000000036db4f6: mov    %r10d,0x78(%rsp)
  0x00000000036db4fb: mov    %rbp,%r11
  0x00000000036db4fe: jmp    0x00000000036db537  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db500: mov    0x68(%rsp),%r8d
  0x00000000036db505: mov    %r8d,0x78(%rsp)
  0x00000000036db50a: cmp    $0x2,%r8d
  0x00000000036db50e: jl     0x00000000036db534  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 145)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db510: mov    0x58(%rsp),%r8d
  0x00000000036db515: movzwl 0x10(%r12,%r8,8),%r9d  ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@99 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db51b: cmp    $0x5c,%r9d
  0x00000000036db51f: je     0x00000000036dbf1c  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db525: cmp    $0x2f,%r9d
  0x00000000036db529: je     0x00000000036dbf1c  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db52f: xor    %r8d,%r8d
  0x00000000036db532: jmp    0x00000000036db537
  0x00000000036db534: xor    %r8d,%r8d          ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@16 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db537: cmp    0x78(%rsp),%r8d
  0x00000000036db53c: jl     0x00000000036db877  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 145)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db542: mov    0x40(%rsp),%r14    ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalize@93 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db547: mov    (%r11),%rax
  0x00000000036db54a: mov    %rax,%r10
  0x00000000036db54d: and    $0x7,%r10
  0x00000000036db551: cmp    $0x5,%r10
  0x00000000036db555: jne    0x00000000036dd2da
  0x00000000036db55b: mov    0xa8(%r14),%r10    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db562: mov    %r10,%r8           ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db565: or     %r15,%r8
  0x00000000036db568: mov    %r8,%r9
  0x00000000036db56b: xor    %rax,%r9
  0x00000000036db56e: test   $0xffffffffffffff87,%r9
  0x00000000036db575: jne    0x00000000036dd34c  ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@64 (line 120)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db57b: mov    0x14(%r11),%ebp    ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db57f: test   %ebp,%ebp
  0x00000000036db581: je     0x00000000036dbbeb
  0x00000000036db587: mov    0x60(%r15),%rbx
  0x00000000036db58b: mov    %rbx,%r10
  0x00000000036db58e: add    $0x18,%r10
  0x00000000036db592: cmp    0x70(%r15),%r10
  0x00000000036db596: jae    0x00000000036dc798  ;*new
                                                ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db59c: mov    %r10,0x60(%r15)
  0x00000000036db5a0: prefetchw 0xc0(%r10)
  0x00000000036db5a8: mov    0x48(%rsp),%r10
  0x00000000036db5ad: mov    0xa8(%r10),%r10
  0x00000000036db5b4: mov    %r10,(%rbx)
  0x00000000036db5b7: movl   $0xf80002da,0x8(%rbx)  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000000036db5be: mov    %r12d,0xc(%rbx)
  0x00000000036db5c2: mov    %r12,0x10(%rbx)    ;*invokespecial &lt;init&gt;
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db5c6: mov    %ebp,0xc(%rbx)
  0x00000000036db5c9: mov    %rbx,%r10
  0x00000000036db5cc: shr    $0x9,%r10
  0x00000000036db5d0: mov    $0xf32f000,%r8d
  0x00000000036db5d6: mov    %r12b,(%r8,%r10,1)  ;*isub
                                                ; - java.io.WinNTFileSystem::normalizePrefix@31 (line 179)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db5da: mov    0xa0(%rsp),%r10
  0x00000000036db5e2: and    (%r11),%r10
  0x00000000036db5e5: cmp    $0x5,%r10
  0x00000000036db5e9: je     0x00000000036dac0a  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db5ef: lea    0xb0(%rsp),%rax    ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db5f7: cmpq   $0x0,(%rax)
  0x00000000036db5fe: je     0x00000000036db678
  0x00000000036db604: mov    (%r11),%r10
  0x00000000036db607: test   $0x2,%r10
  0x00000000036db60e: je     0x00000000036db670
  0x00000000036db610: mov    0x16(%r10),%rax
  0x00000000036db614: xor    %r15,%rax
  0x00000000036db617: or     0x26(%r10),%rax
  0x00000000036db61b: jne    0x00000000036db678
  0x00000000036db61d: mov    0x36(%r10),%rax
  0x00000000036db621: or     0x3e(%r10),%rax
  0x00000000036db625: jne    0x00000000036db631
  0x00000000036db627: movq   $0x0,0x16(%r10)
  0x00000000036db62f: jmp    0x00000000036db678
  0x00000000036db631: cmpq   $0x0,0x46(%r10)
  0x00000000036db639: je     0x00000000036db664
  0x00000000036db63b: movq   $0x0,0x16(%r10)
  0x00000000036db643: lock addl $0x0,(%rsp)
  0x00000000036db648: cmpq   $0x0,0x46(%r10)
  0x00000000036db650: jne    0x00000000036db669
  0x00000000036db652: movabs $0x0,%rax
  0x00000000036db65c: lock cmpxchg %r15,0x16(%r10)
  0x00000000036db662: jne    0x00000000036db669
  0x00000000036db664: or     $0x1,%eax
  0x00000000036db667: jmp    0x00000000036db678
  0x00000000036db669: test   $0x0,%eax
  0x00000000036db66e: jmp    0x00000000036db678
  0x00000000036db670: mov    (%rax),%r10
  0x00000000036db673: lock cmpxchg %r10,(%r11)
  0x00000000036db678: je     0x00000000036dac0a  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db67e: mov    %r11,%rcx
  0x00000000036db681: lea    0xb0(%rsp),%rdx    ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db689: movabs $0x54fdce00,%r10
  0x00000000036db693: callq  *%r10              ;*invokespecial &lt;init&gt;
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db696: jmpq   0x00000000036dac0a  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db69b: cmp    0x78(%rsp),%r10d
  0x00000000036db6a0: jge    0x00000000036db6da
  0x00000000036db6a2: test   %r10d,%r10d
  0x00000000036db6a5: jl     0x00000000036dd180
  0x00000000036db6ab: cmp    %r9d,%r10d
  0x00000000036db6ae: jge    0x00000000036dd1a9
  0x00000000036db6b4: cmp    %r9d,%r10d
  0x00000000036db6b7: jae    0x00000000036dce0d  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db6bd: movslq %r8d,%r8
  0x00000000036db6c0: movzwl 0x12(%rdx,%r8,2),%r8d  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@99 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db6c6: cmp    $0x5c,%r8d
  0x00000000036db6ca: je     0x00000000036dce31  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db6d0: cmp    $0x2f,%r8d
  0x00000000036db6d4: je     0x00000000036dce31  ;*iinc
                                                ; - java.io.WinNTFileSystem::normalize@70 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db6da: cmp    0x78(%rsp),%r10d
  0x00000000036db6df: je     0x00000000036dbfea  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db6e5: mov    (%r11),%rax
  0x00000000036db6e8: mov    %rax,%r8
  0x00000000036db6eb: and    $0x7,%r8
  0x00000000036db6ef: cmp    $0x5,%r8
  0x00000000036db6f3: jne    0x00000000036dce8e  ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db6f9: mov    %rdi,%r8           ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db6fc: or     %r15,%r8           ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db6ff: mov    %r8,%r9
  0x00000000036db702: xor    %rax,%r9
  0x00000000036db705: test   $0xffffffffffffff87,%r9
  0x00000000036db70c: jne    0x00000000036dcf29  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db712: mov    0x10(%r11),%ecx    ;*new  ; - java.io.WinNTFileSystem::normalize@19 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db716: mov    %r12d,0x14(%r11)   ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db71a: mov    0xc(%r12,%rcx,8),%ebp  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ; implicit exception: dispatches to 0x00000000036ddaa5
  0x00000000036db71f: mov    0xc(%r11),%r9d     ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@33 (line 179)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db723: mov    %r9d,%edx
  0x00000000036db726: sub    %ebp,%edx
  0x00000000036db728: mov    %rcx,%rdi
  0x00000000036db72b: shl    $0x3,%rdi          ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@103 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db72f: inc    %edx
  0x00000000036db731: mov    %r9d,%r8d
  0x00000000036db734: inc    %r8d               ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db737: test   %edx,%edx
  0x00000000036db739: jg     0x00000000036dbcd2
  0x00000000036db73f: mov    %r8d,0xc(%r11)
  0x00000000036db743: mov    0xc(%rdi),%ecx     ; implicit exception: dispatches to 0x00000000036ddab5
  0x00000000036db746: cmp    %ecx,%r9d
  0x00000000036db749: jae    0x00000000036dce49  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db74f: mov    0x5c(%rsp),%r8d
  0x00000000036db754: mov    %r8w,0x10(%rdi,%r9,2)  ;*iload_1
                                                ; - java.lang.String::charAt@0 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db75a: mov    $0x7,%r9d
  0x00000000036db760: and    (%r11),%r9
  0x00000000036db763: cmp    $0x5,%r9
  0x00000000036db767: je     0x00000000036db85f  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db76d: lea    0xb0(%rsp),%rax    ;*iload_1
                                                ; - java.io.WinNTFileSystem::isLetter@0 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db775: cmpq   $0x0,(%rax)
  0x00000000036db77c: je     0x00000000036db7f6
  0x00000000036db782: mov    (%r11),%r9
  0x00000000036db785: test   $0x2,%r9
  0x00000000036db78c: je     0x00000000036db7ee
  0x00000000036db78e: mov    0x16(%r9),%rax
  0x00000000036db792: xor    %r15,%rax
  0x00000000036db795: or     0x26(%r9),%rax
  0x00000000036db799: jne    0x00000000036db7f6
  0x00000000036db79b: mov    0x36(%r9),%rax
  0x00000000036db79f: or     0x3e(%r9),%rax
  0x00000000036db7a3: jne    0x00000000036db7af
  0x00000000036db7a5: movq   $0x0,0x16(%r9)
  0x00000000036db7ad: jmp    0x00000000036db7f6
  0x00000000036db7af: cmpq   $0x0,0x46(%r9)
  0x00000000036db7b7: je     0x00000000036db7e2
  0x00000000036db7b9: movq   $0x0,0x16(%r9)
  0x00000000036db7c1: lock addl $0x0,(%rsp)
  0x00000000036db7c6: cmpq   $0x0,0x46(%r9)
  0x00000000036db7ce: jne    0x00000000036db7e7
  0x00000000036db7d0: movabs $0x0,%rax
  0x00000000036db7da: lock cmpxchg %r15,0x16(%r9)
  0x00000000036db7e0: jne    0x00000000036db7e7
  0x00000000036db7e2: or     $0x1,%eax
  0x00000000036db7e5: jmp    0x00000000036db7f6
  0x00000000036db7e7: test   $0x0,%eax
  0x00000000036db7ec: jmp    0x00000000036db7f6
  0x00000000036db7ee: mov    (%rax),%r9
  0x00000000036db7f1: lock cmpxchg %r9,(%r11)
  0x00000000036db7f6: je     0x00000000036db85f  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 103)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db7f8: mov    %r10d,0x28(%rsp)
  0x00000000036db7fd: mov    %r11,0x20(%rsp)
  0x00000000036db802: mov    %r11,%rcx
  0x00000000036db805: lea    0xb0(%rsp),%rdx    ;*iload_1
                                                ; - java.io.WinNTFileSystem::isLetter@0 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db80d: movabs $0x54fdce00,%r10
  0x00000000036db817: callq  *%r10              ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db81a: mov    0x5c(%rsp),%r8d
  0x00000000036db81f: mov    0x20(%rsp),%r11
  0x00000000036db824: mov    0x28(%rsp),%r10d
  0x00000000036db829: jmp    0x00000000036db85f
  0x00000000036db82b: nopl   0x0(%rax,%rax,1)
  0x00000000036db830: mov    %r8d,0xc(%r11)     ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db834: mov    0xc(%rbp),%r8d
  0x00000000036db838: cmp    %r8d,%r13d
  0x00000000036db83b: jae    0x00000000036dc7b9  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db841: mov    %si,0x10(%rbp,%r13,2)  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db847: mov    $0x7,%r8d
  0x00000000036db84d: and    (%r11),%r8
  0x00000000036db850: cmp    $0x5,%r8
  0x00000000036db854: jne    0x00000000036dc8c0  ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db85a: mov    0x5c(%rsp),%r8d    ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@90 (line 191)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db85f: cmp    0x78(%rsp),%r10d
  0x00000000036db864: jge    0x00000000036db547  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db86a: mov    %r8d,0x5c(%rsp)
  0x00000000036db86f: mov    %r14,0x40(%rsp)
  0x00000000036db874: mov    %r10d,%r8d         ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@16 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db877: mov    %r8d,%r10d
  0x00000000036db87a: inc    %r10d              ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalizePrefix@16 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db87d: test   %r8d,%r8d
  0x00000000036db880: jl     0x00000000036dca63  ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@90 (line 191)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db886: mov    0x50(%rsp),%r9
  0x00000000036db88b: mov    0xc(%r9),%ecx      ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@84 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db88f: mov    0xc(%r12,%rcx,8),%r9d  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ; implicit exception: dispatches to 0x00000000036dda71
  0x00000000036db894: cmp    %r9d,%r8d
  0x00000000036db897: jge    0x00000000036dca7d
  0x00000000036db89d: cmp    %r9d,%r8d
  0x00000000036db8a0: jae    0x00000000036dc73d  ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@90 (line 191)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db8a6: mov    0x40(%rsp),%r14
  0x00000000036db8ab: mov    0xa8(%r14),%rdi    ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db8b2: lea    (%r12,%rcx,8),%rdx
  0x00000000036db8b6: movzwl 0x10(%rdx,%r8,2),%esi  ;*invokespecial isLetter
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db8bc: cmp    $0x5c,%esi
  0x00000000036db8bf: je     0x00000000036db69b
  0x00000000036db8c5: cmp    $0x2f,%esi
  0x00000000036db8c8: je     0x00000000036db69b  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@99 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db8ce: mov    (%r11),%rax
  0x00000000036db8d1: mov    %rax,%r8
  0x00000000036db8d4: and    $0x7,%r8
  0x00000000036db8d8: cmp    $0x5,%r8
  0x00000000036db8dc: jne    0x00000000036dc7ee  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db8e2: mov    %rdi,%r8           ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db8e5: or     %r15,%r8
  0x00000000036db8e8: mov    %r8,%r9
  0x00000000036db8eb: xor    %rax,%r9
  0x00000000036db8ee: test   $0xffffffffffffff87,%r9
  0x00000000036db8f5: jne    0x00000000036dc891  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::isSlash@-1 (line 53)
                                                ; - java.io.WinNTFileSystem::normalize@100 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db8fb: mov    0x10(%r11),%edi    ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@8 (line 104)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db8ff: mov    %r12d,0x14(%r11)   ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db903: mov    0xc(%r12,%rdi,8),%ebx  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ; implicit exception: dispatches to 0x00000000036dda7d
  0x00000000036db908: mov    0xc(%r11),%r13d    ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db90c: mov    %r13d,%ecx
  0x00000000036db90f: sub    %ebx,%ecx
  0x00000000036db911: mov    %rdi,%rbp
  0x00000000036db914: shl    $0x3,%rbp          ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)
                                                ; - java.io.WinNTFileSystem::normalize@100 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db918: inc    %ecx
  0x00000000036db91a: mov    %r13d,%r8d
  0x00000000036db91d: inc    %r8d               ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db920: test   %ecx,%ecx
  0x00000000036db922: jle    0x00000000036db830  ;*getfield slash
                                                ; - java.io.WinNTFileSystem::normalize@14 (line 106)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db928: mov    %ebx,%r9d
  0x00000000036db92b: shl    %r9d               ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db92e: mov    %r9d,%ecx
  0x00000000036db931: sub    %r13d,%ecx
  0x00000000036db934: inc    %ecx
  0x00000000036db936: test   %ecx,%ecx
  0x00000000036db938: jge    0x00000000036dbb67  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db93e: mov    %r8d,%r9d          ;*ifne
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 103)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db941: test   %r9d,%r9d
  0x00000000036db944: jle    0x00000000036db952  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db946: mov    $0x7ffffff7,%ecx
  0x00000000036db94b: sub    %r9d,%ecx
  0x00000000036db94e: test   %ecx,%ecx
  0x00000000036db950: jge    0x00000000036db9c5
  0x00000000036db952: mov    %ebx,0x88(%rsp)
  0x00000000036db959: mov    %edi,0x58(%rsp)
  0x00000000036db95d: mov    %esi,0x40(%rsp)
  0x00000000036db961: mov    %r10d,0x2c(%rsp)
  0x00000000036db966: mov    %r11,0x38(%rsp)
  0x00000000036db96b: mov    %r14,0x30(%rsp)
  0x00000000036db970: mov    0x78(%rsp),%r11d
  0x00000000036db975: mov    %r11d,0x28(%rsp)
  0x00000000036db97a: mov    0x50(%rsp),%r10
  0x00000000036db97f: mov    %r10,0x20(%rsp)    ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db984: mov    0x38(%rsp),%rdx
  0x00000000036db989: xchg   %ax,%ax
  0x00000000036db98b: callq  0x00000000035d61a0  ; OopMap{rbp=Oop [32]=Oop [56]=Oop [88]=NarrowOop [96]=Oop off=4976}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {optimized virtual_call}
  0x00000000036db990: mov    0x20(%rsp),%r10
  0x00000000036db995: mov    %r10,0x50(%rsp)
  0x00000000036db99a: mov    0x28(%rsp),%r10d
  0x00000000036db99f: mov    %r10d,0x78(%rsp)
  0x00000000036db9a4: mov    0x30(%rsp),%r14
  0x00000000036db9a9: mov    0x38(%rsp),%r11
  0x00000000036db9ae: mov    0x2c(%rsp),%r10d
  0x00000000036db9b3: mov    0x40(%rsp),%esi
  0x00000000036db9b7: mov    %eax,%r9d
  0x00000000036db9ba: mov    0x58(%rsp),%edi
  0x00000000036db9be: mov    0x88(%rsp),%ebx    ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db9c5: cmp    $0x80000,%r9d
  0x00000000036db9cc: ja     0x00000000036dd37b  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db9d2: movslq %r9d,%rdx          ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db9d5: shl    %rdx
  0x00000000036db9d8: add    $0x17,%rdx         ;*ifne
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 103)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036db9dc: mov    %rdx,%r8
  0x00000000036db9df: and    $0xfffffffffffffff8,%r8  ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalize@100 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db9e3: cmp    $0x80000,%r9d
  0x00000000036db9ea: ja     0x00000000036dc9e1  ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db9f0: mov    %ebx,0x9c(%rsp)
  0x00000000036db9f7: mov    %edi,0x98(%rsp)    ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036db9fe: mov    0x60(%r15),%rbx    ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dba02: mov    %rbx,%rcx
  0x00000000036dba05: add    %r8,%rcx
  0x00000000036dba08: cmp    0x70(%r15),%rcx
  0x00000000036dba0c: jae    0x00000000036dc9ef  ;*new
                                                ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dba12: mov    %rcx,0x60(%r15)    ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dba16: prefetchw 0xc0(%rcx)      ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dba1d: movq   $0x1,(%rbx)
  0x00000000036dba24: prefetchw 0x100(%rcx)     ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dba2b: movl   $0xf8000041,0x8(%rbx)  ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {metadata({type array char})}
  0x00000000036dba32: mov    %r9d,0xc(%rbx)     ;*iload_1
                                                ; - java.util.Arrays::copyOf@0 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dba36: prefetchw 0x140(%rcx)     ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dba3d: prefetchw 0x180(%rcx)     ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dba44: mov    0x50(%rsp),%rcx
  0x00000000036dba49: mov    %rcx,0x20(%rsp)
  0x00000000036dba4e: mov    0x78(%rsp),%ecx
  0x00000000036dba52: mov    %ecx,0x28(%rsp)
  0x00000000036dba56: mov    %r14,0x30(%rsp)
  0x00000000036dba5b: mov    %r11,0x38(%rsp)
  0x00000000036dba60: mov    %r10d,0x2c(%rsp)
  0x00000000036dba65: mov    %esi,0x40(%rsp)
  0x00000000036dba69: mov    %r9d,0x44(%rsp)
  0x00000000036dba6e: mov    %rdx,0x68(%rsp)
  0x00000000036dba73: mov    %r8,0x70(%rsp)
  0x00000000036dba78: mov    0x9c(%rsp),%r11d
  0x00000000036dba80: cmp    0x44(%rsp),%r11d
  0x00000000036dba85: mov    0x44(%rsp),%esi
  0x00000000036dba89: cmovl  0x9c(%rsp),%esi    ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dba91: mov    %rbx,%r10
  0x00000000036dba94: add    $0x10,%r10         ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dba98: mov    %r10,%r13
  0x00000000036dba9b: mov    %rbx,%rbp
  0x00000000036dba9e: mov    0x98(%rsp),%r8d
  0x00000000036dbaa6: lea    (%r12,%r8,8),%rdx  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)
                                                ; - java.io.WinNTFileSystem::normalize@100 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dbaaa: mov    0x68(%rsp),%r10
  0x00000000036dbaaf: shr    $0x3,%r10          ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbab3: mov    %r10,%r9
  0x00000000036dbab6: mov    %r10,%rcx
  0x00000000036dbab9: add    $0xfffffffffffffffe,%rcx
  0x00000000036dbabd: cmp    %esi,%r11d
  0x00000000036dbac0: jb     0x00000000036dd383
  0x00000000036dbac6: mov    0x44(%rsp),%r10d
  0x00000000036dbacb: cmp    %esi,%r10d
  0x00000000036dbace: jb     0x00000000036dd383  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbad4: test   %esi,%esi
  0x00000000036dbad6: jle    0x00000000036dd3a5  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbadc: lea    0x10(%r12,%r8,8),%r11  ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbae1: cmp    0x44(%rsp),%esi
  0x00000000036dbae5: jl     0x00000000036dc436  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbaeb: mov    0x70(%rsp),%r10
  0x00000000036dbaf0: add    $0xfffffffffffffff0,%r10
  0x00000000036dbaf4: shr    $0x3,%r10          ;*iinc
                                                ; - java.io.WinNTFileSystem::normalizePrefix@79 (line 188)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbaf8: mov    %r11,%rcx
  0x00000000036dbafb: mov    %r13,%rdx
  0x00000000036dbafe: mov    %r10,%r8
  0x00000000036dbb01: movabs $0x35e2ca0,%r10
  0x00000000036dbb0b: callq  *%r10              ;*ireturn
                                                ; - java.io.WinNTFileSystem::isSlash@17 (line 53)
                                                ; - java.io.WinNTFileSystem::normalize@100 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dbb0e: mov    0x38(%rsp),%r11
  0x00000000036dbb13: mov    0xc(%r11),%r13d    ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbb17: mov    %rbp,%r9
  0x00000000036dbb1a: mov    %r9,%r8
  0x00000000036dbb1d: shr    $0x3,%r8           ;*new  ; - java.io.WinNTFileSystem::normalize@19 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbb21: mov    %r8d,0x10(%r11)    ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@103 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dbb25: mov    %r13d,%r8d
  0x00000000036dbb28: inc    %r8d
  0x00000000036dbb2b: mov    %r8d,0xc(%r11)     ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbb2f: mov    %r11,%r10
  0x00000000036dbb32: shr    $0x9,%r10
  0x00000000036dbb36: mov    $0xf32f000,%r8d
  0x00000000036dbb3c: mov    %r12b,(%r8,%r10,1)  ;*goto
                                                ; - java.io.WinNTFileSystem::isSlash@13 (line 53)
                                                ; - java.io.WinNTFileSystem::normalize@100 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dbb40: mov    0x20(%rsp),%r10
  0x00000000036dbb45: mov    %r10,0x50(%rsp)
  0x00000000036dbb4a: mov    0x28(%rsp),%r8d
  0x00000000036dbb4f: mov    %r8d,0x78(%rsp)
  0x00000000036dbb54: mov    0x30(%rsp),%r14
  0x00000000036dbb59: mov    0x2c(%rsp),%r10d
  0x00000000036dbb5e: mov    0x40(%rsp),%esi
  0x00000000036dbb62: jmpq   0x00000000036db834
  0x00000000036dbb67: add    $0x2,%r9d          ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbb6b: jmpq   0x00000000036db941
  0x00000000036dbb70: cmp    0x5c(%rsp),%r10d
  0x00000000036dbb75: jne    0x00000000036dabd2  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbb7b: jmpq   0x00000000036da84f  ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dbb80: mov    0x68(%rsp),%r10d
  0x00000000036dbb85: cmp    $0x1,%r10d
  0x00000000036dbb89: jle    0x00000000036dd3ed
  0x00000000036dbb8f: cmp    $0x1,%r10d
  0x00000000036dbb93: jbe    0x00000000036dd2b1  ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dbb99: movzwl 0x12(%r12,%r8,8),%r8d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbb9f: cmp    $0x5c,%r8d
  0x00000000036dbba3: je     0x00000000036dbe94  ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@15 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbba9: cmp    $0x2f,%r8d
  0x00000000036dbbad: je     0x00000000036dbe94  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 134)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dbbb3: xor    %r8d,%r8d
  0x00000000036dbbb6: jmpq   0x00000000036daae6
  0x00000000036dbbbb: cmp    0x5c(%rsp),%r8d
  0x00000000036dbbc0: je     0x00000000036dd685  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbbc6: mov    %ecx,%edx
  0x00000000036dbbc8: jmpq   0x00000000036da8c5
  0x00000000036dbbcd: test   %r8d,%r8d
  0x00000000036dbbd0: jne    0x00000000036dac07  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbbd6: xor    %ebp,%ebp
  0x00000000036dbbd8: jmpq   0x00000000036dd291
  0x00000000036dbbdd: cmp    $0x1,%ecx
  0x00000000036dbbe0: jle    0x00000000036dabdb  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbbe6: jmpq   0x00000000036db31a
  0x00000000036dbbeb: mov    0xc(%r11),%r9d
  0x00000000036dbbef: mov    0x10(%r11),%r10d
  0x00000000036dbbf3: mov    %r11,0x20(%rsp)
  0x00000000036dbbf8: mov    %r10,%rdx
  0x00000000036dbbfb: shl    $0x3,%rdx          ;*ifne
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 103)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbbff: xor    %r8d,%r8d
  0x00000000036dbc02: mov    %r11,0x28(%rsp)
  0x00000000036dbc07: callq  0x00000000035d6620  ; OopMap{[32]=Oop [40]=Oop off=5612}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.StringBuffer::toString@17 (line 669)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {static_call}
  0x00000000036dbc0c: mov    0x20(%rsp),%r11
  0x00000000036dbc11: mov    %r11,%r10
  0x00000000036dbc14: mov    %rax,%rbp
  0x00000000036dbc17: shr    $0x3,%rbp          ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbc1b: mov    %ebp,0x14(%r11)
  0x00000000036dbc1f: shr    $0x9,%r10
  0x00000000036dbc23: mov    $0xf32f000,%r8d
  0x00000000036dbc29: mov    %r12b,(%r8,%r10,1)  ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@64 (line 120)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dbc2d: jmpq   0x00000000036db587
  0x00000000036dbc32: mov    (%r11),%rax
  0x00000000036dbc35: mov    %rax,%r10
  0x00000000036dbc38: and    $0x7,%r10
  0x00000000036dbc3c: cmp    $0x5,%r10
  0x00000000036dbc40: jne    0x00000000036dd691  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dbc46: mov    %rdx,%r10          ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dbc49: or     %r15,%r10
  0x00000000036dbc4c: mov    %r10,%r8
  0x00000000036dbc4f: xor    %rax,%r8           ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dbc52: test   $0xffffffffffffff87,%r8
  0x00000000036dbc59: jne    0x00000000036dd7c5  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbc5f: mov    0xc(%r11),%ebp     ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 82)

  0x00000000036dbc63: mov    $0x7,%r10d
  0x00000000036dbc69: and    (%r11),%r10
  0x00000000036dbc6c: cmp    $0x5,%r10
  0x00000000036dbc70: jne    0x00000000036dd713  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dbc76: cmp    $0x2,%ebp
  0x00000000036dbc79: je     0x00000000036dbfa2
  0x00000000036dbc7f: test   %ebp,%ebp
  0x00000000036dbc81: je     0x00000000036dbfcb
  0x00000000036dbc87: cmp    $0x1,%ebp
  0x00000000036dbc8a: jne    0x00000000036daaf1  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@68 (line 90)

  0x00000000036dbc90: mov    %r11,0x20(%rsp)    ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dbc95: mov    %r11,%rdx
  0x00000000036dbc98: xor    %r8d,%r8d
  0x00000000036dbc9b: callq  0x00000000035d61a0  ; OopMap{[32]=Oop [96]=Oop off=5760}
                                                ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalize@179 (line 137)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {optimized virtual_call}
  0x00000000036dbca0: mov    0x60(%rsp),%rdx
  0x00000000036dbca5: mov    %eax,%r8d
  0x00000000036dbca8: data16 xchg %ax,%ax
  0x00000000036dbcab: callq  0x00000000035d61a0  ; OopMap{[32]=Oop off=5776}
                                                ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalize@182 (line 137)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {optimized virtual_call}
  0x00000000036dbcb0: test   %eax,%eax
  0x00000000036dbcb2: je     0x00000000036dc42c  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@68 (line 90)

  0x00000000036dbcb8: mov    0x20(%rsp),%rdx
  0x00000000036dbcbd: mov    0x5c(%rsp),%r8d
  0x00000000036dbcc2: nop
  0x00000000036dbcc3: callq  0x00000000035d61a0  ; OopMap{[32]=Oop off=5800}
                                                ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 145)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {optimized virtual_call}
  0x00000000036dbcc8: mov    0x20(%rsp),%r11
  0x00000000036dbccd: jmpq   0x00000000036daaf1
  0x00000000036dbcd2: mov    %ebp,%ebx
  0x00000000036dbcd4: shl    %ebx               ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@90 (line 191)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbcd6: mov    %ebx,%edx
  0x00000000036dbcd8: sub    %r9d,%edx
  0x00000000036dbcdb: inc    %edx
  0x00000000036dbcdd: test   %edx,%edx
  0x00000000036dbcdf: jge    0x00000000036dbe8c  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbce5: mov    %r8d,%ebx          ;*new  ; - java.io.WinNTFileSystem::normalize@19 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbce8: test   %ebx,%ebx
  0x00000000036dbcea: jle    0x00000000036dbcf7  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbcec: mov    $0x7ffffff7,%edx
  0x00000000036dbcf1: sub    %ebx,%edx
  0x00000000036dbcf3: test   %edx,%edx
  0x00000000036dbcf5: jge    0x00000000036dbd61  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbcf7: mov    %ecx,0x88(%rsp)
  0x00000000036dbcfe: mov    %rdi,0x40(%rsp)
  0x00000000036dbd03: mov    %r10d,0x2c(%rsp)
  0x00000000036dbd08: mov    %r11,0x38(%rsp)
  0x00000000036dbd0d: mov    %r14,0x30(%rsp)
  0x00000000036dbd12: mov    0x78(%rsp),%r11d
  0x00000000036dbd17: mov    %r11d,0x28(%rsp)
  0x00000000036dbd1c: mov    0x50(%rsp),%r10
  0x00000000036dbd21: mov    %r10,0x20(%rsp)    ;*if_icmple
                                                ; - java.io.WinNTFileSystem::normalize@104 (line 92)

  0x00000000036dbd26: mov    0x38(%rsp),%rdx
  0x00000000036dbd2b: callq  0x00000000035d61a0  ; OopMap{[32]=Oop [56]=Oop [64]=Oop [96]=Oop [136]=NarrowOop off=5904}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {optimized virtual_call}
  0x00000000036dbd30: mov    0x20(%rsp),%r10
  0x00000000036dbd35: mov    %r10,0x50(%rsp)
  0x00000000036dbd3a: mov    0x28(%rsp),%r10d
  0x00000000036dbd3f: mov    %r10d,0x78(%rsp)
  0x00000000036dbd44: mov    0x30(%rsp),%r14
  0x00000000036dbd49: mov    0x38(%rsp),%r11
  0x00000000036dbd4e: mov    0x2c(%rsp),%r10d
  0x00000000036dbd53: mov    0x40(%rsp),%rdi
  0x00000000036dbd58: mov    %eax,%ebx
  0x00000000036dbd5a: mov    0x88(%rsp),%ecx    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dbd61: cmp    $0x80000,%ebx
  0x00000000036dbd67: ja     0x00000000036dd7f8  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbd6d: movslq %ebx,%r9           ;*invokespecial normalizePrefix
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbd70: shl    %r9
  0x00000000036dbd73: add    $0x17,%r9          ;*new  ; - java.io.WinNTFileSystem::normalize@19 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbd77: mov    %r9,%r8
  0x00000000036dbd7a: and    $0xfffffffffffffff8,%r8  ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@103 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dbd7e: cmp    $0x80000,%ebx
  0x00000000036dbd84: ja     0x00000000036dcf58
  0x00000000036dbd8a: mov    0x60(%r15),%r13
  0x00000000036dbd8e: mov    %r13,%rdx
  0x00000000036dbd91: add    %r8,%rdx
  0x00000000036dbd94: cmp    0x70(%r15),%rdx
  0x00000000036dbd98: jae    0x00000000036dcf58  ;*new
                                                ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dbd9e: mov    %rdx,0x60(%r15)    ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dbda2: prefetchw 0xc0(%rdx)      ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dbda9: movq   $0x1,0x0(%r13)
  0x00000000036dbdb1: prefetchw 0x100(%rdx)     ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 380)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dbdb8: movl   $0xf8000041,0x8(%r13)  ;   {metadata({type array char})}
  0x00000000036dbdc0: mov    %ebx,0xc(%r13)
  0x00000000036dbdc4: prefetchw 0x140(%rdx)
  0x00000000036dbdcb: prefetchw 0x180(%rdx)     ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dbdd2: mov    %ecx,0xa8(%rsp)    ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbdd9: cmp    %ebx,%ebp
  0x00000000036dbddb: mov    %ebx,%esi
  0x00000000036dbddd: cmovl  %ebp,%esi          ;*invokespecial normalizePrefix
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbde0: mov    %r13,%rdi
  0x00000000036dbde3: add    $0x10,%rdi         ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbde7: mov    0xa8(%rsp),%ecx
  0x00000000036dbdee: lea    (%r12,%rcx,8),%rdx  ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@103 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dbdf2: shr    $0x3,%r9           ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@67 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbdf6: mov    %r9,%rcx
  0x00000000036dbdf9: add    $0xfffffffffffffffe,%rcx
  0x00000000036dbdfd: cmp    %esi,%ebp
  0x00000000036dbdff: jb     0x00000000036dd800
  0x00000000036dbe05: cmp    %esi,%ebx
  0x00000000036dbe07: jb     0x00000000036dd800  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbe0d: test   %esi,%esi
  0x00000000036dbe0f: jle    0x00000000036dd864  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbe15: mov    0xa8(%rsp),%ecx
  0x00000000036dbe1c: lea    0x10(%r12,%rcx,8),%rcx  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbe21: cmp    %ebx,%esi
  0x00000000036dbe23: jl     0x00000000036dc980  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbe29: mov    %r13,0x30(%rsp)
  0x00000000036dbe2e: mov    %r10d,0x28(%rsp)
  0x00000000036dbe33: mov    %r11,0x20(%rsp)
  0x00000000036dbe38: add    $0xfffffffffffffff0,%r8
  0x00000000036dbe3c: shr    $0x3,%r8           ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbe40: mov    %rdi,%rdx
  0x00000000036dbe43: movabs $0x35e2ca0,%r10
  0x00000000036dbe4d: callq  *%r10              ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbe50: mov    0x20(%rsp),%r11
  0x00000000036dbe55: mov    0x28(%rsp),%r10d
  0x00000000036dbe5a: mov    0x30(%rsp),%r13    ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dbe5f: mov    0xc(%r11),%r9d     ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalize@100 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbe63: mov    %r13,%rcx
  0x00000000036dbe66: shr    $0x3,%rcx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbe6a: mov    %ecx,0x10(%r11)    ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::normalize@120 (line 126)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dbe6e: mov    %r9d,%r8d
  0x00000000036dbe71: inc    %r8d               ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::isSlash@-1 (line 53)
                                                ; - java.io.WinNTFileSystem::normalize@100 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbe74: mov    %r11,%rcx
  0x00000000036dbe77: shr    $0x9,%rcx
  0x00000000036dbe7b: mov    $0xf32f000,%ebx
  0x00000000036dbe80: mov    %r12b,(%rbx,%rcx,1)  ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::normalize@120 (line 126)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dbe84: mov    %r13,%rdi
  0x00000000036dbe87: jmpq   0x00000000036db73f
  0x00000000036dbe8c: add    $0x2,%ebx          ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbe8f: jmpq   0x00000000036dbce8  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 134)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dbe94: mov    %r11,0x20(%rsp)
  0x00000000036dbe99: mov    %r11,%rdx
  0x00000000036dbe9c: mov    0x5c(%rsp),%r8d
  0x00000000036dbea1: xchg   %ax,%ax
  0x00000000036dbea3: callq  0x00000000035d61a0  ; OopMap{[32]=Oop [80]=Oop [96]=Oop off=6280}
                                                ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {optimized virtual_call}
  0x00000000036dbea8: mov    $0x1,%r8d
  0x00000000036dbeae: mov    0x20(%rsp),%r11
  0x00000000036dbeb3: jmpq   0x00000000036daae6  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbeb8: inc    %r10d              ;*arraylength
                                                ; - java.util.Arrays::copyOf@9 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbebb: cmp    0x2c(%rsp),%r10d
  0x00000000036dbec0: jl     0x00000000036db410
  0x00000000036dbec6: cmp    0x28(%rsp),%r10d
  0x00000000036dbecb: jge    0x00000000036dd4b0
  0x00000000036dbed1: movzwl 0x10(%rbx,%r10,2),%r9d
  0x00000000036dbed7: cmp    $0x5c,%r9d
  0x00000000036dbedb: je     0x00000000036dbee7
  0x00000000036dbedd: cmp    $0x2f,%r9d
  0x00000000036dbee1: jne    0x00000000036db443
  0x00000000036dbee7: movslq %r10d,%r8
  0x00000000036dbeea: movzwl 0x12(%rbx,%r8,2),%r9d
  0x00000000036dbef0: cmp    $0x5c,%r9d
  0x00000000036dbef4: je     0x00000000036dca40
  0x00000000036dbefa: cmp    $0x2f,%r9d
  0x00000000036dbefe: je     0x00000000036dca40
  0x00000000036dbf04: inc    %r10d              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbf07: jmpq   0x00000000036db443
  0x00000000036dbf0c: cmp    0x5c(%rsp),%r10d
  0x00000000036dbf11: jne    0x00000000036da8c7  ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbf17: jmpq   0x00000000036dd1e3  ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dbf1c: mov    0x68(%rsp),%r9d
  0x00000000036dbf21: cmp    $0x1,%r9d
  0x00000000036dbf25: jle    0x00000000036dd899
  0x00000000036dbf2b: cmp    $0x1,%r9d
  0x00000000036dbf2f: jbe    0x00000000036dd873  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dbf35: movzwl 0x12(%r12,%r8,8),%r10d  ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalizePrefix@99 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbf3b: cmp    $0x5c,%r10d
  0x00000000036dbf3f: je     0x00000000036dc0b1  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbf45: cmp    $0x2f,%r10d
  0x00000000036dbf49: je     0x00000000036dc0b1
  0x00000000036dbf4f: xor    %r8d,%r8d
  0x00000000036dbf52: jmpq   0x00000000036db537
  0x00000000036dbf57: mov    %rcx,%r10
  0x00000000036dbf5a: movslq %esi,%r8           ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbf5d: mov    %r8,%r9
  0x00000000036dbf60: shl    %r9
  0x00000000036dbf63: add    $0x10,%r9          ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@84 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbf67: mov    %r9,%rcx
  0x00000000036dbf6a: and    $0xfffffffffffffff9,%rcx
  0x00000000036dbf6e: mov    0x78(%rsp),%rdi
  0x00000000036dbf73: add    %rcx,%rdi
  0x00000000036dbf76: shr    $0x3,%r9
  0x00000000036dbf7a: sub    %r9,%r11
  0x00000000036dbf7d: mov    %r11,%rcx
  0x00000000036dbf80: xor    %rax,%rax
  0x00000000036dbf83: shl    $0x3,%rcx
  0x00000000036dbf87: rep rex.W stos %al,%es:(%rdi)  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbf8a: mov    %r10,%rcx
  0x00000000036dbf8d: mov    %rbx,%rdx
  0x00000000036dbf90: movabs $0x35e2980,%r10
  0x00000000036dbf9a: callq  *%r10              ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dbf9d: jmpq   0x00000000036db03a
  0x00000000036dbfa2: mov    %r11,0x28(%rsp)    ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dbfa7: mov    %r11,%rdx
  0x00000000036dbfaa: mov    $0x1,%r8d
  0x00000000036dbfb0: data16 xchg %ax,%ax
  0x00000000036dbfb3: callq  0x00000000035d61a0  ; OopMap{[40]=Oop [96]=Oop off=6552}
                                                ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalize@134 (line 127)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {optimized virtual_call}
  0x00000000036dbfb8: cmp    $0x3a,%eax
  0x00000000036dbfbb: je     0x00000000036dc411  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 82)

  0x00000000036dbfc1: mov    0x28(%rsp),%r11
  0x00000000036dbfc6: jmpq   0x00000000036dbc7f
  0x00000000036dbfcb: mov    %r11,0x20(%rsp)    ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dbfd0: mov    %r11,%rdx
  0x00000000036dbfd3: mov    0x5c(%rsp),%r8d
  0x00000000036dbfd8: data16 xchg %ax,%ax
  0x00000000036dbfdb: callq  0x00000000035d61a0  ; OopMap{[32]=Oop off=6592}
                                                ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 134)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {optimized virtual_call}
  0x00000000036dbfe0: mov    0x20(%rsp),%r11
  0x00000000036dbfe5: jmpq   0x00000000036daaf1
  0x00000000036dbfea: mov    (%r11),%rax
  0x00000000036dbfed: mov    %rax,%r10
  0x00000000036dbff0: and    $0x7,%r10
  0x00000000036dbff4: cmp    $0x5,%r10
  0x00000000036dbff8: jne    0x00000000036dd8ce  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dbffe: mov    %rdi,%r10          ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc001: or     %r15,%r10          ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc004: mov    %r10,%r8
  0x00000000036dc007: xor    %rax,%r8
  0x00000000036dc00a: test   $0xffffffffffffff87,%r8
  0x00000000036dc011: jne    0x00000000036dd9ff  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalizePrefix@62 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dc017: mov    0xc(%r11),%ebp     ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@98 (line 92)

  0x00000000036dc01b: mov    $0x7,%r10d
  0x00000000036dc021: and    (%r11),%r10
  0x00000000036dc024: cmp    $0x5,%r10
  0x00000000036dc028: jne    0x00000000036dd94d  ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc02e: cmp    $0x2,%ebp
  0x00000000036dc031: je     0x00000000036dc482
  0x00000000036dc037: test   %ebp,%ebp
  0x00000000036dc039: je     0x00000000036dc4b4
  0x00000000036dc03f: cmp    $0x1,%ebp
  0x00000000036dc042: jne    0x00000000036db547  ;*if_icmple
                                                ; - java.io.WinNTFileSystem::normalize@104 (line 92)

  0x00000000036dc048: mov    %r11,0x20(%rsp)
  0x00000000036dc04d: mov    %r14,%rbp          ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc050: mov    %r11,%rdx
  0x00000000036dc053: xor    %r8d,%r8d
  0x00000000036dc056: nop
  0x00000000036dc057: callq  0x00000000035d61a0  ; OopMap{[32]=Oop [96]=Oop off=6716}
                                                ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalize@179 (line 137)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {optimized virtual_call}
  0x00000000036dc05c: mov    0x60(%rsp),%rdx
  0x00000000036dc061: mov    %eax,%r8d
  0x00000000036dc064: data16 xchg %ax,%ax
  0x00000000036dc067: callq  0x00000000035d61a0  ; OopMap{[32]=Oop off=6732}
                                                ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalize@182 (line 137)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {optimized virtual_call}
  0x00000000036dc06c: test   %eax,%eax
  0x00000000036dc06e: je     0x00000000036dcb0d  ;*if_icmple
                                                ; - java.io.WinNTFileSystem::normalize@104 (line 92)

  0x00000000036dc074: mov    0x20(%rsp),%rdx
  0x00000000036dc079: mov    0x5c(%rsp),%r8d
  0x00000000036dc07e: nop
  0x00000000036dc07f: callq  0x00000000035d61a0  ; OopMap{[32]=Oop off=6756}
                                                ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@192 (line 145)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {optimized virtual_call}
  0x00000000036dc084: mov    %rbp,%r14
  0x00000000036dc087: mov    0x20(%rsp),%r11
  0x00000000036dc08c: jmpq   0x00000000036db547
  0x00000000036dc091: mov    $0xffffffe4,%edx
  0x00000000036dc096: mov    %r14d,0x24(%rsp)
  0x00000000036dc09b: mov    %r11,0x30(%rsp)
  0x00000000036dc0a0: mov    %r10d,0x2c(%rsp)
  0x00000000036dc0a5: mov    %r8d,0x38(%rsp)
  0x00000000036dc0aa: nop
  0x00000000036dc0ab: callq  0x00000000035d57a0  ; OopMap{[44]=NarrowOop [48]=Oop [80]=Oop [96]=Oop off=6800}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000036dc0b0: int3                      ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc0b1: mov    %r11,0x20(%rsp)
  0x00000000036dc0b6: mov    %r11,%rdx
  0x00000000036dc0b9: mov    0x5c(%rsp),%r8d
  0x00000000036dc0be: nop
  0x00000000036dc0bf: callq  0x00000000035d61a0  ; OopMap{[32]=Oop [80]=Oop [96]=Oop off=6820}
                                                ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {optimized virtual_call}
  0x00000000036dc0c4: mov    $0x1,%r8d
  0x00000000036dc0ca: mov    0x20(%rsp),%r11
  0x00000000036dc0cf: jmpq   0x00000000036db537
  0x00000000036dc0d4: movabs $0x7c000d608,%rdx  ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {metadata(&apos;java/lang/StringBuffer&apos;)}
  0x00000000036dc0de: nop
  0x00000000036dc0df: callq  0x0000000003694e60  ; OopMap{[48]=Oop [80]=Oop [88]=NarrowOop [96]=Oop off=6852}
                                                ;*new  ; - java.io.WinNTFileSystem::normalize@19 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000036dc0e4: jmpq   0x00000000036da919
  0x00000000036dc0e9: mov    %r10d,0x68(%rsp)
  0x00000000036dc0ee: mov    %rax,%rbp          ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc0f1: movabs $0x7c0000208,%rdx  ;*if_icmple
                                                ; - java.io.WinNTFileSystem::normalize@104 (line 92)
                                                ;   {metadata({type array char})}
  0x00000000036dc0fb: mov    0x68(%rsp),%r8d
  0x00000000036dc100: data16 xchg %ax,%ax
  0x00000000036dc103: callq  0x0000000003694f60  ; OopMap{rbp=Oop [48]=Oop [80]=Oop [88]=NarrowOop [96]=Oop off=6888}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000036dc108: mov    %rax,%r8
  0x00000000036dc10b: jmpq   0x00000000036da99c
  0x00000000036dc110: mov    %r11,0x20(%rsp)    ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc115: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000000036dc11f: callq  0x0000000003694e60  ; OopMap{rbp=NarrowOop [32]=Oop off=6916}
                                                ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000036dc124: mov    %rax,%rbx
  0x00000000036dc127: mov    0x20(%rsp),%r11
  0x00000000036dc12c: jmpq   0x00000000036dab75  ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@15 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc131: mov    $0xffffffe4,%edx
  0x00000000036dc136: mov    0x50(%rsp),%r10
  0x00000000036dc13b: mov    %r10,0x20(%rsp)
  0x00000000036dc140: mov    %r14d,0x2c(%rsp)
  0x00000000036dc145: mov    %r11,0x40(%rsp)
  0x00000000036dc14a: mov    %r11,0x48(%rsp)
  0x00000000036dc14f: mov    %esi,0x34(%rsp)
  0x00000000036dc153: mov    %edi,0x58(%rsp)
  0x00000000036dc157: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [32]=Oop [64]=Oop [72]=Oop [96]=Oop off=6972}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000036dc15c: int3                      ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@28 (line 87)

  0x00000000036dc15d: lock cmpxchg %rdx,(%r11)  ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc162: lea    0xb0(%rsp),%rbx    ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@3 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc16a: mov    (%r11),%rax
  0x00000000036dc16d: test   $0x2,%rax
  0x00000000036dc173: jne    0x00000000036dc199
  0x00000000036dc175: or     $0x1,%rax
  0x00000000036dc179: mov    %rax,(%rbx)
  0x00000000036dc17c: lock cmpxchg %rbx,(%r11)
  0x00000000036dc181: je     0x00000000036dc1b2
  0x00000000036dc187: sub    %rsp,%rax
  0x00000000036dc18a: and    $0xfffffffffffff007,%rax
  0x00000000036dc191: mov    %rax,(%rbx)
  0x00000000036dc194: jmpq   0x00000000036dc1b2
  0x00000000036dc199: movq   $0x3,(%rbx)
  0x00000000036dc1a0: mov    %rax,%rbx
  0x00000000036dc1a3: mov    0x16(%rbx),%rax
  0x00000000036dc1a7: test   %rax,%rax
  0x00000000036dc1aa: jne    0x00000000036dc1b2
  0x00000000036dc1ac: lock cmpxchg %r15,0x16(%rbx)
  0x00000000036dc1b2: je     0x00000000036dae85  ;*arraylength
                                                ; - java.util.Arrays::copyOf@9 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc1b8: mov    %edi,0x38(%rsp)
  0x00000000036dc1bc: mov    %r14d,0x24(%rsp)
  0x00000000036dc1c1: mov    %r11,0x30(%rsp)
  0x00000000036dc1c6: rex.W pushq 0x40(%rsp)
  0x00000000036dc1cb: rex.W popq 0x28(%rsp)
  0x00000000036dc1d0: mov    0x68(%rsp),%r11d
  0x00000000036dc1d5: mov    %r11d,0x20(%rsp)
  0x00000000036dc1da: mov    0x50(%rsp),%rbp
  0x00000000036dc1df: mov    0x30(%rsp),%rdx
  0x00000000036dc1e4: lea    0xb0(%rsp),%r8     ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@3 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc1ec: data16 xchg %ax,%ax
  0x00000000036dc1ef: callq  0x0000000003693720  ; OopMap{rbp=Oop [48]=Oop [96]=Oop off=7124}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000036dc1f4: mov    %rbp,0x50(%rsp)
  0x00000000036dc1f9: mov    0x20(%rsp),%r10d
  0x00000000036dc1fe: mov    %r10d,0x68(%rsp)
  0x00000000036dc203: rex.W pushq 0x28(%rsp)
  0x00000000036dc208: rex.W popq 0x40(%rsp)
  0x00000000036dc20d: mov    0x30(%rsp),%r11
  0x00000000036dc212: mov    0x24(%rsp),%r14d
  0x00000000036dc217: mov    0x38(%rsp),%edi
  0x00000000036dc21b: jmpq   0x00000000036dae85
  0x00000000036dc220: test   $0x7,%r8
  0x00000000036dc227: jne    0x00000000036dc15d
  0x00000000036dc22d: test   $0x300,%r8
  0x00000000036dc234: jne    0x00000000036dc243  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc236: and    $0x37f,%rax
  0x00000000036dc23d: mov    %rax,%r10          ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc240: or     %r15,%r10          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc243: lock cmpxchg %r10,(%r11)
  0x00000000036dc248: jne    0x00000000036dc1b8  ;*arraylength
                                                ; - java.util.Arrays::copyOf@9 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc24e: jmpq   0x00000000036dae85
  0x00000000036dc253: lea    0xb0(%rsp),%rax    ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@3 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc25b: cmpq   $0x0,(%rax)
  0x00000000036dc262: je     0x00000000036dc2dc
  0x00000000036dc268: mov    (%r11),%r10
  0x00000000036dc26b: test   $0x2,%r10
  0x00000000036dc272: je     0x00000000036dc2d4
  0x00000000036dc274: mov    0x16(%r10),%rax
  0x00000000036dc278: xor    %r15,%rax
  0x00000000036dc27b: or     0x26(%r10),%rax
  0x00000000036dc27f: jne    0x00000000036dc2dc
  0x00000000036dc281: mov    0x36(%r10),%rax
  0x00000000036dc285: or     0x3e(%r10),%rax
  0x00000000036dc289: jne    0x00000000036dc295
  0x00000000036dc28b: movq   $0x0,0x16(%r10)
  0x00000000036dc293: jmp    0x00000000036dc2dc
  0x00000000036dc295: cmpq   $0x0,0x46(%r10)
  0x00000000036dc29d: je     0x00000000036dc2c8
  0x00000000036dc29f: movq   $0x0,0x16(%r10)
  0x00000000036dc2a7: lock addl $0x0,(%rsp)
  0x00000000036dc2ac: cmpq   $0x0,0x46(%r10)
  0x00000000036dc2b4: jne    0x00000000036dc2cd
  0x00000000036dc2b6: movabs $0x0,%rax
  0x00000000036dc2c0: lock cmpxchg %r15,0x16(%r10)
  0x00000000036dc2c6: jne    0x00000000036dc2cd
  0x00000000036dc2c8: or     $0x1,%eax
  0x00000000036dc2cb: jmp    0x00000000036dc2dc
  0x00000000036dc2cd: test   $0x0,%eax
  0x00000000036dc2d2: jmp    0x00000000036dc2dc
  0x00000000036dc2d4: mov    (%rax),%r10
  0x00000000036dc2d7: lock cmpxchg %r10,(%r11)
  0x00000000036dc2dc: je     0x00000000036dade9  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc2e2: mov    %r14d,0x20(%rsp)
  0x00000000036dc2e7: mov    %r11,%r14
  0x00000000036dc2ea: mov    %r11,%rcx
  0x00000000036dc2ed: lea    0xb0(%rsp),%rdx    ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@3 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc2f5: movabs $0x54fdce00,%r10
  0x00000000036dc2ff: callq  *%r10              ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc302: mov    %r14,%r11
  0x00000000036dc305: mov    0x20(%rsp),%r14d
  0x00000000036dc30a: jmpq   0x00000000036dade9
  0x00000000036dc30f: mov    %r8,%rdx
  0x00000000036dc312: mov    %rdi,%r10
  0x00000000036dc315: mov    %r14d,0x28(%rsp)
  0x00000000036dc31a: mov    %r11,0x20(%rsp)
  0x00000000036dc31f: movslq %esi,%r8           ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@3 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dc322: mov    %r8,%r11
  0x00000000036dc325: shl    %r11
  0x00000000036dc328: add    $0x10,%r11         ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dc32c: mov    %r11,%rcx
  0x00000000036dc32f: and    $0xfffffffffffffff9,%rcx
  0x00000000036dc333: mov    %r13,%rdi
  0x00000000036dc336: add    %rcx,%rdi
  0x00000000036dc339: shr    $0x3,%r11
  0x00000000036dc33d: sub    %r11,%r9
  0x00000000036dc340: mov    %r9,%rcx
  0x00000000036dc343: xor    %rax,%rax
  0x00000000036dc346: shl    $0x3,%rcx
  0x00000000036dc34a: rep rex.W stos %al,%es:(%rdi)  ;*iload_1
                                                ; - java.io.WinNTFileSystem::isLetter@0 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dc34d: mov    %rdx,%rcx
  0x00000000036dc350: mov    %r10,%rdx
  0x00000000036dc353: movabs $0x35e2980,%r10
  0x00000000036dc35d: callq  *%r10              ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dc360: mov    0x20(%rsp),%r11
  0x00000000036dc365: mov    0x28(%rsp),%r14d
  0x00000000036dc36a: jmpq   0x00000000036db292
  0x00000000036dc36f: mov    %r10d,0x6c(%rsp)
  0x00000000036dc374: mov    %r9d,0x98(%rsp)    ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc37c: mov    %r8,0x70(%rsp)
  0x00000000036dc381: mov    %rbx,0x38(%rsp)
  0x00000000036dc386: mov    %ecx,0x30(%rsp)
  0x00000000036dc38a: mov    %edi,0x2c(%rsp)
  0x00000000036dc38e: mov    %r14d,0x28(%rsp)
  0x00000000036dc393: mov    %r11,0x20(%rsp)    ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.WinNTFileSystem::normalize@120 (line 126)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc398: movabs $0x7c0000208,%rdx  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {metadata({type array char})}
  0x00000000036dc3a2: mov    %ecx,%r8d
  0x00000000036dc3a5: xchg   %ax,%ax
  0x00000000036dc3a7: callq  0x0000000003693360  ; OopMap{rbp=Oop [32]=Oop [80]=Oop [96]=Oop [108]=NarrowOop off=7564}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000036dc3ac: mov    %rax,%r9
  0x00000000036dc3af: jmpq   0x00000000036dafaf  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dc3b4: movzwl 0x14(%r9,%r8,2),%ebx  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dc3ba: cmp    $0x5c,%ebx
  0x00000000036dc3bd: je     0x00000000036dc6c2
  0x00000000036dc3c3: cmp    $0x2f,%ebx
  0x00000000036dc3c6: je     0x00000000036dc6c2  ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dc3cc: add    $0x2,%r10d         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dc3d0: jmpq   0x00000000036da9f1
  0x00000000036dc3d5: mov    $0xffffff65,%edx
  0x00000000036dc3da: mov    %r14d,0x24(%rsp)
  0x00000000036dc3df: mov    %r11,0x30(%rsp)
  0x00000000036dc3e4: mov    %r8d,0x40(%rsp)
  0x00000000036dc3e9: xchg   %ax,%ax
  0x00000000036dc3eb: callq  0x00000000035d57a0  ; OopMap{[48]=Oop [80]=Oop [96]=Oop off=7632}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000036dc3f0: int3   
  0x00000000036dc3f1: mov    $0xffffff65,%edx
  0x00000000036dc3f6: mov    %r14d,0x24(%rsp)
  0x00000000036dc3fb: mov    %r11,0x30(%rsp)
  0x00000000036dc400: mov    %r8d,0x40(%rsp)
  0x00000000036dc405: mov    %r9d,0x44(%rsp)
  0x00000000036dc40a: nop
  0x00000000036dc40b: callq  0x00000000035d57a0  ; OopMap{[48]=Oop [80]=Oop [96]=Oop off=7664}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000036dc410: int3                      ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x00000000036dc411: mov    0x28(%rsp),%rdx
  0x00000000036dc416: mov    0x5c(%rsp),%r8d
  0x00000000036dc41b: mov    %rdx,%rbp
  0x00000000036dc41e: nop
  0x00000000036dc41f: callq  0x00000000035d61a0  ; OopMap{rbp=Oop off=7684}
                                                ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@146 (line 129)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {optimized virtual_call}
  0x00000000036dc424: mov    %rbp,%r11
  0x00000000036dc427: jmpq   0x00000000036daaf1
  0x00000000036dc42c: mov    0x20(%rsp),%r11
  0x00000000036dc431: jmpq   0x00000000036daaf1
  0x00000000036dc436: mov    %r11,%rbx
  0x00000000036dc439: movslq %esi,%r8           ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dc43c: mov    %r8,%r10
  0x00000000036dc43f: shl    %r10
  0x00000000036dc442: add    $0x10,%r10         ;*ireturn
                                                ; - java.io.WinNTFileSystem::isSlash@17 (line 53)
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dc446: mov    %r10,%r11
  0x00000000036dc449: and    $0xfffffffffffffff9,%r11
  0x00000000036dc44d: mov    %rbp,%rdi
  0x00000000036dc450: add    %r11,%rdi
  0x00000000036dc453: shr    $0x3,%r10
  0x00000000036dc457: mov    %r9,%r11
  0x00000000036dc45a: sub    %r10,%r11
  0x00000000036dc45d: mov    %r11,%rcx
  0x00000000036dc460: xor    %rax,%rax
  0x00000000036dc463: shl    $0x3,%rcx
  0x00000000036dc467: rep rex.W stos %al,%es:(%rdi)  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dc46a: mov    %rbx,%rcx
  0x00000000036dc46d: mov    %r13,%rdx
  0x00000000036dc470: movabs $0x35e2980,%r10
  0x00000000036dc47a: callq  *%r10              ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dc47d: jmpq   0x00000000036dbb0e
  0x00000000036dc482: mov    %r11,0x28(%rsp)
  0x00000000036dc487: mov    %r14,0x20(%rsp)    ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc48c: mov    %r11,%rdx
  0x00000000036dc48f: mov    $0x1,%r8d
  0x00000000036dc495: xchg   %ax,%ax
  0x00000000036dc497: callq  0x00000000035d61a0  ; OopMap{[40]=Oop [96]=Oop off=7804}
                                                ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalize@134 (line 127)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {optimized virtual_call}
  0x00000000036dc49c: cmp    $0x3a,%eax
  0x00000000036dc49f: je     0x00000000036dca9d  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@98 (line 92)

  0x00000000036dc4a5: mov    0x20(%rsp),%r14
  0x00000000036dc4aa: mov    0x28(%rsp),%r11
  0x00000000036dc4af: jmpq   0x00000000036dc037
  0x00000000036dc4b4: mov    %r11,0x20(%rsp)
  0x00000000036dc4b9: mov    %r14,%rbp          ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc4bc: mov    %r11,%rdx
  0x00000000036dc4bf: mov    0x5c(%rsp),%r8d
  0x00000000036dc4c4: data16 xchg %ax,%ax
  0x00000000036dc4c7: callq  0x00000000035d61a0  ; OopMap{[32]=Oop off=7852}
                                                ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@162 (line 134)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {optimized virtual_call}
  0x00000000036dc4cc: mov    %rbp,%r14
  0x00000000036dc4cf: mov    0x20(%rsp),%r11
  0x00000000036dc4d4: jmpq   0x00000000036db547
  0x00000000036dc4d9: mov    $0xffffffe4,%edx
  0x00000000036dc4de: mov    %r11,0x30(%rsp)
  0x00000000036dc4e3: mov    %r10d,0x2c(%rsp)
  0x00000000036dc4e8: mov    %r14d,0x38(%rsp)
  0x00000000036dc4ed: mov    0x60(%rsp),%r10
  0x00000000036dc4f2: mov    %r10,0x48(%rsp)
  0x00000000036dc4f7: callq  0x00000000035d57a0  ; OopMap{[44]=NarrowOop [48]=Oop [72]=Oop [80]=Oop [96]=Oop off=7900}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000036dc4fc: int3                      ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc4fd: mov    $0xffffff65,%edx
  0x00000000036dc502: mov    %r14d,0x24(%rsp)
  0x00000000036dc507: mov    %r11,0x30(%rsp)
  0x00000000036dc50c: data16 xchg %ax,%ax
  0x00000000036dc50f: callq  0x00000000035d57a0  ; OopMap{[48]=Oop [80]=Oop [96]=Oop off=7924}
                                                ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@103 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000036dc514: int3                      ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalizePrefix@16 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc515: mov    $0xffffffe4,%edx   ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalizePrefix@9 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc51a: mov    0x50(%rsp),%r10
  0x00000000036dc51f: mov    %r10,0x20(%rsp)
  0x00000000036dc524: mov    %r14d,0x2c(%rsp)
  0x00000000036dc529: mov    %r11,0x40(%rsp)
  0x00000000036dc52e: mov    %r11,0x48(%rsp)
  0x00000000036dc533: mov    %r9d,0x34(%rsp)
  0x00000000036dc538: data16 xchg %ax,%ax
  0x00000000036dc53b: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [32]=Oop [64]=Oop [72]=Oop [96]=Oop off=7968}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000036dc540: int3                      ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x00000000036dc541: lock cmpxchg %rdx,(%r11)  ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc546: lea    0xb0(%rsp),%rbx    ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc54e: mov    (%r11),%rax
  0x00000000036dc551: test   $0x2,%rax
  0x00000000036dc557: jne    0x00000000036dc57d
  0x00000000036dc559: or     $0x1,%rax
  0x00000000036dc55d: mov    %rax,(%rbx)
  0x00000000036dc560: lock cmpxchg %rbx,(%r11)
  0x00000000036dc565: je     0x00000000036dc596
  0x00000000036dc56b: sub    %rsp,%rax
  0x00000000036dc56e: and    $0xfffffffffffff007,%rax
  0x00000000036dc575: mov    %rax,(%rbx)
  0x00000000036dc578: jmpq   0x00000000036dc596
  0x00000000036dc57d: movq   $0x3,(%rbx)
  0x00000000036dc584: mov    %rax,%rbx
  0x00000000036dc587: mov    0x16(%rbx),%rax
  0x00000000036dc58b: test   %rax,%rax
  0x00000000036dc58e: jne    0x00000000036dc596
  0x00000000036dc590: lock cmpxchg %r15,0x16(%rbx)
  0x00000000036dc596: je     0x00000000036dac93  ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc59c: mov    %r14d,0x24(%rsp)
  0x00000000036dc5a1: mov    %r11,0x30(%rsp)
  0x00000000036dc5a6: rex.W pushq 0x40(%rsp)
  0x00000000036dc5ab: rex.W popq 0x28(%rsp)
  0x00000000036dc5b0: mov    0x68(%rsp),%r10d
  0x00000000036dc5b5: mov    %r10d,0x20(%rsp)
  0x00000000036dc5ba: mov    0x50(%rsp),%rbp
  0x00000000036dc5bf: mov    %r11,%rdx
  0x00000000036dc5c2: lea    0xb0(%rsp),%r8     ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc5ca: nop
  0x00000000036dc5cb: callq  0x0000000003693720  ; OopMap{rbp=Oop [48]=Oop [96]=Oop off=8112}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000036dc5d0: mov    %rbp,0x50(%rsp)
  0x00000000036dc5d5: mov    0x20(%rsp),%r11d
  0x00000000036dc5da: mov    %r11d,0x68(%rsp)
  0x00000000036dc5df: rex.W pushq 0x28(%rsp)
  0x00000000036dc5e4: rex.W popq 0x40(%rsp)
  0x00000000036dc5e9: mov    0x30(%rsp),%r11
  0x00000000036dc5ee: mov    0x24(%rsp),%r14d
  0x00000000036dc5f3: jmpq   0x00000000036dac93
  0x00000000036dc5f8: test   $0x7,%r8
  0x00000000036dc5ff: jne    0x00000000036dc541  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc605: test   $0x300,%r8
  0x00000000036dc60c: jne    0x00000000036dc61b  ;*isub
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@6 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc60e: and    $0x37f,%rax        ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc615: mov    %rax,%r10          ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc618: or     %r15,%r10          ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc61b: lock cmpxchg %r10,(%r11)  ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc620: jne    0x00000000036dc59c  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc626: jmpq   0x00000000036dac93  ;*areturn
                                                ; - java.lang.StringBuffer::toString@35 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc62b: mov    %ecx,0x9c(%rsp)
  0x00000000036dc632: mov    %edx,0x98(%rsp)
  0x00000000036dc639: mov    %r10,0x78(%rsp)
  0x00000000036dc63e: mov    %r9,0x70(%rsp)
  0x00000000036dc643: mov    %ebx,0x58(%rsp)
  0x00000000036dc647: mov    %r14d,0x2c(%rsp)
  0x00000000036dc64c: mov    %r11,0x38(%rsp)
  0x00000000036dc651: rex.W pushq 0x40(%rsp)
  0x00000000036dc656: rex.W popq 0x30(%rsp)
  0x00000000036dc65b: mov    0x68(%rsp),%r11d
  0x00000000036dc660: mov    %r11d,0x28(%rsp)
  0x00000000036dc665: mov    0x50(%rsp),%r10
  0x00000000036dc66a: mov    %r10,0x20(%rsp)    ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc66f: movabs $0x7c0000208,%rdx  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {metadata({type array char})}
  0x00000000036dc679: mov    %ebx,%r8d
  0x00000000036dc67c: data16 xchg %ax,%ax
  0x00000000036dc67f: callq  0x0000000003693360  ; OopMap{rbp=Oop [32]=Oop [56]=Oop [96]=Oop [152]=NarrowOop off=8292}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000036dc684: mov    0x20(%rsp),%r10
  0x00000000036dc689: mov    %r10,0x50(%rsp)
  0x00000000036dc68e: mov    0x28(%rsp),%r10d
  0x00000000036dc693: mov    %r10d,0x68(%rsp)
  0x00000000036dc698: rex.W pushq 0x30(%rsp)
  0x00000000036dc69d: rex.W popq 0x40(%rsp)
  0x00000000036dc6a2: mov    0x38(%rsp),%r11
  0x00000000036dc6a7: mov    0x2c(%rsp),%r14d
  0x00000000036dc6ac: mov    0x58(%rsp),%ebx
  0x00000000036dc6b0: mov    0x70(%rsp),%r9
  0x00000000036dc6b5: mov    0x78(%rsp),%r10
  0x00000000036dc6ba: mov    %rax,%r13
  0x00000000036dc6bd: jmpq   0x00000000036db1f0  ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dc6c2: movzwl 0x16(%r9,%r8,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dc6c8: cmp    $0x5c,%ecx
  0x00000000036dc6cb: je     0x00000000036dcd89  ;*invokespecial isLetter
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dc6d1: cmp    $0x2f,%ecx
  0x00000000036dc6d4: je     0x00000000036dcd89  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@146 (line 129)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc6da: add    $0x3,%r10d         ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dc6de: jmpq   0x00000000036da9f1
  0x00000000036dc6e3: mov    $0xffffff65,%edx
  0x00000000036dc6e8: mov    0x50(%rsp),%rbp
  0x00000000036dc6ed: mov    %r11,0x30(%rsp)
  0x00000000036dc6f2: mov    %r14d,0x2c(%rsp)
  0x00000000036dc6f7: mov    %r14d,0x40(%rsp)
  0x00000000036dc6fc: mov    0x60(%rsp),%r10
  0x00000000036dc701: mov    %r10,0x50(%rsp)
  0x00000000036dc706: nop
  0x00000000036dc707: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [48]=Oop [80]=Oop [96]=Oop off=8428}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000036dc70c: int3                      ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x00000000036dc70d: mov    $0xffffff65,%edx
  0x00000000036dc712: mov    0x50(%rsp),%rbp
  0x00000000036dc717: mov    %r11,0x30(%rsp)
  0x00000000036dc71c: mov    %r14d,0x2c(%rsp)
  0x00000000036dc721: mov    %r14d,0x40(%rsp)
  0x00000000036dc726: mov    %r9d,0x44(%rsp)
  0x00000000036dc72b: mov    0x60(%rsp),%r10
  0x00000000036dc730: mov    %r10,0x50(%rsp)
  0x00000000036dc735: xchg   %ax,%ax
  0x00000000036dc737: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [48]=Oop [80]=Oop [96]=Oop off=8476}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000036dc73c: int3                      ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x00000000036dc73d: mov    $0xffffffe4,%edx
  0x00000000036dc742: mov    %r10d,0x24(%rsp)
  0x00000000036dc747: mov    %r11,0x30(%rsp)
  0x00000000036dc74c: mov    %ecx,0x2c(%rsp)
  0x00000000036dc750: mov    %r8d,0x38(%rsp)
  0x00000000036dc755: xchg   %ax,%ax
  0x00000000036dc757: callq  0x00000000035d57a0  ; OopMap{[44]=NarrowOop [48]=Oop [80]=Oop [96]=Oop off=8508}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000036dc75c: int3                      ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@25 (line 86)

  0x00000000036dc75d: movabs $0x7c000d608,%rdx  ;   {metadata(&apos;java/lang/StringBuffer&apos;)}
  0x00000000036dc767: callq  0x0000000003694e60  ; OopMap{[48]=Oop [80]=Oop [88]=NarrowOop [96]=Oop off=8524}
                                                ;*new  ; - java.io.WinNTFileSystem::normalize@19 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000036dc76c: jmpq   0x00000000036db368
  0x00000000036dc771: mov    %r11d,0x68(%rsp)
  0x00000000036dc776: mov    %r10,%rbp          ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc779: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000000036dc783: mov    0x68(%rsp),%r8d
  0x00000000036dc788: data16 xchg %ax,%ax
  0x00000000036dc78b: callq  0x0000000003694f60  ; OopMap{rbp=Oop [48]=Oop [80]=Oop [88]=NarrowOop [96]=Oop off=8560}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000036dc790: mov    %rax,%r10
  0x00000000036dc793: jmpq   0x00000000036db3ee
  0x00000000036dc798: mov    %r11,0x20(%rsp)    ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc79d: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000000036dc7a7: callq  0x0000000003694e60  ; OopMap{rbp=NarrowOop [32]=Oop off=8588}
                                                ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000036dc7ac: mov    0x20(%rsp),%r11
  0x00000000036dc7b1: mov    %rax,%rbx
  0x00000000036dc7b4: jmpq   0x00000000036db5c6  ;*invokespecial isLetter
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc7b9: mov    $0xffffffe4,%edx
  0x00000000036dc7be: mov    0x50(%rsp),%r8
  0x00000000036dc7c3: mov    %r8,0x20(%rsp)
  0x00000000036dc7c8: mov    %r10d,0x2c(%rsp)
  0x00000000036dc7cd: mov    %r11,0x40(%rsp)
  0x00000000036dc7d2: mov    %r11,0x48(%rsp)
  0x00000000036dc7d7: mov    %r13d,0x34(%rsp)
  0x00000000036dc7dc: mov    %esi,0x58(%rsp)
  0x00000000036dc7e0: data16 xchg %ax,%ax
  0x00000000036dc7e3: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [32]=Oop [64]=Oop [72]=Oop [96]=Oop off=8648}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000036dc7e8: int3                      ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@28 (line 87)

  0x00000000036dc7e9: lock cmpxchg %rdi,(%r11)  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc7ee: lea    0xb0(%rsp),%rbx    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc7f6: mov    (%r11),%rax
  0x00000000036dc7f9: test   $0x2,%rax
  0x00000000036dc7ff: jne    0x00000000036dc825
  0x00000000036dc801: or     $0x1,%rax
  0x00000000036dc805: mov    %rax,(%rbx)
  0x00000000036dc808: lock cmpxchg %rbx,(%r11)
  0x00000000036dc80d: je     0x00000000036dc83e
  0x00000000036dc813: sub    %rsp,%rax
  0x00000000036dc816: and    $0xfffffffffffff007,%rax
  0x00000000036dc81d: mov    %rax,(%rbx)
  0x00000000036dc820: jmpq   0x00000000036dc83e
  0x00000000036dc825: movq   $0x3,(%rbx)
  0x00000000036dc82c: mov    %rax,%rbx
  0x00000000036dc82f: mov    0x16(%rbx),%rax
  0x00000000036dc833: test   %rax,%rax
  0x00000000036dc836: jne    0x00000000036dc83e
  0x00000000036dc838: lock cmpxchg %r15,0x16(%rbx)
  0x00000000036dc83e: je     0x00000000036db8fb  ;*arraylength
                                                ; - java.util.Arrays::copyOf@9 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc844: mov    %esi,0x38(%rsp)
  0x00000000036dc848: mov    %r10d,0x24(%rsp)
  0x00000000036dc84d: mov    %r11,0x30(%rsp)
  0x00000000036dc852: rex.W pushq 0x40(%rsp)
  0x00000000036dc857: rex.W popq 0x28(%rsp)
  0x00000000036dc85c: mov    0x50(%rsp),%rbp
  0x00000000036dc861: mov    0x30(%rsp),%rdx
  0x00000000036dc866: lea    0xb0(%rsp),%r8     ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc86e: nop
  0x00000000036dc86f: callq  0x0000000003693720  ; OopMap{rbp=Oop [48]=Oop [96]=Oop off=8788}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000036dc874: mov    %rbp,0x50(%rsp)
  0x00000000036dc879: mov    0x28(%rsp),%r14
  0x00000000036dc87e: mov    0x30(%rsp),%r11
  0x00000000036dc883: mov    0x24(%rsp),%r10d
  0x00000000036dc888: mov    0x38(%rsp),%esi
  0x00000000036dc88c: jmpq   0x00000000036db8fb
  0x00000000036dc891: test   $0x7,%r9
  0x00000000036dc898: jne    0x00000000036dc7e9  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc89e: test   $0x300,%r9
  0x00000000036dc8a5: jne    0x00000000036dc8b4  ;*arraylength
                                                ; - java.util.Arrays::copyOf@9 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc8a7: and    $0x37f,%rax
  0x00000000036dc8ae: mov    %rax,%r8           ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc8b1: or     %r15,%r8           ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc8b4: lock cmpxchg %r8,(%r11)
  0x00000000036dc8b9: jne    0x00000000036dc844  ;*arraylength
                                                ; - java.util.Arrays::copyOf@9 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc8bb: jmpq   0x00000000036db8fb
  0x00000000036dc8c0: lea    0xb0(%rsp),%rax    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc8c8: cmpq   $0x0,(%rax)
  0x00000000036dc8cf: je     0x00000000036dc949
  0x00000000036dc8d5: mov    (%r11),%r8
  0x00000000036dc8d8: test   $0x2,%r8
  0x00000000036dc8df: je     0x00000000036dc941
  0x00000000036dc8e1: mov    0x16(%r8),%rax
  0x00000000036dc8e5: xor    %r15,%rax
  0x00000000036dc8e8: or     0x26(%r8),%rax
  0x00000000036dc8ec: jne    0x00000000036dc949
  0x00000000036dc8ee: mov    0x36(%r8),%rax
  0x00000000036dc8f2: or     0x3e(%r8),%rax
  0x00000000036dc8f6: jne    0x00000000036dc902
  0x00000000036dc8f8: movq   $0x0,0x16(%r8)
  0x00000000036dc900: jmp    0x00000000036dc949
  0x00000000036dc902: cmpq   $0x0,0x46(%r8)
  0x00000000036dc90a: je     0x00000000036dc935
  0x00000000036dc90c: movq   $0x0,0x16(%r8)
  0x00000000036dc914: lock addl $0x0,(%rsp)
  0x00000000036dc919: cmpq   $0x0,0x46(%r8)
  0x00000000036dc921: jne    0x00000000036dc93a
  0x00000000036dc923: movabs $0x0,%rax
  0x00000000036dc92d: lock cmpxchg %r15,0x16(%r8)
  0x00000000036dc933: jne    0x00000000036dc93a
  0x00000000036dc935: or     $0x1,%eax
  0x00000000036dc938: jmp    0x00000000036dc949
  0x00000000036dc93a: test   $0x0,%eax
  0x00000000036dc93f: jmp    0x00000000036dc949
  0x00000000036dc941: mov    (%rax),%r8
  0x00000000036dc944: lock cmpxchg %r8,(%r11)
  0x00000000036dc949: je     0x00000000036db85a  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc94f: mov    %r10d,0x28(%rsp)
  0x00000000036dc954: mov    %r11,0x20(%rsp)
  0x00000000036dc959: mov    %r11,%rcx
  0x00000000036dc95c: lea    0xb0(%rsp),%rdx    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc964: movabs $0x54fdce00,%r10
  0x00000000036dc96e: callq  *%r10              ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc971: mov    0x20(%rsp),%r11
  0x00000000036dc976: mov    0x28(%rsp),%r10d
  0x00000000036dc97b: jmpq   0x00000000036db85a
  0x00000000036dc980: vmovq  %rcx,%xmm0
  0x00000000036dc985: mov    %rdi,%rdx
  0x00000000036dc988: mov    %r10d,0x28(%rsp)
  0x00000000036dc98d: mov    %r11,0x20(%rsp)
  0x00000000036dc992: movslq %esi,%r8           ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dc995: mov    %r8,%r10
  0x00000000036dc998: shl    %r10
  0x00000000036dc99b: add    $0x10,%r10         ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 103)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dc99f: mov    %r10,%r11
  0x00000000036dc9a2: and    $0xfffffffffffffff9,%r11
  0x00000000036dc9a6: mov    %r13,%rdi
  0x00000000036dc9a9: add    %r11,%rdi
  0x00000000036dc9ac: shr    $0x3,%r10
  0x00000000036dc9b0: sub    %r10,%r9
  0x00000000036dc9b3: mov    %r9,%rcx
  0x00000000036dc9b6: xor    %rax,%rax
  0x00000000036dc9b9: shl    $0x3,%rcx
  0x00000000036dc9bd: rep rex.W stos %al,%es:(%rdi)  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dc9c0: vmovq  %xmm0,%rcx
  0x00000000036dc9c5: movabs $0x35e2980,%r10
  0x00000000036dc9cf: callq  *%r10              ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dc9d2: mov    0x20(%rsp),%r11
  0x00000000036dc9d7: mov    0x28(%rsp),%r10d
  0x00000000036dc9dc: jmpq   0x00000000036dbe5f
  0x00000000036dc9e1: mov    %edi,0x98(%rsp)
  0x00000000036dc9e8: mov    %ebx,0x9c(%rsp)    ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dc9ef: mov    %r8,0x70(%rsp)
  0x00000000036dc9f4: mov    %rdx,0x68(%rsp)
  0x00000000036dc9f9: mov    %r9d,0x44(%rsp)
  0x00000000036dc9fe: mov    %esi,0x40(%rsp)
  0x00000000036dca02: mov    %r10d,0x2c(%rsp)
  0x00000000036dca07: mov    %r11,0x38(%rsp)
  0x00000000036dca0c: mov    %r14,0x30(%rsp)
  0x00000000036dca11: mov    0x78(%rsp),%r10d
  0x00000000036dca16: mov    %r10d,0x28(%rsp)
  0x00000000036dca1b: mov    0x50(%rsp),%r10
  0x00000000036dca20: mov    %r10,0x20(%rsp)    ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)
                                                ; - java.io.WinNTFileSystem::normalize@100 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dca25: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000000036dca2f: mov    %r9d,%r8d
  0x00000000036dca32: nop
  0x00000000036dca33: callq  0x0000000003693360  ; OopMap{rbp=Oop [32]=Oop [56]=Oop [96]=Oop [152]=NarrowOop off=9240}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000036dca38: mov    %rax,%rbx
  0x00000000036dca3b: jmpq   0x00000000036dba78  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dca40: movzwl 0x14(%rbx,%r8,2),%r9d
  0x00000000036dca46: cmp    $0x5c,%r9d
  0x00000000036dca4a: je     0x00000000036dd15d
  0x00000000036dca50: cmp    $0x2f,%r9d
  0x00000000036dca54: je     0x00000000036dd15d  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dca5a: add    $0x2,%r10d         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dca5e: jmpq   0x00000000036db443
  0x00000000036dca63: mov    $0xffffff65,%edx
  0x00000000036dca68: mov    %r10d,0x24(%rsp)
  0x00000000036dca6d: mov    %r11,0x30(%rsp)
  0x00000000036dca72: mov    %r8d,0x40(%rsp)
  0x00000000036dca77: callq  0x00000000035d57a0  ; OopMap{[48]=Oop [80]=Oop [96]=Oop off=9308}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000036dca7c: int3                      ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@25 (line 86)

  0x00000000036dca7d: mov    $0xffffff65,%edx
  0x00000000036dca82: mov    %r10d,0x24(%rsp)
  0x00000000036dca87: mov    %r11,0x30(%rsp)
  0x00000000036dca8c: mov    %r8d,0x40(%rsp)
  0x00000000036dca91: mov    %r9d,0x44(%rsp)
  0x00000000036dca96: nop
  0x00000000036dca97: callq  0x00000000035d57a0  ; OopMap{[48]=Oop [80]=Oop [96]=Oop off=9340}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000036dca9c: int3                      ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@25 (line 86)

  0x00000000036dca9d: mov    0x28(%rsp),%rdx
  0x00000000036dcaa2: mov    0x5c(%rsp),%r8d
  0x00000000036dcaa7: mov    %rdx,%rbp
  0x00000000036dcaaa: nop
  0x00000000036dcaab: callq  0x00000000035d61a0  ; OopMap{rbp=Oop off=9360}
                                                ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@146 (line 129)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {optimized virtual_call}
  0x00000000036dcab0: mov    0x20(%rsp),%r14
  0x00000000036dcab5: mov    %rbp,%r11
  0x00000000036dcab8: jmpq   0x00000000036db547
  0x00000000036dcabd: mov    $0xffffff86,%edx   ;*iload_2
                                                ; - java.io.WinNTFileSystem::normalizePrefix@28 (line 179)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dcac2: mov    %rcx,%rbp
  0x00000000036dcac5: mov    %r11d,0x20(%rsp)
  0x00000000036dcaca: mov    %r8d,0x24(%rsp)
  0x00000000036dcacf: mov    %r9d,0x28(%rsp)
  0x00000000036dcad4: mov    %r10,0x30(%rsp)
  0x00000000036dcad9: xchg   %ax,%ax
  0x00000000036dcadb: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [48]=Oop off=9408}
                                                ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@28 (line 87)
                                                ;   {runtime_call}
  0x00000000036dcae0: int3   
  0x00000000036dcae1: mov    %r8d,%r10d         ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@64 (line 120)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dcae4: mov    $0xffffff65,%edx   ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@103 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dcae9: mov    0x50(%rsp),%rbp
  0x00000000036dcaee: mov    %ebx,0x20(%rsp)
  0x00000000036dcaf2: mov    %r9d,0x28(%rsp)
  0x00000000036dcaf7: mov    %r10d,0x2c(%rsp)
  0x00000000036dcafc: mov    %ecx,0x34(%rsp)
  0x00000000036dcb00: mov    %ecx,0x40(%rsp)
  0x00000000036dcb04: data16 xchg %ax,%ax
  0x00000000036dcb07: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [96]=Oop off=9452}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)
                                                ;   {runtime_call}
  0x00000000036dcb0c: int3                      ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 82)

  0x00000000036dcb0d: mov    %rbp,%r14
  0x00000000036dcb10: mov    0x20(%rsp),%r11
  0x00000000036dcb15: jmpq   0x00000000036db547
  0x00000000036dcb1a: mov    %r8d,%r10d         ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@64 (line 120)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dcb1d: mov    $0xffffff65,%edx   ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dcb22: mov    0x50(%rsp),%rbp
  0x00000000036dcb27: mov    %r9d,0x28(%rsp)
  0x00000000036dcb2c: mov    %r10d,0x2c(%rsp)
  0x00000000036dcb31: mov    %ecx,0x34(%rsp)
  0x00000000036dcb35: mov    %ecx,0x40(%rsp)
  0x00000000036dcb39: mov    %ebx,0x44(%rsp)
  0x00000000036dcb3d: xchg   %ax,%ax
  0x00000000036dcb3f: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [96]=Oop off=9508}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)
                                                ;   {runtime_call}
  0x00000000036dcb44: int3                      ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 82)

  0x00000000036dcb45: lock cmpxchg %r10,(%r11)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dcb4a: lea    0xb0(%rsp),%rbx    ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dcb52: mov    (%r11),%rax
  0x00000000036dcb55: test   $0x2,%rax
  0x00000000036dcb5b: jne    0x00000000036dcb81
  0x00000000036dcb5d: or     $0x1,%rax
  0x00000000036dcb61: mov    %rax,(%rbx)
  0x00000000036dcb64: lock cmpxchg %rbx,(%r11)
  0x00000000036dcb69: je     0x00000000036dcb9a
  0x00000000036dcb6f: sub    %rsp,%rax
  0x00000000036dcb72: and    $0xfffffffffffff007,%rax
  0x00000000036dcb79: mov    %rax,(%rbx)
  0x00000000036dcb7c: jmpq   0x00000000036dcb9a
  0x00000000036dcb81: movq   $0x3,(%rbx)
  0x00000000036dcb88: mov    %rax,%rbx
  0x00000000036dcb8b: mov    0x16(%rbx),%rax
  0x00000000036dcb8f: test   %rax,%rax
  0x00000000036dcb92: jne    0x00000000036dcb9a
  0x00000000036dcb94: lock cmpxchg %r15,0x16(%rbx)
  0x00000000036dcb9a: je     0x00000000036dab2a  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dcba0: mov    %r11,%rbp
  0x00000000036dcba3: mov    %r11,%rdx
  0x00000000036dcba6: lea    0xb0(%rsp),%r8     ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dcbae: nop
  0x00000000036dcbaf: callq  0x0000000003693720  ; OopMap{rbp=Oop off=9620}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::toString@-1 (line 668)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000036dcbb4: mov    %rbp,%r11
  0x00000000036dcbb7: jmpq   0x00000000036dab2a  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dcbbc: test   $0x7,%r9
  0x00000000036dcbc3: jne    0x00000000036dcb45
  0x00000000036dcbc9: test   $0x300,%r9
  0x00000000036dcbd0: jne    0x00000000036dcbdf  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dcbd2: and    $0x37f,%rax
  0x00000000036dcbd9: mov    %rax,%r8           ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dcbdc: or     %r15,%r8           ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dcbdf: lock cmpxchg %r8,(%r11)
  0x00000000036dcbe4: jne    0x00000000036dcba0  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dcbe6: jmpq   0x00000000036dab2a
  0x00000000036dcbeb: lea    0xb0(%rsp),%rax    ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dcbf3: cmpq   $0x0,(%rax)
  0x00000000036dcbfa: je     0x00000000036dcc74
  0x00000000036dcc00: mov    (%r11),%r10
  0x00000000036dcc03: test   $0x2,%r10
  0x00000000036dcc0a: je     0x00000000036dcc6c
  0x00000000036dcc0c: mov    0x16(%r10),%rax
  0x00000000036dcc10: xor    %r15,%rax
  0x00000000036dcc13: or     0x26(%r10),%rax
  0x00000000036dcc17: jne    0x00000000036dcc74
  0x00000000036dcc19: mov    0x36(%r10),%rax
  0x00000000036dcc1d: or     0x3e(%r10),%rax
  0x00000000036dcc21: jne    0x00000000036dcc2d
  0x00000000036dcc23: movq   $0x0,0x16(%r10)
  0x00000000036dcc2b: jmp    0x00000000036dcc74
  0x00000000036dcc2d: cmpq   $0x0,0x46(%r10)
  0x00000000036dcc35: je     0x00000000036dcc60
  0x00000000036dcc37: movq   $0x0,0x16(%r10)
  0x00000000036dcc3f: lock addl $0x0,(%rsp)
  0x00000000036dcc44: cmpq   $0x0,0x46(%r10)
  0x00000000036dcc4c: jne    0x00000000036dcc65
  0x00000000036dcc4e: movabs $0x0,%rax
  0x00000000036dcc58: lock cmpxchg %r15,0x16(%r10)
  0x00000000036dcc5e: jne    0x00000000036dcc65
  0x00000000036dcc60: or     $0x1,%eax
  0x00000000036dcc63: jmp    0x00000000036dcc74
  0x00000000036dcc65: test   $0x0,%eax
  0x00000000036dcc6a: jmp    0x00000000036dcc74
  0x00000000036dcc6c: mov    (%rax),%r10
  0x00000000036dcc6f: lock cmpxchg %r10,(%r11)
  0x00000000036dcc74: je     0x00000000036dac0a  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dcc7a: mov    %r11,%rcx
  0x00000000036dcc7d: lea    0xb0(%rsp),%rdx    ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dcc85: movabs $0x54fdce00,%r10
  0x00000000036dcc8f: callq  *%r10              ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dcc92: jmpq   0x00000000036dac0a
  0x00000000036dcc97: movslq %ecx,%rbx          ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dcc9a: jmpq   0x00000000036daf21
  0x00000000036dcc9f: mov    %rbx,%rdi
  0x00000000036dcca2: xor    %rax,%rax
  0x00000000036dcca5: shl    $0x3,%rcx
  0x00000000036dcca9: rep rex.W stos %al,%es:(%rdi)  ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@19 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dccac: xor    %r8d,%r8d
  0x00000000036dccaf: xor    %edi,%edi
  0x00000000036dccb1: mov    0x60(%rsp),%rbp
  0x00000000036dccb6: nop
  0x00000000036dccb7: callq  0x000000000369fea0  ; OopMap{rbp=Oop [32]=Oop [80]=Oop [96]=Oop [120]=Oop off=9884}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000036dccbc: jmpq   0x00000000036db03a
  0x00000000036dccc1: mov    %rbx,%rdi
  0x00000000036dccc4: xor    %rax,%rax
  0x00000000036dccc7: shl    $0x3,%rcx
  0x00000000036dcccb: rep rex.W stos %al,%es:(%rdi)  ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dccce: jmpq   0x00000000036db03a  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dccd3: mov    $0xffffff65,%edx
  0x00000000036dccd8: mov    0x50(%rsp),%rbp
  0x00000000036dccdd: mov    0x5c(%rsp),%r9d
  0x00000000036dcce2: mov    %r9d,0x24(%rsp)
  0x00000000036dcce7: mov    0x68(%rsp),%r8d
  0x00000000036dccec: mov    %r8d,0x38(%rsp)
  0x00000000036dccf1: mov    %r11,0x40(%rsp)
  0x00000000036dccf6: mov    %r10d,0x50(%rsp)
  0x00000000036dccfb: mov    %r10d,0x54(%rsp)
  0x00000000036dcd00: data16 xchg %ax,%ax
  0x00000000036dcd03: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [64]=Oop [96]=Oop off=9960}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000036dcd08: int3                      ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 380)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dcd09: mov    $0xffffff65,%edx
  0x00000000036dcd0e: mov    0x50(%rsp),%rbp
  0x00000000036dcd13: mov    0x68(%rsp),%r9d
  0x00000000036dcd18: mov    %r9d,0x38(%rsp)
  0x00000000036dcd1d: mov    %r11,0x40(%rsp)
  0x00000000036dcd22: mov    %r10d,0x50(%rsp)
  0x00000000036dcd27: mov    %r10d,0x54(%rsp)
  0x00000000036dcd2c: mov    %r9d,0x58(%rsp)
  0x00000000036dcd31: xchg   %ax,%ax
  0x00000000036dcd33: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [64]=Oop [96]=Oop off=10008}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000036dcd38: int3   
  0x00000000036dcd39: mov    $0xffffffe4,%edx
  0x00000000036dcd3e: mov    0x50(%rsp),%rbp
  0x00000000036dcd43: mov    0x68(%rsp),%r8d
  0x00000000036dcd48: mov    %r8d,0x38(%rsp)
  0x00000000036dcd4d: mov    %r11,0x40(%rsp)
  0x00000000036dcd52: mov    %r10d,0x48(%rsp)
  0x00000000036dcd57: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [64]=Oop [88]=NarrowOop [96]=Oop off=10044}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000036dcd5c: int3   
  0x00000000036dcd5d: mov    $0xffffffe4,%edx
  0x00000000036dcd62: mov    0x50(%rsp),%r9
  0x00000000036dcd67: mov    %r9,0x20(%rsp)
  0x00000000036dcd6c: mov    0x5c(%rsp),%ecx
  0x00000000036dcd70: mov    %ecx,0x2c(%rsp)
  0x00000000036dcd74: mov    %r11,0x48(%rsp)
  0x00000000036dcd79: mov    %r10d,0x44(%rsp)
  0x00000000036dcd7e: mov    %r8d,0x5c(%rsp)
  0x00000000036dcd83: callq  0x00000000035d57a0  ; OopMap{[32]=Oop [72]=Oop [88]=NarrowOop [96]=Oop off=10088}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000036dcd88: int3                      ;*invokespecial normalizePrefix
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dcd89: add    $0x4,%r10d         ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dcd8d: cmp    0x28(%rsp),%r10d
  0x00000000036dcd92: jl     0x00000000036db2d8  ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dcd98: cmp    0x68(%rsp),%r10d
  0x00000000036dcd9d: jge    0x00000000036da9f1  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 103)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dcda3: test   %r10d,%r10d
  0x00000000036dcda6: jl     0x00000000036dccd3
  0x00000000036dcdac: cmp    0x68(%rsp),%r10d
  0x00000000036dcdb1: jge    0x00000000036dcd09  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dcdb7: movzwl 0x10(%r9,%r10,2),%r8d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dcdbd: cmp    $0x5c,%r8d
  0x00000000036dcdc1: je     0x00000000036dcdcd
  0x00000000036dcdc3: cmp    $0x2f,%r8d
  0x00000000036dcdc7: jne    0x00000000036da9f1  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dcdcd: inc    %r10d              ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 103)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dcdd0: cmp    0x68(%rsp),%r10d
  0x00000000036dcdd5: jl     0x00000000036dcda3  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dcdd7: jmpq   0x00000000036da9f1
  0x00000000036dcddc: mov    $0xffffff65,%edx   ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dcde1: mov    0x50(%rsp),%rbp
  0x00000000036dcde6: mov    %ecx,0x24(%rsp)
  0x00000000036dcdea: mov    %ebx,0x28(%rsp)
  0x00000000036dcdee: nop
  0x00000000036dcdef: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [96]=Oop off=10196}
                                                ;*ifne
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 103)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000036dcdf4: int3                      ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 82)

  0x00000000036dcdf5: mov    $0xffffff65,%edx   ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dcdfa: mov    0x50(%rsp),%rbp
  0x00000000036dcdff: mov    %ebx,0x20(%rsp)
  0x00000000036dce03: mov    %ecx,0x28(%rsp)
  0x00000000036dce07: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [96]=Oop off=10220}
                                                ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@8 (line 104)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000036dce0c: int3   
  0x00000000036dce0d: mov    $0xffffffe4,%edx
  0x00000000036dce12: mov    %r11,0x30(%rsp)
  0x00000000036dce17: mov    %ecx,0x2c(%rsp)
  0x00000000036dce1b: mov    %r10d,0x38(%rsp)
  0x00000000036dce20: mov    0x60(%rsp),%r10
  0x00000000036dce25: mov    %r10,0x48(%rsp)
  0x00000000036dce2a: nop
  0x00000000036dce2b: callq  0x00000000035d57a0  ; OopMap{[44]=NarrowOop [48]=Oop [72]=Oop [80]=Oop [96]=Oop off=10256}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000036dce30: int3                      ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dce31: mov    $0xffffff65,%edx
  0x00000000036dce36: mov    %r10d,0x24(%rsp)
  0x00000000036dce3b: mov    %r11,0x30(%rsp)
  0x00000000036dce40: data16 xchg %ax,%ax
  0x00000000036dce43: callq  0x00000000035d57a0  ; OopMap{[48]=Oop [80]=Oop [96]=Oop off=10280}
                                                ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@103 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000036dce48: int3                      ;*iload_1
                                                ; - java.io.WinNTFileSystem::isLetter@12 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dce49: mov    $0xffffffe4,%edx
  0x00000000036dce4e: mov    0x50(%rsp),%rbp
  0x00000000036dce53: mov    %r10d,0x24(%rsp)
  0x00000000036dce58: mov    0x5c(%rsp),%r10d
  0x00000000036dce5d: mov    %r11,0x38(%rsp)
  0x00000000036dce62: mov    %r11,0x40(%rsp)
  0x00000000036dce67: mov    %r10d,0x2c(%rsp)
  0x00000000036dce6c: mov    0x60(%rsp),%r10
  0x00000000036dce71: mov    %r10,0x50(%rsp)
  0x00000000036dce76: mov    %rdi,0x58(%rsp)
  0x00000000036dce7b: mov    %r9d,0x60(%rsp)
  0x00000000036dce80: data16 xchg %ax,%ax
  0x00000000036dce83: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop off=10344}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000036dce88: int3   
  0x00000000036dce89: lock cmpxchg %rdi,(%r11)  ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dce8e: lea    0xb0(%rsp),%rbx    ;*iload_1
                                                ; - java.io.WinNTFileSystem::isLetter@0 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dce96: mov    (%r11),%rax
  0x00000000036dce99: test   $0x2,%rax
  0x00000000036dce9f: jne    0x00000000036dcec5
  0x00000000036dcea1: or     $0x1,%rax
  0x00000000036dcea5: mov    %rax,(%rbx)
  0x00000000036dcea8: lock cmpxchg %rbx,(%r11)
  0x00000000036dcead: je     0x00000000036dcede
  0x00000000036dceb3: sub    %rsp,%rax
  0x00000000036dceb6: and    $0xfffffffffffff007,%rax
  0x00000000036dcebd: mov    %rax,(%rbx)
  0x00000000036dcec0: jmpq   0x00000000036dcede
  0x00000000036dcec5: movq   $0x3,(%rbx)
  0x00000000036dcecc: mov    %rax,%rbx
  0x00000000036dcecf: mov    0x16(%rbx),%rax
  0x00000000036dced3: test   %rax,%rax
  0x00000000036dced6: jne    0x00000000036dcede
  0x00000000036dced8: lock cmpxchg %r15,0x16(%rbx)
  0x00000000036dcede: je     0x00000000036db712  ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dcee4: mov    %r10d,0x24(%rsp)
  0x00000000036dcee9: mov    %r11,0x30(%rsp)
  0x00000000036dceee: rex.W pushq 0x40(%rsp)
  0x00000000036dcef3: rex.W popq 0x28(%rsp)
  0x00000000036dcef8: mov    0x50(%rsp),%rbp
  0x00000000036dcefd: mov    0x30(%rsp),%rdx
  0x00000000036dcf02: lea    0xb0(%rsp),%r8     ;*iload_1
                                                ; - java.io.WinNTFileSystem::isLetter@0 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dcf0a: nop
  0x00000000036dcf0b: callq  0x0000000003693720  ; OopMap{rbp=Oop [48]=Oop [96]=Oop off=10480}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000036dcf10: mov    %rbp,0x50(%rsp)
  0x00000000036dcf15: mov    0x28(%rsp),%r14
  0x00000000036dcf1a: mov    0x30(%rsp),%r11
  0x00000000036dcf1f: mov    0x24(%rsp),%r10d
  0x00000000036dcf24: jmpq   0x00000000036db712
  0x00000000036dcf29: test   $0x7,%r9
  0x00000000036dcf30: jne    0x00000000036dce89  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dcf36: test   $0x300,%r9
  0x00000000036dcf3d: jne    0x00000000036dcf4c  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dcf3f: and    $0x37f,%rax
  0x00000000036dcf46: mov    %rax,%r8           ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dcf49: or     %r15,%r8           ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dcf4c: lock cmpxchg %r8,(%r11)
  0x00000000036dcf51: jne    0x00000000036dcee4  ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dcf53: jmpq   0x00000000036db712  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 103)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dcf58: mov    %ecx,0xa8(%rsp)
  0x00000000036dcf5f: mov    %r8,0x70(%rsp)
  0x00000000036dcf64: mov    %r9,0x68(%rsp)
  0x00000000036dcf69: mov    %ebx,0x40(%rsp)
  0x00000000036dcf6d: mov    %r10d,0x2c(%rsp)
  0x00000000036dcf72: mov    %r11,0x38(%rsp)
  0x00000000036dcf77: mov    %r14,0x30(%rsp)
  0x00000000036dcf7c: mov    0x78(%rsp),%r11d
  0x00000000036dcf81: mov    %r11d,0x28(%rsp)
  0x00000000036dcf86: mov    0x50(%rsp),%r10
  0x00000000036dcf8b: mov    %r10,0x20(%rsp)    ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@103 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dcf90: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000000036dcf9a: mov    %ebx,%r8d
  0x00000000036dcf9d: mov    %rdi,0x98(%rsp)
  0x00000000036dcfa5: xchg   %ax,%ax
  0x00000000036dcfa7: callq  0x0000000003693360  ; OopMap{[32]=Oop [56]=Oop [96]=Oop [152]=Oop [168]=NarrowOop off=10636}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000036dcfac: mov    0x20(%rsp),%r10
  0x00000000036dcfb1: mov    %r10,0x50(%rsp)
  0x00000000036dcfb6: mov    0x28(%rsp),%r10d
  0x00000000036dcfbb: mov    %r10d,0x78(%rsp)
  0x00000000036dcfc0: mov    0x30(%rsp),%r14
  0x00000000036dcfc5: mov    0x38(%rsp),%r11
  0x00000000036dcfca: mov    0x2c(%rsp),%r10d
  0x00000000036dcfcf: mov    0x40(%rsp),%ebx
  0x00000000036dcfd3: mov    0x68(%rsp),%r9
  0x00000000036dcfd8: mov    0x70(%rsp),%r8
  0x00000000036dcfdd: mov    %rax,%r13
  0x00000000036dcfe0: jmpq   0x00000000036dbdd9
  0x00000000036dcfe5: mov    $0xffffff65,%edx
  0x00000000036dcfea: mov    0x50(%rsp),%rbp
  0x00000000036dcfef: mov    0x5c(%rsp),%r9d
  0x00000000036dcff4: mov    %r9d,0x24(%rsp)
  0x00000000036dcff9: mov    0x68(%rsp),%r8d
  0x00000000036dcffe: mov    %r8d,0x38(%rsp)
  0x00000000036dd003: mov    %r11,0x40(%rsp)
  0x00000000036dd008: mov    %r10d,0x50(%rsp)
  0x00000000036dd00d: mov    %r10d,0x54(%rsp)
  0x00000000036dd012: nop
  0x00000000036dd013: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [64]=Oop [96]=Oop off=10744}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000036dd018: int3   
  0x00000000036dd019: mov    $0xffffff65,%edx
  0x00000000036dd01e: mov    0x50(%rsp),%rbp
  0x00000000036dd023: mov    0x5c(%rsp),%ecx
  0x00000000036dd027: mov    %ecx,0x24(%rsp)
  0x00000000036dd02b: mov    %r11,0x40(%rsp)
  0x00000000036dd030: mov    %r10d,0x3c(%rsp)
  0x00000000036dd035: mov    0x60(%rsp),%r10
  0x00000000036dd03a: mov    %r10,0x50(%rsp)
  0x00000000036dd03f: mov    %r8d,0x5c(%rsp)
  0x00000000036dd044: mov    %r8d,0x60(%rsp)
  0x00000000036dd049: xchg   %ax,%ax
  0x00000000036dd04b: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [64]=Oop [80]=Oop off=10800}
                                                ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@15 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000036dd050: int3   
  0x00000000036dd051: mov    $0xffffff65,%edx
  0x00000000036dd056: mov    0x50(%rsp),%r9
  0x00000000036dd05b: mov    %r9,0x20(%rsp)
  0x00000000036dd060: mov    0x5c(%rsp),%ecx
  0x00000000036dd064: mov    %ecx,0x2c(%rsp)
  0x00000000036dd068: mov    0x68(%rsp),%r9d
  0x00000000036dd06d: mov    %r9d,0x40(%rsp)
  0x00000000036dd072: mov    %r11,0x48(%rsp)
  0x00000000036dd077: mov    %r10d,0x44(%rsp)
  0x00000000036dd07c: mov    %r8d,0x68(%rsp)
  0x00000000036dd081: xchg   %ax,%ax
  0x00000000036dd083: callq  0x00000000035d57a0  ; OopMap{[32]=Oop [72]=Oop [96]=Oop off=10856}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000036dd088: int3                      ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x00000000036dd089: mov    $0xffffff65,%edx
  0x00000000036dd08e: mov    0x50(%rsp),%rbp
  0x00000000036dd093: mov    0x68(%rsp),%r9d
  0x00000000036dd098: mov    %r9d,0x38(%rsp)
  0x00000000036dd09d: mov    %r11,0x40(%rsp)
  0x00000000036dd0a2: mov    %r10d,0x50(%rsp)
  0x00000000036dd0a7: mov    %r10d,0x54(%rsp)
  0x00000000036dd0ac: mov    %r9d,0x58(%rsp)
  0x00000000036dd0b1: xchg   %ax,%ax
  0x00000000036dd0b3: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [64]=Oop [96]=Oop off=10904}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000036dd0b8: int3                      ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 82)

  0x00000000036dd0b9: mov    $0xffffff65,%edx
  0x00000000036dd0be: mov    0x50(%rsp),%rbp
  0x00000000036dd0c3: mov    0x5c(%rsp),%ecx
  0x00000000036dd0c7: mov    %ecx,0x24(%rsp)
  0x00000000036dd0cb: mov    %r11,0x40(%rsp)
  0x00000000036dd0d0: mov    %r10d,0x3c(%rsp)
  0x00000000036dd0d5: mov    0x60(%rsp),%r10
  0x00000000036dd0da: mov    %r10,0x50(%rsp)
  0x00000000036dd0df: mov    %r8d,0x5c(%rsp)
  0x00000000036dd0e4: mov    %r8d,0x60(%rsp)
  0x00000000036dd0e9: xchg   %ax,%ax
  0x00000000036dd0eb: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [64]=Oop [80]=Oop off=10960}
                                                ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@3 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000036dd0f0: int3                      ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x00000000036dd0f1: mov    $0xffffff65,%edx
  0x00000000036dd0f6: mov    0x50(%rsp),%rbp
  0x00000000036dd0fb: mov    0x5c(%rsp),%ecx
  0x00000000036dd0ff: mov    %ecx,0x24(%rsp)
  0x00000000036dd103: mov    %r11,0x40(%rsp)
  0x00000000036dd108: mov    %r10d,0x3c(%rsp)
  0x00000000036dd10d: mov    0x60(%rsp),%r10
  0x00000000036dd112: mov    %r10,0x50(%rsp)
  0x00000000036dd117: mov    %r8d,0x5c(%rsp)
  0x00000000036dd11c: data16 xchg %ax,%ax
  0x00000000036dd11f: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [64]=Oop [80]=Oop [96]=Oop off=11012}
                                                ;*if_icmpgt
                                                ; - java.io.WinNTFileSystem::isLetter@21 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000036dd124: int3                      ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x00000000036dd125: mov    $0xffffff65,%edx
  0x00000000036dd12a: mov    0x50(%rsp),%r9
  0x00000000036dd12f: mov    %r9,0x20(%rsp)
  0x00000000036dd134: mov    0x5c(%rsp),%ecx
  0x00000000036dd138: mov    %ecx,0x2c(%rsp)
  0x00000000036dd13c: mov    0x68(%rsp),%ecx
  0x00000000036dd140: mov    %ecx,0x40(%rsp)
  0x00000000036dd144: mov    %r11,0x48(%rsp)
  0x00000000036dd149: mov    %r10d,0x44(%rsp)
  0x00000000036dd14e: mov    %ecx,0x58(%rsp)
  0x00000000036dd152: mov    %r8d,0x5c(%rsp)
  0x00000000036dd157: callq  0x00000000035d57a0  ; OopMap{[32]=Oop [72]=Oop [96]=Oop off=11068}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000036dd15c: int3                      ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dd15d: movzwl 0x16(%rbx,%r8,2),%r8d  ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@99 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dd163: cmp    $0x5c,%r8d
  0x00000000036dd167: je     0x00000000036dd4a1  ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@49 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dd16d: cmp    $0x2f,%r8d
  0x00000000036dd171: je     0x00000000036dd4a1  ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@185 (line 137)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dd177: add    $0x3,%r10d         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dd17b: jmpq   0x00000000036db443
  0x00000000036dd180: mov    $0xffffff65,%edx
  0x00000000036dd185: mov    0x50(%rsp),%rbp
  0x00000000036dd18a: mov    %r11,0x30(%rsp)
  0x00000000036dd18f: mov    %r10d,0x2c(%rsp)
  0x00000000036dd194: mov    %r10d,0x40(%rsp)
  0x00000000036dd199: mov    0x60(%rsp),%r10
  0x00000000036dd19e: mov    %r10,0x50(%rsp)
  0x00000000036dd1a3: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [48]=Oop [80]=Oop [96]=Oop off=11144}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000036dd1a8: int3                      ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@25 (line 86)

  0x00000000036dd1a9: mov    $0xffffff65,%edx
  0x00000000036dd1ae: mov    0x50(%rsp),%rbp
  0x00000000036dd1b3: mov    %r11,0x30(%rsp)
  0x00000000036dd1b8: mov    %r10d,0x2c(%rsp)
  0x00000000036dd1bd: mov    %r10d,0x40(%rsp)
  0x00000000036dd1c2: mov    %r9d,0x44(%rsp)
  0x00000000036dd1c7: mov    0x60(%rsp),%r10
  0x00000000036dd1cc: mov    %r10,0x50(%rsp)
  0x00000000036dd1d1: xchg   %ax,%ax
  0x00000000036dd1d3: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [48]=Oop [80]=Oop [96]=Oop off=11192}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000036dd1d8: int3                      ;*iload
                                                ; - java.io.WinNTFileSystem::normalize@125 (line 96)

  0x00000000036dd1d9: mov    %ecx,%edx          ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dd1db: mov    %r10d,%r8d         ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dd1de: mov    %r8d,%r10d
  0x00000000036dd1e1: mov    %edx,%ecx          ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dd1e3: mov    $0xffffff65,%edx   ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dd1e8: mov    %ecx,%ebp
  0x00000000036dd1ea: mov    %ebx,0x28(%rsp)
  0x00000000036dd1ee: mov    %r10d,0x2c(%rsp)
  0x00000000036dd1f3: callq  0x00000000035d57a0  ; OopMap{[80]=Oop [96]=Oop off=11224}
                                                ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@49 (line 89)
                                                ;   {runtime_call}
  0x00000000036dd1f8: int3                      ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 82)

  0x00000000036dd1f9: movslq %ebx,%r9           ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dd1fc: jmpq   0x00000000036db17c
  0x00000000036dd201: mov    %r13,0x30(%rsp)
  0x00000000036dd206: mov    %r14d,0x24(%rsp)
  0x00000000036dd20b: mov    %r11,0x38(%rsp)
  0x00000000036dd210: rex.W pushq 0x40(%rsp)
  0x00000000036dd215: rex.W popq 0x28(%rsp)
  0x00000000036dd21a: mov    0x68(%rsp),%r10d
  0x00000000036dd21f: mov    %r10d,0x20(%rsp)
  0x00000000036dd224: mov    0x50(%rsp),%rbp
  0x00000000036dd229: xor    %rax,%rax
  0x00000000036dd22c: shl    $0x3,%rcx
  0x00000000036dd230: rep rex.W stos %al,%es:(%rdi)  ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalizePrefix@9 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dd233: xor    %r8d,%r8d
  0x00000000036dd236: mov    %r13,%r9
  0x00000000036dd239: xor    %edi,%edi
  0x00000000036dd23b: callq  0x000000000369fea0  ; OopMap{rbp=Oop [48]=Oop [56]=Oop [96]=Oop off=11296}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000036dd240: mov    %rbp,0x50(%rsp)
  0x00000000036dd245: mov    0x20(%rsp),%r10d
  0x00000000036dd24a: mov    %r10d,0x68(%rsp)
  0x00000000036dd24f: rex.W pushq 0x28(%rsp)
  0x00000000036dd254: rex.W popq 0x40(%rsp)
  0x00000000036dd259: mov    0x38(%rsp),%r11
  0x00000000036dd25e: mov    0x24(%rsp),%r14d
  0x00000000036dd263: mov    0x30(%rsp),%r13
  0x00000000036dd268: jmpq   0x00000000036db292
  0x00000000036dd26d: xor    %rax,%rax
  0x00000000036dd270: shl    $0x3,%rcx
  0x00000000036dd274: rep rex.W stos %al,%es:(%rdi)  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dd277: jmpq   0x00000000036db292
  0x00000000036dd27c: mov    %r10d,%ebp         ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@218 (line 157)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dd27f: mov    0x50(%rsp),%rcx
  0x00000000036dd284: mov    0x60(%rsp),%r10
  0x00000000036dd289: mov    %ebx,%r11d
  0x00000000036dd28c: mov    0x5c(%rsp),%r8d    ;*goto
                                                ; - java.io.WinNTFileSystem::normalizePrefix@25 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dd291: mov    $0xffffff65,%edx
  0x00000000036dd296: mov    %rcx,0x20(%rsp)
  0x00000000036dd29b: mov    %r11d,0x28(%rsp)
  0x00000000036dd2a0: mov    %r8d,0x2c(%rsp)
  0x00000000036dd2a5: mov    %r10,0x30(%rsp)
  0x00000000036dd2aa: nop
  0x00000000036dd2ab: callq  0x00000000035d57a0  ; OopMap{[32]=Oop [48]=Oop off=11408}
                                                ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@128 (line 96)
                                                ;   {runtime_call}
  0x00000000036dd2b0: int3                      ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@28 (line 87)

  0x00000000036dd2b1: mov    $0xffffffe4,%edx
  0x00000000036dd2b6: mov    0x50(%rsp),%rbp
  0x00000000036dd2bb: mov    %r11,0x30(%rsp)
  0x00000000036dd2c0: mov    0x60(%rsp),%r10
  0x00000000036dd2c5: mov    %r10,0x40(%rsp)
  0x00000000036dd2ca: mov    %r10,0x48(%rsp)
  0x00000000036dd2cf: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [48]=Oop [64]=Oop [72]=Oop [88]=NarrowOop off=11444}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000036dd2d4: int3                      ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x00000000036dd2d5: lock cmpxchg %r10,(%r11)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dd2da: lea    0xb0(%rsp),%rbx    ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dd2e2: mov    (%r11),%rax
  0x00000000036dd2e5: test   $0x2,%rax
  0x00000000036dd2eb: jne    0x00000000036dd311
  0x00000000036dd2ed: or     $0x1,%rax
  0x00000000036dd2f1: mov    %rax,(%rbx)
  0x00000000036dd2f4: lock cmpxchg %rbx,(%r11)
  0x00000000036dd2f9: je     0x00000000036dd32a
  0x00000000036dd2ff: sub    %rsp,%rax
  0x00000000036dd302: and    $0xfffffffffffff007,%rax
  0x00000000036dd309: mov    %rax,(%rbx)
  0x00000000036dd30c: jmpq   0x00000000036dd32a
  0x00000000036dd311: movq   $0x3,(%rbx)
  0x00000000036dd318: mov    %rax,%rbx
  0x00000000036dd31b: mov    0x16(%rbx),%rax
  0x00000000036dd31f: test   %rax,%rax
  0x00000000036dd322: jne    0x00000000036dd32a
  0x00000000036dd324: lock cmpxchg %r15,0x16(%rbx)
  0x00000000036dd32a: je     0x00000000036db57b  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dd330: mov    %r11,%rbp
  0x00000000036dd333: mov    %r11,%rdx
  0x00000000036dd336: lea    0xb0(%rsp),%r8     ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dd33e: nop
  0x00000000036dd33f: callq  0x0000000003693720  ; OopMap{rbp=Oop off=11556}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::toString@-1 (line 668)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000036dd344: mov    %rbp,%r11
  0x00000000036dd347: jmpq   0x00000000036db57b  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 103)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dd34c: test   $0x7,%r9
  0x00000000036dd353: jne    0x00000000036dd2d5  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dd359: test   $0x300,%r9
  0x00000000036dd360: jne    0x00000000036dd36f  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dd362: and    $0x37f,%rax
  0x00000000036dd369: mov    %rax,%r8           ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dd36c: or     %r15,%r8           ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dd36f: lock cmpxchg %r8,(%r11)
  0x00000000036dd374: jne    0x00000000036dd330  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dd376: jmpq   0x00000000036db57b
  0x00000000036dd37b: movslq %r9d,%rdx          ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dd37e: jmpq   0x00000000036db9d5  ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dd383: mov    %r13,%rdi
  0x00000000036dd386: xor    %rax,%rax
  0x00000000036dd389: shl    $0x3,%rcx
  0x00000000036dd38d: rep rex.W stos %al,%es:(%rdi)  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dd390: xor    %r8d,%r8d
  0x00000000036dd393: mov    %rbx,%r9
  0x00000000036dd396: xor    %edi,%edi
  0x00000000036dd398: data16 xchg %ax,%ax
  0x00000000036dd39b: callq  0x000000000369fea0  ; OopMap{rbp=Oop [32]=Oop [56]=Oop [96]=Oop off=11648}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000036dd3a0: jmpq   0x00000000036dbb0e
  0x00000000036dd3a5: mov    %r13,%rdi
  0x00000000036dd3a8: xor    %rax,%rax
  0x00000000036dd3ab: shl    $0x3,%rcx
  0x00000000036dd3af: rep rex.W stos %al,%es:(%rdi)  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dd3b2: jmpq   0x00000000036dbb0e  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dd3b7: mov    $0xffffff65,%edx
  0x00000000036dd3bc: mov    0x50(%rsp),%rbp
  0x00000000036dd3c1: mov    0x5c(%rsp),%r9d
  0x00000000036dd3c6: mov    %r9d,0x24(%rsp)
  0x00000000036dd3cb: mov    0x68(%rsp),%r8d
  0x00000000036dd3d0: mov    %r8d,0x38(%rsp)
  0x00000000036dd3d5: mov    %r11,0x40(%rsp)
  0x00000000036dd3da: mov    %r10d,0x50(%rsp)
  0x00000000036dd3df: mov    %r10d,0x54(%rsp)
  0x00000000036dd3e4: data16 xchg %ax,%ax
  0x00000000036dd3e7: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [64]=Oop [96]=Oop off=11724}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000036dd3ec: int3                      ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x00000000036dd3ed: mov    $0xffffff65,%edx
  0x00000000036dd3f2: mov    0x50(%rsp),%rbp
  0x00000000036dd3f7: mov    0x5c(%rsp),%r8d
  0x00000000036dd3fc: mov    %r8d,0x24(%rsp)
  0x00000000036dd401: mov    %r11,0x30(%rsp)
  0x00000000036dd406: mov    0x60(%rsp),%r10
  0x00000000036dd40b: mov    %r10,0x50(%rsp)
  0x00000000036dd410: mov    %r10,0x58(%rsp)
  0x00000000036dd415: xchg   %ax,%ax
  0x00000000036dd417: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [48]=Oop [80]=Oop [88]=Oop off=11772}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000036dd41c: int3                      ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dd41d: mov    $0xffffff65,%edx
  0x00000000036dd422: mov    0x50(%rsp),%rbp
  0x00000000036dd427: mov    0x68(%rsp),%r9d
  0x00000000036dd42c: mov    %r9d,0x38(%rsp)
  0x00000000036dd431: mov    %r11,0x40(%rsp)
  0x00000000036dd436: mov    %r10d,0x50(%rsp)
  0x00000000036dd43b: mov    %r10d,0x54(%rsp)
  0x00000000036dd440: mov    %r9d,0x58(%rsp)
  0x00000000036dd445: xchg   %ax,%ax
  0x00000000036dd447: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [64]=Oop [96]=Oop off=11820}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000036dd44c: int3                      ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x00000000036dd44d: mov    $0xffffffe4,%edx
  0x00000000036dd452: mov    0x50(%rsp),%rbp
  0x00000000036dd457: mov    0x68(%rsp),%r9d
  0x00000000036dd45c: mov    %r9d,0x38(%rsp)
  0x00000000036dd461: mov    %r11,0x40(%rsp)
  0x00000000036dd466: mov    %r10d,0x48(%rsp)
  0x00000000036dd46b: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [64]=Oop [88]=NarrowOop [96]=Oop off=11856}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000036dd470: int3                      ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x00000000036dd471: mov    $0xffffffe4,%edx
  0x00000000036dd476: mov    0x50(%rsp),%r8
  0x00000000036dd47b: mov    %r8,0x20(%rsp)
  0x00000000036dd480: mov    0x5c(%rsp),%r8d
  0x00000000036dd485: mov    %r8d,0x2c(%rsp)
  0x00000000036dd48a: mov    %r11,0x48(%rsp)
  0x00000000036dd48f: mov    %r10d,0x44(%rsp)
  0x00000000036dd494: mov    %ecx,0x5c(%rsp)
  0x00000000036dd498: data16 xchg %ax,%ax
  0x00000000036dd49b: callq  0x00000000035d57a0  ; OopMap{[32]=Oop [72]=Oop [88]=NarrowOop [96]=Oop off=11904}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000036dd4a0: int3                      ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@49 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dd4a1: add    $0x4,%r10d         ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dd4a5: cmp    0x28(%rsp),%r10d
  0x00000000036dd4aa: jl     0x00000000036dbed1  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dd4b0: cmp    0x68(%rsp),%r10d
  0x00000000036dd4b5: jge    0x00000000036db443
  0x00000000036dd4bb: test   %r10d,%r10d
  0x00000000036dd4be: jl     0x00000000036dd3b7
  0x00000000036dd4c4: cmp    0x68(%rsp),%r10d
  0x00000000036dd4c9: jge    0x00000000036dd41d  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dd4cf: movzwl 0x10(%rbx,%r10,2),%r9d  ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@99 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dd4d5: cmp    $0x5c,%r9d
  0x00000000036dd4d9: je     0x00000000036dd4e5
  0x00000000036dd4db: cmp    $0x2f,%r9d
  0x00000000036dd4df: jne    0x00000000036db443  ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@49 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dd4e5: inc    %r10d
  0x00000000036dd4e8: cmp    0x68(%rsp),%r10d
  0x00000000036dd4ed: jl     0x00000000036dd4bb  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dd4ef: jmpq   0x00000000036db443
  0x00000000036dd4f4: mov    $0xffffff65,%edx
  0x00000000036dd4f9: mov    0x50(%rsp),%rbp
  0x00000000036dd4fe: mov    %r11d,0x24(%rsp)
  0x00000000036dd503: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [96]=Oop off=12008}
                                                ;*ifne
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 103)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000036dd508: int3                      ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x00000000036dd509: mov    $0xffffff65,%edx
  0x00000000036dd50e: mov    0x50(%rsp),%rbp
  0x00000000036dd513: mov    0x68(%rsp),%r9d
  0x00000000036dd518: mov    0x5c(%rsp),%r8d
  0x00000000036dd51d: mov    %r8d,0x24(%rsp)
  0x00000000036dd522: mov    %r9d,0x38(%rsp)
  0x00000000036dd527: mov    %r11,0x40(%rsp)
  0x00000000036dd52c: mov    %r10d,0x50(%rsp)
  0x00000000036dd531: mov    %r10d,0x54(%rsp)
  0x00000000036dd536: nop
  0x00000000036dd537: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [64]=Oop [96]=Oop off=12060}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000036dd53c: int3                      ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x00000000036dd53d: mov    $0xffffff65,%edx
  0x00000000036dd542: mov    0x50(%rsp),%rbp
  0x00000000036dd547: mov    0x5c(%rsp),%r8d
  0x00000000036dd54c: mov    %r8d,0x24(%rsp)
  0x00000000036dd551: mov    %r11,0x40(%rsp)
  0x00000000036dd556: mov    %r10d,0x3c(%rsp)
  0x00000000036dd55b: mov    0x60(%rsp),%r10
  0x00000000036dd560: mov    %r10,0x50(%rsp)
  0x00000000036dd565: mov    %ecx,0x5c(%rsp)
  0x00000000036dd569: mov    %ecx,0x60(%rsp)
  0x00000000036dd56d: xchg   %ax,%ax
  0x00000000036dd56f: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [64]=Oop [80]=Oop off=12116}
                                                ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@15 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000036dd574: int3                      ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x00000000036dd575: mov    $0xffffff65,%edx
  0x00000000036dd57a: mov    0x50(%rsp),%r8
  0x00000000036dd57f: mov    %r8,0x20(%rsp)
  0x00000000036dd584: mov    0x68(%rsp),%r9d
  0x00000000036dd589: mov    0x5c(%rsp),%r8d
  0x00000000036dd58e: mov    %r8d,0x2c(%rsp)
  0x00000000036dd593: mov    %r9d,0x40(%rsp)
  0x00000000036dd598: mov    %r11,0x48(%rsp)
  0x00000000036dd59d: mov    %r10d,0x44(%rsp)
  0x00000000036dd5a2: mov    %ecx,0x68(%rsp)
  0x00000000036dd5a6: nop
  0x00000000036dd5a7: callq  0x00000000035d57a0  ; OopMap{[32]=Oop [72]=Oop [96]=Oop off=12172}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000036dd5ac: int3                      ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x00000000036dd5ad: mov    $0xffffff65,%edx
  0x00000000036dd5b2: mov    0x50(%rsp),%rbp
  0x00000000036dd5b7: mov    0x68(%rsp),%r8d
  0x00000000036dd5bc: mov    %r8d,0x38(%rsp)
  0x00000000036dd5c1: mov    %r11,0x40(%rsp)
  0x00000000036dd5c6: mov    %r10d,0x50(%rsp)
  0x00000000036dd5cb: mov    %r10d,0x54(%rsp)
  0x00000000036dd5d0: mov    %r8d,0x58(%rsp)
  0x00000000036dd5d5: xchg   %ax,%ax
  0x00000000036dd5d7: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [64]=Oop [96]=Oop off=12220}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000036dd5dc: int3                      ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x00000000036dd5dd: mov    $0xffffff65,%edx
  0x00000000036dd5e2: mov    0x50(%rsp),%rbp
  0x00000000036dd5e7: mov    0x5c(%rsp),%r8d
  0x00000000036dd5ec: mov    %r8d,0x24(%rsp)
  0x00000000036dd5f1: mov    %r11,0x40(%rsp)
  0x00000000036dd5f6: mov    %r10d,0x3c(%rsp)
  0x00000000036dd5fb: mov    0x60(%rsp),%r10
  0x00000000036dd600: mov    %r10,0x50(%rsp)
  0x00000000036dd605: mov    %ecx,0x5c(%rsp)
  0x00000000036dd609: mov    %ecx,0x60(%rsp)
  0x00000000036dd60d: xchg   %ax,%ax
  0x00000000036dd60f: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [64]=Oop [80]=Oop off=12276}
                                                ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@3 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000036dd614: int3                      ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x00000000036dd615: mov    $0xffffff65,%edx
  0x00000000036dd61a: mov    0x50(%rsp),%rbp
  0x00000000036dd61f: mov    0x5c(%rsp),%r8d
  0x00000000036dd624: mov    %r8d,0x24(%rsp)
  0x00000000036dd629: mov    %r11,0x40(%rsp)
  0x00000000036dd62e: mov    %r10d,0x3c(%rsp)
  0x00000000036dd633: mov    0x60(%rsp),%r10
  0x00000000036dd638: mov    %r10,0x50(%rsp)
  0x00000000036dd63d: mov    %ecx,0x5c(%rsp)
  0x00000000036dd641: xchg   %ax,%ax
  0x00000000036dd643: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [64]=Oop [80]=Oop [96]=Oop off=12328}
                                                ;*if_icmpgt
                                                ; - java.io.WinNTFileSystem::isLetter@21 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000036dd648: int3                      ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x00000000036dd649: mov    $0xffffff65,%edx   ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalizePrefix@9 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dd64e: mov    0x50(%rsp),%r8
  0x00000000036dd653: mov    %r8,0x20(%rsp)
  0x00000000036dd658: mov    0x68(%rsp),%r9d
  0x00000000036dd65d: mov    0x5c(%rsp),%r8d
  0x00000000036dd662: mov    %r8d,0x2c(%rsp)
  0x00000000036dd667: mov    %r9d,0x40(%rsp)
  0x00000000036dd66c: mov    %r11,0x48(%rsp)
  0x00000000036dd671: mov    %r10d,0x44(%rsp)
  0x00000000036dd676: mov    %r9d,0x58(%rsp)
  0x00000000036dd67b: mov    %ecx,0x5c(%rsp)
  0x00000000036dd67f: callq  0x00000000035d57a0  ; OopMap{[32]=Oop [72]=Oop [96]=Oop off=12388}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000036dd684: int3                      ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x00000000036dd685: mov    %ecx,%edx
  0x00000000036dd687: jmpq   0x00000000036dd1de
  0x00000000036dd68c: lock cmpxchg %rdx,(%r11)  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dd691: lea    0xb0(%rsp),%rbx
  0x00000000036dd699: mov    (%r11),%rax
  0x00000000036dd69c: test   $0x2,%rax
  0x00000000036dd6a2: jne    0x00000000036dd6c8
  0x00000000036dd6a4: or     $0x1,%rax
  0x00000000036dd6a8: mov    %rax,(%rbx)
  0x00000000036dd6ab: lock cmpxchg %rbx,(%r11)
  0x00000000036dd6b0: je     0x00000000036dd6e1
  0x00000000036dd6b6: sub    %rsp,%rax
  0x00000000036dd6b9: and    $0xfffffffffffff007,%rax
  0x00000000036dd6c0: mov    %rax,(%rbx)
  0x00000000036dd6c3: jmpq   0x00000000036dd6e1
  0x00000000036dd6c8: movq   $0x3,(%rbx)
  0x00000000036dd6cf: mov    %rax,%rbx
  0x00000000036dd6d2: mov    0x16(%rbx),%rax
  0x00000000036dd6d6: test   %rax,%rax
  0x00000000036dd6d9: jne    0x00000000036dd6e1
  0x00000000036dd6db: lock cmpxchg %r15,0x16(%rbx)
  0x00000000036dd6e1: je     0x00000000036dbc5f
  0x00000000036dd6e7: mov    %r11,0x20(%rsp)
  0x00000000036dd6ec: mov    0x40(%rsp),%rbp
  0x00000000036dd6f1: mov    %r11,%rdx
  0x00000000036dd6f4: lea    0xb0(%rsp),%r8     ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dd6fc: data16 xchg %ax,%ax
  0x00000000036dd6ff: callq  0x0000000003693720  ; OopMap{[32]=Oop [96]=Oop off=12516}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.WinNTFileSystem::normalize@120 (line 126)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000036dd704: mov    %rbp,0x40(%rsp)
  0x00000000036dd709: mov    0x20(%rsp),%r11
  0x00000000036dd70e: jmpq   0x00000000036dbc5f
  0x00000000036dd713: lea    0xb0(%rsp),%rax    ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dd71b: cmpq   $0x0,(%rax)
  0x00000000036dd722: je     0x00000000036dd79c
  0x00000000036dd728: mov    (%r11),%r10
  0x00000000036dd72b: test   $0x2,%r10
  0x00000000036dd732: je     0x00000000036dd794
  0x00000000036dd734: mov    0x16(%r10),%rax
  0x00000000036dd738: xor    %r15,%rax
  0x00000000036dd73b: or     0x26(%r10),%rax
  0x00000000036dd73f: jne    0x00000000036dd79c
  0x00000000036dd741: mov    0x36(%r10),%rax
  0x00000000036dd745: or     0x3e(%r10),%rax
  0x00000000036dd749: jne    0x00000000036dd755
  0x00000000036dd74b: movq   $0x0,0x16(%r10)
  0x00000000036dd753: jmp    0x00000000036dd79c
  0x00000000036dd755: cmpq   $0x0,0x46(%r10)
  0x00000000036dd75d: je     0x00000000036dd788
  0x00000000036dd75f: movq   $0x0,0x16(%r10)
  0x00000000036dd767: lock addl $0x0,(%rsp)
  0x00000000036dd76c: cmpq   $0x0,0x46(%r10)
  0x00000000036dd774: jne    0x00000000036dd78d
  0x00000000036dd776: movabs $0x0,%rax
  0x00000000036dd780: lock cmpxchg %r15,0x16(%r10)
  0x00000000036dd786: jne    0x00000000036dd78d
  0x00000000036dd788: or     $0x1,%eax
  0x00000000036dd78b: jmp    0x00000000036dd79c
  0x00000000036dd78d: test   $0x0,%eax
  0x00000000036dd792: jmp    0x00000000036dd79c
  0x00000000036dd794: mov    (%rax),%r10
  0x00000000036dd797: lock cmpxchg %r10,(%r11)
  0x00000000036dd79c: je     0x00000000036dbc76  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dd7a2: mov    %r11,%r13
  0x00000000036dd7a5: mov    %r11,%rcx
  0x00000000036dd7a8: lea    0xb0(%rsp),%rdx    ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dd7b0: movabs $0x54fdce00,%r10
  0x00000000036dd7ba: callq  *%r10              ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::isSlash@-1 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@16 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dd7bd: mov    %r13,%r11
  0x00000000036dd7c0: jmpq   0x00000000036dbc76
  0x00000000036dd7c5: test   $0x7,%r8
  0x00000000036dd7cc: jne    0x00000000036dd68c  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dd7d2: test   $0x300,%r8
  0x00000000036dd7d9: jne    0x00000000036dd7e8  ;*invokespecial &lt;init&gt;
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dd7db: and    $0x37f,%rax
  0x00000000036dd7e2: mov    %rax,%r10          ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dd7e5: or     %r15,%r10          ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 103)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dd7e8: lock cmpxchg %r10,(%r11)  ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@19 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dd7ed: jne    0x00000000036dd6e7
  0x00000000036dd7f3: jmpq   0x00000000036dbc5f
  0x00000000036dd7f8: movslq %ebx,%r9           ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dd7fb: jmpq   0x00000000036dbd70  ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@33 (line 179)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dd800: mov    %r13,0x30(%rsp)
  0x00000000036dd805: mov    %r10d,0x24(%rsp)
  0x00000000036dd80a: mov    %r11,0x38(%rsp)
  0x00000000036dd80f: mov    %r14,0x28(%rsp)
  0x00000000036dd814: mov    0x78(%rsp),%r10d
  0x00000000036dd819: mov    %r10d,0x20(%rsp)
  0x00000000036dd81e: mov    0x50(%rsp),%rbp
  0x00000000036dd823: xor    %rax,%rax
  0x00000000036dd826: shl    $0x3,%rcx
  0x00000000036dd82a: rep rex.W stos %al,%es:(%rdi)  ;*invokespecial normalizePrefix
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dd82d: xor    %r8d,%r8d
  0x00000000036dd830: mov    %r13,%r9
  0x00000000036dd833: xor    %edi,%edi
  0x00000000036dd835: xchg   %ax,%ax
  0x00000000036dd837: callq  0x000000000369fea0  ; OopMap{rbp=Oop [48]=Oop [56]=Oop [96]=Oop off=12828}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000036dd83c: mov    %rbp,0x50(%rsp)
  0x00000000036dd841: mov    0x20(%rsp),%r11d
  0x00000000036dd846: mov    %r11d,0x78(%rsp)
  0x00000000036dd84b: mov    0x28(%rsp),%r14
  0x00000000036dd850: mov    0x38(%rsp),%r11
  0x00000000036dd855: mov    0x24(%rsp),%r10d
  0x00000000036dd85a: mov    0x30(%rsp),%r13
  0x00000000036dd85f: jmpq   0x00000000036dbe5f
  0x00000000036dd864: xor    %rax,%rax
  0x00000000036dd867: shl    $0x3,%rcx
  0x00000000036dd86b: rep rex.W stos %al,%es:(%rdi)
  0x00000000036dd86e: jmpq   0x00000000036dbe5f
  0x00000000036dd873: mov    $0xffffffe4,%edx
  0x00000000036dd878: mov    0x50(%rsp),%rbp
  0x00000000036dd87d: mov    %r11,0x30(%rsp)
  0x00000000036dd882: mov    0x60(%rsp),%r10
  0x00000000036dd887: mov    %r10,0x40(%rsp)
  0x00000000036dd88c: mov    %r10,0x48(%rsp)
  0x00000000036dd891: xchg   %ax,%ax
  0x00000000036dd893: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [48]=Oop [64]=Oop [72]=Oop [88]=NarrowOop off=12920}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000036dd898: int3                      ;*iload
                                                ; - java.io.WinNTFileSystem::normalize@22 (line 86)

  0x00000000036dd899: mov    $0xffffff65,%edx
  0x00000000036dd89e: mov    0x50(%rsp),%rbp
  0x00000000036dd8a3: mov    0x5c(%rsp),%r10d
  0x00000000036dd8a8: mov    %r10d,0x24(%rsp)
  0x00000000036dd8ad: mov    %r11,0x30(%rsp)
  0x00000000036dd8b2: mov    0x60(%rsp),%r10
  0x00000000036dd8b7: mov    %r10,0x50(%rsp)
  0x00000000036dd8bc: mov    %r10,0x58(%rsp)
  0x00000000036dd8c1: xchg   %ax,%ax
  0x00000000036dd8c3: callq  0x00000000035d57a0  ; OopMap{rbp=Oop [48]=Oop [80]=Oop [88]=Oop off=12968}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000036dd8c8: int3                      ;*getfield altSlash
                                                ; - java.io.WinNTFileSystem::normalize@11 (line 84)

  0x00000000036dd8c9: lock cmpxchg %rdi,(%r11)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dd8ce: lea    0xb0(%rsp),%rbx    ;*invokespecial normalizePrefix
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dd8d6: mov    (%r11),%rax
  0x00000000036dd8d9: test   $0x2,%rax
  0x00000000036dd8df: jne    0x00000000036dd905
  0x00000000036dd8e1: or     $0x1,%rax
  0x00000000036dd8e5: mov    %rax,(%rbx)
  0x00000000036dd8e8: lock cmpxchg %rbx,(%r11)
  0x00000000036dd8ed: je     0x00000000036dd91e
  0x00000000036dd8f3: sub    %rsp,%rax
  0x00000000036dd8f6: and    $0xfffffffffffff007,%rax
  0x00000000036dd8fd: mov    %rax,(%rbx)
  0x00000000036dd900: jmpq   0x00000000036dd91e
  0x00000000036dd905: movq   $0x3,(%rbx)
  0x00000000036dd90c: mov    %rax,%rbx
  0x00000000036dd90f: mov    0x16(%rbx),%rax
  0x00000000036dd913: test   %rax,%rax
  0x00000000036dd916: jne    0x00000000036dd91e
  0x00000000036dd918: lock cmpxchg %r15,0x16(%rbx)
  0x00000000036dd91e: je     0x00000000036dc017  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 103)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dd924: mov    %r11,0x20(%rsp)
  0x00000000036dd929: mov    0x40(%rsp),%rbp
  0x00000000036dd92e: mov    %r11,%rdx
  0x00000000036dd931: lea    0xb0(%rsp),%r8     ;*invokespecial normalizePrefix
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dd939: xchg   %ax,%ax
  0x00000000036dd93b: callq  0x0000000003693720  ; OopMap{[32]=Oop [96]=Oop off=13088}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.WinNTFileSystem::normalize@120 (line 126)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000036dd940: mov    %rbp,%r14
  0x00000000036dd943: mov    0x20(%rsp),%r11
  0x00000000036dd948: jmpq   0x00000000036dc017
  0x00000000036dd94d: lea    0xb0(%rsp),%rax    ;*invokespecial normalizePrefix
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dd955: cmpq   $0x0,(%rax)
  0x00000000036dd95c: je     0x00000000036dd9d6
  0x00000000036dd962: mov    (%r11),%r10
  0x00000000036dd965: test   $0x2,%r10
  0x00000000036dd96c: je     0x00000000036dd9ce
  0x00000000036dd96e: mov    0x16(%r10),%rax
  0x00000000036dd972: xor    %r15,%rax
  0x00000000036dd975: or     0x26(%r10),%rax
  0x00000000036dd979: jne    0x00000000036dd9d6
  0x00000000036dd97b: mov    0x36(%r10),%rax
  0x00000000036dd97f: or     0x3e(%r10),%rax
  0x00000000036dd983: jne    0x00000000036dd98f
  0x00000000036dd985: movq   $0x0,0x16(%r10)
  0x00000000036dd98d: jmp    0x00000000036dd9d6
  0x00000000036dd98f: cmpq   $0x0,0x46(%r10)
  0x00000000036dd997: je     0x00000000036dd9c2
  0x00000000036dd999: movq   $0x0,0x16(%r10)
  0x00000000036dd9a1: lock addl $0x0,(%rsp)
  0x00000000036dd9a6: cmpq   $0x0,0x46(%r10)
  0x00000000036dd9ae: jne    0x00000000036dd9c7
  0x00000000036dd9b0: movabs $0x0,%rax
  0x00000000036dd9ba: lock cmpxchg %r15,0x16(%r10)
  0x00000000036dd9c0: jne    0x00000000036dd9c7
  0x00000000036dd9c2: or     $0x1,%eax
  0x00000000036dd9c5: jmp    0x00000000036dd9d6
  0x00000000036dd9c7: test   $0x0,%eax
  0x00000000036dd9cc: jmp    0x00000000036dd9d6
  0x00000000036dd9ce: mov    (%rax),%r10
  0x00000000036dd9d1: lock cmpxchg %r10,(%r11)
  0x00000000036dd9d6: je     0x00000000036dc02e  ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dd9dc: mov    %r11,%r13
  0x00000000036dd9df: mov    %r11,%rcx
  0x00000000036dd9e2: lea    0xb0(%rsp),%rdx    ;*invokespecial normalizePrefix
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dd9ea: movabs $0x54fdce00,%r10
  0x00000000036dd9f4: callq  *%r10              ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@19 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dd9f7: mov    %r13,%r11
  0x00000000036dd9fa: jmpq   0x00000000036dc02e
  0x00000000036dd9ff: test   $0x7,%r8
  0x00000000036dda06: jne    0x00000000036dd8c9  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dda0c: test   $0x300,%r8
  0x00000000036dda13: jne    0x00000000036dda22  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 103)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dda15: and    $0x37f,%rax
  0x00000000036dda1c: mov    %rax,%r10          ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dda1f: or     %r15,%r10          ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dda22: lock cmpxchg %r10,(%r11)  ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dda27: jne    0x00000000036dd924  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dda2d: jmpq   0x00000000036dc017
  0x00000000036dda32: mov    $0xfffffff6,%edx
  0x00000000036dda37: callq  0x00000000035d57a0  ; OopMap{off=13340}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000036dda3c: int3                      ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@3 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dda3d: mov    $0xfffffff6,%edx   ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000036dda42: mov    %r11,%rbp
  0x00000000036dda45: xchg   %ax,%ax
  0x00000000036dda47: callq  0x00000000035d57a0  ; OopMap{rbp=Oop off=13356}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000036dda4c: int3                      ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@15 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dda4d: mov    $0xfffffff6,%edx   ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalizePrefix@6 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dda52: mov    %r11,%rbp
  0x00000000036dda55: xchg   %ax,%ax
  0x00000000036dda57: callq  0x00000000035d57a0  ; OopMap{rbp=Oop off=13372}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000036dda5c: int3                      ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dda5d: mov    $0xfffffff6,%edx
  0x00000000036dda62: mov    %r11,%rbp
  0x00000000036dda65: mov    %r9d,0x20(%rsp)
  0x00000000036dda6a: nop
  0x00000000036dda6b: callq  0x00000000035d57a0  ; OopMap{rbp=Oop off=13392}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000036dda70: int3                      ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x00000000036dda71: mov    $0xfffffff6,%edx
  0x00000000036dda76: nop
  0x00000000036dda77: callq  0x00000000035d57a0  ; OopMap{off=13404}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000036dda7c: int3                      ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dda7d: mov    $0xfffffff6,%edx
  0x00000000036dda82: mov    %r11,%rbp
  0x00000000036dda85: xchg   %ax,%ax
  0x00000000036dda87: callq  0x00000000035d57a0  ; OopMap{rbp=Oop off=13420}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000036dda8c: int3   
  0x00000000036dda8d: mov    $0xfffffff6,%edx
  0x00000000036dda92: nop
  0x00000000036dda93: callq  0x00000000035d57a0  ; OopMap{off=13432}
                                                ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)
                                                ;   {runtime_call}
  0x00000000036dda98: int3   
  0x00000000036dda99: mov    $0xfffffff6,%edx   ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@84 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dda9e: nop
  0x00000000036dda9f: callq  0x00000000035d57a0  ; OopMap{off=13444}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)
                                                ;   {runtime_call}
  0x00000000036ddaa4: int3                      ;*invokespecial isLetter
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddaa5: mov    $0xfffffff6,%edx
  0x00000000036ddaaa: mov    %r11,%rbp
  0x00000000036ddaad: xchg   %ax,%ax
  0x00000000036ddaaf: callq  0x00000000035d57a0  ; OopMap{rbp=Oop off=13460}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000036ddab4: int3                      ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@3 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddab5: mov    $0xfffffff6,%edx
  0x00000000036ddaba: mov    %r11,%rbp
  0x00000000036ddabd: mov    %r9d,0x24(%rsp)
  0x00000000036ddac2: nop
  0x00000000036ddac3: callq  0x00000000035d57a0  ; OopMap{rbp=Oop off=13480}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000036ddac8: int3   
  0x00000000036ddac9: mov    %rax,%rbx
  0x00000000036ddacc: jmpq   0x00000000036ddbb4  ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalize@100 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddad1: mov    %rax,%rbx
  0x00000000036ddad4: jmpq   0x00000000036ddd4b  ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddad9: mov    %rax,%rbx
  0x00000000036ddadc: jmpq   0x00000000036ddd80  ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalize@100 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddae1: mov    %rax,%rbx
  0x00000000036ddae4: jmpq   0x00000000036ddbb4  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddae9: mov    %rax,%rbx
  0x00000000036ddaec: jmpq   0x00000000036ddd65
  0x00000000036ddaf1: mov    %rax,%rbx
  0x00000000036ddaf4: jmpq   0x00000000036ddf0f  ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalize@100 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddaf9: mov    %rax,%rbx
  0x00000000036ddafc: jmpq   0x00000000036ddd4b  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddb01: mov    %rax,%rbx
  0x00000000036ddb04: jmpq   0x00000000036ddc7f  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddb09: mov    %rax,%rbx
  0x00000000036ddb0c: jmpq   0x00000000036ddd65  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddb11: mov    %rax,%rbx          ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddb14: jmpq   0x00000000036ddd65  ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalize@100 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddb19: mov    %rax,%rbx
  0x00000000036ddb1c: jmpq   0x00000000036ddd80
  0x00000000036ddb21: mov    %rax,%rbx
  0x00000000036ddb24: jmpq   0x00000000036ddd65
  0x00000000036ddb29: mov    %rax,%rbx
  0x00000000036ddb2c: jmpq   0x00000000036ddd65
  0x00000000036ddb31: mov    %rax,%rbx
  0x00000000036ddb34: jmpq   0x00000000036ddd65
  0x00000000036ddb39: mov    %rax,%rbx
  0x00000000036ddb3c: jmpq   0x00000000036ddd65  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddb41: mov    %rax,%rbx
  0x00000000036ddb44: jmpq   0x00000000036ddd65  ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddb49: mov    %rax,%rbx
  0x00000000036ddb4c: jmpq   0x00000000036ddf25  ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalize@100 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddb51: mov    %rax,%rbx
  0x00000000036ddb54: jmpq   0x00000000036ddf0f  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddb59: mov    %rax,%rbx
  0x00000000036ddb5c: jmpq   0x00000000036dde4b
  0x00000000036ddb61: mov    %rax,%rbx
  0x00000000036ddb64: jmpq   0x00000000036ddf25  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddb69: mov    %rax,%rbx          ;*iconst_1
                                                ; - java.io.WinNTFileSystem::isSlash@12 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@99 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddb6c: jmpq   0x00000000036ddf25  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddb71: mov    %rax,%rbx
  0x00000000036ddb74: jmpq   0x00000000036ddd65
  0x00000000036ddb79: mov    %rax,%rbx
  0x00000000036ddb7c: jmpq   0x00000000036ddf25
  0x00000000036ddb81: mov    %rax,%rbx
  0x00000000036ddb84: jmpq   0x00000000036ddf25
  0x00000000036ddb89: mov    %rax,%rbx
  0x00000000036ddb8c: jmpq   0x00000000036ddf25  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddb91: mov    %rax,%rbx
  0x00000000036ddb94: jmpq   0x00000000036ddf25  ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddb99: mov    %rax,%rbx
  0x00000000036ddb9c: jmpq   0x00000000036ddf25
  0x00000000036ddba1: mov    %rax,%rbx
  0x00000000036ddba4: jmpq   0x00000000036ddd65
  0x00000000036ddba9: mov    %rax,%rbx
  0x00000000036ddbac: jmpq   0x00000000036ddd65  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddbb1: mov    %rax,%rbx          ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddbb4: mov    0x38(%rsp),%r11
  0x00000000036ddbb9: mov    0xa0(%rsp),%r10
  0x00000000036ddbc1: and    (%r11),%r10
  0x00000000036ddbc4: cmp    $0x5,%r10
  0x00000000036ddbc8: je     0x00000000036ddd65  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddbce: lea    0xb0(%rsp),%rax    ;*iload_1
                                                ; - java.io.WinNTFileSystem::isLetter@0 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddbd6: cmpq   $0x0,(%rax)
  0x00000000036ddbdd: je     0x00000000036ddc57
  0x00000000036ddbe3: mov    (%r11),%r10
  0x00000000036ddbe6: test   $0x2,%r10
  0x00000000036ddbed: je     0x00000000036ddc4f
  0x00000000036ddbef: mov    0x16(%r10),%rax
  0x00000000036ddbf3: xor    %r15,%rax
  0x00000000036ddbf6: or     0x26(%r10),%rax
  0x00000000036ddbfa: jne    0x00000000036ddc57
  0x00000000036ddbfc: mov    0x36(%r10),%rax
  0x00000000036ddc00: or     0x3e(%r10),%rax
  0x00000000036ddc04: jne    0x00000000036ddc10
  0x00000000036ddc06: movq   $0x0,0x16(%r10)
  0x00000000036ddc0e: jmp    0x00000000036ddc57
  0x00000000036ddc10: cmpq   $0x0,0x46(%r10)
  0x00000000036ddc18: je     0x00000000036ddc43
  0x00000000036ddc1a: movq   $0x0,0x16(%r10)
  0x00000000036ddc22: lock addl $0x0,(%rsp)
  0x00000000036ddc27: cmpq   $0x0,0x46(%r10)
  0x00000000036ddc2f: jne    0x00000000036ddc48
  0x00000000036ddc31: movabs $0x0,%rax
  0x00000000036ddc3b: lock cmpxchg %r15,0x16(%r10)
  0x00000000036ddc41: jne    0x00000000036ddc48
  0x00000000036ddc43: or     $0x1,%eax
  0x00000000036ddc46: jmp    0x00000000036ddc57
  0x00000000036ddc48: test   $0x0,%eax
  0x00000000036ddc4d: jmp    0x00000000036ddc57
  0x00000000036ddc4f: mov    (%rax),%r10
  0x00000000036ddc52: lock cmpxchg %r10,(%r11)
  0x00000000036ddc57: je     0x00000000036ddd65  ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddc5d: mov    0x38(%rsp),%rcx
  0x00000000036ddc62: lea    0xb0(%rsp),%rdx    ;*iload_1
                                                ; - java.io.WinNTFileSystem::isLetter@0 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddc6a: movabs $0x54fdce00,%r10
  0x00000000036ddc74: callq  *%r10              ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddc77: jmpq   0x00000000036ddd65  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddc7c: mov    %rax,%rbx          ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddc7f: mov    0x20(%rsp),%r11
  0x00000000036ddc84: mov    0xa0(%rsp),%r10
  0x00000000036ddc8c: and    (%r11),%r10
  0x00000000036ddc8f: cmp    $0x5,%r10
  0x00000000036ddc93: je     0x00000000036ddd65  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddc99: lea    0xb0(%rsp),%rax    ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddca1: cmpq   $0x0,(%rax)
  0x00000000036ddca8: je     0x00000000036ddd22
  0x00000000036ddcae: mov    (%r11),%r10
  0x00000000036ddcb1: test   $0x2,%r10
  0x00000000036ddcb8: je     0x00000000036ddd1a
  0x00000000036ddcba: mov    0x16(%r10),%rax
  0x00000000036ddcbe: xor    %r15,%rax
  0x00000000036ddcc1: or     0x26(%r10),%rax
  0x00000000036ddcc5: jne    0x00000000036ddd22
  0x00000000036ddcc7: mov    0x36(%r10),%rax
  0x00000000036ddccb: or     0x3e(%r10),%rax
  0x00000000036ddccf: jne    0x00000000036ddcdb
  0x00000000036ddcd1: movq   $0x0,0x16(%r10)
  0x00000000036ddcd9: jmp    0x00000000036ddd22
  0x00000000036ddcdb: cmpq   $0x0,0x46(%r10)
  0x00000000036ddce3: je     0x00000000036ddd0e
  0x00000000036ddce5: movq   $0x0,0x16(%r10)
  0x00000000036ddced: lock addl $0x0,(%rsp)
  0x00000000036ddcf2: cmpq   $0x0,0x46(%r10)
  0x00000000036ddcfa: jne    0x00000000036ddd13
  0x00000000036ddcfc: movabs $0x0,%rax
  0x00000000036ddd06: lock cmpxchg %r15,0x16(%r10)
  0x00000000036ddd0c: jne    0x00000000036ddd13
  0x00000000036ddd0e: or     $0x1,%eax
  0x00000000036ddd11: jmp    0x00000000036ddd22
  0x00000000036ddd13: test   $0x0,%eax
  0x00000000036ddd18: jmp    0x00000000036ddd22
  0x00000000036ddd1a: mov    (%rax),%r10
  0x00000000036ddd1d: lock cmpxchg %r10,(%r11)
  0x00000000036ddd22: je     0x00000000036ddd65  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddd24: mov    0x20(%rsp),%rcx
  0x00000000036ddd29: lea    0xb0(%rsp),%rdx    ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddd31: movabs $0x54fdce00,%r10
  0x00000000036ddd3b: callq  *%r10              ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddd3e: jmp    0x00000000036ddd65  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddd40: mov    %rax,%rbx
  0x00000000036ddd43: jmpq   0x00000000036ddf25  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddd48: mov    %rax,%rbx          ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddd4b: mov    0x38(%rsp),%r11
  0x00000000036ddd50: mov    0xa0(%rsp),%r10
  0x00000000036ddd58: and    (%r11),%r10
  0x00000000036ddd5b: cmp    $0x5,%r10
  0x00000000036ddd5f: jne    0x00000000036ddfe3  ;*invokespecial normalizePrefix
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddd65: mov    %rbx,%rdx
  0x00000000036ddd68: jmpq   0x00000000036ddf28
  0x00000000036ddd6d: mov    %rax,%rbx
  0x00000000036ddd70: jmpq   0x00000000036ddf25
  0x00000000036ddd75: mov    %rax,%rbx
  0x00000000036ddd78: jmpq   0x00000000036ddf25  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddd7d: mov    %rax,%rbx          ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddd80: mov    0x38(%rsp),%r11
  0x00000000036ddd85: mov    0xa0(%rsp),%r10
  0x00000000036ddd8d: and    (%r11),%r10
  0x00000000036ddd90: cmp    $0x5,%r10
  0x00000000036ddd94: je     0x00000000036ddf25  ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddd9a: lea    0xb0(%rsp),%rax    ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddda2: cmpq   $0x0,(%rax)
  0x00000000036ddda9: je     0x00000000036dde23
  0x00000000036dddaf: mov    (%r11),%r10
  0x00000000036dddb2: test   $0x2,%r10
  0x00000000036dddb9: je     0x00000000036dde1b
  0x00000000036dddbb: mov    0x16(%r10),%rax
  0x00000000036dddbf: xor    %r15,%rax
  0x00000000036dddc2: or     0x26(%r10),%rax
  0x00000000036dddc6: jne    0x00000000036dde23
  0x00000000036dddc8: mov    0x36(%r10),%rax
  0x00000000036dddcc: or     0x3e(%r10),%rax
  0x00000000036dddd0: jne    0x00000000036ddddc
  0x00000000036dddd2: movq   $0x0,0x16(%r10)
  0x00000000036dddda: jmp    0x00000000036dde23
  0x00000000036ddddc: cmpq   $0x0,0x46(%r10)
  0x00000000036ddde4: je     0x00000000036dde0f
  0x00000000036ddde6: movq   $0x0,0x16(%r10)
  0x00000000036dddee: lock addl $0x0,(%rsp)
  0x00000000036dddf3: cmpq   $0x0,0x46(%r10)
  0x00000000036dddfb: jne    0x00000000036dde14
  0x00000000036dddfd: movabs $0x0,%rax
  0x00000000036dde07: lock cmpxchg %r15,0x16(%r10)
  0x00000000036dde0d: jne    0x00000000036dde14
  0x00000000036dde0f: or     $0x1,%eax
  0x00000000036dde12: jmp    0x00000000036dde23
  0x00000000036dde14: test   $0x0,%eax
  0x00000000036dde19: jmp    0x00000000036dde23
  0x00000000036dde1b: mov    (%rax),%r10
  0x00000000036dde1e: lock cmpxchg %r10,(%r11)
  0x00000000036dde23: je     0x00000000036ddf25  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@6 (line 611)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dde29: mov    0x38(%rsp),%rcx
  0x00000000036dde2e: lea    0xb0(%rsp),%rdx    ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dde36: movabs $0x54fdce00,%r10
  0x00000000036dde40: callq  *%r10              ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dde43: jmpq   0x00000000036ddf25  ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dde48: mov    %rax,%rbx          ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dde4b: mov    0x20(%rsp),%r11
  0x00000000036dde50: mov    0xa0(%rsp),%r10
  0x00000000036dde58: and    (%r11),%r10
  0x00000000036dde5b: cmp    $0x5,%r10
  0x00000000036dde5f: je     0x00000000036ddf25  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dde65: lea    0xb0(%rsp),%rax    ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036dde6d: cmpq   $0x0,(%rax)
  0x00000000036dde74: je     0x00000000036ddeee
  0x00000000036dde7a: mov    (%r11),%r10
  0x00000000036dde7d: test   $0x2,%r10
  0x00000000036dde84: je     0x00000000036ddee6
  0x00000000036dde86: mov    0x16(%r10),%rax
  0x00000000036dde8a: xor    %r15,%rax
  0x00000000036dde8d: or     0x26(%r10),%rax
  0x00000000036dde91: jne    0x00000000036ddeee
  0x00000000036dde93: mov    0x36(%r10),%rax
  0x00000000036dde97: or     0x3e(%r10),%rax
  0x00000000036dde9b: jne    0x00000000036ddea7
  0x00000000036dde9d: movq   $0x0,0x16(%r10)
  0x00000000036ddea5: jmp    0x00000000036ddeee
  0x00000000036ddea7: cmpq   $0x0,0x46(%r10)
  0x00000000036ddeaf: je     0x00000000036ddeda
  0x00000000036ddeb1: movq   $0x0,0x16(%r10)
  0x00000000036ddeb9: lock addl $0x0,(%rsp)
  0x00000000036ddebe: cmpq   $0x0,0x46(%r10)    ;   {no_reloc}
  0x00000000036ddec6: jne    0x00000000036ddedf
  0x00000000036ddec8: movabs $0x0,%rax
  0x00000000036dded2: lock cmpxchg %r15,0x16(%r10)
  0x00000000036dded8: jne    0x00000000036ddedf
  0x00000000036ddeda: or     $0x1,%eax
  0x00000000036ddedd: jmp    0x00000000036ddeee
  0x00000000036ddedf: test   $0x0,%eax
  0x00000000036ddee4: jmp    0x00000000036ddeee
  0x00000000036ddee6: mov    (%rax),%r10
  0x00000000036ddee9: lock cmpxchg %r10,(%r11)
  0x00000000036ddeee: je     0x00000000036ddf25  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddef0: mov    0x20(%rsp),%rcx
  0x00000000036ddef5: lea    0xb0(%rsp),%rdx    ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddefd: movabs $0x54fdce00,%r10
  0x00000000036ddf07: callq  *%r10              ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddf0a: jmp    0x00000000036ddf25  ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddf0c: mov    %rax,%rbx          ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddf0f: mov    0x20(%rsp),%r11
  0x00000000036ddf14: mov    0xa0(%rsp),%r10
  0x00000000036ddf1c: and    (%r11),%r10
  0x00000000036ddf1f: cmp    $0x5,%r10
  0x00000000036ddf23: jne    0x00000000036ddf35  ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddf25: mov    %rbx,%rdx          ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)

  0x00000000036ddf28: add    $0xc0,%rsp
  0x00000000036ddf2f: pop    %rbp
  0x00000000036ddf30: jmpq   0x000000000369e960  ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@28 (line 87)
                                                ;   {runtime_call}
  0x00000000036ddf35: lea    0xb0(%rsp),%rax    ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@3 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddf3d: cmpq   $0x0,(%rax)
  0x00000000036ddf44: je     0x00000000036ddfbe
  0x00000000036ddf4a: mov    (%r11),%r10
  0x00000000036ddf4d: test   $0x2,%r10
  0x00000000036ddf54: je     0x00000000036ddfb6
  0x00000000036ddf56: mov    0x16(%r10),%rax
  0x00000000036ddf5a: xor    %r15,%rax
  0x00000000036ddf5d: or     0x26(%r10),%rax
  0x00000000036ddf61: jne    0x00000000036ddfbe
  0x00000000036ddf63: mov    0x36(%r10),%rax
  0x00000000036ddf67: or     0x3e(%r10),%rax
  0x00000000036ddf6b: jne    0x00000000036ddf77
  0x00000000036ddf6d: movq   $0x0,0x16(%r10)
  0x00000000036ddf75: jmp    0x00000000036ddfbe
  0x00000000036ddf77: cmpq   $0x0,0x46(%r10)
  0x00000000036ddf7f: je     0x00000000036ddfaa
  0x00000000036ddf81: movq   $0x0,0x16(%r10)
  0x00000000036ddf89: lock addl $0x0,(%rsp)
  0x00000000036ddf8e: cmpq   $0x0,0x46(%r10)
  0x00000000036ddf96: jne    0x00000000036ddfaf
  0x00000000036ddf98: movabs $0x0,%rax
  0x00000000036ddfa2: lock cmpxchg %r15,0x16(%r10)
  0x00000000036ddfa8: jne    0x00000000036ddfaf
  0x00000000036ddfaa: or     $0x1,%eax
  0x00000000036ddfad: jmp    0x00000000036ddfbe
  0x00000000036ddfaf: test   $0x0,%eax
  0x00000000036ddfb4: jmp    0x00000000036ddfbe
  0x00000000036ddfb6: mov    (%rax),%r10
  0x00000000036ddfb9: lock cmpxchg %r10,(%r11)
  0x00000000036ddfbe: je     0x00000000036ddf25  ;*isub
                                                ; - java.lang.AbstractStringBuilder::newCapacity@12 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddfc4: mov    0x20(%rsp),%rcx
  0x00000000036ddfc9: lea    0xb0(%rsp),%rdx    ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@3 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddfd1: movabs $0x54fdce00,%r10
  0x00000000036ddfdb: callq  *%r10              ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddfde: jmpq   0x00000000036ddf25
  0x00000000036ddfe3: lea    0xb0(%rsp),%rax    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036ddfeb: cmpq   $0x0,(%rax)
  0x00000000036ddff2: je     0x00000000036de06c
  0x00000000036ddff8: mov    (%r11),%r10
  0x00000000036ddffb: test   $0x2,%r10
  0x00000000036de002: je     0x00000000036de064
  0x00000000036de004: mov    0x16(%r10),%rax
  0x00000000036de008: xor    %r15,%rax
  0x00000000036de00b: or     0x26(%r10),%rax
  0x00000000036de00f: jne    0x00000000036de06c
  0x00000000036de011: mov    0x36(%r10),%rax
  0x00000000036de015: or     0x3e(%r10),%rax
  0x00000000036de019: jne    0x00000000036de025
  0x00000000036de01b: movq   $0x0,0x16(%r10)
  0x00000000036de023: jmp    0x00000000036de06c
  0x00000000036de025: cmpq   $0x0,0x46(%r10)
  0x00000000036de02d: je     0x00000000036de058
  0x00000000036de02f: movq   $0x0,0x16(%r10)
  0x00000000036de037: lock addl $0x0,(%rsp)
  0x00000000036de03c: cmpq   $0x0,0x46(%r10)
  0x00000000036de044: jne    0x00000000036de05d
  0x00000000036de046: movabs $0x0,%rax
  0x00000000036de050: lock cmpxchg %r15,0x16(%r10)
  0x00000000036de056: jne    0x00000000036de05d
  0x00000000036de058: or     $0x1,%eax
  0x00000000036de05b: jmp    0x00000000036de06c
  0x00000000036de05d: test   $0x0,%eax
  0x00000000036de062: jmp    0x00000000036de06c
  0x00000000036de064: mov    (%rax),%r10
  0x00000000036de067: lock cmpxchg %r10,(%r11)
  0x00000000036de06c: je     0x00000000036ddd65  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036de072: mov    0x38(%rsp),%rcx
  0x00000000036de077: lea    0xb0(%rsp),%rdx    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036de07f: movabs $0x54fdce00,%r10
  0x00000000036de089: callq  *%r10              ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036de08c: jmpq   0x00000000036ddd65  ;*goto
                                                ; - java.io.WinNTFileSystem::isSlash@13 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@99 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000036de091: hlt    
  0x00000000036de092: hlt    
  0x00000000036de093: hlt    
  0x00000000036de094: hlt    
  0x00000000036de095: hlt    
  0x00000000036de096: hlt    
  0x00000000036de097: hlt    
  0x00000000036de098: hlt    
  0x00000000036de099: hlt    
  0x00000000036de09a: hlt    
  0x00000000036de09b: hlt    
  0x00000000036de09c: hlt    
  0x00000000036de09d: hlt    
  0x00000000036de09e: hlt    
  0x00000000036de09f: hlt    
[Stub Code]
  0x00000000036de0a0: movabs $0x0,%rbx          ;   {no_reloc}
  0x00000000036de0aa: jmpq   0x00000000036de0aa  ;   {runtime_call}
  0x00000000036de0af: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036de0b9: jmpq   0x00000000036de0b9  ;   {runtime_call}
  0x00000000036de0be: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036de0c8: jmpq   0x00000000036de0c8  ;   {runtime_call}
  0x00000000036de0cd: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036de0d7: jmpq   0x00000000036de0d7  ;   {runtime_call}
  0x00000000036de0dc: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036de0e6: jmpq   0x00000000036de0e6  ;   {runtime_call}
  0x00000000036de0eb: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036de0f5: jmpq   0x00000000036de0f5  ;   {runtime_call}
  0x00000000036de0fa: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036de104: jmpq   0x00000000036de104  ;   {runtime_call}
  0x00000000036de109: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036de113: jmpq   0x00000000036de113  ;   {runtime_call}
  0x00000000036de118: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036de122: jmpq   0x00000000036de122  ;   {runtime_call}
  0x00000000036de127: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036de131: jmpq   0x00000000036de131  ;   {runtime_call}
  0x00000000036de136: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036de140: jmpq   0x00000000036de140  ;   {runtime_call}
  0x00000000036de145: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036de14f: jmpq   0x00000000036de14f  ;   {runtime_call}
  0x00000000036de154: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036de15e: jmpq   0x00000000036de15e  ;   {runtime_call}
  0x00000000036de163: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036de16d: jmpq   0x00000000036de16d  ;   {runtime_call}
  0x00000000036de172: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036de17c: jmpq   0x00000000036de17c  ;   {runtime_call}
  0x00000000036de181: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036de18b: jmpq   0x00000000036de18b  ;   {runtime_call}
  0x00000000036de190: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036de19a: jmpq   0x00000000036de19a  ;   {runtime_call}
  0x00000000036de19f: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036de1a9: jmpq   0x00000000036de1a9  ;   {runtime_call}
  0x00000000036de1ae: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036de1b8: jmpq   0x00000000036de1b8  ;   {runtime_call}
  0x00000000036de1bd: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036de1c7: jmpq   0x00000000036de1c7  ;   {runtime_call}
  0x00000000036de1cc: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036de1d6: jmpq   0x00000000036de1d6  ;   {runtime_call}
  0x00000000036de1db: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036de1e5: jmpq   0x00000000036de1e5  ;   {runtime_call}
  0x00000000036de1ea: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036de1f4: jmpq   0x00000000036de1f4  ;   {runtime_call}
  0x00000000036de1f9: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036de203: jmpq   0x00000000036de203  ;   {runtime_call}
[Exception Handler]
  0x00000000036de208: jmpq   0x000000000368dc20  ;   {runtime_call}
[Deopt Handler Code]
  0x00000000036de20d: callq  0x00000000036de212
  0x00000000036de212: subq   $0x5,(%rsp)
  0x00000000036de217: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036de21c: hlt    
  0x00000000036de21d: hlt    
  0x00000000036de21e: hlt    
  0x00000000036de21f: hlt    
<nmethod compile_id='68' compiler='C2' level='4' entry='0x00000000036da620' size='38544' address='0x00000000036da2d0' relocation_offset='288' insts_offset='848' stub_offset='15824' scopes_data_offset='16376' scopes_pcs_offset='23712' dependencies_offset='37536' handler_table_offset='37544' nul_chk_table_offset='38456' method='java/io/WinNTFileSystem normalize (Ljava/lang/String;)Ljava/lang/String;' bytes='143' count='1350' backedge_count='54446' iicount='1350' stamp='2.965'/>
<writer thread='7332'/>
Decoding compiled method 0x00000000036c8790:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c4955b0} &apos;indexOf&apos; &apos;(Ljava/lang/String;I)I&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  # parm1:    r9        = int
  #           [sp+0x60]  (sp of caller)
  0x00000000036c8900: mov    0x8(%rdx),%r10d
  0x00000000036c8904: shl    $0x3,%r10
  0x00000000036c8908: cmp    %rax,%r10
  0x00000000036c890b: jne    0x00000000035d5f60  ;   {runtime_call}
  0x00000000036c8911: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000036c891c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000036c8920: mov    %eax,-0x6000(%rsp)
  0x00000000036c8927: push   %rbp
  0x00000000036c8928: sub    $0x50,%rsp
  0x00000000036c892c: mov    %r9,%rbx
  0x00000000036c892f: movabs $0x1c67eb70,%r9    ;   {metadata(method data for {method} {0x000000001c4955b0} &apos;indexOf&apos; &apos;(Ljava/lang/String;I)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000036c8939: mov    0xdc(%r9),%edi
  0x00000000036c8940: add    $0x8,%edi
  0x00000000036c8943: mov    %edi,0xdc(%r9)
  0x00000000036c894a: movabs $0x1c4955a8,%r9    ;   {metadata({method} {0x000000001c4955b0} &apos;indexOf&apos; &apos;(Ljava/lang/String;I)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000036c8954: and    $0x1ff8,%edi
  0x00000000036c895a: cmp    $0x0,%edi
  0x00000000036c895d: je     0x00000000036c89b0  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1718)

  0x00000000036c8963: mov    0xc(%rdx),%edx
  0x00000000036c8966: shl    $0x3,%rdx          ;*getfield value
                                                ; - java.lang.String::indexOf@1 (line 1718)

  0x00000000036c896a: mov    0xc(%rdx),%r9d     ;*arraylength
                                                ; - java.lang.String::indexOf@9 (line 1718)
                                                ; implicit exception: dispatches to 0x00000000036c89c4
  0x00000000036c896e: mov    0xc(%r8),%edi      ; implicit exception: dispatches to 0x00000000036c89c9
  0x00000000036c8972: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.String::indexOf@11 (line 1718)

  0x00000000036c8976: mov    0xc(%rdi),%ecx     ;*arraylength
                                                ; - java.lang.String::indexOf@19 (line 1718)
                                                ; implicit exception: dispatches to 0x00000000036c89ce
  0x00000000036c8979: movabs $0x1c67eb70,%r8    ;   {metadata(method data for {method} {0x000000001c4955b0} &apos;indexOf&apos; &apos;(Ljava/lang/String;I)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000036c8983: addq   $0x1,0x108(%r8)
  0x00000000036c898b: mov    $0x0,%r8d
  0x00000000036c8991: mov    $0x0,%esi
  0x00000000036c8996: mov    %ebx,(%rsp)        ;*invokestatic indexOf
                                                ; - java.lang.String::indexOf@21 (line 1718)

  0x00000000036c8999: nop
  0x00000000036c899a: nop
  0x00000000036c899b: nop
  0x00000000036c899c: nop
  0x00000000036c899d: nop
  0x00000000036c899e: nop
  0x00000000036c899f: callq  0x00000000035d6620  ; OopMap{off=164}
                                                ;*invokestatic indexOf
                                                ; - java.lang.String::indexOf@21 (line 1718)
                                                ;   {static_call}
  0x00000000036c89a4: add    $0x50,%rsp
  0x00000000036c89a8: pop    %rbp
  0x00000000036c89a9: test   %eax,-0x20d88af(%rip)        # 0x00000000015f0100
                                                ;   {poll_return}
  0x00000000036c89af: retq   
  0x00000000036c89b0: mov    %r9,0x8(%rsp)
  0x00000000036c89b5: movq   $0xffffffffffffffff,(%rsp)
  0x00000000036c89bd: callq  0x00000000036919e0  ; OopMap{rdx=Oop r8=Oop off=194}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1718)
                                                ;   {runtime_call}
  0x00000000036c89c2: jmp    0x00000000036c8963
  0x00000000036c89c4: callq  0x000000000368d080  ; OopMap{r8=Oop rdx=Oop off=201}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@9 (line 1718)
                                                ;   {runtime_call}
  0x00000000036c89c9: callq  0x000000000368d080  ; OopMap{rdx=Oop off=206}
                                                ;*getfield value
                                                ; - java.lang.String::indexOf@11 (line 1718)
                                                ;   {runtime_call}
  0x00000000036c89ce: callq  0x000000000368d080  ; OopMap{rdx=Oop rdi=Oop off=211}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@19 (line 1718)
                                                ;   {runtime_call}
  0x00000000036c89d3: nop
  0x00000000036c89d4: nop
  0x00000000036c89d5: mov    0x2a8(%r15),%rax
  0x00000000036c89dc: movabs $0x0,%r10
  0x00000000036c89e6: mov    %r10,0x2a8(%r15)
  0x00000000036c89ed: movabs $0x0,%r10
  0x00000000036c89f7: mov    %r10,0x2b0(%r15)
  0x00000000036c89fe: add    $0x50,%rsp
  0x00000000036c8a02: pop    %rbp
  0x00000000036c8a03: jmpq   0x000000000368c620  ;   {runtime_call}
  0x00000000036c8a08: hlt    
  0x00000000036c8a09: hlt    
  0x00000000036c8a0a: hlt    
  0x00000000036c8a0b: hlt    
  0x00000000036c8a0c: hlt    
  0x00000000036c8a0d: hlt    
  0x00000000036c8a0e: hlt    
  0x00000000036c8a0f: hlt    
  0x00000000036c8a10: hlt    
  0x00000000036c8a11: hlt    
  0x00000000036c8a12: hlt    
  0x00000000036c8a13: hlt    
  0x00000000036c8a14: hlt    
  0x00000000036c8a15: hlt    
  0x00000000036c8a16: hlt    
  0x00000000036c8a17: hlt    
  0x00000000036c8a18: hlt    
  0x00000000036c8a19: hlt    
  0x00000000036c8a1a: hlt    
  0x00000000036c8a1b: hlt    
  0x00000000036c8a1c: hlt    
  0x00000000036c8a1d: hlt    
  0x00000000036c8a1e: hlt    
  0x00000000036c8a1f: hlt    
[Stub Code]
  0x00000000036c8a20: nop                       ;   {no_reloc}
  0x00000000036c8a21: nop
  0x00000000036c8a22: nop
  0x00000000036c8a23: nop
  0x00000000036c8a24: nop
  0x00000000036c8a25: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000036c8a2f: jmpq   0x00000000036c8a2f  ;   {runtime_call}
[Exception Handler]
  0x00000000036c8a34: callq  0x000000000368f1a0  ;   {runtime_call}
  0x00000000036c8a39: mov    %rsp,-0x28(%rsp)
  0x00000000036c8a3e: sub    $0x80,%rsp
  0x00000000036c8a45: mov    %rax,0x78(%rsp)
  0x00000000036c8a4a: mov    %rcx,0x70(%rsp)
  0x00000000036c8a4f: mov    %rdx,0x68(%rsp)
  0x00000000036c8a54: mov    %rbx,0x60(%rsp)
  0x00000000036c8a59: mov    %rbp,0x50(%rsp)
  0x00000000036c8a5e: mov    %rsi,0x48(%rsp)
  0x00000000036c8a63: mov    %rdi,0x40(%rsp)
  0x00000000036c8a68: mov    %r8,0x38(%rsp)
  0x00000000036c8a6d: mov    %r9,0x30(%rsp)
  0x00000000036c8a72: mov    %r10,0x28(%rsp)
  0x00000000036c8a77: mov    %r11,0x20(%rsp)
  0x00000000036c8a7c: mov    %r12,0x18(%rsp)
  0x00000000036c8a81: mov    %r13,0x10(%rsp)
  0x00000000036c8a86: mov    %r14,0x8(%rsp)
  0x00000000036c8a8b: mov    %r15,(%rsp)
  0x00000000036c8a8f: movabs $0x553ec320,%rcx   ;   {external_word}
  0x00000000036c8a99: movabs $0x36c8a39,%rdx    ;   {internal_word}
  0x00000000036c8aa3: mov    %rsp,%r8
  0x00000000036c8aa6: and    $0xfffffffffffffff0,%rsp
  0x00000000036c8aaa: callq  0x00000000550a41d0  ;   {runtime_call}
  0x00000000036c8aaf: hlt    
[Deopt Handler Code]
  0x00000000036c8ab0: movabs $0x36c8ab0,%r10    ;   {section_word}
  0x00000000036c8aba: push   %r10
  0x00000000036c8abc: jmpq   0x00000000035d7600  ;   {runtime_call}
  0x00000000036c8ac1: hlt    
  0x00000000036c8ac2: hlt    
  0x00000000036c8ac3: hlt    
  0x00000000036c8ac4: hlt    
  0x00000000036c8ac5: hlt    
  0x00000000036c8ac6: hlt    
  0x00000000036c8ac7: hlt    
